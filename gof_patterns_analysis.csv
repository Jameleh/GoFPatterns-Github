Pattern,Repository Name,Description,Stars,Forks,created_year,updated_year,Contributors,URL
Abstract Factory,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Abstract Factory,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Abstract Factory,AbstractFactory-Design-Pattern,Abstract Factory Design Pattern,14,0,2018,2024,1,https://github.com/akshayblevel/AbstractFactory-Design-Pattern
Abstract Factory,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Abstract Factory,Sales-Tax,Sales Tax Problem Solution in C# using with Abstract Factory and Strategy Design Pattern,7,5,2016,2024,1,https://github.com/gmershad/Sales-Tax
Abstract Factory,AbstractFactoryExample,An example of the Factory Method design pattern,6,20,2014,2024,1,https://github.com/csc301-fall2014/AbstractFactoryExample
Abstract Factory,AbstractFactoryDesignPattern,Adult and kid menu with abstract design pattern.,6,0,2020,2024,1,https://github.com/ThanosKatrakis/AbstractFactoryDesignPattern
Abstract Factory,CreationalDesignPatternsSample,"Including Builder, Factory method, Abstract Factory, Prototype and Singleton",5,0,2020,2023,1,https://github.com/ZahraHeydari/CreationalDesignPatternsSample
Abstract Factory,OpenGL-Common-Design-Patterns,"Using OpenGL to demonstrate the use of common design patterns such as Abstract Factory, Builder, Singleton, and Pointer to Implementation (PIMPL)",5,0,2017,2023,1,https://github.com/efryscok/OpenGL-Common-Design-Patterns
Abstract Factory,ProSports,Abstract Factory Design Pattern Application Example,4,0,2020,2021,1,https://github.com/mertguven/ProSports
Abstract Factory,Pizza-Delivery-System,"A pizza delivery system that showcases the usage of Observer, Abstract Factory, Singleton, Command, and Iterator design patterns. ",4,2,2017,2021,1,https://github.com/DuyguKeskek/Pizza-Delivery-System
Abstract Factory,Design-Patterns---PMS---Patient-Information-System-Simple,"Simple Project For Singleton, Abstract Factory, Command, Iterator, Decarator Observer and Adapter Design Patterns, All in One",4,0,2020,2021,0,https://github.com/muammersahin/Design-Patterns---PMS---Patient-Information-System-Simple
Abstract Factory,Builder-Pattern,Builder pattern was introduced to solve some of the problems with Factory and Abstract Factory design patterns when the Object contains a lot of attributes.  There are three major issues with Factory and Abstract Factory design patterns when the Object contains a lot of attributes.,4,0,2018,2023,1,https://github.com/Design-pattrns/Builder-Pattern
Abstract Factory,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Abstract Factory,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Abstract Factory,AbstractFactory,In this Example I explained the Abstract Factory Design Pattern,3,0,2024,2024,1,https://github.com/Omar-Driouch/AbstractFactory
Abstract Factory,AbstractFactoryPattern,Abstract factory pattern can use as a super factory when it has a subtype of common factories. This type of design pattern come under creational design pattern and one of the best way to produce an object,3,0,2021,2022,1,https://github.com/iresh-rajitha/AbstractFactoryPattern
Abstract Factory,DesignPatterns,"Design patterns learning course for C#. Creational Patterns. Singleton, Prototype, Builder, Factory Method, Abstract Factory.",3,0,2019,2024,1,https://github.com/arsentd/DesignPatterns
Abstract Factory,design-patterns,"Creational design patterns in C#: Abstract Factory, Builder, Factory, Factory Method, Object-Pool, Prototype, Singleton.",3,1,2023,2024,1,https://github.com/cenkerkumlucali/design-patterns
Abstract Factory,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Abstract Factory,dp-creational-abstractfactory,Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.,2,3,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-creational-abstractfactory
Abstract Factory,design-pattern-abstract-factory,"In the continuation of my previous article (Strategy vs. Factory Design Patterns in Java), I am here with an article on Abstract Factory Pattern. In this article, I will try to highlight the usage of the pattern along with the difference with the Factory Pattern.",2,4,2020,2021,1,https://github.com/BrijeshSaxena/design-pattern-abstract-factory
Abstract Factory,AbstractFactoryDesignPatternWithKotlin,Abstract Factory Design Pattern With Kotlin,2,0,2022,2022,1,https://github.com/harunkor/AbstractFactoryDesignPatternWithKotlin
Abstract Factory,DesignPatterns.AbstractFactory,,2,0,2022,2022,1,https://github.com/dFarkhod/DesignPatterns.AbstractFactory
Abstract Factory,SE-311-Design-Pattern-Project-Patient-Management-System,"This project was for our Design Patterns course. We used 5 different design patterns which are Observer, Abstract Factory, Template Method, Singleton, Command, in one project.",2,2,2018,2025,1,https://github.com/efeuruk/SE-311-Design-Pattern-Project-Patient-Management-System
Abstract Factory,PatternAbstractFactory,Projet en cours de Design pattern,2,0,2017,2017,1,https://github.com/NathanGrimaud/PatternAbstractFactory
Abstract Factory,abstract-factory-pattern,Abstract Factory and Factory Method Design Patterns in C#,2,0,2022,2024,1,https://github.com/jebarcha/abstract-factory-pattern
Abstract Factory,Abstract-Factory-Design-Pattern,In this repository you will find complete implementation of abstract factory design pattern ,2,1,2023,2023,1,https://github.com/akshatsh0610/Abstract-Factory-Design-Pattern
Abstract Factory,design-patterns-creational-abstract-factory,A source code of a demo that shows how the Abstract factory can be used in Java.,2,0,2022,2024,1,https://github.com/Amer-Jabar/design-patterns-creational-abstract-factory
Abstract Factory,DesignPatterns,"Some design patterns (Singleton, Simple and Abstract Factory, Builder, Facade, Adapter, Chain of Responsibility, Mediator) examples written in C#",2,0,2018,2024,1,https://github.com/alexandra-valkova/DesignPatterns
Abstract Factory,Cleaning-Management,"Robot vacuum simulator, usage of Abstract Factory, Builder, Singleton and Observer design patterns.",2,0,2017,2017,1,https://github.com/irenexychen/Cleaning-Management
Abstract Factory,Abstract_Factory-Design_Pattern,"This module gives a demo on Abstract Factory Design Pattern in JAVA with its implementation code, why to use it, where to use it, advantages & disadvantages, how to implement, etc...",2,0,2021,2021,1,https://github.com/gowthamrajk/Abstract_Factory-Design_Pattern
Abstract Factory,Advanced-Design-Patterns-Swift,"""Design Patterns in Swift: Abstract Factory"", the second topic of the Advanced iOS series, where I cover advanced iOS Development topics.",2,0,2022,2023,1,https://github.com/Bugrayenidunya/Advanced-Design-Patterns-Swift
Abstract Factory,Advanced_OOP_Cinema_ConsoleApp_FallProject,"The Cinema Management System is a Java-based application that demonstrates the use of key design patterns such as Abstract Factory, Builder, Chain of Responsibility, and Singleton. It simulates interactions between customers, employees, and a cinema database system to manage movie screenings, customer reservations, and employee tasks.",2,0,2024,2024,1,https://github.com/tuanh00/Advanced_OOP_Cinema_ConsoleApp_FallProject
Abstract Factory,AbstractFactory,Design Pattern class,1,0,2017,2017,0,https://github.com/clusson/AbstractFactory
Abstract Factory,AbstractFactory,design pattern factory - abstract,1,0,2021,2021,1,https://github.com/KKMalysa/AbstractFactory
Abstract Factory,AbstractFactory,Project apply AbstractFactory Design Pattern,1,0,2018,2022,1,https://github.com/minhthong8197/AbstractFactory
Abstract Factory,AbstractFactory,Design Pattern implemented in C#,1,0,2020,2024,1,https://github.com/wojciechligeza/AbstractFactory
Abstract Factory,BuildACarUsingDesignPatterns,"Code to build a car, drive it and rent it via Some design patterns - Abstract Factory, Decorator, Template Method, Strategy",1,2,2015,2024,1,https://github.com/pserra77/BuildACarUsingDesignPatterns
Abstract Factory,Abstract-Factory-Design-Pattern,Creational Design Patterns Abstract Factory Design Pattern ,1,0,2021,2021,1,https://github.com/iremsevim/Abstract-Factory-Design-Pattern
Abstract Factory,AbstractFactoryDesignPattern,Abstract Factory Design Pattern Demo,1,0,2012,2014,1,https://github.com/NileshGule/AbstractFactoryDesignPattern
Abstract Factory,Abstract-Factory,Cours design pattern,1,0,2017,2017,1,https://github.com/Krycthus/Abstract-Factory
Abstract Factory,Design-Patterns-Abstract-Factory,Design Patterns-Abstract Factory,1,0,2022,2022,1,https://github.com/Jacky0624/Design-Patterns-Abstract-Factory
Abstract Factory,abstract-factory-design-pattern,Abstract Factory Design Pattern,1,0,2022,2022,1,https://github.com/eMahtab/abstract-factory-design-pattern
Abstract Factory,PizzaFactory,Abstract Factory Design Pattern,1,0,2020,2020,1,https://github.com/Arrayly/PizzaFactory
Abstract Factory,AbstractFactoryDesignPattern,"Main reason behind this code is Learning and applying Factory Design Pattern which Comply with SOLID, so the Factory Design Pattern becomes Abstract Factory Design Pattern ",1,0,2024,2024,1,https://github.com/khashayarRohani/AbstractFactoryDesignPattern
Abstract Factory,design_patterns-abstract_factory,Creational Design Patterns,1,0,2020,2020,1,https://github.com/malbohy/design_patterns-abstract_factory
Abstract Factory,AbstractFactory-Design-Pattern,Object creation using Abstract Factory Design Pattern,1,0,2022,2024,1,https://github.com/OthDr/AbstractFactory-Design-Pattern
Abstract Factory,abstract-factory,Learning design patterns - Abstract Factory,1,0,2024,2024,2,https://github.com/isaquecsilva/abstract-factory
Abstract Factory,AbstractFactoryGoLang,This is abstract factory design pattern in go,1,0,2022,2022,0,https://github.com/codernirmalnp/AbstractFactoryGoLang
Abstract Factory,TVFactory-AbstractFactory,"Implementation of the design pattern, abstract factory on Java.",1,1,2015,2016,1,https://github.com/andalm/TVFactory-AbstractFactory
Abstract Factory,ts_abstract-factory,Abstract Factory | Design Pattern | TypeScript,1,0,2018,2020,1,https://github.com/jalbertocoder/ts_abstract-factory
Abstract Factory,Abstract-Factory-Desig-Pattern,Abstract factory design pattern example.,1,0,2021,2021,1,https://github.com/ArmanZiaei83/Abstract-Factory-Desig-Pattern
Abstract Factory,typescript-abstract-factory-pattern,Implement Abstract Factory Design Pattern,1,0,2021,2022,1,https://github.com/wahyufeb/typescript-abstract-factory-pattern
Abstract Factory,TEST,Design Pattern: Implément abstract factory,1,0,2017,2017,1,https://github.com/JacquesLesur/TEST
Abstract Factory,DesignPatterns,Abstract Factory Sample,1,1,2017,2022,1,https://github.com/Backhage/DesignPatterns
Abstract Factory,C-Sharp-DesignPatterns-AbstractFactory,"Voici un exemple avec des ordinateurs du Design Pattern ""Abstract Factory"".",1,0,2018,2019,1,https://github.com/Andree-AnneRoy/C-Sharp-DesignPatterns-AbstractFactory
Abstract Factory,expert-guide,Design Pattern - Strategy and Abstract Factory,1,0,2018,2022,0,https://github.com/cvmartins1996/expert-guide
Abstract Factory,DesignPattern.AbstractFactory,"Study of the AbstractFactory design pattern, using corporate tax calculation (Brazilian taxes)",1,0,2022,2022,1,https://github.com/francoeder/DesignPattern.AbstractFactory
Abstract Factory,CSharp12-DesignPatterns-Factory-AbstractFactory,Shows how Factory and Abstract Factory design patterns can be used in C# 12 to improve object creation and code maintainability by Ziggy Rafiq,1,0,2024,2024,1,https://github.com/ziggyrafiq/CSharp12-DesignPatterns-Factory-AbstractFactory
Abstract Factory,DesignPattern-AbstractFactoryMethod,Adult and kid menu with the design pattern of abstract factory method,1,0,2020,2020,0,https://github.com/ThanosChristidis/DesignPattern-AbstractFactoryMethod
Abstract Factory,DesignPattern-Abstract-Factory,Example implementation of Abstract Factory design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Abstract-Factory
Abstract Factory,csharp_abstract_factory_pattern,The abstract factory design pattern implemented in C#,1,0,2025,2025,2,https://github.com/JesseVanEvert/csharp_abstract_factory_pattern
Abstract Factory,Paint,Application Paint uses Abstract Factory Design Patterns,1,0,2021,2024,1,https://github.com/trantien1997/Paint
Abstract Factory,Car-Production,Simple labwork with abstract factory design pattern,1,0,2023,2023,1,https://github.com/progneo/Car-Production
Abstract Factory,Ex4-Factory-and-Abstract-Factory,05506230-Design Patterns In Object-Oriented Programming,1,0,2023,2023,1,https://github.com/NovaSuisui/Ex4-Factory-and-Abstract-Factory
Abstract Factory,PhpDesignPatterns-AbstractFactory,AbstractFactory,1,0,2018,2022,1,https://github.com/Jagepard/PhpDesignPatterns-AbstractFactory
Abstract Factory,input-abstract-factory,A front-end usage for the abstract factory design pattern,1,0,2019,2023,1,https://github.com/octaviocarpes/input-abstract-factory
Abstract Factory,Smash-Bros-Abstract-Factory,Simple program for showing the abstract factory design pattern ⚙️,1,0,2020,2020,1,https://github.com/Pablito2020/Smash-Bros-Abstract-Factory
Abstract Factory,AbstractFactory_Observer_JAVA_Design_Patterns,A simple project for Software Engineering Exam,1,0,2018,2020,1,https://github.com/StivenMetaj/AbstractFactory_Observer_JAVA_Design_Patterns
Abstract Factory,abstract_kingdom_ufu,Exemplo de explicação do design pattern abstract factory,1,0,2021,2023,1,https://github.com/samuel-cavalcanti/abstract_kingdom_ufu
Abstract Factory,abstract-factory-java,A simple example of how to implement the Abstract Factory design pattern,1,0,2023,2024,1,https://github.com/sean-campbelltech/abstract-factory-java
Abstract Factory,DesignPatterns,"Singleton, Factory Method and Abstract Factory Design Patterns in C#",1,0,2022,2022,1,https://github.com/bilgeyillmaz/DesignPatterns
Abstract Factory,abstract-factory-python,A simple example of how to implement the Abstract Factory design pattern in Python,1,0,2023,2024,1,https://github.com/sean-campbelltech/abstract-factory-python
Abstract Factory,AbstractFact,Simple Java Implementation of the Abstract Factory Design Pattern,1,0,2013,2023,1,https://github.com/pmsorhaindo/AbstractFact
Abstract Factory,MusicAlbums,"use design patterns ,Abstract Factory , MVC ,Decorator,Adapter,Facade",1,0,2016,2016,1,https://github.com/jobsyu/MusicAlbums
Abstract Factory,HalloweenVirtualHouse,Halloween Virtual Room program implementing abstract factory design pattern,1,0,2020,2021,1,https://github.com/veeyuan/HalloweenVirtualHouse
Abstract Factory,AbstractFactoryPatternInDotNetCore,his repository demonstrates the implementation of the Abstract Factory Design Pattern using .NET Core and C# 12 by Ziggy Rafiq,1,0,2024,2024,1,https://github.com/ziggyrafiq/AbstractFactoryPatternInDotNetCore
Abstract Factory,abstract-factory-design-pattern-in-python,Accompanying code for https://stackabuse.com/abstract-factory-design-pattern-in-python/,1,1,2021,2024,1,https://github.com/StackAbuse/abstract-factory-design-pattern-in-python
Abstract Factory,SDP_Assignment_1_10_30,"Design pattern demonstration for patterns like abstract factory, factory etc.",1,0,2023,2023,2,https://github.com/ShamikShafkat/SDP_Assignment_1_10_30
Abstract Factory,Abstract-factory-pattern,implementation of simple website that provides E-shopping service using both Factory and abstract Factory method design pattern.,1,0,2023,2025,1,https://github.com/samanody2001/Abstract-factory-pattern
Abstract Factory,Abstract-Factory-Design-Pattern,This is complete Tutorial of Abstract Factory Design Pattern . Feel Free to add something useful to it .,1,0,2023,2023,1,https://github.com/Neha611/Abstract-Factory-Design-Pattern
Abstract Factory,design_patterns,"Abstract Factory, Factory Method, Decorator and Strategy patterns Ruby implementation.",1,0,2018,2019,1,https://github.com/OscarMichelH/design_patterns
Abstract Factory,AbstractFactoryDesginPattern,This repository contains a simple implementation of the Abstract Factory Design Pattern in C#. The code demonstrates how to use abstract factories to create families of related objects without specifying their concrete classes.,1,0,2024,2024,2,https://github.com/Omar1Ach/AbstractFactoryDesginPattern
Abstract Factory,designpattern,Reservation system and reporting using abstract factory and builder design pattern,1,0,2023,2023,1,https://github.com/erayselvi/designpattern
Abstract Factory,designpattern4devs-abstract-factory-patterns-2022-09-05,Exemplos do live coding da aula DesignPatterns4Devs sobre o design pattern Criacional Abstract Factory,1,1,2022,2024,2,https://github.com/rocketseat-creators-program/designpattern4devs-abstract-factory-patterns-2022-09-05
Abstract Factory,patterns2,"Abstract Factory, Adapter, Builder, Façade, and Factory Method Design Patterns sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns2
Abstract Factory,project_subscription_service,Python project for processing data from files using the Abstract Factory design pattern,1,0,2024,2025,1,https://github.com/paulinap92/project_subscription_service
Abstract Factory,design-patterns-java,"Simple Java exercises to familiarize with design patterns such as abstract factory, singleton and repository.",1,0,2022,2022,1,https://github.com/vittorioexp/design-patterns-java
Abstract Factory,python_lyft,"Assignment  based on Design patterns, unit Test in python solves Abstract factory , strategy patterns ",1,0,2022,2023,1,https://github.com/paerarason/python_lyft
Abstract Factory,design-patterns,"Disponíveis exemplos de padrões de projetos em Java, como SOLID, Factory Method, Abstract Factory, Builder, Bridge, entre outros.",1,0,2023,2024,1,https://github.com/ThaliaLevy/design-patterns
Abstract Factory,ConsoleAbstractFactory,O Design Pattern Abstract Factory é uma técnica de criação de objetos que pertence à categoria de padrões com propósito específico. Seu objetivo é agrupar múltiplas fábricas que compartilham características similares sob uma única interface.,1,0,2023,2023,1,https://github.com/jramaral/ConsoleAbstractFactory
Abstract Factory,Abstract-Furniture-Factory,Abstract-Factory is an Factory Method in Design-Pattern using Concepts of OOP in Java.,1,0,2023,2023,1,https://github.com/karan030204/Abstract-Furniture-Factory
Abstract Factory,AircraftManagement_DesignPatterns,"This repository contains a Java application that implements three design patterns: Builder, Abstract Factory, and State patterns. The project also includes comprehensive JUnit tests to verify functionality and ensure smooth operation.",1,0,2024,2024,1,https://github.com/tuanh00/AircraftManagement_DesignPatterns
Abstract Factory,Abstract-Factory-Design-Pattern,Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.,1,0,2019,2023,1,https://github.com/therezacuet/Abstract-Factory-Design-Pattern
Abstract Factory,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Abstract Factory,Design-Pattern-Abstract-Factory,"It is an implementation of Abstract Factory and Factory Method design patterns. It fetches data through JSON and XML file and provides output in HTML ,TXT and XML file format based on user request. The data generates restaurant menu based on country and timing.  ",1,0,2015,2021,1,https://github.com/keyuls/Design-Pattern-Abstract-Factory
Abstract Factory,pizzaria-with-pattern,"It is an example of a senary where it encompasses design patterns (Abstract Factory, State and Builder)",1,0,2019,2021,0,https://github.com/kevempedro/pizzaria-with-pattern
Abstract Factory,FeatureToggleDesignPatterns,Find out how Ziggy Rafiq simplifies A/B testing with feature toggles in C# 12 by using Factory and Abstract Factory design patterns.,1,0,2024,2024,1,https://github.com/ziggyrafiq/FeatureToggleDesignPatterns
Abstract Factory,EvspoID,"Platform E-commerce perlengkapan olahraga dibangun dengan Java menggunakan design pattern factory, abstract factory, strategy, singleton, facade pattern",1,0,2023,2023,1,https://github.com/malikfajarh/EvspoID
Abstract Factory,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Abstract Factory,GasPump-Driver,"Implemented a driver for gas-pump using various OOPS design pattern such as abstract factory, state pattern and startegy  pattern",1,0,2017,2018,1,https://github.com/vbimaliit/GasPump-Driver
Abstract Factory,Design-Patterns,"Explore a collection of commonly used design patterns implemented in Java. This repository showcases examples of Singleton, Factory, Abstract Factory, Adapter, Strategy, and Builder patterns. Each pattern is implemented in its own package, providing clear demonstrations and usage guidelines.",1,0,2023,2023,1,https://github.com/Meriyemelhajoui/Design-Patterns
Abstract Factory,Creational-Design-Patterns-in-Java,"This repository showcases implementations of five key creational design patterns in Java: Singleton, Factory, Abstract Factory, Builder, and Prototype. Each pattern is implemented with real-world scenarios, demonstrating how to create objects in a flexible, reusable, and efficient manner.",1,0,2024,2024,1,https://github.com/KUMARAN1601/Creational-Design-Patterns-in-Java
Abstract Factory,Institute,"This project has been developed to monitor graduates of an institute...Tools: PHP, MySQL, NETBEANS, Javascript, CSS, HTML... Design Patterns: MVC, Abstract Factory, Singleton.",1,0,2020,2021,1,https://github.com/JuniorAguilera/Institute
Abstract Factory,VehicleAgency,"This project is a vehicle agency graphical user interface (GUI) implemented in Java. It incorporates various design patterns to enhance code organization and functionality. The design patterns utilized include the thread pool, memento, observer, singleton, abstract factory method, and decorator patterns.",1,0,2023,2025,1,https://github.com/RonyBubnovsky/VehicleAgency
Abstract Factory,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Abstract Factory,Model-Driven-Architecture,"This is the design and implementation of Model Driven Architecture for a GasPump Component using MDA-EFSM and various software design patterns like Observer, Abstract Factory and State Pattern",1,0,2017,2023,1,https://github.com/mohammedshethwala/Model-Driven-Architecture
Abstract Factory,Bookstore,"A Java based Bookstore that implements design patterns (Singleton, Abstract Factory, and Factory), data encryption, Object Oriented Principles, and file storage.  The application has a cart, user/admin controls, point systems, coupons and book purchasing.",1,0,2024,2024,1,https://github.com/SugenJey/Bookstore
Abstract Factory,Software-Architecture,"A course in the 2nd quartile in the 2nd year of my study, Creative Media & Game Technologies. The purpose of this course was to learn code design patterns, such as the Abstract Factory & the Observer pattern.",1,0,2020,2023,1,https://github.com/ngmeijer/Software-Architecture
Abstract Factory,VendingMachine_FullSystem-Arch-Implementation-,"Designed and implemented a vending machine using various design patterns, including the State pattern, Strategy pattern, and Abstract Factory pattern. Applied Object-Oriented Programming (OOP) principles to create a vending machine utilizing the Model-Driven Architecture (MDA) EFSM.",1,0,2023,2024,1,https://github.com/sadannd/VendingMachine_FullSystem-Arch-Implementation-
Abstract Factory,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Abstract Factory,Conference_Interface_Application,"An Application that acts as an interface for users in a Conference Event. Developed using Java Swing and design techniques like Abstract Factory Method, Dependency Injection and Iterator Design Pattern. There are 3 different user levels and each have different tasks. ",1,0,2021,2021,1,https://github.com/Dhruv359/Conference_Interface_Application
Abstract Factory,Online-Forum-Platform,"This Spring Boot-based platform integrates design patterns like Singleton, Builder, Factory, and Abstract Factory, with an H2 in-memory database for lightweight storage. It features a user-friendly interface and runs on port 8087, showcasing scalable and maintainable modern software engineering practices.",1,0,2024,2024,1,https://github.com/Ahmetaygun/Online-Forum-Platform
Abstract Factory,cs342-hw-4,"You will chose one of the following design patterns: Template Method, Proxy, Adapter or Abstract Factory. Using the Maven JavaFX Project template in the sample code section of our BB course page, you will write a JavaFX program that highlights the functionality of the design pattern you chose. This does not need to be a lot of code and the GUI does not need to be extensive. You can not simply copy and paste an example from the web. You must also include a single page describing how the design pattern works in your program and what the benefits and/or drawbacks of using it are. Format this page as a PDF.",1,0,2022,2023,1,https://github.com/GGsource/cs342-hw-4
Abstract Factory,Bomberman-Game_java_V_1.0,This game project is a simulation of a simplistic version of Bomberman in java. Through the implementation I main make use of the abstract factory and the object pool design pattern to fire bomb and delegate task in the flow. Java swing together with other external libraries were used to produce useful graphics sound and image in the game. Basic object oriented programming was used the build the game logic,1,0,2022,2025,1,https://github.com/ngherve/Bomberman-Game_java_V_1.0
Abstract Factory,AbstractFactory,this repo contains Abstract Factory design pattern implementation using C#,0,45,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/AbstractFactory
Abstract Factory,tpv-exercise,"Usage of design patterns (abstract factory, strategy, builder, singleton)",0,41,2020,2022,1,https://github.com/iuresti/tpv-exercise
Abstract Factory,abstractFactoryDesign,Design Pattern Abstract Factory,0,2,2023,2023,1,https://github.com/os2506/abstractFactoryDesign
Abstract Factory,AbstractFactory,design pattern,0,1,2014,2014,0,https://github.com/magiclud/AbstractFactory
Abstract Factory,AbstractFactory,Design Patterns,0,0,2023,2023,1,https://github.com/aslihansavas/AbstractFactory
Abstract Factory,AbstractFactory,Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/AbstractFactory
Abstract Factory,AbstractFactory,Design Patterns,0,0,2024,2024,1,https://github.com/CSharpTemplate/AbstractFactory
Abstract Factory,AbstractFactory,Design Pattern,0,0,2020,2020,1,https://github.com/artghlijyan/AbstractFactory
Abstract Factory,AbstarctFactoryWithDI,"implement abstract factory patter example in ""http://www.dotnet-tricks.com/Tutorial/designpatterns/4EJN020613-Abstract-Factory-Design-Pattern---C"" with Dependency Injection",0,2,2013,2014,1,https://github.com/mahiar/AbstarctFactoryWithDI
Abstract Factory,DP_abstractFactory,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_abstractFactory
Abstract Factory,Design-Pattern-AbstractFactory,Design Pattern,0,0,2016,2016,1,https://github.com/aakash140/Design-Pattern-AbstractFactory
Abstract Factory,AbstractFactory,Creational Design Pattern in C# | Abstract Factory Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/AbstractFactory
Abstract Factory,AbstractFactory,Design Pattern Example,0,0,2021,2021,1,https://github.com/mahmutenesaydin/AbstractFactory
Abstract Factory,AbstractFactory,AbstractFactory Design pattern,0,0,2012,2014,1,https://github.com/WhoIsYourBaby/AbstractFactory
Abstract Factory,AbstractFactory,AbstractFactoy Design pattern ,0,0,2023,2024,1,https://github.com/MaheshKannemadugu/AbstractFactory
Abstract Factory,AbstractFactory,Design pattern research,0,0,2019,2019,1,https://github.com/farr3ll024/AbstractFactory
Abstract Factory,AbstractFactory,Design pattern Fontys,0,0,2020,2021,1,https://github.com/exZell11/AbstractFactory
Abstract Factory,AbstractFactory,Design Patterns GoF,0,0,2021,2021,0,https://github.com/YuraSomyk/AbstractFactory
Abstract Factory,AbstractFactory2,Creational Design Pattern in C# | Abstract Factory Design Pattern ,0,0,2023,2023,1,https://github.com/WunnaThaw/AbstractFactory2
Abstract Factory,5by5-AbstractFactory,Design Patterns,0,0,2024,2024,1,https://github.com/Paola-Santanna/5by5-AbstractFactory
Abstract Factory,AbstractFactoryPattern,GOF Design Pattern,0,0,2022,2022,1,https://github.com/hiroshiimaizumi0611/AbstractFactoryPattern
Abstract Factory,AbstractFactoryPattern,Java design-pattern,0,0,2020,2020,1,https://github.com/junghun133/AbstractFactoryPattern
Abstract Factory,AbstractFactoryPattern,Design pattern :: AbstractFactoryPattern,0,0,2019,2019,1,https://github.com/onsaurav/AbstractFactoryPattern
Abstract Factory,AbstractFactory,Abstract Factory Design Pattern,0,0,2015,2015,0,https://github.com/DigitalNewt/AbstractFactory
Abstract Factory,AbstractFactory,Design Patterns Project #1,0,0,2016,2016,1,https://github.com/jpreese/AbstractFactory
Abstract Factory,AbstractFactory,Design Pattern Abstract Factory,0,0,2023,2023,1,https://github.com/GUILHERMEPSANTOS/AbstractFactory
Abstract Factory,AbstractFactory,Estudo sobre Design Pattern,0,0,2024,2024,0,https://github.com/ricgavira/AbstractFactory
Abstract Factory,AbstractFactory,Estudando sobre Design patterns,0,0,2021,2021,1,https://github.com/ricardocampos1/AbstractFactory
Abstract Factory,AbstractFactory,Design pattern Abstract Factory,0,0,2017,2017,1,https://github.com/vitkozgit/AbstractFactory
Abstract Factory,AbstractFactoryPattern,Aprendendo sobre Design Pattern,0,0,2021,2021,0,https://github.com/byPombo/AbstractFactoryPattern
Abstract Factory,AbstractFactoryDP,Abstract Factory Design Pattern,0,0,2023,2023,1,https://github.com/burakkaya06/AbstractFactoryDP
Abstract Factory,AbstractFactoryExample,Estudos de design patterns,0,0,2022,2022,2,https://github.com/ViniiciusGoncalves/AbstractFactoryExample
Abstract Factory,AbstractFactory,GoF abstract factory design pattern,0,0,2024,2024,1,https://github.com/loaidieu/AbstractFactory
Abstract Factory,AbstractFactory,AbstractFactory Design Pattern in C#,0,0,2023,2023,1,https://github.com/ducphucdev/AbstractFactory
Abstract Factory,DesignPattern-AbstractFactory,Abstract Factory Design Pattern,0,0,2017,2017,1,https://github.com/RishikeshGIT/DesignPattern-AbstractFactory
Abstract Factory,AbstractFactory,Abstract Factory design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/AbstractFactory
Abstract Factory,AbstractFactory,Abstract Factory Design Pattern Demo,0,0,2022,2022,1,https://github.com/HarshavardhanDanda/AbstractFactory
Abstract Factory,AbstractFactory,Abstract Factory Design Pattern Java,0,0,2015,2022,1,https://github.com/abhijit-salunkhe/AbstractFactory
Abstract Factory,AbstractFactory,This is Creational Design Pattern,0,0,2021,2021,1,https://github.com/pranavvichare/AbstractFactory
Abstract Factory,DesignPatterns_AbstractFactory,Design Patterns Abstract Factory,0,0,2022,2022,0,https://github.com/geanlima/DesignPatterns_AbstractFactory
Abstract Factory,AbstractFactory,Design patterns exercise - AbstractFactory pattern,0,0,2020,2020,0,https://github.com/milicaklaric/AbstractFactory
Abstract Factory,STRUCTURAL-DESIGN-PATTERN-AbstractFactory-,STRUCTURAL DESIGN PATTERN (AbstractFactory),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-AbstractFactory-
Abstract Factory,AbstractFactoryDP,Abstract Factory Design Pattern Example,0,0,2018,2018,0,https://github.com/PrabuKumarPK/AbstractFactoryDP
Abstract Factory,AbstractFactoryDemo,Learning Abstract Factory Design Pattern,0,0,2019,2019,2,https://github.com/ItsViridae/AbstractFactoryDemo
Abstract Factory,AbstractFactoryDesignPattern,"Implements one of the core software design patterns, the Abstract Factory design pattern.",0,0,2023,2023,1,https://github.com/rdhadda123/AbstractFactoryDesignPattern
Abstract Factory,AbstractFactory,Implementation of abstract factory design pattern,0,0,2022,2022,1,https://github.com/Ajay-Belgur/AbstractFactory
Abstract Factory,PocAbstractFactory,Design Patterns,0,0,2020,2020,0,https://github.com/LeticiaSM/PocAbstractFactory
Abstract Factory,Abstract-Factory-Design-Pattern,Creational Design Patterns: Abstract Factory Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Abstract-Factory-Design-Pattern
Abstract Factory,AbstractFactory,Abstract Factory Creational Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/AbstractFactory
Abstract Factory,AbstractFactory,exemple of an AbstractFactory design pattern,0,0,2023,2023,1,https://github.com/IsmaInfiniteCloud/AbstractFactory
Abstract Factory,AbstractFactoryDesignPattern,Abstract Factory design Pattern Example,0,0,2020,2020,1,https://github.com/aasmc/AbstractFactoryDesignPattern
Abstract Factory,AbstractFactoryDesignPattern,Abstract Factory Design Pattern usage,0,0,2024,2024,1,https://github.com/futuretraineracademy/AbstractFactoryDesignPattern
Abstract Factory,Abstract-Factory,Creational Design Patterns,0,0,2020,2020,1,https://github.com/rjiosum/Abstract-Factory
Abstract Factory,Design_pattern-ABSTRACT-FACTORY,Design Pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-ABSTRACT-FACTORY
Abstract Factory,DPR-AbstractFactory,Example implementation of AbstractFactory Design Pattern,0,0,2019,2019,1,https://github.com/myvisiontoday/DPR-AbstractFactory
Abstract Factory,AbstractFactory_345,Practice in abstract OOP design patterns.,0,0,2023,2024,2,https://github.com/nickopicz/AbstractFactory_345
Abstract Factory,CSharpDP_Creational_AbstractFactory,Creational Abstract Factory Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_AbstractFactory
Abstract Factory,AbstractFactory-01,"Design Pattern, Abstract Factory, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/AbstractFactory-01
Abstract Factory,abstractFactoryPattern,Implementation of abstract factory design pattern,0,0,2024,2024,1,https://github.com/Vikas-Saini-420/abstractFactoryPattern
Abstract Factory,AbstractFactory_Observer,Multiple pattern example in Design patterns,0,0,2018,2018,1,https://github.com/nybbble/AbstractFactory_Observer
Abstract Factory,AbstractFactory,Sample implementation for Abstract Factory Design Pattern,0,0,2023,2023,1,https://github.com/ShehabSalah/AbstractFactory
Abstract Factory,AbstractFactory,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/AbstractFactory
Abstract Factory,AbstractFactory, Academic Project - Learning Design Patterns - Abstract Factory,0,0,2016,2016,1,https://github.com/mikemajesty/AbstractFactory
Abstract Factory,AbstractFactory,A design pattern AbstractFactory in java implentation,0,0,2016,2016,0,https://github.com/sinzen/AbstractFactory
Abstract Factory,AbstractFactory,Academic project presenting design pattern abstract actory.,0,0,2021,2021,1,https://github.com/WojciechKrawczyk/AbstractFactory
Abstract Factory,AbstractFactory,Abstract Factory design pattern using C# console,0,0,2019,2019,1,https://github.com/gchaniotakis/AbstractFactory
Abstract Factory,Abstract-Factory-Design-Pattern,Abstract Factory Design Pattern,0,0,2017,2017,0,https://github.com/bavlayan/Abstract-Factory-Design-Pattern
Abstract Factory,abstract-pizza-store,Abstract Factory Design Pattern,0,0,2019,2019,1,https://github.com/yildizozan/abstract-pizza-store
Abstract Factory,creationalPattern,Design pattern abstract factory,0,0,2017,2017,1,https://github.com/abakarEgrey/creationalPattern
Abstract Factory,abstract-factory,Abstract Factory Design Pattern,0,0,2018,2018,0,https://github.com/shabazy/abstract-factory
Abstract Factory,GarmentSimulator,Abstract Factory Design Pattern,0,0,2023,2023,1,https://github.com/chrisMasoud/GarmentSimulator
Abstract Factory,AbstarctFactoryDP,Abstract factory Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/AbstarctFactoryDP
Abstract Factory,AbstractFactoryDesignPattern,Implementation of Abstract Factory Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/AbstractFactoryDesignPattern
Abstract Factory,M_K,Abstract Factory Design Pattern,0,0,2015,2015,0,https://github.com/Blood-smill/M_K
Abstract Factory,Abstractory,Abstract factory design pattern,0,0,2016,2016,2,https://github.com/treyhay31/Abstractory
Abstract Factory,DesignPatternAbstractFactory,Design Pattern Abstract Factory,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternAbstractFactory
Abstract Factory,abstract-factory,Design patterns - Abstract factory.,0,0,2022,2022,1,https://github.com/m4t3u2/abstract-factory
Abstract Factory,Abstract-Factory,Design pattern abstract factory,0,0,2023,2023,1,https://github.com/vanhiepgithub2401/Abstract-Factory
Abstract Factory,SETema5,Abstract Factory Design Pattern,0,0,2014,2014,1,https://github.com/mirel-tapligaidita/SETema5
Abstract Factory,Abstract-Factory,Abstract Factory Design Patterns,0,0,2021,2021,1,https://github.com/aliounemane2/Abstract-Factory
Abstract Factory,Abstract-Factory-,Abstract Factory Design Pattern,0,0,2019,2019,0,https://github.com/lakithjayalath/Abstract-Factory-
Abstract Factory,Abstract-Factory-Design-Pattern,Abstract Factory Design Pattern,0,0,2019,2019,1,https://github.com/ibavli/Abstract-Factory-Design-Pattern
Abstract Factory,Design-Patterns,Abstract Factory Design Pattern,0,0,2018,2018,1,https://github.com/faridhuseynov/Design-Patterns
Abstract Factory,DPAbstractFactory,Design Patterns - Abstract Factory,0,0,2020,2020,1,https://github.com/gitsridhar/DPAbstractFactory
Abstract Factory,Codigo-027---Estudio-Melhorado,Design Pattern Abstract Factory,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-027---Estudio-Melhorado
Abstract Factory,DesignPatterns_AbstractFactory,Design Patterns: Abstract Factory Pattern sample,0,0,2017,2017,1,https://github.com/dyamaletdinova/DesignPatterns_AbstractFactory
Abstract Factory,garment_sim,Abstract Factory Design Pattern,0,0,2023,2023,1,https://github.com/kostrja/garment_sim
Abstract Factory,Abstract_factory,Abstract Factory Design pattern  ,0,0,2025,2025,1,https://github.com/SamyMo7amed/Abstract_factory
Abstract Factory,Abstract-Factory-Design-Pattern,Abstract Factory Design Pattern,0,0,2018,2018,1,https://github.com/pranaydutta/Abstract-Factory-Design-Pattern
Abstract Factory,design-patterns-abstract-factory,Design Patterns - Abstract Factory,0,0,2019,2019,1,https://github.com/robertosrjr/design-patterns-abstract-factory
Abstract Factory,AbstractFactory,Abstract factory design pattern implemented in java,0,0,2022,2022,1,https://github.com/Harrison-II/AbstractFactory
Abstract Factory,AbstractDesignPattern,Abstract Factory Design pattern,0,0,2014,2014,1,https://github.com/anilkumar5/AbstractDesignPattern
Abstract Factory,Microofice_AbstractFactoryDesignPattern,Program to implement Abstract factory design pattern and singleton design pattern for microoffice problem statement,0,0,2023,2023,1,https://github.com/KhanolkarArati/Microofice_AbstractFactoryDesignPattern
Abstract Factory,Abstract-Factory-Pattern,Java Design Patterns,0,0,2018,2018,1,https://github.com/balamanova/Abstract-Factory-Pattern
Abstract Factory,Abstract-Factory-Pattern,Design Pattern - Creational,0,0,2017,2017,1,https://github.com/mhtmalpani/Abstract-Factory-Pattern
Abstract Factory,AbstractFactoryDesignPattern,Abstract Factory Design Pattern in C#,0,0,2014,2014,1,https://github.com/wcadap/AbstractFactoryDesignPattern
Abstract Factory,abstractFactoryDesignPattern,Abstract Factory Design Pattern [java & PHP],0,0,2018,2018,1,https://github.com/pierDipi/abstractFactoryDesignPattern
Abstract Factory,AbstractFactoryPattern,Examples to understand Abstract Factory Design Pattern,0,0,2017,2017,1,https://github.com/Naveen-Valmikam/AbstractFactoryPattern
Abstract Factory,AbstractFactoryPattern,Da série de estudos sobre design patterns,0,0,2019,2019,1,https://github.com/Hubermlima/AbstractFactoryPattern
Abstract Factory,AbstractFactoryMethod,"An implementation of ""Abstract factory"" design pattern",0,0,2023,2023,1,https://github.com/vladdubceac/AbstractFactoryMethod
Abstract Factory,AbstractFactoryDesignPattern_CSharp,Abstract Factory Design Pattern in C#,0,0,2018,2020,1,https://github.com/sudipta-chaudhari/AbstractFactoryDesignPattern_CSharp
Abstract Factory,AbstractFactory,Learning design patterns. Example of using Abstract Factory,0,0,2019,2019,1,https://github.com/k-oksenych/AbstractFactory
Abstract Factory,AbstractFactory,Example code for the abstract factory design pattern,0,0,2020,2020,1,https://github.com/ByTheZen/AbstractFactory
Abstract Factory,AbstractFactory,Abstract Factory design pattern by Specialist`s course,0,0,2023,2023,1,https://github.com/radiotech205/AbstractFactory
Abstract Factory,AbstractFactoryDesignPattern,Simple Car Model Abstract Factory Design Pattern,0,0,2022,2022,1,https://github.com/ugurrk35/AbstractFactoryDesignPattern
Abstract Factory,DesignPattern.AbstractFactory,Exemplo de implementação do design pattern AbstractFactory,0,0,2020,2020,1,https://github.com/LexGalante/DesignPattern.AbstractFactory
Abstract Factory,EBAC_BackEnd_Java_AbstractFactory,Implementation of Abstract factory design pattern,0,0,2023,2023,1,https://github.com/AmandaZaine/EBAC_BackEnd_Java_AbstractFactory
Abstract Factory,AbstractFactorySample,An example of the abstract factory design pattern,0,0,2023,2023,1,https://github.com/Milyatov/AbstractFactorySample
Abstract Factory,AbstractFactoryDesign,Abstract Factory Design Pattern in Java with implementation,0,0,2021,2021,1,https://github.com/gulbalasalamov/AbstractFactoryDesign
Abstract Factory,Kotlin_AbstractrFactory,An example of design pattern AbstractFactory on Kotlin.,0,0,2017,2017,1,https://github.com/Yura-Savchuk/Kotlin_AbstractrFactory
Abstract Factory,AbstractFactoryDP_CloudPlatforms,Simple project implementing abstract factory design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/AbstractFactoryDP_CloudPlatforms
Abstract Factory,DesignPatterns_CSharp,abstract factory,0,1,2015,2015,1,https://github.com/seth-list/DesignPatterns_CSharp
Abstract Factory,AbstractFactory,description de design pattern abstract factory avec un exemple,0,0,2022,2022,1,https://github.com/Yasser-NADIR/AbstractFactory
Abstract Factory,AbstractFactoryPattern,Design patterns in java  examples Abstract factory pattern,0,0,2018,2018,0,https://github.com/PetarBuncic/AbstractFactoryPattern
Abstract Factory,AbstractFactory-Proxy,Implementation of Abstract Factory and Proxy design patterns.,0,0,2019,2019,0,https://github.com/eulersexception/AbstractFactory-Proxy
Abstract Factory,AbstractFactory,Basic implementation of Abstract factory design pattern in C#,0,0,2020,2020,1,https://github.com/GhlijyanVahagn/AbstractFactory
Abstract Factory,abstract-factory,Abstract Factory Creational Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/abstract-factory
Abstract Factory,AbstractFactory,Exemplo simples do Design Pattern Abstract Factory em java.,0,0,2018,2018,1,https://github.com/brunonlima/AbstractFactory
Abstract Factory,AbstractFactory,Project created in college to pass design-patterns classes.,0,0,2020,2020,1,https://github.com/RadoslawZegzula/AbstractFactory
Abstract Factory,Abstract-Factory,JAVA Abstract Factory Design Pattern,0,0,2020,2020,1,https://github.com/Valthion/Abstract-Factory
Abstract Factory,abstract_factory,Abstract factory design pattern example,0,0,2020,2020,1,https://github.com/aunesto17/abstract_factory
Abstract Factory,abstract-factory,Implements design patterns abstract factory,0,0,2020,2020,2,https://github.com/rafamagalhas/abstract-factory
Abstract Factory,engComp.padroesDeProjeto.abstractFactory,Abstract Factory Design pattern in Java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.abstractFactory
Abstract Factory,DesignPatterns_AbstractFactory,Example for abstract factory design pattern in java.,0,0,2023,2023,1,https://github.com/moaydogdu/DesignPatterns_AbstractFactory
Abstract Factory,AbstractFactoryPatternDemo,A simple demo of Abstract Factory Design Pattern,0,0,2020,2020,0,https://github.com/loipn1804/AbstractFactoryPatternDemo
Abstract Factory,GoF-AbstractFactory,Studying the theory and implementation of Design Patterns,0,0,2023,2023,1,https://github.com/RuanK07/GoF-AbstractFactory
Abstract Factory,AbstractFactory_Demo,This is my POC for - Abstract Factory Design Pattern,0,0,2023,2023,0,https://github.com/NaveenKV494/AbstractFactory_Demo
Abstract Factory,AbstractFactoryPattern,How to implement Abstract Factory design pattern in .Net,0,0,2021,2021,1,https://github.com/ssukhpinder/AbstractFactoryPattern
Abstract Factory,AbstractFactoryONE,Simple exercise to practice the Abstract Factory design pattern. ,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/AbstractFactoryONE
Abstract Factory,AbstractFactoryPattern,Abstract Factory Pattern in Java for Java Design Patterns,0,0,2024,2024,1,https://github.com/ashishpatel007/AbstractFactoryPattern
Abstract Factory,AbstractFactorySwift,The code example to my Swift design pattern series.,0,0,2021,2021,2,https://github.com/CaptainBlain/AbstractFactorySwift
Abstract Factory,WildLife,Abstract Factory design pattern example,0,0,2023,2023,0,https://github.com/VladislavPavlyuk/WildLife
Abstract Factory,DP-Abstract-Factory-TP,TP Design Pattern Abstract Factory,0,0,2019,2019,1,https://github.com/amechin/DP-Abstract-Factory-TP
Abstract Factory,Design_Pattern_Abstract_Factory,Implement Design_Pattern_Abstract_Factory,0,0,2022,2022,1,https://github.com/Mithu0229/Design_Pattern_Abstract_Factory
Abstract Factory,iflas-technologies-ltd,Abstract Factory Design Pattern Example,0,0,2019,2019,1,https://github.com/yildizozan/iflas-technologies-ltd
Abstract Factory,Java-Abstract-Factory-Design-Pattern,Java-Abstract-Factory-Design-Pattern,0,0,2021,2021,1,https://github.com/Docsconsole/Java-Abstract-Factory-Design-Pattern
Abstract Factory,DesignPatterns.AbstractFactory,,0,0,2024,2024,1,https://github.com/quocanlikebanana/DesignPatterns.AbstractFactory
Abstract Factory,abstract-factory-pattern,design pattern : abstract factory pattern,0,0,2021,2021,0,https://github.com/mnaufalazwar/abstract-factory-pattern
Abstract Factory,Design_Patterns_test01,creational Design Patterns  abstract_factory,0,0,2022,2022,1,https://github.com/lijiakangs/Design_Patterns_test01
Abstract Factory,CSharpDP_Creational_AbstractFactory2,Creational Abstract Factory Design Pattern 2nd example,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_AbstractFactory2
Abstract Factory,csharp-abstract-factory-pattern,csharp abstract factory design pattern,0,0,2022,2022,0,https://github.com/MarshalOfficial/csharp-abstract-factory-pattern
Abstract Factory,Advanced_programming_techniques2,Using Abstract Factory design pattern,0,0,2018,2018,1,https://github.com/skrzymo/Advanced_programming_techniques2
Abstract Factory,factory-of-factories,Design Pattern - Abstract Factory Pattern,0,0,2019,2019,0,https://github.com/hamiddoosty/factory-of-factories
Abstract Factory,abstract-factory-pattern,C# - Abstract factory design pattern,0,0,2023,2023,1,https://github.com/flcristian/abstract-factory-pattern
Abstract Factory,abstract-factory-design-pattern,Abstract factory design pattern implementation,0,0,2022,2022,1,https://github.com/lilithovian/abstract-factory-design-pattern
Abstract Factory,recepies,Abstract Factory Design Pattern example,0,0,2021,2021,1,https://github.com/OlgaYatsenko/recepies
Abstract Factory,DesignPatterns-AbstractorFactory,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-AbstractorFactory
Abstract Factory,DesignPatterns-AbstractFactory,,0,0,2021,2021,0,https://github.com/GabrielBronte/DesignPatterns-AbstractFactory
Abstract Factory,DesignPatterns-AbstractFactory,,0,0,2021,2021,0,https://github.com/yousufanwer99/DesignPatterns-AbstractFactory
Abstract Factory,DesignPatterns-AbstractFactory,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-AbstractFactory
Abstract Factory,DesignPatterns-AbstractFactory,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-AbstractFactory
Abstract Factory,DesignPatterns_AbstractFactory,,0,0,2021,2021,1,https://github.com/glucaas/DesignPatterns_AbstractFactory
Abstract Factory,DesignPatterns-AbstractFactory,Teste de implementações de padrões de projeto,0,0,2020,2020,1,https://github.com/Diego1906/DesignPatterns-AbstractFactory
Abstract Factory,DesignPatterns_AbstractFactory,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_AbstractFactory
Abstract Factory,DesignPatterns-AbstractFactory,,0,0,2021,2021,1,https://github.com/DanielMachado29/DesignPatterns-AbstractFactory
Abstract Factory,abstract_factory-pattern,Design pattern learning: abstract factory,0,0,2021,2021,1,https://github.com/TomSawyer404/abstract_factory-pattern
Abstract Factory,AbstractFactory,An implementation for the abstract factory design pattern using java,0,0,2024,2024,2,https://github.com/RashedMaaitah/AbstractFactory
Abstract Factory,dp-creational-abstract-factory,Design Pattern: Creational - Abstract Factory,0,1,2020,2022,1,https://github.com/una-eif204-progra2-master/dp-creational-abstract-factory
Abstract Factory,AbstractFactory,This is a simple implementantion of Abstract Factory Design Pattern.,0,0,2025,2025,1,https://github.com/shirin-monzavi/AbstractFactory
Abstract Factory,DesignPatterns.AbstractFactory,,0,0,2018,2018,1,https://github.com/TSzymanskiPWR/DesignPatterns.AbstractFactory
Abstract Factory,AbstractFactory,Ejemplo  del libro Head First Design Patterns en c# Consola,0,0,2021,2021,1,https://github.com/joel18012/AbstractFactory
Abstract Factory,AbstractFactory_DesignPatterns,,0,0,2023,2023,1,https://github.com/Patba/AbstractFactory_DesignPatterns
Abstract Factory,SETema5,Software design pattern - Abstract Factory,0,0,2014,2014,1,https://github.com/comihai/SETema5
Abstract Factory,DPAbstractFactory,GoF Design pattern Abstract Factory,0,0,2022,2023,0,https://github.com/gregory82gr/DPAbstractFactory
Abstract Factory,CreationPatterns,Design patterns project - Abstract Factory,0,0,2015,2015,1,https://github.com/srilalitha20/CreationPatterns
Abstract Factory,poaAbstractFactory,TD Design Pattern Abstract Factory,0,0,2016,2016,1,https://github.com/Jmedjid/poaAbstractFactory
Abstract Factory,AbstractFactory_DesignPatterns,,0,0,2024,2024,1,https://github.com/Djtv1304/AbstractFactory_DesignPatterns
Abstract Factory,AbstractFactoryDesignPatternDemo,Demo for abstract factory design pattern in java,0,0,2021,2021,1,https://github.com/rajan4study/AbstractFactoryDesignPatternDemo
Abstract Factory,AbstractFactory,https://refactoring.guru/ru/design-patterns/abstract-factory/java/example,0,0,2020,2020,0,https://github.com/rtvbaa/AbstractFactory
Abstract Factory,DesignPatterns.AbstractFactory,,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.AbstractFactory
Abstract Factory,designPatterns_abstractFactory,Fábrica de carros e concessionárias utilizando o Padrão de projeto Abstract Factory.,0,0,2023,2023,1,https://github.com/michaelferreir12345678/designPatterns_abstractFactory
Abstract Factory,DesignPatterns_AbstractFactory,,0,0,2024,2024,1,https://github.com/pauloSoriano/DesignPatterns_AbstractFactory
Abstract Factory,dp-abstract-factory,Abstarct Factory Design Pattern Sample,0,0,2023,2023,1,https://github.com/rodolfofajardo/dp-abstract-factory
Abstract Factory,TD4_AbstractFactory,TD Design Pattern Abstract Factory du cours de POA,0,0,2016,2016,0,https://github.com/bhajar/TD4_AbstractFactory
Abstract Factory,abstract-factory,Example of abstract factory design pattern,0,0,2023,2023,1,https://github.com/DenilsonNil/abstract-factory
Abstract Factory,abstract-factory,Design Pattern example for abstract factory,0,0,2016,2016,1,https://github.com/nicad49/abstract-factory
Abstract Factory,Abstract-Factory,Design Patterns - Creational Patterns - Abstract Factory,0,0,2023,2023,1,https://github.com/rogeriorex/Abstract-Factory
Abstract Factory,abstract-factory,implements abstract factory method design pattern,0,0,2024,2024,1,https://github.com/simin-motamedi/abstract-factory
Abstract Factory,Abstract-Factory,Aplicando o design pattern - Abstract Factory,0,0,2023,2023,1,https://github.com/diegomaustem/Abstract-Factory
Abstract Factory,abstract-factory,Abstract factory design pattern in PHP,0,0,2020,2020,1,https://github.com/sina-developer/abstract-factory
Abstract Factory,Abstract-Factory,Implement abstract design pattern using java ,0,0,2023,2023,1,https://github.com/Design-Patterns-Mohammad-Soukar/Abstract-Factory
Abstract Factory,AbstractFactoryDesignPattern,Implementing Abstract Factory Design Pattern in C# console application,0,0,2022,2022,0,https://github.com/imtiajahammad/AbstractFactoryDesignPattern
Abstract Factory,AbstractFactory_WindowsOrMacOS,Simple project that implements abstract factory design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/AbstractFactory_WindowsOrMacOS
Abstract Factory,.NET.DesignPatterns.AbstractFactory,,0,0,2019,2020,1,https://github.com/dmitry-zhbankov/.NET.DesignPatterns.AbstractFactory
Abstract Factory,02-designPatterns-AbstractFactory,,0,0,2024,2024,1,https://github.com/cristianps1988/02-designPatterns-AbstractFactory
Abstract Factory,AbstractFactory-DesignPatternsSeries,"This repository is part of the Design Pattern Series, orchestrated by Professor Alexandre Bittencourt. Our goal is to develop a mini-project based on each design pattern covered in our curriculum.",0,0,2024,2024,1,https://github.com/NicoleCarvalh/AbstractFactory-DesignPatternsSeries
Abstract Factory,AbstractFactoryPattern-DesignPatterns,,0,0,2024,2024,1,https://github.com/FullstackEsther/AbstractFactoryPattern-DesignPatterns
Abstract Factory,C--DesignPatterns-AbstractFactory,"Simple application demonstrating the ""Abstract Factory"" design pattern in C#",0,1,2014,2014,1,https://github.com/diamonddelt/C--DesignPatterns-AbstractFactory
Abstract Factory,DesignPatterns-Cre-AbstractFactory,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Cre-AbstractFactory
Abstract Factory,DesignPatterns-Creational-AbstractFactory,,0,0,2021,2021,1,https://github.com/bethovenacha/DesignPatterns-Creational-AbstractFactory
Abstract Factory,DesingP_Abstract_Factory,Implementation de Design Pattern AbstractFactory,0,0,2023,2023,1,https://github.com/Toudherth/DesingP_Abstract_Factory
Abstract Factory,AbstractFactoryPatternSample,Sample implementation of the Abstract Factory Design Pattern in C#,0,0,2020,2024,0,https://github.com/iuriimoroz/AbstractFactoryPatternSample
Abstract Factory,Abstract-Factory,php design pattern Abstract Factory Implementation with psr-2 autoloading and singleton design pattern for database initiation,0,0,2021,2021,1,https://github.com/githubmohammadrepo/Abstract-Factory
Abstract Factory,Simple-Example-For-AbstractFactory-DesignPattern,simple way to understand abstract factory design pattern,0,0,2017,2017,1,https://github.com/manikandan103222/Simple-Example-For-AbstractFactory-DesignPattern
Abstract Factory,DesignPatterns-AbstractFactoryExample,,0,0,2018,2018,1,https://github.com/ishara-jay/DesignPatterns-AbstractFactoryExample
Abstract Factory,DesignPatterns-Creational-AbstractFactory,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Creational-AbstractFactory
Abstract Factory,AbstractFactoryTWO,A more complex exercise to practice the Abstract Factory design pattern.,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/AbstractFactoryTWO
Abstract Factory,Abstract-Factory-Method,One of the Creational Design Patterns,0,0,2019,2019,1,https://github.com/mukeshkrr/Abstract-Factory-Method
Abstract Factory,PizzaAbstractFactory,Abstract Factory Design Pattern - implementation/practice,0,0,2017,2018,1,https://github.com/bwielk/PizzaAbstractFactory
Abstract Factory,abstract-factory-pattern,Implementation by Java Script (Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/abstract-factory-pattern
Abstract Factory,abstract-factory,Example demonstrating the Abstract Factory Design Pattern,0,0,2020,2020,1,https://github.com/minibuildsio/abstract-factory
Abstract Factory,abstract-factory,Abstract Factory Design Pattern Implementation in php,0,0,2018,2018,0,https://github.com/aascc/abstract-factory
Abstract Factory,AbstractFactory-Encryption,An implementation of three encryption algorithms on Abstract Factory design pattern.,0,0,2021,2021,1,https://github.com/DevTurgay/AbstractFactory-Encryption
Abstract Factory,Java-EE-abstractFactoryModelEg,"A design pattern, Abstract Factory Pattern, implemented in Java.",0,0,2016,2016,1,https://github.com/shashikhanal/Java-EE-abstractFactoryModelEg
Abstract Factory,Design-patterns-,Abstract factory,0,0,2018,2018,0,https://github.com/LeTranThuan/Design-patterns-
Abstract Factory,AbstractFactoryMethodExample,"An example of ""Abstract Factory method"" design pattern implemented in Java",0,0,2023,2023,1,https://github.com/vladdubceac/AbstractFactoryMethodExample
Abstract Factory,DesignPatternsWithEo-AbstractFactory,"Implementation of ""Abstract Factory"" pattern with Eo (EFL Object system)",0,0,2017,2018,1,https://github.com/conr2d/DesignPatternsWithEo-AbstractFactory
Abstract Factory,AbstractFactoryPattern,This Java project provides a working example of the AbstractFactory design pattern.,0,0,2015,2015,1,https://github.com/LikeLikeAteMyShield/AbstractFactoryPattern
Abstract Factory,Simon8029.DesignPatterns.AbstractFactory,,0,0,2017,2017,1,https://github.com/PlumpMath/Simon8029.DesignPatterns.AbstractFactory
Abstract Factory,Factory-AbstractFactoryDesignPatternSimpleDemo,apply factory design pattern to simple game comand line,0,0,2017,2017,0,https://github.com/AbdullahAyman/Factory-AbstractFactoryDesignPatternSimpleDemo
Abstract Factory,Java_Builder_Pattern,Design Pattern in Java -> Creational Design Pattern ->Abstract Factory Pattern,0,0,2021,2021,0,https://github.com/TechnoJunior/Java_Builder_Pattern
Abstract Factory,AbstractFactoryPattern,"Simple study case of Factory Pattern, related to Design Patterns in java",0,0,2016,2016,1,https://github.com/mvalho/AbstractFactoryPattern
Abstract Factory,AbstractFactoryDemo,A simple illustration of the AbstractFactory Design Pattern in Kotlin and Java,0,0,2022,2022,1,https://github.com/ericdiazcodes/AbstractFactoryDemo
Abstract Factory,dpcreate-afactory_dafanasyev,Creational DESIGN PATTERNS: Abstract Factory( Toolkit ),0,0,2022,2022,1,https://github.com/mslobodyanyuk/dpcreate-afactory_dafanasyev
Abstract Factory,Design_Patterns_Abstract_Factory,C# Design Patterns | Abstract Factory Example,0,0,2017,2018,1,https://github.com/TaharLOUKIL/Design_Patterns_Abstract_Factory
Abstract Factory,Jungle-animal-sound,"Design patterns, Abstract factory, factory method",0,0,2022,2022,1,https://github.com/gupta1dinesh/Jungle-animal-sound
Abstract Factory,Abstract_Factory_DesignPattern,Abstract Factory Design Pattern in Java,0,0,2024,2024,1,https://github.com/NikleshFernando/Abstract_Factory_DesignPattern
Abstract Factory,SETema5,Repository demonstrating Abstract Factory design pattern,0,0,2014,2014,1,https://github.com/geoiordache/SETema5
Abstract Factory,abstractFactoryPattern,"Software Architecture and Design Patterns | University of Michigan-Dearborn | Dearborn, MI | 2019",0,0,2019,2019,1,https://github.com/rabyjaycie14/abstractFactoryPattern
Abstract Factory,CaffeFactory,Realization of Abstract Factory Design Pattern,0,0,2020,2020,1,https://github.com/ivankapop/CaffeFactory
Abstract Factory,abstact_factory,Implémentation du design pattern abstract factory ,0,0,2023,2023,1,https://github.com/DavePhil/abstact_factory
Abstract Factory,SingletonAbstaractDesignPattern,Singleton and Abstract Factory Design Pattern,0,0,2019,2019,0,https://github.com/nikhilpai007/SingletonAbstaractDesignPattern
Abstract Factory,swe-incompleto,"Design Patterns Observer, Abstract Factory, Strategy",0,0,2024,2024,1,https://github.com/polynomialspac3/swe-incompleto
Abstract Factory,abstract-factory-pattern-in-php,Abstract Factory design pattern in php,0,0,2021,2021,1,https://github.com/AhmedHelalAhmed/abstract-factory-pattern-in-php
Abstract Factory,creational-pattern,Xây dựng design pattern Abstract Factory,0,0,2022,2022,1,https://github.com/datngo1012/creational-pattern
Abstract Factory,abstract-factory-pattern,Implementation of Abstract Factory Creational Design Pattern ,0,0,2023,2024,1,https://github.com/KirillLukyanov2000/abstract-factory-pattern
Abstract Factory,abstract-factory-method,A project to implement Java Design Pattern,0,0,2022,2022,1,https://github.com/hamza21-code/abstract-factory-method
Abstract Factory,abstract_factory,To learn Abstract Factory design pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/abstract_factory
Abstract Factory,Abstract_Factory_Pattern,"C++, Software design pattern: Abstract factory pattern",0,0,2020,2020,3,https://github.com/MarcJimenez99/Abstract_Factory_Pattern
Abstract Factory,abstract_factory_pattern,TypeScript Implementation of Abstract Factory Design Pattern,0,0,2021,2022,2,https://github.com/asiancoderyoda/abstract_factory_pattern
Abstract Factory,Abstract-Factory-Demo,Demo code for Abstract Factory Design Pattern,0,0,2024,2024,1,https://github.com/LeThanhPhongWork/Abstract-Factory-Demo
Abstract Factory,abstract-factory,Simple project demonstrating the abstract factory design pattern.,0,0,2021,2022,1,https://github.com/Piazzi/abstract-factory
Abstract Factory,designPatterns,Quiz about abstract factory pattern,0,0,2020,2020,1,https://github.com/KaterineMoon/designPatterns
Abstract Factory,Abstract-Factory-Pattern,Abstract Factory Design Pattern Implementation by Java.,0,0,2020,2020,1,https://github.com/Mamun-Al-Babu-Shikder/Abstract-Factory-Pattern
Abstract Factory,AbstractFactory-DP-Practice,"A simple implementation for ""drawing"" shapes under the Abstract Factory design pattern",0,0,2022,2022,1,https://github.com/odedAtias/AbstractFactory-DP-Practice
Abstract Factory,3-2-DesignPatterns-CustomerMailAbstractFactory,"Design Patterns in Object-Oriented Programming Fourth Tasks ""Abstract Factory Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-CustomerMailAbstractFactory
Abstract Factory,AbstractFactory,Montadora de carros que faz uso do padrão de projeto (design patterns) Abstract Factory.,0,0,2020,2023,1,https://github.com/Gwolner/AbstractFactory
Abstract Factory,CSharp.DesignPatterns.1.Creational.AbstractFactory,,0,0,2021,2021,1,https://github.com/oscarcortez/CSharp.DesignPatterns.1.Creational.AbstractFactory
Abstract Factory,study_csharp_architecture_designPatterns_abstractFactory,,0,0,2022,2022,1,https://github.com/rsg-roberth/study_csharp_architecture_designPatterns_abstractFactory
Abstract Factory,KWIC-DesignPatterns,Version 1-Abstract Factory Pattern,0,0,2023,2023,1,https://github.com/KishorekumarBS/KWIC-DesignPatterns
Abstract Factory,Abstract-Factory-and-Python,Using Design pattern - Abstract Factory in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Abstract-Factory-and-Python
Abstract Factory,Abstract-Factory-Design-Pattern,Project Example for Abstract Factory Design Pattern,0,0,2022,2022,2,https://github.com/christopher-canenguez/Abstract-Factory-Design-Pattern
Abstract Factory,VR-hardware-abstract-factory,Sample program demonstrating abstract factory design pattern,0,0,2018,2018,0,https://github.com/shad0w-13/VR-hardware-abstract-factory
Abstract Factory,Abstract-Factory-Design-Pattern,Example of using Abstract Factory design pattern,0,0,2019,2019,1,https://github.com/Gayane05/Abstract-Factory-Design-Pattern
Abstract Factory,design-patterns-abstract-factory,POC of a Design Patterns Abstract Factory,0,0,2020,2020,0,https://github.com/guilhermerm-dev/design-patterns-abstract-factory
Abstract Factory,abstract-factory,example of design pattern called abstract factory in typescript,0,0,2021,2022,1,https://github.com/andonary/abstract-factory
Abstract Factory,go_abstract_factory,Example of Abstract Factory design pattern in Go,0,0,2021,2021,1,https://github.com/nicanor-romero/go_abstract_factory
Abstract Factory,AbstractFactoryCSharp,A simple example of how to implement the Abstract Factory design pattern in C#,0,0,2023,2023,1,https://github.com/sean-campbelltech/AbstractFactoryCSharp
Abstract Factory,abstract_factory_example,Simple example of the Abstract Factory design pattern.,0,0,2021,2021,1,https://github.com/pestanadiego/abstract_factory_example
Abstract Factory,AbstractFactoryDesignPattern,This repository shows how to implement Abstract Factory Design Pattern in Spring Boot.,0,0,2020,2020,1,https://github.com/AnkitShah09/AbstractFactoryDesignPattern
Abstract Factory,abstract-factory-api,Api with abstract factory design pattern in node. ,0,0,2023,2023,1,https://github.com/Leotosta/abstract-factory-api
Abstract Factory,Design-Patterns-AbstractFactory,,0,0,2019,2019,1,https://github.com/IamMartinPeek/Design-Patterns-AbstractFactory
Abstract Factory,Design_patterns-AbstractFactory,,0,0,2022,2022,1,https://github.com/LJR001/Design_patterns-AbstractFactory
Abstract Factory,AbstractFactory,An implementation of the Abstract Factory Design Pattern in C++ (includes both Factory Method & Prototype implementations),0,0,2012,2014,1,https://github.com/abrahamkoshy/AbstractFactory
Abstract Factory,DesignPatterns_GoF_Creational_AbstractFactory_Hangman,,0,0,2017,2021,1,https://github.com/PDSW-ECI/DesignPatterns_GoF_Creational_AbstractFactory_Hangman
Abstract Factory,php-design-patterns-abstract-factory,PHP Design Patterns - Abstract Factory Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-abstract-factory
Abstract Factory,Abstract-Factory-Design-Pattern-Example,Java exmaple illustrating Abstract Factory Design Pattern,0,0,2020,2020,1,https://github.com/onkar-sopho/Abstract-Factory-Design-Pattern-Example
Abstract Factory,week2-Assignment-Abstract-Factory,Abstract Factory Design Pattern on Light Bulb,0,0,2021,2021,1,https://github.com/Mykhan12/week2-Assignment-Abstract-Factory
Abstract Factory,Abstract_Factory,Example of the Creational design pattern Abstract Factory in Java.,0,0,2016,2016,1,https://github.com/levyoav/Abstract_Factory
Abstract Factory,Abstract-Factory,Abstract Factory is a type of design pattern in java,0,0,2017,2017,1,https://github.com/abinj/Abstract-Factory
Abstract Factory,design-pattern-abstract-factory,Short example of the design pattern abstract factory,0,0,2021,2021,1,https://github.com/seism0saurus/design-pattern-abstract-factory
Abstract Factory,MarioMakerAbstractFactory,An example of the Abstract Factory design pattern.,0,0,2023,2023,1,https://github.com/emacabrera/MarioMakerAbstractFactory
Abstract Factory,abstract-factory-design-pattern,Example implementation of the abstract factory design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/abstract-factory-design-pattern
Abstract Factory,dragonHeroBattle,Developed with java. Abstract Factory design pattern. ,0,0,2023,2023,1,https://github.com/eylulozatman/dragonHeroBattle
Abstract Factory,abstractfactory,Abstract Factory design pattern example in java,0,0,2025,2025,1,https://github.com/nahidibrahimov/abstractfactory
Abstract Factory,GameCharacters,Test case for Abstract Factory design pattern,0,0,2024,2024,1,https://github.com/Sbedoyab99/GameCharacters
Abstract Factory,ApplePie,Simple implementation of Abstract Factory design pattern.,0,0,2016,2016,1,https://github.com/HonzoBonzo/ApplePie
Abstract Factory,design-pattern-demo,Abstract Factory & Template Method Design Pattern Demo,0,0,2022,2022,1,https://github.com/thinhlh/design-pattern-demo
Abstract Factory,Abstract-FactoryNG2023,Our Abstract-Factory design pattern for Java example,0,0,2023,2024,2,https://github.com/Naythen/Abstract-FactoryNG2023
Abstract Factory,Abstract-factory,Representing the abstract factory design pattern with dishes and chefs.,0,0,2020,2020,1,https://github.com/PatakiKrisztina/Abstract-factory
Abstract Factory,abstract-factory-design-pattern,Abstract Factory Design Pattern in .NET CORE C#,0,0,2018,2018,1,https://github.com/JangirSumit/abstract-factory-design-pattern
Abstract Factory,DESIGN_PATTERN_Abstract_Factory,Source code demo cho Design Pattern Abstract Factory,0,0,2020,2020,1,https://github.com/mirushi/DESIGN_PATTERN_Abstract_Factory
Abstract Factory,pattern-abstract-factory,Projeto em Java aplicando o Design Pattern Abastract Factory,0,0,2021,2021,1,https://github.com/vanessacardoso/pattern-abstract-factory
Abstract Factory,GameEngLab1,"Abstract Factory, Bridge and Proxy design patterns.",0,0,2019,2019,1,https://github.com/dionb112/GameEngLab1
Abstract Factory,abstract-fatory-design-pattern,Abstract Factory design pattern implementation in Java,0,0,2024,2024,1,https://github.com/williamfisher9/abstract-fatory-design-pattern
Abstract Factory,DPAF,Projeto Teste usando Design Patterns – Abstract Factory,0,0,2020,2020,1,https://github.com/fabinhoizzy/DPAF
Abstract Factory,factory-abstract-java,Abstract factory design pattern implementation in Java,0,0,2023,2024,1,https://github.com/xaviertrz/factory-abstract-java
Abstract Factory,abstract-factory-design-pattern,Example code for the abstract factory design pattern,0,0,2022,2022,1,https://github.com/bit-sahti/abstract-factory-design-pattern
Abstract Factory,Design_Pattern,"Creational design patterns: Abstract Factory, Prototype, Builder",0,0,2021,2021,1,https://github.com/AnnDv/Design_Pattern
Abstract Factory,Factory, Design Pattern Factory & Abstract Factory - Example (Java),0,0,2021,2021,1,https://github.com/samehsboui/Factory
Abstract Factory,Abstract-Factory-Design-Pattern-Using-Java,Abstract Factory Design Pattern implented using JAVA ,0,0,2021,2021,1,https://github.com/mainulBUBT/Abstract-Factory-Design-Pattern-Using-Java
Abstract Factory,CS665Assign3,"Design Patterns, SimpleFactory, Abstract Factory, Director, Builder ",0,0,2024,2024,1,https://github.com/jimmyjazz31/CS665Assign3
Abstract Factory,Abstract-Factory,demonstration of a abstract factory design pattern that I took from the https://github.com/iluwatar/java-design-patterns.git repository for educational purpose,0,0,2024,2024,1,https://github.com/na1tto/Abstract-Factory
Abstract Factory,Pizzeria-Abstract-Factory,"Simple program to implement the ""Abstract Factory"" Design Pattern!",0,0,2020,2020,1,https://github.com/multible/Pizzeria-Abstract-Factory
Abstract Factory,abstract_factory_python,An example of abstract factory design pattern in Python,0,0,2021,2021,1,https://github.com/victorhtorres/abstract_factory_python
Abstract Factory,Abstract-Factory-Design-Pattern," This project is an example implementation of the abstract factory design pattern, which is one of the creational design patterns.",0,0,2024,2024,1,https://github.com/AlperTurhann/Abstract-Factory-Design-Pattern
Abstract Factory,abstract-factory-design-pattern,A basic implementation of Abstract Factory Design Pattern,0,0,2018,2019,1,https://github.com/OkanUzun/abstract-factory-design-pattern
Abstract Factory,DesignPatterns-Abstract_Factory,,0,0,2018,2018,0,https://github.com/alansparrow/DesignPatterns-Abstract_Factory
Abstract Factory,DesignPatternsAbstractFactory,,0,0,2020,2020,1,https://github.com/juvetus/DesignPatternsAbstractFactory
Abstract Factory,DesignPatterns_Abstract-Factory,,0,0,2024,2024,1,https://github.com/claudiovdev/DesignPatterns_Abstract-Factory
Abstract Factory,designPatterns,"Exercise: Abstract Factory, Builder, Singleton, Decorator, Facade",0,0,2019,2019,1,https://github.com/alexandrakurek/designPatterns
Abstract Factory,design-patterns,Abstract Factory & Factory method,0,0,2023,2024,1,https://github.com/adfcf/design-patterns
Abstract Factory,design-patterns,Desgin Pattern Abstract Factory,0,0,2024,2024,1,https://github.com/Enzo3322/design-patterns
Abstract Factory,Abstract-Factory,This project is my implementation of the Abstract Factory design pattern.,0,0,2023,2023,1,https://github.com/dawidk09/Abstract-Factory
Abstract Factory,MusicConcertAbstractFactory,Brief and funny study of Abstract Factory Design Pattern,0,0,2020,2020,0,https://github.com/francardoso93/MusicConcertAbstractFactory
Abstract Factory,abstract-factory-design-pattern,Abstract Factory design pattern code - from Derek Banas tutorial,0,0,2023,2023,1,https://github.com/uberkautilya/abstract-factory-design-pattern
Abstract Factory,Abstract-Factory-Pattern,A small example that demonstrates the Abstract Factory design pattern.,0,0,2024,2024,2,https://github.com/tanis36/Abstract-Factory-Pattern
Abstract Factory,Abstract-Factory-Pattern,Abstract Factory Pattern method on C# for design patterns class,0,0,2023,2023,1,https://github.com/HectorLN/Abstract-Factory-Pattern
Abstract Factory,DESIGN_PATTERN_ABSTRACT_FACTORY,LEARNING THE DESIGN PATTERN ABSTRACT FACTORY WITH JAVA CORE ,0,0,2021,2021,1,https://github.com/EdgarEmmanuel/DESIGN_PATTERN_ABSTRACT_FACTORY
Abstract Factory,DesignPatternsCpp,"Composite, Builder, Abstract Factory, Visitor, Prototype Patterns",0,1,2014,2015,0,https://github.com/paumayr/DesignPatternsCpp
Abstract Factory,Abstract-Factory-Pattern,This repo is considered for practising Abstract Factory design pattern,0,0,2024,2024,1,https://github.com/AyanMagerramli/Abstract-Factory-Pattern
Abstract Factory,DesignPatterns,"SOLID, Factory, Abstract Factory design patterns and more!",0,0,2022,2022,1,https://github.com/CostasCF/DesignPatterns
Abstract Factory,AbstractFactoryPatternImplementation,"An implementation of Abstract Factory design pattern, using an example of : sourcemaking.com (Ember and Enginola CPU).",0,0,2018,2018,1,https://github.com/SihemBouhenniche/AbstractFactoryPatternImplementation
Abstract Factory,Abstract-Factory,This is a little garden maker made with abstract factory design pattern.,0,0,2020,2020,2,https://github.com/TrueMohsen/Abstract-Factory
Abstract Factory,car-tuning-abstract-factory-pattern-example,C# - Car tuning abstract factory design pattern example,0,0,2023,2023,1,https://github.com/flcristian/car-tuning-abstract-factory-pattern-example
Abstract Factory,Abstract_Factory_Pattern,https://iamrezwan.com/design-pattern-series-part-2-abstract-factory-pattern,0,0,2018,2018,1,https://github.com/iamrezwan/Abstract_Factory_Pattern
Abstract Factory,abstract-factory-pattern,The implementation of Abstract Factory design pattern in example of widgets.,0,0,2020,2020,1,https://github.com/gevorgmelkumyan/abstract-factory-pattern
Abstract Factory,csharp-abstract-factory,https://www.pluralsight.com/courses/c-sharp-design-patterns-factory-abstract,0,0,2021,2021,1,https://github.com/muhamedkarajic/csharp-abstract-factory
Abstract Factory,abstract-factory-pattern-example-cpp,Simple example of Abstract Factory Design Pattern in C++,0,0,2019,2019,1,https://github.com/grzegorz-grzeda/abstract-factory-pattern-example-cpp
Abstract Factory,abstract-factory,"This is a design pattern study, focused on the Abstract Factory pattern.",0,0,2025,2025,1,https://github.com/allrox/abstract-factory
Abstract Factory,AbstractFactory_Java,This is an example of the implementation of a design pattern Abstract Factory on the programing language Java.☕,0,0,2019,2022,1,https://github.com/victorolave/AbstractFactory_Java
Abstract Factory,abstract-factory-pattern-js,Example of implementing the Abstract Factory Design Pattern in Javascript,0,0,2021,2021,1,https://github.com/marceloribeirosilva/abstract-factory-pattern-js
Abstract Factory,ScalaAbstractFactory,For educational purposes only. Implementation of Abstract Factory Creational Design Pattern,0,0,2024,2024,1,https://github.com/admiral2k/ScalaAbstractFactory
Abstract Factory,Abstract-Factory-Design-Pattern,A project for explain and implement Abstract Factory Design Pattern,0,0,2021,2021,1,https://github.com/Fatihprlg/Abstract-Factory-Design-Pattern
Abstract Factory,DesignPatterns_abstract_factory_pattern,,0,0,2021,2021,1,https://github.com/optimusnguyen/DesignPatterns_abstract_factory_pattern
Abstract Factory,CoursPOOM1,"TD 2 sur les design Pattern, abstract factory",0,0,2015,2015,1,https://github.com/aud04/CoursPOOM1
Abstract Factory,design_lab5,"Scool work, implementation of abstract factory design pattern",0,0,2015,2015,1,https://github.com/DavidNr2/design_lab5
Abstract Factory,BurgerFactory,An example project for Abstract Factory Design Pattern ,0,0,2019,2019,1,https://github.com/MerveYenice/BurgerFactory
Abstract Factory,design-patterns-abstract-factory,Abstract Factory Pattern Sample. ,0,0,2022,2022,1,https://github.com/rockcor0/design-patterns-abstract-factory
Abstract Factory,Evaluation,A java program using Abstract Factory Design Pattern ,0,0,2023,2023,1,https://github.com/monicavaruicu/Evaluation
Abstract Factory,ProjFinalPP,Projeto para exemplificar o Design Pattern Abstract Factory.,0,0,2023,2023,1,https://github.com/Helcius/ProjFinalPP
Abstract Factory,CSCI-2020U-Assignment-1,Game to demonstrate the abstract factory design pattern.,0,0,2022,2022,1,https://github.com/mitchnolte/CSCI-2020U-Assignment-1
Abstract Factory,JavaScript-Design-Patterns,"All Design Patterns with example code - ProtoType Design Pattern, Class design pattern, singleton design pattern, callbacks, factory design pattern, Abstract Factory Design pattern, mixin, modules, design pattern, Modules, Design Pattern",0,0,2019,2019,1,https://github.com/amirkhan064/JavaScript-Design-Patterns
Abstract Factory,Juice_Factory,An example of the Abstract Factory design pattern,0,0,2013,2013,1,https://github.com/randomducks/Juice_Factory
Abstract Factory,exp4,Examples of design patterns: Abstract Factory and Prototype,0,0,2021,2021,2,https://github.com/selab-1400-01/exp4
Abstract Factory,php-abstractfactory-pattern,Implementation of Abstract Factory design pattern with PHP,0,0,2016,2016,1,https://github.com/filipeforattini/php-abstractfactory-pattern
Abstract Factory,Design-Pattern,Projet en design pattern sur les abstract factory,0,0,2017,2017,1,https://github.com/Matthew7526/Design-Pattern
Abstract Factory,Design-patterns-for-dummies,Implementation of common software design patterns <<abstract:factory:>,0,0,2017,2017,2,https://github.com/darvid7/Design-patterns-for-dummies
Abstract Factory,FactoriesPatterns,Abstract Factory and Factory Method Creational Design Patterns,0,0,2018,2019,1,https://github.com/KarimM7mad/FactoriesPatterns
Abstract Factory,Creative-Assignment,Design Patterns Creative Assignment On Abstract Factory Method,0,0,2022,2022,1,https://github.com/SwatiShekokar/Creative-Assignment
Abstract Factory,face-detection,javafx + opencv  + abstract factory design pattern = face detector,0,0,2016,2016,1,https://github.com/robertgyori/face-detection
Abstract Factory,factoryDesignPatterns,Demos for factory and abstract factory design patterns,0,0,2014,2014,1,https://github.com/swollenBrains/factoryDesignPatterns
Abstract Factory,Fabryka-abstrakcyjna-,https://refactoring.guru/pl/design-patterns/abstract-factory,0,0,2023,2023,0,https://github.com/SKP-JAVA-lato-2022/Fabryka-abstrakcyjna-
Abstract Factory,product-creator,Example how to use Design Patterns Abstract Factory,0,0,2023,2023,1,https://github.com/gomeschristopher/product-creator
Abstract Factory,AbstractFactoryPattern,Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.,0,0,2021,2024,1,https://github.com/Iwantmorebugs/AbstractFactoryPattern
Abstract Factory,DesignPatterns,"Creational Design Patterns (Factory, Abstract Factory , Singleton , Builder, Prototype)",0,0,2022,2022,1,https://github.com/shari06/DesignPatterns
Abstract Factory,DesignPatterns,"My templates for Abstract Factory, Adapter, Composite, Command, State",0,0,2018,2018,1,https://github.com/Kropisha/DesignPatterns
Abstract Factory,AppAbstractFactory,Estudos relacionados a C# - Design Patterns: (Abstract Factory Pattern). Projeto Console Application ,0,0,2021,2021,1,https://github.com/JTBCode86/AppAbstractFactory
Abstract Factory,ABAP-Abstract-Factory-Design-Pattern-Template,Basic Template of Abstract Factory Design Pattern in ABAP,0,0,2021,2021,1,https://github.com/aufaraditya/ABAP-Abstract-Factory-Design-Pattern-Template
Abstract Factory,design-patterns-abstract-factory-example,This application contains an example of design pattern abstract factory,0,0,2020,2020,0,https://github.com/guilhermerm-dev/design-patterns-abstract-factory-example
Abstract Factory,abstract_factory_design_pattern_flutter,Abstract Factory Creational Design Pattern in Flutter 19 June 2023,0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/abstract_factory_design_pattern_flutter
Abstract Factory,abstract-factory-conceptual-example,A conceptual example for abstract factory design pattern | Next.js - TypeScript,0,0,2022,2022,1,https://github.com/muhammedkurtulus/abstract-factory-conceptual-example
Abstract Factory,abstract-factory-design-pattern,This project implements a use case of Abstract Factory Design Pattern.,0,0,2024,2024,1,https://github.com/GabrielBortolote/abstract-factory-design-pattern
Abstract Factory,AbstractFactory,"Um exemplo da implementação do Design Pattern Abstract Factory em .net Core 3.1, simulando uma implementação de AutoSocorro, com veículos e guinchos",0,0,2021,2021,1,https://github.com/rafaelraah/AbstractFactory
Abstract Factory,design_patterns,"for techtalk - singleton, factory, abstract factory",0,0,2017,2017,0,https://github.com/jahre/design_patterns
Abstract Factory,Design-Patterns,Singleton; Factory /Abstract Factory; Builder; Repository,0,0,2019,2019,1,https://github.com/chjoaquim/Design-Patterns
Abstract Factory,DesignPatternsAbstractFactoryHandsOn,,0,0,2022,2022,1,https://github.com/kumarij701/DesignPatternsAbstractFactoryHandsOn
Abstract Factory,DesignPatterns,An abstract factory which handles a UML class GroceryProductFactory based,0,0,2024,2024,2,https://github.com/dotMoh/DesignPatterns
Abstract Factory,Humber-Design-Pattern-c-Sharp-Lab3-and-Lab4,"Humber College North campus, Abstract Factory Design Pattern and  Decorator Design Pattern in C#",0,0,2025,2025,1,https://github.com/Gurjit211/Humber-Design-Pattern-c-Sharp-Lab3-and-Lab4
Abstract Factory,abstract-factory-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Abstract Factory em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/abstract-factory-java
Abstract Factory,design-patterns-abstract-factory,Padrão de Projeto - Abstract Factory,0,0,2019,2019,1,https://github.com/kevinPugliese/design-patterns-abstract-factory
Abstract Factory,ShapeColorAbstractFactory,Testing out Abstract Factory Design Pattern by creating shapes with different colors,0,0,2019,2020,0,https://github.com/akhidrb/ShapeColorAbstractFactory
Abstract Factory,DesignPattern-AbstractFactory,"This repository showcases implementations of the Abstract Factory design pattern across multiple programming languages such as C#, Python, JavaScript, Visual Basic, and F#. Each example highlights how to create families of related objects without specifying their concrete classes, providing a clear reference for understanding this design pattern.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-AbstractFactory
Abstract Factory,CGW_.NET_DesignPatterns,"Design Patterns (Abstract Factory, Command, Facade, Double-checked locking)",0,0,2024,2024,1,https://github.com/DianaDykoon/CGW_.NET_DesignPatterns
Abstract Factory,Abstract_Factory,"This repo is for starting to study design patterns in python, specifically the ""Abstract Factory""",0,0,2024,2024,1,https://github.com/D4R102004/Abstract_Factory
Abstract Factory,AbstractFactoryPattern,Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes. Example in C#,0,0,2021,2021,0,https://github.com/paologregorat/AbstractFactoryPattern
Abstract Factory,Abstract-Factory-Design-Pattern,car factory and engine factory has implemented through abstract factory design pattern.,0,0,2023,2023,1,https://github.com/Mechatron00/Abstract-Factory-Design-Pattern
Abstract Factory,UnluckyDraw,Train Abstract Factory Design Pattern by developing this game.,0,0,2019,2019,1,https://github.com/nonnarat21/UnluckyDraw
Abstract Factory,INF4067_TP1,Design pattern : patron de construction ( Factory and Abstract Factory),0,0,2023,2023,1,https://github.com/ousmanelagrange/INF4067_TP1
Abstract Factory,demonstracao_abstract_factory,Código de exemplo utilizado na apresentação do Seminário sobre o Design Pattern: Abstract Factory,0,0,2024,2024,1,https://github.com/GiovaneGrandi/demonstracao_abstract_factory
Abstract Factory,CreationalDesignPatterns,"Singleton, Prototype, Factory, Abstract Factory, Builder",0,0,2020,2021,1,https://github.com/bozburak/CreationalDesignPatterns
Abstract Factory,SpaceInvaders,Space Invaders game using the abstract factory design pattern,0,0,2023,2023,1,https://github.com/daerbevoli/SpaceInvaders
Abstract Factory,Banking-App,Banking Application with Abstract Factory and Composite design pattern,0,0,2023,2023,2,https://github.com/ilaydaozel/Banking-App
Abstract Factory,tutorial-4,Creational Design Pattern: Abstract Factory Pattern and Singleton Pattern.,0,0,2023,2024,2,https://github.com/CSUI-Adpro/tutorial-4
Abstract Factory,FactoryMethodDesignPattern,Applying the abstract factory design pattern on Car famillies ,0,0,2023,2023,1,https://github.com/yacinediaf/FactoryMethodDesignPattern
Abstract Factory,UG-factories-cs,"Design Patterns homework: Simple factory, Factory method, Abstract factory",0,0,2021,2021,1,https://github.com/mrybarczyk/UG-factories-cs
Abstract Factory,factory_dp_typescript,Factory method and Abstract Factory Design Patterns in TypeScript,0,0,2020,2020,1,https://github.com/edkaresli/factory_dp_typescript
Abstract Factory,AFDMR,this is about abstract factory design pattern in python,0,0,2024,2024,1,https://github.com/NaveedAzizi/AFDMR
Abstract Factory,AbstractFactoryPatternWithDI,"Implement abstract factory example in ""http://www.dotnet-tricks.com/Tutorial/designpatterns/4EJN020613-Abstract-Factory-Design-Pattern---C"" with dependency injection",0,0,2013,2013,0,https://github.com/mahiar/AbstractFactoryPatternWithDI
Abstract Factory,JavaDesignPattern,"Java project on design patterns (Abstract Factory, Decorator, Facade)",0,0,2020,2020,1,https://github.com/27maxou27/JavaDesignPattern
Abstract Factory,CreationalDesignPatternsComparison,"Comparison of Abstract Factory, Builder and Prototype design patterns",0,0,2020,2020,1,https://github.com/Pokoi/CreationalDesignPatternsComparison
Abstract Factory,DesignPatterns,"Pizza restaurant dealer applying Factory, Abstract Factory, Builder and Singleton patterns ",0,0,2024,2024,1,https://github.com/ivetmompin/DesignPatterns
Abstract Factory,Design-Patterns,"Decorator, adapter, prototype, factory method, abstract factory",0,0,2017,2017,1,https://github.com/omarushchak/Design-Patterns
Abstract Factory,abstract-factory-design-pattern,This repository is dedicated to exploring and analyzing the Abstract Factory design pattern,0,0,2024,2024,1,https://github.com/BrunoCiprianoDev/abstract-factory-design-pattern
Abstract Factory,Abstract-factory-Design-pattern-,this is a small example for Abstract factory Design pattern  done by me ,0,0,2024,2024,1,https://github.com/DragosBobo/Abstract-factory-Design-pattern-
Abstract Factory,Abstract-Factory-Design-Pattern,"Contains a c# implementation of the Abstract Factory ""Gang of Four"" design pattern.",0,0,2016,2016,1,https://github.com/adrobson/Abstract-Factory-Design-Pattern
Abstract Factory,Abstract-Factory-Design-Pattern,Thsi repo contains the example code for Abstract factory design pattern in JAVA,0,0,2023,2023,1,https://github.com/samarth36483/Abstract-Factory-Design-Pattern
Abstract Factory,HomeTask11-designPatternsAbstractFactory,,0,0,2018,2018,1,https://github.com/vryakala/HomeTask11-designPatternsAbstractFactory
Abstract Factory,2018-03-13-abstract-factory,Sample code for the Melbourne C++ Meetup's Software Design Patterns talks,0,0,2018,2018,2,https://github.com/melbourne-cpp/2018-03-13-abstract-factory
Abstract Factory,Design_Patterns_Abstract_Factory,,0,0,2020,2020,1,https://github.com/formelaanna/Design_Patterns_Abstract_Factory
Abstract Factory,AbstractFactory.DesignPattern,Abstract Factory is a creational design pattern that allows a client to use abstract classes instead of concrete classes to create families of objects.,0,0,2024,2024,1,https://github.com/hcostapuc/AbstractFactory.DesignPattern
Abstract Factory,design-patterns-abstract-factory,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-abstract-factory
Abstract Factory,design-patterns-abstract-factory,,0,0,2022,2023,1,https://github.com/Henderson-da-rocha-porfirio/design-patterns-abstract-factory
Abstract Factory,design-patterns-abstract-factory,,0,0,2021,2021,1,https://github.com/cristianpp/design-patterns-abstract-factory
Abstract Factory,Design_Patterns_Abstract_Factory,,0,0,2022,2022,1,https://github.com/emanuelpms/Design_Patterns_Abstract_Factory
Abstract Factory,design-patterns-abstract-factory,,0,0,2021,2021,1,https://github.com/patrickAbarbosa/design-patterns-abstract-factory
Abstract Factory,DesignPatternsCSharp,"Example of Builder, Abstract Factory, Visitor and Prototype in iterative steps",0,1,2014,2014,0,https://github.com/paumayr/DesignPatternsCSharp
Abstract Factory,Hosting_AbstractFactory_Java,"This is an example of the implementation of a design pattern Abstract Factory on the programing language Java.☕, for a hosting company packages.",0,0,2019,2019,1,https://github.com/victorolave/Hosting_AbstractFactory_Java
Abstract Factory,abstract-factory-design-patterns,,0,0,2021,2021,1,https://github.com/Software-Engineering-Lab-SUT/abstract-factory-design-patterns
Abstract Factory,design-patterns-abstract-factory,,0,0,2017,2017,1,https://github.com/sandy3ind/design-patterns-abstract-factory
Abstract Factory,Design-Patterns-Abstract-Factory,Showing an example of an abstract factory,0,0,2018,2018,1,https://github.com/dstorrence/Design-Patterns-Abstract-Factory
Abstract Factory,Design-Patterns-Abstract-Factory,,0,0,2022,2022,1,https://github.com/juntyme/Design-Patterns-Abstract-Factory
Abstract Factory,Design-Patterns-Abstract-Factory,,0,0,2023,2023,1,https://github.com/roman-lehendzevych-vitech/Design-Patterns-Abstract-Factory
Abstract Factory,DifferenceDesignPatterns,"Abstract factory, Factory Method and Template Method",0,0,2025,2025,1,https://github.com/m-granback/DifferenceDesignPatterns
Abstract Factory,abstract-factory-design-patterns,,0,0,2021,2021,1,https://github.com/Zemiro014/abstract-factory-design-patterns
Abstract Factory,Design-Patterns--Abstract-Factory,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--Abstract-Factory
Abstract Factory,Abstract-Factory-Design-Pattern,This is a sample C# console application project to demonstrate Abstract factory design pattern.,0,0,2019,2019,1,https://github.com/jjeffrin/Abstract-Factory-Design-Pattern
Abstract Factory,creational-design-patterns,Singleton - Prototype - Builder - Abstract Factory - Factory Method,0,0,2024,2024,1,https://github.com/mainProgram/creational-design-patterns
Abstract Factory,design_pattern_abstract_factory,"Develop a system that uses the pattern given in class. ""Abstract Factory"" design pattern.",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_abstract_factory
Abstract Factory,Lab1_DesignPatterns,"An implementation of the abstract factory, bridge and proxy design patterns",0,0,2019,2019,1,https://github.com/MartinFarrell24/Lab1_DesignPatterns
Abstract Factory,Abstract-Factory-Design-Pattern-Example,A small sample project I made to learn the Abstract Factory design pattern.,0,0,2024,2024,1,https://github.com/furkanBilici/Abstract-Factory-Design-Pattern-Example
Abstract Factory,decorator-singleton-abstract-factory-design-patterns,"An example of 3 design patterns in TS - decorator, singleton & abstract factory.",0,0,2022,2024,1,https://github.com/SpinachWings/decorator-singleton-abstract-factory-design-patterns
Abstract Factory,abstract-factory-pattern-application,Aplicação em console colocando em pratica o Design Pattern de Abstract Factory Method em C#,0,0,2021,2021,0,https://github.com/VictorMarri/abstract-factory-pattern-application
Abstract Factory,PizzaStore,Abstract Factory example as seen in head first Design Patterns,0,0,2015,2015,1,https://github.com/sdejonckheere/PizzaStore
Abstract Factory,Columbus-Sailing-Demo,"sailing game using strategy, abstract factory, singleton, & decorator design pattern",0,0,2018,2018,1,https://github.com/rsoliva/Columbus-Sailing-Demo
Abstract Factory,DesignPatterns_WordProcessorExercise,Application of Abstract Factory pattern in a Word Processor refactoring requirement,0,0,2016,2016,1,https://github.com/PDSW-ECI/DesignPatterns_WordProcessorExercise
Abstract Factory,MovieRental,Movie rental console app using the abstract factory design pattern.,0,0,2019,2019,1,https://github.com/SergeiOkon/MovieRental
Abstract Factory,ADTrees,Simple C# project using Visitor and Abstract Factory design patterns,0,0,2020,2020,1,https://github.com/Virus887/ADTrees
Abstract Factory,LiveStock-SE311,"Java based project using design patterns like abstract factory, observer",0,0,2019,2020,3,https://github.com/Mucante/LiveStock-SE311
Abstract Factory,fluentInt-abstractFry-prototype-introduction,"Introdução aos Design Patterns Fluent Interface, Abstract Factory e Prototype",0,0,2020,2023,1,https://github.com/lucasdebeterco/fluentInt-abstractFry-prototype-introduction
Abstract Factory,Solvd-Intern-Project-Homework19,"Design Pattern Factory,Abstract Factory,Builder,Listener and SOLID Principles",0,0,2023,2023,1,https://github.com/Emaya009/Solvd-Intern-Project-Homework19
Abstract Factory,AbtractFactory,API para exemplificação do funcionamento utilizando design pattern abstract factory,0,0,2023,2023,1,https://github.com/AlanEdward19/AbtractFactory
Abstract Factory,FactoryMethodDP,A demo project to explain the abstract factory design pattern,0,0,2023,2023,1,https://github.com/pjacquemin/FactoryMethodDP
Abstract Factory,Design-Patterns-Uppgift-2,"Inlämningsuppgift 2 av Design Patterns (Abstract Factory, Adapter, Facade, StateCommandMemento)",0,0,2022,2022,1,https://github.com/marcusnilss0n/Design-Patterns-Uppgift-2
Abstract Factory,design_patterns,Design patterns from https://github.com/kamranahmedse/design-patterns-for-humans#-abstract-factory implemented in Java.,0,0,2018,2018,1,https://github.com/amirnasiri93/design_patterns
Abstract Factory,GameMaster,"Exercise is creational design patterns, combines abstract factory and builder.",0,0,2015,2015,1,https://github.com/finalnyte/GameMaster
Abstract Factory,Abstract_Factory_Design_Pattern_PHP,Example for unix json and csv writer by Abstract Factory Design Pattern in PHP,0,0,2021,2021,1,https://github.com/ahmadabd/Abstract_Factory_Design_Pattern_PHP
Abstract Factory,0.0111_pizza_station_factory,This is an example of design pattern called Abstract Factory. Based on Head First Design Patterns. ,0,0,2018,2018,1,https://github.com/HellSpawn287/0.0111_pizza_station_factory
Abstract Factory,Factory-Method-and-Abstract-Factory,Factory Method & Abstract Factory design patterns on java in mailer and code generator example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Factory-Method-and-Abstract-Factory
Abstract Factory,Design_Patterns_Project,Factory Method/Abstract Factory Method -> E-Shopping system,0,0,2023,2023,1,https://github.com/MohamedBassem576/Design_Patterns_Project
Abstract Factory,Software-Design-Patterns,"Practice developing Command, Memento and Abstract Factory Patterns",0,0,2021,2023,1,https://github.com/LiamAspell/Software-Design-Patterns
Abstract Factory,Design-Patterns,"Mediator, Composite, Decorator, State, Strategy, Observer, Abstract Factory, SOLID",0,0,2019,2020,1,https://github.com/ozdemiryucel/Design-Patterns
Abstract Factory,designPatterns,"Practising the use of the Abstract Factory, Composite and Observer design patterns in Java.",0,0,2017,2017,1,https://github.com/qngapparat/designPatterns
Abstract Factory,abstract-factory-ui-elements,This project demonstrates the implementation of the Abstract Factory design pattern in Java. The Abstract Factory pattern is a creational design pattern that allows us to produce families of related objects without specifying their concrete classes.,0,0,2024,2024,1,https://github.com/Prachtknaps/abstract-factory-ui-elements
Abstract Factory,Design-Patterns-4---Abstract-Factory,,0,0,2018,2018,1,https://github.com/sakarisson/Design-Patterns-4---Abstract-Factory
Abstract Factory,abstract-factory,Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.,0,0,2022,2022,2,https://github.com/alejandro945/abstract-factory
Abstract Factory,DartDesignPatternsAbstractFactory,サンプル：Dart(Flutter)のデザインパターン「抽象ファクトリ」,0,0,2021,2021,1,https://github.com/rascal9622/DartDesignPatternsAbstractFactory
Abstract Factory,Abstract-Factory,Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.,0,0,2022,2022,1,https://github.com/quynhchi1009/Abstract-Factory
Abstract Factory,Abstract-Factory-Pattern---Design-patterns,,0,0,2024,2024,0,https://github.com/NesrineAG/Abstract-Factory-Pattern---Design-patterns
Abstract Factory,Abstract_Factory_Design_Pattern,In this repo you can find the code related Abstract_Factory_Design_Pattern implementation with pizza store,0,0,2024,2024,1,https://github.com/SOURAV2000GHOSH/Abstract_Factory_Design_Pattern
Abstract Factory,design-patterns-and-algorithms,"Implementation of abstract factory, adapter, façade with TypeScript",0,0,2021,2021,0,https://github.com/Pr1sm0/design-patterns-and-algorithms
Abstract Factory,DesignPatterns-Creational,"Study about creational design patterns such as Singleton, Prototype, Factory, Abstract Factory and Builder",0,0,2019,2019,1,https://github.com/costalopes71/DesignPatterns-Creational
Abstract Factory,DesignPatternsDemo,"Little examples about Abstract Factory, Strategy, Command, Chain of Responsibility and  Observer Design Patterns",0,0,2022,2022,1,https://github.com/elifnurafsar/DesignPatternsDemo
Abstract Factory,Java_Problems,"Java Design Patterns: this module contains java design patterns like Strategy Pattern, Template Pattern, Abstract Factory Pattern",0,0,2022,2022,1,https://github.com/Keita18/Java_Problems
Abstract Factory,abstract-factory-method,"Abstract Factory Design Pattern in PHP An implementation of the Abstract Factory Design Pattern in a Laravel-based application. This project demonstrates creating and presenting different product types (downloadable, physical, and service-based) using abstract factories, ensuring clean separation of concerns and extensibility.",0,0,2024,2024,0,https://github.com/sara-motamedi/abstract-factory-method
Abstract Factory,DiceGame_DesignPattern,"Project samples using design patterns observer, abstract factory, memento, singleton, strategy",0,0,2021,2021,1,https://github.com/carlNOMBO/DiceGame_DesignPattern
Abstract Factory,DesignPatterns-RPNCalculator,"Reverse Polish Notation Calculator using Design Patterns... Command, Memento, State, Strategy, Interpreter,Singleton, Abstract Factory",0,0,2018,2018,1,https://github.com/swaks1/DesignPatterns-RPNCalculator
Abstract Factory,Design-patterns-impl,"Java app implementing design patterns(Memento, singleton, abstract Factory, Strategy, Observer..)",0,0,2020,2021,1,https://github.com/shoussame/Design-patterns-impl
Abstract Factory,Design_Pattern_Task,"Assignment of Abstract Factory, Adapter, Builder Design Patterns and Solid Principles",0,0,2023,2024,1,https://github.com/jerin-priya/Design_Pattern_Task
Abstract Factory,Design-Patterns,Design Patterns - Decorator Pattern - Factory Method - Abstract Factory - 2-tier architecture,0,0,2014,2014,1,https://github.com/LorenzoVanLeeuwaarden/Design-Patterns
Abstract Factory,Design_Patterns_Practice,"""Work on practicing design patterns: Factory Design and Abstract Factory Design""",0,0,2023,2023,1,https://github.com/lbeltran5/Design_Patterns_Practice
Abstract Factory,JAVAFX-MonsterCrush-,"This is a JAVAFX project to practise ""Abstract factory design pattern"".",0,0,2021,2021,1,https://github.com/ilkanmertokul/JAVAFX-MonsterCrush-
Abstract Factory,DesignPatterns,"This repository contain demo implementation of Singleton, Factory, Abstract Factory, Repository, Mediator and CQRS design patterns.",0,0,2023,2023,1,https://github.com/parthivhirani/DesignPatterns
Abstract Factory,DesignPatternsRust,"Algunos patrones de diseño en Rust, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,1,https://github.com/Jonathana1106/DesignPatternsRust
Abstract Factory,CPP_Design_Patterns,"Design Patterns in C++ including observer, abstract factory, factory, composite, iterator",0,0,2020,2020,0,https://github.com/bpostalci/CPP_Design_Patterns
Abstract Factory,patterns-levelup,"Design Patterns: Singleton, Factory, Builder, Abstract Factory, and Prototype; Layering Architecture",0,0,2024,2024,1,https://github.com/clocoyashuv/patterns-levelup
Abstract Factory,CIS566_P1,Project for demonstrating use of Abstract Factory and Singleton Design Patterns,0,0,2020,2020,1,https://github.com/tjrees/CIS566_P1
Abstract Factory,ClassClusterExample,Example of using a class cluster or abstract factory design pattern.,0,0,2014,2014,2,https://github.com/troychmieleski/ClassClusterExample
Abstract Factory,FactoryDP,An implementation of the Factory Method and Abstract Factory design patterns,0,0,2017,2017,1,https://github.com/edkaresli/FactoryDP
Abstract Factory,designpatternJAVA,"Design Pattern that are involving Singleton, Factory, Abstract Factory,Builder,Prototype",0,0,2020,2020,1,https://github.com/WanAzlin/designpatternJAVA
Abstract Factory,banking-application,To fulfill the concept of Abstract Factory Design && Composite Design Pattern,0,0,2023,2023,0,https://github.com/burakkececi/banking-application
Abstract Factory,go-design-patterns,"Creational Patterns - Singleton, Builder, Factory, Prototype, and Abstract Factory Design Patterns",0,0,2023,2023,1,https://github.com/Hudayberdyyev/go-design-patterns
Abstract Factory,java_design_patterns_abstract_factory_pattern,java设计模式_抽象工厂模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_abstract_factory_pattern
Abstract Factory,CSharp-Abstract-Factory,The Abstract Factory design pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes.,0,0,2022,2022,0,https://github.com/melak-cmd/CSharp-Abstract-Factory
Abstract Factory,JavaDesignPatterns,Demonstration of Singleton pattern and Abstract Factory pattern in java,0,0,2024,2024,1,https://github.com/Osayd-ali/JavaDesignPatterns
Abstract Factory,Developersstack-Java-abstract_factory,"Developersstack Course on Abstract Factory Design Pattern: This repository provides an in-depth exploration of the Abstract Factory design pattern with practical examples. It covers pattern implementation, use cases, and best practices, offering a comprehensive guide for developers to enhance their design skills.",0,0,2024,2024,0,https://github.com/ayesh156/Developersstack-Java-abstract_factory
Abstract Factory,DesignPatterns,"Algunos ejemplos de algunos patrones de diseño en C++, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,2,https://github.com/Jonathana1106/DesignPatterns
Abstract Factory,Abstract_Factory_Design_Pattern,Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.,0,0,2021,2021,1,https://github.com/Gehan-Mendis/Abstract_Factory_Design_Pattern
Abstract Factory,DesignPatterns.NET,"Most popular design patterns in C# (.NET). OOP, SOLID, Builder, Factory, Abstract Factory, Prototype, Singleton, Strategy, Observer",0,0,2024,2024,1,https://github.com/bartoszclapinski/DesignPatterns.NET
Abstract Factory,Design-Patterns,"Simple code samples for design patterns like strategy, factory, abstract factory, etc.",0,0,2020,2020,1,https://github.com/AditiKatiyar/Design-Patterns
Abstract Factory,design-patterns,"Java implementation of singleton, abstract factory, adapter, decorator and observer design patterns.",0,0,2025,2025,1,https://github.com/bskracic/design-patterns
Abstract Factory,Abstract-Factory-Design-Pattern-Challenge,A simple java program related to different genres of Hollywood and Bollywood movies implementing the Abstract Factory Design Pattern,0,0,2020,2020,1,https://github.com/onkar-sopho/Abstract-Factory-Design-Pattern-Challenge
Abstract Factory,GameModes,This project is to implement the Abstract Factory design pattern using Java. ,0,1,2022,2022,1,https://github.com/garci1784/GameModes
Abstract Factory,sofe3650-assign1,"Factory Method and Abstract Factory design pattern exploration and implementation, using Java",0,0,2021,2021,2,https://github.com/jesscleish/sofe3650-assign1
Abstract Factory,Restaurant-Menu-Generator,Console based application implementing concept of Abstract factory and factory design pattern,0,0,2015,2015,1,https://github.com/krishvar2003/Restaurant-Menu-Generator
Abstract Factory,learning-java-contacts,CLI interface for managing contacts. Utilizes polymorphism + abstract factory/builder design pattern,0,0,2023,2023,1,https://github.com/sccmckenzie/learning-java-contacts
Abstract Factory,Car_manager,A script for offer cars to customers with abstract factory design pattern,0,0,2024,2024,1,https://github.com/arshi8294/Car_manager
Abstract Factory,FactoryOOP,"Simple Factory, Factory Method And Abstract Factory Design Patterns Head First Book",0,0,2017,2017,1,https://github.com/TomerBu/FactoryOOP
Abstract Factory,Etapa2Atividade3AbstractFactory,"Implementação dos conhecimentos em Design Patterns adquiridos na cadeira de Padrões de Software, ministrada pelo professor João Carlos.",0,0,2021,2021,1,https://github.com/VitorMaverick/Etapa2Atividade3AbstractFactory
Abstract Factory,creational-design-patterns,"[Training Material] Creational design patterns: Builder, Factory, Abstract Factory, Prototype and Singelton",0,0,2018,2018,1,https://github.com/lnrsoft/creational-design-patterns
Abstract Factory,country-viewer-ios,A simple iOS app created to demonstrate the Abstract Factory design pattern,0,0,2022,2022,1,https://github.com/gabrielmoreira-dev/country-viewer-ios
Abstract Factory,universtity_java_multi_db,"University Project - Java with Design Patterns - Abstract Factory, Factory and Decorator - SOLID",0,0,2023,2023,1,https://github.com/joaoangnes/universtity_java_multi_db
Abstract Factory,TrabalhoJavaP2,"Utilizando os design patterns Bridge, Decorator, Abstract Factory, Adapter, Composite, Factory Method",0,0,2013,2013,1,https://github.com/bknupp/TrabalhoJavaP2
Abstract Factory,design-patterns-impementation," Implementation of Abstract Factory, Iterator, Adaptor and Visitor design patterns in Java",0,0,2017,2017,1,https://github.com/BHPriyanka/design-patterns-impementation
Abstract Factory,EmployeePortal,A small project which I implemented factory and abstract factory design patterns,0,0,2018,2019,1,https://github.com/igorkafka/EmployeePortal
Abstract Factory,util,"Contains improved implementations of some design patterns, namely Visitor and Abstract Factory",0,0,2017,2018,1,https://github.com/jean-luc-insset/util
Abstract Factory,designpattern,"this is design pattern by go language, including builder, abstract-factory ,etc.",0,0,2024,2024,1,https://github.com/jenny1779/designpattern
Abstract Factory,AbstactFactory_Pattern,"in this oportunity,  i do a representation about Abstract Factory design pattern",0,0,2017,2017,1,https://github.com/jazb18/AbstactFactory_Pattern
Abstract Factory,JAVA_DesignPattern-GoF-,Java Design Pattern / sigleton pattern / prototype pattern / abstract factory pattern / factory pattern,0,0,2023,2023,1,https://github.com/DevChloee/JAVA_DesignPattern-GoF-
Abstract Factory,SOLID-Principles-And-Design-Patterns-Sample,Abstract Factory - Singleton - Factory Pattern And SOLID Principles Sample,0,0,2022,2022,0,https://github.com/uguryrtsvn/SOLID-Principles-And-Design-Patterns-Sample
Abstract Factory,GroceryStoreAbstractFactory,"This code implements a system for managing grocery products, specifically bananas and oranges, using the Abstract Factory and Factory Method design patterns",0,0,2024,2024,1,https://github.com/sufiyaarab/GroceryStoreAbstractFactory
Abstract Factory,factory-go,Source: https://refactoring.guru/design-patterns/abstract-factory/go/example#example-0,0,0,2022,2022,1,https://github.com/fabiorubim/factory-go
Abstract Factory,Design-Patterns-Abstract-Factory-and-Factory-Method-,,0,0,2024,2024,1,https://github.com/pedromatos2806/Design-Patterns-Abstract-Factory-and-Factory-Method-
Abstract Factory,Abstract-Factory---exemplo-simples,"Este Design Pattern fornece uma interface para criar famílias de objetos, sem espeficar as classes concretas. Isso facilita a manutenção de código.",0,0,2021,2021,1,https://github.com/magnoweege/Abstract-Factory---exemplo-simples
Abstract Factory,AbstractFactoryCharactersDemo,"This repo contains the skeleton code for using the Abstract Factory Design pattern to tie families of features to Character types, and then demonstrates how to avoid class explosion when using AbstractFactory to create new families even when features only differ slightly.",0,2,2024,2024,1,https://github.com/THartmanOfTheRedwoods/AbstractFactoryCharactersDemo
Abstract Factory,n-design-patterns-creational,"Примеры по порождающим шаблонам. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2021,2021,1,https://github.com/humgate/n-design-patterns-creational
Abstract Factory,inf011-abstract-factory,"Desenvolvimento do trabalho solicitado na disciplina de design patterns, para implementação de aplicação baseada em plugins que faça syntax highlight e compile código.",0,0,2021,2021,1,https://github.com/jmslapa/inf011-abstract-factory
Abstract Factory,CS434_M02_DV02_AbstractFactory,"Implementation of the Abstract Factory Pattern as implemented by Baron in ""Hands on Game Development With Unity 2019"" and Gary Woodfine's Abstract Factory Design: https://garywoodfine.com/abstract-factory-design-pattern/",0,0,2020,2020,1,https://github.com/JIARC777/CS434_M02_DV02_AbstractFactory
Abstract Factory,AbstractFactoryInterfacePatternCSharp,"In this repository, you will find concrete implementations of the Abstract Factory and Interface patterns in C#, demonstrating how they can enhance code flexibility, maintainability, and scalability. Find out how to build robust and modular C# applications using a variety of design patterns.",0,0,2024,2024,1,https://github.com/ziggyrafiq/AbstractFactoryInterfacePatternCSharp
Abstract Factory,COS214-PA1,"This practical is to demonstrate various design patterns such as Momento, Prototype, Template Method, Factory and Abstract Factory Design Patterns ",0,0,2023,2023,1,https://github.com/Bigmanfish1/COS214-PA1
Abstract Factory,poc-transformers-strategy,proof of concept of using abstract factory + strategy design patterns in laravel transformers,0,0,2020,2020,0,https://github.com/michalsniezko/poc-transformers-strategy
Abstract Factory,factory,"This repository demonstrates design patterns involving simple factory, factory method and abstract factory",0,0,2021,2021,1,https://github.com/mobir/factory
Abstract Factory,locadora,"Project to practice some design patterns: Facade, Abstract Factory, Singleton and Template Method",0,0,2022,2022,1,https://github.com/luizcantrella/locadora
Abstract Factory,ExtractFactory,A small project playing around with the idea of abstract factory design pattern,0,0,2022,2022,1,https://github.com/MichaeltheWise/ExtractFactory
Abstract Factory,furniture-factory-csharp,Демо абстрактної фабрики - https://refactoring.guru/uk/design-patterns/abstract-factory (по прикладу),0,0,2024,2024,1,https://github.com/arakviel/furniture-factory-csharp
Abstract Factory,vehicle-rental-system,Design a vehicle rental system and implement **Abstract Factory** and **Decorator** design patterns.,0,0,2025,2025,1,https://github.com/ashish-panicker/vehicle-rental-system
Abstract Factory,Wot-x,"World of Tanks Terminal Simulator Try Abstract factory, Singleton, Strategy,Observer Design Pattern",0,0,2015,2015,1,https://github.com/Natgho/Wot-x
Abstract Factory,designpatterns,"Code example for Adapter, Abstract Factory, Factory Method, Iterator and Decorator design patterns.",0,0,2019,2022,2,https://github.com/thekgk/designpatterns
Abstract Factory,GeneticAlgorith_FactoryPatterns,"Genetic Algorithm with Abstract Factory Pattern, Factory Design Pattern, Singleton and Strategy DesignPattern",0,0,2019,2019,1,https://github.com/smotke93/GeneticAlgorith_FactoryPatterns
Abstract Factory,Creational-Design-Pattern,"Abstract Factory, Builder, Factory Method, Prototype and SIngleton creational design pattern in swift",0,0,2018,2018,2,https://github.com/LH17/Creational-Design-Pattern
Abstract Factory,SpaceShipProject,"This project contain Abstract Factory Design Pattern, Inheritance, Interfaces, Abstracrt class and Etc.",0,0,2020,2020,1,https://github.com/yuvalmaimon3/SpaceShipProject
Abstract Factory,Abstracat-Factory-Design-Pattern,Introduction about Abstract Factory Design Pattern and example with code and class diagram. ,0,0,2021,2022,1,https://github.com/devrimfurkan/Abstracat-Factory-Design-Pattern
Abstract Factory,Calculator,"C++ Calculator utilizing the Command, Abstract Factory, Flyweight, and Wrapper Façade design patterns",0,0,2022,2022,1,https://github.com/kylemblack/Calculator
Abstract Factory,LearningFactories,"Neste repositório, aplico os design patterns simple factory, factory method e abstract factory",0,0,2022,2022,1,https://github.com/Leonardo-Lima-Pontes/LearningFactories
Abstract Factory,CS434_M02_P02_AbstractFactoryExtended,"Updated Implementation of the Abstract Factory Pattern as implemented by Baron in ""Hands on Game Development With Unity 2019"" and Gary Woodfine's Abstract Factory Design: https://garywoodfine.com/abstract-factory-design-pattern/",0,0,2020,2020,1,https://github.com/JIARC777/CS434_M02_P02_AbstractFactoryExtended
Abstract Factory,MSD-HW,"Software Development Design Patterns : Iterator Pattern, Visitor Pattern, Factory Pattern, Abstract Factory Pattern",0,0,2017,2017,1,https://github.com/vigneshnadar/MSD-HW
Abstract Factory,Design-Pattern,"A Design pattern project that includes Abstract Factory, Visitor, Observer and Singleton Pattern.",0,0,2019,2020,1,https://github.com/pelinyigit/Design-Pattern
Abstract Factory,QLESSTransportCard,"A sample application implementing Abstract Factory, Factory, and Strategy design patterns using C#.",0,0,2022,2022,1,https://github.com/justinambata/QLESSTransportCard
Abstract Factory,ATM-logic,"Using some good design patterns (state pattern, strategy pattern, abstract factory pattern, etc)",0,0,2015,2015,1,https://github.com/YousMarter/ATM-logic
Abstract Factory,Design-Patterns,Made some design patterns in c++. • implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Abstract Factory design pattern • implement the Prototype design pattern; • implement the Memento pattern; and • integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/Design-Patterns
Abstract Factory,java-patterns-singleton-observer-and-abstract-factory,"This project involves the implementation of three distinct design patterns, specifically the ""Abstract Factory,"" ""Observer,"" and ""Singleton"" patterns in Java.",0,0,2021,2024,1,https://github.com/npateras/java-patterns-singleton-observer-and-abstract-factory
Abstract Factory,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Abstract Factory,design-patterns,"Padrão criacional: Factory method, Abstract factory e Builder.  Padrão estrutural: Brigde.  Padrão comportamental: Chain Of Responsibility.",0,0,2024,2024,1,https://github.com/rafaelzanella27/design-patterns
Abstract Factory,Creational-Design-Patterns,Creational Design Patterns  1.  Factory Method  2.  Abstract Factory  3.  Builder  4.  Prototype  5.  Singleton,0,0,2024,2024,1,https://github.com/Menna-Medhat/Creational-Design-Patterns
Abstract Factory,design_patterns_python,"Implementation of Abstract Factory, Command and Singleton design patterns using flask-based social media website",0,0,2021,2021,1,https://github.com/MDaniyal2000/design_patterns_python
Abstract Factory,design-patterns---builder,"Домашнее задание к занятию 1.1: Порождающие шаблоны. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2022,2022,1,https://github.com/TimurDushanov/design-patterns---builder
Abstract Factory,C_sharp_pluralsight_design_patterns_Factory,Apply Factory and Abstract Factory Pattern with C# by follow Pluralsight course,0,0,2020,2020,1,https://github.com/ahmed-hamdy90/C_sharp_pluralsight_design_patterns_Factory
Abstract Factory,Csharp-Some-Design-Patterns,"Some patterns for C# projects: Abstract Factory, Chain of Responsibility, Decorator, Factory, Observer, Repository.",0,0,2020,2020,1,https://github.com/MaximCastornyi/Csharp-Some-Design-Patterns
Abstract Factory,gof-creational-design-patterns,"Typescript implementation of gang-of-four creational design patterns (factory method, abstract factory, builder)",0,0,2022,2022,1,https://github.com/samlaf/gof-creational-design-patterns
Abstract Factory,factory_pattern,"This project demonstrates Factory Design Pattern & Abstract Factory Design Pattern. Factory Pattern creates varied objects (e.g., ProductFactory), while Abstract Factory manages related objects abstractly. Abstract factories & interfaces unit code, enhancing its reusability & flexibility for producing diverse objects systematically.",0,0,2023,2023,1,https://github.com/BabekBeylerli/factory_pattern
Abstract Factory,design-patterns,"Single responsibility, open closed principle, Liskov substitution, Interface segregation, Dependency Inversion, Adapter and  Factory & Abstract Factory patterns",0,0,2023,2023,2,https://github.com/Antonyfrtz/design-patterns
Abstract Factory,Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento,,0,0,2022,2022,1,https://github.com/ZaraBaghdasaryan/Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento
Abstract Factory,Factory-Pattern-Examples,"Simple C/C++ implementations for Simple Factory, Factory Method and Abstract Factory design patterns.",0,0,2023,2024,1,https://github.com/git03-Nguyen/Factory-Pattern-Examples
Abstract Factory,DesignPatterns,"A collection of examples and use cases of best design patterns and principles (such as the abstract factory method, observer pattern, adapter pattern, dependency injection, etc.)",0,0,2020,2022,2,https://github.com/mrchristensen/DesignPatterns
Abstract Factory,AnimalRace,"Designed and developed a Java Swing application following GOF Design Patterns. Implementation involves Creational Design Patterns - Singleton, Factory method and Abstract Factory; Structural Design Patterns - Decorator; and Behavioral Design Patterns - Strategy and Observer patterns.",0,0,2017,2017,1,https://github.com/pavithravinay/AnimalRace
Abstract Factory,expression-calculator-stack,Stack implementation of an expression calculator using the Command and Abstract Factory design patterns.,0,0,2019,2020,2,https://github.com/peymathi/expression-calculator-stack
Abstract Factory,ExpressionEvaluator-java,"Java Swing Application developed using OOP, Abstract Factory Design Pattern, for evaluating mathematical expressions.",0,1,2018,2018,2,https://github.com/SandeshOnRails/ExpressionEvaluator-java
Abstract Factory,design-patterns-exercises-with-java,Examples including: Mediator & State & Strategy & Observer & Abstract Factory & Decorator & Composite Design Patterns & SOLID principles  ,0,0,2022,2022,1,https://github.com/hasanyeniada/design-patterns-exercises-with-java
Abstract Factory,Abstract-Factory-Method-Design,Abstract Factory design pattern is one of the Creational pattern. Abstract Factory pattern is almost similar to Factory Pattern and is considered as another layer of abstraction over factory pattern.,0,0,2024,2024,0,https://github.com/KAVINDAPIYUMAL/Abstract-Factory-Method-Design
Abstract Factory,Payable_Abstract_Factory_Pattern,"Here, I have tried to make a simple prototype of abstract factory design pattern, where the client code calls the creation methods of a factory object instead of creating products directly.",0,1,2021,2021,1,https://github.com/emowzz/Payable_Abstract_Factory_Pattern
Abstract Factory,Design-Patterns,"Ejemplo sencillo de la implementación del patrón de diseño ""abstract factory"" correspondiente a la categoria creational pattern en java.",0,0,2020,2020,1,https://github.com/jlpinzonr/Design-Patterns
Abstract Factory,design-patterns,"A project to demonstrate the use of various Design Patterns, including Adapter, Abstract Factory Method, Singleton, Composite and more.",0,0,2020,2020,1,https://github.com/karlaugust1/design-patterns
Abstract Factory,Abstract-Factory,"This project demonstrates the Abstract Factory design pattern using a GUI that lets users connect to a Samsung or iPhone device. Depending on the selected device, the application dynamically creates the corresponding interface: Android Auto for Samsung devices and Apple CarPlay for iPhones.",0,0,2024,2024,1,https://github.com/cozmadaniel/Abstract-Factory
Abstract Factory,DesignPatternsGoF,"Solucionar situações utilizando alguns dos Design Patterns mais conhecidos do Gang of Four (GoF), sendo eles: Abstract Factory, Factory, Builder, Bridge, Adapter e Chains of Responsibility",0,0,2024,2024,1,https://github.com/CaueCG/DesignPatternsGoF
Abstract Factory,DesignPattern-AbstractFactory,Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.  In Abstract Factory pattern an interface is responsible for creating a factory of related objects without explicitly specifying their classes. Each generated factory can give the objects as per the Factory pattern.,0,0,2021,2021,1,https://github.com/pankajdhomkar/DesignPattern-AbstractFactory
Abstract Factory,project-patterns," design patterns like these: Abstract Factory, Decorator, Builder, Command, Prototype, Iterator, Bridge, Observer, Composite, Strategy",0,0,2019,2020,1,https://github.com/jhonatheberson/project-patterns
Abstract Factory,LiveStock,"Java based project using design patterns like abstract factory pattern, observer pattern and adapter pattern.",0,0,2020,2020,3,https://github.com/batuhanuzumcu/LiveStock
Abstract Factory,Software-System-Architecture,"Developed a Java application based on following Design Patterns -  Abstract Factory, Strategy and State pattern",0,0,2018,2018,1,https://github.com/rohanj-0606/Software-System-Architecture
Abstract Factory,dcodeh01-3-FishBallStand,"A demo application for practicing design patterns (Factory, Abstract Factory, Singleton), Angular JS and Servlets.",0,0,2017,2017,1,https://github.com/mjtabaya/dcodeh01-3-FishBallStand
Abstract Factory,MockSensorApp,"Academic project with implementation of four different design patterns: Observer, Mediator, Reactor and Abstract Factory",0,0,2019,2019,1,https://github.com/adelindobre/MockSensorApp
Abstract Factory,GasPump,"Gas Pump implementation using MDA-EFSM architectural pattern and (Strategy, Abstract Factory, State) design patterns",0,0,2017,2017,1,https://github.com/harshpatil/GasPump
Abstract Factory,Implementacoes_Design_Patterns_Java,"implementações do Creational Design Patterns em java no caso Factory Method,Abstract Factory,Builder,Prototype é Singleton",0,0,2024,2024,1,https://github.com/willianpireslima/Implementacoes_Design_Patterns_Java
Abstract Factory,temp-design-patterns-custom-implementations,"Star Wars themed Abstract Factory Implementation. ""A long time ago in a compiler far, far away....""",0,0,2024,2024,1,https://github.com/star-3gg/temp-design-patterns-custom-implementations
Abstract Factory,Design-patterns-implementations,"showcases the use of Template,Factory,Abstract Factory,prototype and memento patterns and how to integrate them all together.",0,0,2021,2021,1,https://github.com/ecoryndonbakeruni/Design-patterns-implementations
Abstract Factory,Design-Patterns---JAVA,"Botando em prática os Design Patterns no JAVA (MVC, Abstract Factory, Builder, Factory Method, Singleton, Decorator, Strategy e State)",0,0,2020,2020,0,https://github.com/phbritoo/Design-Patterns---JAVA
Abstract Factory,Electric-Toothbrush-Manufacturing-Quip,"CS 665 software design pattern term project - An enterprise resource planning application. Design pattern used: factory method pattern, singleton pattern, and abstract factory pattern.",0,0,2018,2018,1,https://github.com/henry226/Electric-Toothbrush-Manufacturing-Quip
Abstract Factory,Design_Patterns,"This includes most essential design patterns including singleton, factory, abstract factory, observer, builder, prototype, strategy, template method, adapter, facade, decorator design patterns in java",0,0,2023,2023,1,https://github.com/Ansu-s/Design_Patterns
Abstract Factory,design-patterns-race-game,"A mini race game using the following design patterns: Factory&Abstract Factory, Singleton, Strategy and Template Method Pattern",0,0,2022,2022,1,https://github.com/chiriacbianca/design-patterns-race-game
Abstract Factory,abstract-factory-design-pattern,example of abstract Factory Design pattern : in this example is like of factory you sent to this the name of the windows you want and the job of this pattern to create the tybe of the windows .,0,0,2017,2017,1,https://github.com/aliOsm3n/abstract-factory-design-pattern
Abstract Factory,Abstract-Factory-DP,Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object,0,0,2021,2021,0,https://github.com/Creational-Design-Pattern-ATDev/Abstract-Factory-DP
Abstract Factory,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Abstract Factory,design_patterns,"Shell for DAW application which includes multiple design petterns, such as: abstract factory, singleton, factory method, adapter, decorator, facade, iterator, observer, strategy.",0,0,2023,2024,1,https://github.com/ruslan1us/design_patterns
Abstract Factory,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Abstract Factory,JavaDesignPattern,"This Project illustrates 4 important design patterns in java namely abstract factory ,visitor,iterator,and adapter",0,0,2017,2017,1,https://github.com/chandrimaghosh/JavaDesignPattern
Abstract Factory,KataBunStore,"The Kata for practicing the factory design patterns including Simple Factory, Factory Method and Abstract Factory.",0,0,2013,2013,1,https://github.com/wubin28/KataBunStore
Abstract Factory,FeesCalculator,"In this code we could learn some design patter builder, abstract factory, factory.. strategy design pattern. ",0,0,2017,2017,1,https://github.com/saurabhsharmaj/FeesCalculator
Abstract Factory,design-patterns-tree-based-infix-to-postfix-calculator,"Tree based infix to postfix calculator demonstrating the Command, Abstract Factory, Wrapper Facade software design patterns",0,0,2022,2022,1,https://github.com/winkingcatstudios/design-patterns-tree-based-infix-to-postfix-calculator
Abstract Factory,design-pattern-verifier,Object-oriented design and implementation of annotation framework and a verifier for abstract factory design pattern.,0,0,2019,2019,1,https://github.com/abdullahaleem/design-pattern-verifier
Abstract Factory,Design-Patterns-Java,"Detail implementation of all design patterns in java ( creational(builder , prototype, abstract factory, singleton), structural (decorator, composite, adapter, facade)  and behavioural )",0,0,2025,2025,1,https://github.com/CynthiaAbi03/Design-Patterns-Java
Abstract Factory,design-patterns-examples,"Small projects made to study the use of diferents design patterns.  Some patterns present are: Abstract factory, adapter, builder, decorator, proxy and others.",0,0,2021,2022,1,https://github.com/guihensn/design-patterns-examples
Abstract Factory,Design-Patterns,"A demonstration of how the design patterns work in C#. Here you can find the three design patterns: Factory Method, Abstract Factory, and Singlton. For more information about design patterns have a look at ",0,0,2021,2022,0,https://github.com/Nathnael12/Design-Patterns
Abstract Factory,OOP-Vector-Graphics-Editor-C-,"Simple Vector Graphics Editor constructed with object-oriented programming and a few design patterns (Abstract Factory, Composite).",0,0,2021,2021,1,https://github.com/Yakberry/OOP-Vector-Graphics-Editor-C-
Abstract Factory,simple-gui-builder,"A simple GUI builder application implemented to showcase Adapter, Singleton and Abstract Factory Design Pattern in action.",0,0,2022,2025,0,https://github.com/smmehrab/simple-gui-builder
Abstract Factory,Aquarium,"Aquarium application. Using design pattern(singleton, abstract factory, prototype, listener/observer, decorator, memento,state), MVC and threads",0,1,2018,2018,1,https://github.com/KatrinKroin/Aquarium
Abstract Factory,Blobber,"Blobber game in Java to explore 4 design patterns: Observer, Singleton, Decorator, Abstract Factory during my studies.",0,0,2020,2023,0,https://github.com/TommyQNguyen/Blobber
Abstract Factory,Revis-o-Prova1-LPIII,"Exercícios de revisão para primeira prova de LPIII (Design Patterns, Factory Method, Abstract Factory, Sigleton, Strategy, SOLID).",0,0,2019,2019,1,https://github.com/tlndevelopment/Revis-o-Prova1-LPIII
Abstract Factory,Project1_MicroOffice,Implementation of Abstract Factory pattern and Singleton pattern (Design Patterns) in a Microsoft GUI components testing program,0,0,2024,2024,0,https://github.com/aidilnajmir/Project1_MicroOffice
Abstract Factory,awesomeshop_api-restful_dpc-abstract-factory_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPC (Design Pattern Creational) Abstract Factory, utilizando a linguagem de programação C#.",0,0,2023,2023,0,https://github.com/danieldantasdev/awesomeshop_api-restful_dpc-abstract-factory_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Abstract Factory,Design_Patterns,"Implementation of design patterns (such as builder, abstract factory, decorator, facade, singleton, strategy)  covered with Unit Tests, using .Net Framework 4.6.1 Library and Console projects.",0,0,2020,2020,1,https://github.com/AleksandraRzezniewska/Design_Patterns
Abstract Factory,Animal-Creater-Website,"This project, an example of object-oriented programming in Javascript, was created using the abstract factory design pattern.",0,0,2024,2024,1,https://github.com/AlperTurhann/Animal-Creater-Website
Abstract Factory,ATM-Model-Driven-Architecture-MDA-,"Design three kinds of ATMs with the following OO design patterns: State pattern, Strategy pattern, Abstract factory pattern",0,0,2014,2014,1,https://github.com/tonymiao2012/ATM-Model-Driven-Architecture-MDA-
Abstract Factory,DesignPatternFinalAssignment,"Design Pattern Assignment implemented with strategy,singleton,bridge,mediator,observer,abstract factory,command,composite,chain of responsibility patterns",0,0,2019,2019,1,https://github.com/fahmidf3053/DesignPatternFinalAssignment
Abstract Factory,Transport-Management-System,"Language used: C#, IDE: Visual Studio 2022, Database: SQL Server management studio 19, Architecture used: n-tier architecture, Design pattern: Abstract Factory Design Pattern, Application type: web application",0,0,2024,2024,1,https://github.com/AyeshaMishree/Transport-Management-System
Abstract Factory,CreationalDesignPatterns,"Exploring different design patterns related to the creation of objects in OOP. Specifically, implementing an Abstract Factory, a Builder, a Factory Method, a Prototype and a Singleton",0,0,2022,2022,0,https://github.com/Dutesier/CreationalDesignPatterns
Abstract Factory,Design-Patterns,"Various design patterns I have implemented in Java include: structural patterns like adapter and decorator, creational patterns such as factory, abstract factory, and singleton, and behavioral patterns like template method.",0,0,2024,2024,1,https://github.com/JustMyriiam/Design-Patterns
Abstract Factory,cos214-assignment2,"During this practical assignment you will be required to implement the Abstract Factory, Strategy and State design patterns.",0,0,2019,2022,2,https://github.com/giovannijoubert/cos214-assignment2
Abstract Factory,Design_Patterns_in_Java,"Common software design patterns, including Creational patterns (singleton, abstract factory, builder), Behavioral patterns (strategy, template method), Structural patterns(adapter pattern, decorator pattern) and dependency injection",0,0,2022,2022,1,https://github.com/GuoCong1881/Design_Patterns_in_Java
Abstract Factory,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Abstract Factory,DesignPatternsInModernCPP,"This repository demonstrates Creational, Structural, and Behavioral Design Patterns using traditional and modern C++ features in various examples for learning purposes. Common patterns (Singleton, Factory Method, Abstract Factory, Adapter, Decorator, Composite, Observer, Strategy, Command) are implemented with assistance from the AI tool.",0,0,2024,2024,1,https://github.com/denkhzol/DesignPatternsInModernCPP
Abstract Factory,family-markings,"isTrav: ""a line, figure, or symbol made as an indication or record of something"" ... abstract factory creational design pattern",0,0,2022,2022,1,https://github.com/c-u-l8er/family-markings
Abstract Factory,NUGraduation,"NUGraduation game where students collect points to graduate. Assignment for CSCI 235 class. Design patterns: Abstract Factory, State Patterns.",0,0,2019,2019,1,https://github.com/aidanaimai1/NUGraduation
Abstract Factory,Attack-Tree-With-Object-Oriented-Design,Implementation of Attack Tree with using object-oriented design patterns. Abstract Factory and Visitor patterns were used for implementation.,0,0,2021,2021,1,https://github.com/onurmx/Attack-Tree-With-Object-Oriented-Design
Abstract Factory,Design-Patterns,"This repository contains clear and practical examples of several design patterns implemented in TypeScript, using a Vite application. The design patterns included are: Adapter, Abstract Factory, Builder, Factory Method, Prototype, Singleton, among others.",0,0,2024,2024,1,https://github.com/cristianManco/Design-Patterns
Abstract Factory,Abstracter-eCommerce,Using the design patterns Abstract Factory and Adapter I made one console eCommerce on Java This is one practice ,0,0,2016,2016,0,https://github.com/R0bb0tx/Abstracter-eCommerce
Abstract Factory,three-generative-patterns-Factory-method-Abstract-factory-Builder,"This project showcases the implementation of design patterns: Abstract Factory, Builder, and Prototype.  Features Abstract Factory: Creates different types of furniture (Classic and Modern). Builder: Constructs various computers (Gaming and Office) step by step. Prototype: Enables cloning of car objects.",0,0,2024,2024,1,https://github.com/Mattheuszu/three-generative-patterns-Factory-method-Abstract-factory-Builder
Abstract Factory,Creational-design-patterns,"This repository aims on teaching Builder, Factory and abstract factory, prototype, and singleton patterns. The repository contains bad code and refactored good code using these patterns for cleaner programming practice using Java.",0,0,2024,2024,1,https://github.com/AnirudhHosur/Creational-design-patterns
Abstract Factory,Creational-Design-Patterns,"This provides an overview of a number of creational design patterns including, but not limited to, the Singleton, Factory Method, Abstract Factory, Prototype, and Builder patterns with their approaches  used on my article",0,0,2024,2024,1,https://github.com/cartel360/Creational-Design-Patterns
Abstract Factory,EmployeePortal,"System takes care of employee bonuses. Contains 5 Design  Patterns (singleton , factory ,abstract factory , builder, MVC ) using asp.net MVC.",0,0,2021,2021,1,https://github.com/esraazain/EmployeePortal
Abstract Factory,Duck-Simulator,"A console-based duck simulator following design principles. Implemented design patterns- adapter, decorator, factory, abstract factory, composite, and observer pattern",0,0,2024,2024,1,https://github.com/ShoyebWritesCode/Duck-Simulator
Abstract Factory,Basic-Calculator-Software-Design,"Basic calculator using software design patterns such as abstract factory, composition, template method, visitor, builder, command, wrapper facade, and iterator",0,0,2018,2019,1,https://github.com/Pboruff/Basic-Calculator-Software-Design
Abstract Factory,Factory-Design-Pattern,This is a simple restaurant app for order food using factory design pattern source => Simple Factory => Factory Method => Abstract Factory,0,0,2024,2024,1,https://github.com/dragonblue327/Factory-Design-Pattern
Abstract Factory,DesignPattern_Builder,Builder pattern was introduced to solve some of the problems with Factory and Abstract Factory design patterns when the Object contains a lot of attributes. There are three major issues with Factory and Abstract Factory design patterns when the Object contains a lot of attributes.,0,0,2023,2023,1,https://github.com/Prakashkmr7/DesignPattern_Builder
Abstract Factory,CS434_M04_P03_DecoratorExtended,Implementation of Baron's Decorator Pattern (Hands on Game Development With Unity 2019) refactored to fit into the Abstract Factory based on Gary Woodfine (https://garywoodfine.com/abstract-factory-design-pattern/),0,0,2020,2021,1,https://github.com/JIARC777/CS434_M04_P03_DecoratorExtended
Abstract Factory,SzTT_2.HF,Software Technology and Techniques second homework. Car factory simulation using an abstract factory design pattern as well as a singleton pattern.,0,0,2021,2021,1,https://github.com/GergelyTeszari/SzTT_2.HF
Abstract Factory,computer-shop-,"Small app for browsing  laptops and configuring desktop PC, using back4App as backend  and two design patterns (Abstract factory, Template method)",0,0,2021,2021,1,https://github.com/elroir/computer-shop-
Abstract Factory,Creational-design-patterns-TemplatePattern,"The Abstract Factory defines a Factory Method per product. Each Factory Method encapsulates the new operator and the concrete, platform-specific, product classes. Each ""platform"" is then modeled with a Factory derived class.",0,0,2021,2021,1,https://github.com/sakeeljawfer/Creational-design-patterns-TemplatePattern
Abstract Factory,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Abstract Factory,cpp_projects,"OOP & Algorithms in C++  |  OOP - for course Basics of Object Oriented Design containing also design patterns: Abstract factory, Builder, Singleton, State, Command",0,0,2021,2023,1,https://github.com/JuliePrazakova/cpp_projects
Abstract Factory,creational-design-patterns-blog,"This repository contains code examples for a blog post that explores five fundamental creational design patterns: Factory Method, Abstract Factory, Builder, Prototype, and Singleton. Each pattern is demonstrated with real-world examples in Java, showcasing their practical applications and benefits.",0,0,2024,2024,1,https://github.com/tharindu1998/creational-design-patterns-blog
Abstract Factory,Abstract-Factory-using-Java-Component-desogn-assignment,"Abstract Factory is a creational design pattern also known as Kit. This design pattern provides a way to encapsulate a group of individual factories that have a common theme without specifying their concrete classes. (Freeman, Eric et al. #) In normal usage, the client software creates a concrete implementation of the abstract factory and then uses the generic interface of the factory to create the concrete objects that are part of the theme. The client does not know (or care) which concrete objects it gets from each of these internal factories, since it uses only the generic interfaces of their products. (Freeman, Eric et al. #)156 This pattern separates the details of the implementation of a set of objects from their general usage and relies on object composition, as object creation is implemented in methods exposed in the factory interface.[2] (Freeman, Eric et al. #)162",0,0,2021,2021,1,https://github.com/eyobed7b/Abstract-Factory-using-Java-Component-desogn-assignment
Abstract Factory,Design-Pattern-Project-Of-OOARD-2.0,"I have enhance my OOARD project and apply design patterns on it (Façade, Singleton, Builder, Factory, Abstract Factory and other patterns also included).",0,0,2024,2024,1,https://github.com/Muzamilofficial/Design-Pattern-Project-Of-OOARD-2.0
Abstract Factory,GasPumpSystem,"Used Model driven architecture to design and implement design patterns such as abstract factory, state and strategy to build a Gas Pump system. ",0,0,2017,2017,1,https://github.com/pavithravinay/GasPumpSystem
Abstract Factory,AbstractFabricPatternLesson,"I watched a video on how to apply the abstract factory design pattern I really liked it, I could not resist writing the Code",0,0,2023,2023,1,https://github.com/MikolaChe/AbstractFabricPatternLesson
Abstract Factory,Banking,Java Program that uses Abstract Factory design pattern to create a real world application that calculates interest rate on bank option selected by user,0,0,2021,2021,1,https://github.com/ehsan-code/Banking
Abstract Factory,Car_Rental_Management,"Exercise for design patterns (Singleton, Builder, Factory Method, Abstract Factory; Adapter, Decorator, Facade, Proxy; Iterator, Observer, State, Strategy), clean code, SOLID, DRY, KISS, YAGNI",0,0,2024,2024,2,https://github.com/19pawel970415/Car_Rental_Management
Abstract Factory,Abstrat-Factory,Repositório destinado ao desinvolvimento de uma aplicação que permite alugar meios de transporte. O objetivo é implementar este sistema através do design pattern Abstract Factory.,0,0,2024,2024,1,https://github.com/guihenriqu4/Abstrat-Factory
Abstract Factory,Medieval-Escapade-RPG,"Combined C++, CMake (GoogleTest), Valgrind, and GitHub to code a text-based Role-Playing Game (RPG) that implemented the strategy and abstract factory design pattern.",0,0,2021,2024,4,https://github.com/yeeetfarm/Medieval-Escapade-RPG
Abstract Factory,SuperSmashFactory,"Demonstrates OOP principles of polymorphism, inheritance, abstraction, and encapsulation, as well as the Gamma et. al. software design patterns: Abstract Factory, Template Method, and Adapter",0,0,2019,2019,1,https://github.com/webbdan1/SuperSmashFactory
Abstract Factory,design-pattern-example,"Explore and implement popular design patterns in Java! This repository includes examples of Singleton, Factory, Proxy, Bridge, Prototype, Abstract-Factory, and Proxy patterns with clear explanations and code samples. Perfect for learning and applying design patterns in real-world projects.""",0,0,2024,2024,1,https://github.com/togrul01/design-pattern-example
Abstract Factory,Gourmand-Restaurant-App,"Gourmand is a restaurant management and food ordering app. This repository contains the complete Design Document for the app along with UML artifacts like Domain Model, Design Model, Sequence Diagrams, Activity Diagrams, State Diagrams, Design Patterns (Observer, State, Abstract Factory, Decorator, Composite, Iterator, Template Method, Singleton, Adapter and Proxy). The MVC architecture also has been applied to the design",0,2,2017,2017,1,https://github.com/mohammedshethwala/Gourmand-Restaurant-App
Abstract Factory,Fractales,"Logiciel Java permettant de visualiser deux fractales dans un plan complexe et de ""zoomer/dézoomer"" autant que l'on veut. Réalisé avec le design pattern abstract factory.",0,0,2021,2021,1,https://github.com/boutillier-paul/Fractales
Abstract Factory,SoftwareSystemsArchitecture,"The project is to demonstrate the system architectures. It uses MDA EFSM architectural pattern with various design patterns like state pattern, strategy pattern and abstract factory patterns.",0,0,2017,2017,1,https://github.com/adeshp/SoftwareSystemsArchitecture
Abstract Factory,Assignment-1-Design-Patterns,We would like to use an Abstract Factory to create products for inventory and at the same time set the price of the product. The price of the product is set after the product is created and is read from a database (in this assignment that database can be file of product names and prices.). For setting the price of the product one can use a Factory Method pattern. ,0,0,2021,2021,3,https://github.com/MalaikaS-24/Assignment-1-Design-Patterns
Abstract Factory,Java-SE-Rent-a-car-automation-system,"Using Object orianted design patterns and Java Swing creating desktop application for Car rental companies. Patterns which are used are Strategy , Singeleton , Factory , Decorator , MVC , Templete , Abstract Factory",0,0,2021,2021,1,https://github.com/tolgahaninan/Java-SE-Rent-a-car-automation-system
Abstract Factory,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Abstract Factory,Design-Pattern-Back-End,"An application which allow the client to command a pizza. This application is built using four design patterns which are Observer pattern, Adapter pattern, Abstract Factory pattern and Dependency Injection.",0,0,2022,2022,1,https://github.com/AmineLhb/Design-Pattern-Back-End
Abstract Factory,ZooProject,"Zoo project – zoo with the possibility of feeding animals by type, with emphasis on the following design patterns: Thread Pool, Decorator, Abstract Factory, Prototype, Memento, Observer and Singleton. Written in Java.",0,0,2018,2018,1,https://github.com/ha1m/ZooProject
Abstract Factory,password_cracker,Un crackeur de mot de passe ecrit en Java utilisant l'attaque par force brute et l'attaque par dictionnaire . Le programme est fait en utilisant le design pattern Abstract Factory,0,0,2024,2024,0,https://github.com/cheikhteej/password_cracker
Abstract Factory,214-prac3,"This repository contains the code for Software Modelling (2nd Year) Practical 3. The project integrates four key design patterns: Abstract Factory, Strategy, Memento, and Composite, into a unified and functional codebase.",0,0,2024,2024,2,https://github.com/thendombedzi/214-prac3
Abstract Factory,cars-advanced,An application utilizing basic design patterns such as the abstract factory and builder. The service includes sample methods implemented within the Stream API. The project is modularly built using the Maven tool.,0,0,2023,2023,1,https://github.com/suplicjusz/cars-advanced
Abstract Factory,abstruct-factory-design-pattren,A demonstration of the Abstract Factory design pattern using a furniture store example. This project showcases how to create families of related objects (Modern and Victorian furniture) without specifying their concrete classes.,0,0,2025,2025,1,https://github.com/eric-muganga/abstruct-factory-design-pattren
Abstract Factory,https-github.com-ingasanchez-HeyURLChallengeFSL,"This is a Challenge about a URL Shorten Web Pagedeveloped using ASP.Net, MVC Model, MSSQL Server Database and Abstract Factory Design Pattern for the data layer. Also includes NUnit for some tests. ",0,0,2022,2022,1,https://github.com/ingasanchez/https-github.com-ingasanchez-HeyURLChallengeFSL
Abstract Factory,ATM-Machine,Design and Implemention of two ACCOUNT components using the Model Driven Architecture - Extended Finite State Machine(MDA-EFSM).  Implemention of the following OO design patterns in the design:  • state pattern • strategy pattern • abstract factory pattern,0,1,2016,2016,1,https://github.com/anand700/ATM-Machine
Abstract Factory,RestaurantMenuBuilder,"**Restaurant Menu Builder Project**: A Java application that utilizes design patterns (Abstract Factory, Builder, and Factory Method) to dynamically generate and display seasonal restaurant menus, including entrees, main courses, desserts, and drinks, organized by season.",0,0,2024,2024,1,https://github.com/GurnoorKaur1/RestaurantMenuBuilder
Abstract Factory,FEUP-LPOO,"Developed in Java as a text-based game using the Lanterna Library. Later, the Swing Framework was used to provided a better graphical interface.  Implementation of several Design Patterns as the Abstract Factory, Object Pool, etc.",0,1,2019,2019,1,https://github.com/mafaldasantos10/FEUP-LPOO
Abstract Factory,Selenium4-UI-API,"This is a Sample UI & API testing automation framework with Selenium using OOP concepts and various creational design patterns like the Factory method pattern, Singleton pattern, Abstract factory pattern, Page object model pattern,Service object model pattern.",0,0,2024,2024,1,https://github.com/charithananayakkara7/Selenium4-UI-API
Abstract Factory,Bank-Accounts---Model-Driven-Architecture,"Designed two different bank account components using Model-Driven Architecture. Used UML to depict the architecture and design. Implemented the design using Object-Oriented Design Patterns like Decentralized State pattern, Abstract Factory pattern, Strategy pattern in Java.",0,0,2016,2016,1,https://github.com/skallaje/Bank-Accounts---Model-Driven-Architecture
Abstract Factory,Generic-Planner,Developed a Generic Planner which implements the 'Abstract Factory' design pattern with the A* search algorithm in order to produce a sequence of actions from an initial state to a goal state for a variety of problems.,0,0,2021,2021,1,https://github.com/danaebantana/Generic-Planner
Abstract Factory,DotNetExampleHub,"A comprehensive collection of .NET examples covering unit and integration testing, architectural principles, REST and minimal APIs, design patterns (strategy, abstract factory, singleton), dependency injection, configuration, logging, clean architecture, vertical slice architecture, microservices, and more. Perfect for learning or reference.",0,0,2024,2025,1,https://github.com/ivangajicc/DotNetExampleHub
Abstract Factory,Weather-Monitor,"Weather Monitor for key areas in Melbourne. Application consumes two SOAP web services. Written in JavaFX, and uses some key design patterns and principles (e.g Abstract Factory, Abstract server, Adapter pattern, Observer pattern open-closed principle, Dependency inversion, etc.)",0,0,2017,2024,2,https://github.com/gwom5/Weather-Monitor
Abstract Factory,CSCI_3081_Drone_Delivery_Simulation,"Drone Delivery Simulation project. Template simulation was provided by faculty, my team and I added functionality, utilizing design patterns such as a decorator, factories, abstract factories, singleton, etc. Most relevant source code that we implemented is found in libs/transit/src/",0,0,2024,2024,1,https://github.com/MJSpilane/CSCI_3081_Drone_Delivery_Simulation
Abstract Factory,Java-Single-Music-Player,"A music player simulator inspired by platforms like Spotify or YouTube Music.  Written in Java and using design patterns like Singleton for the music player entity, Abstract Factory for creating Playlists, Observer for user subscriptions to playlists, Repository for storing information.",0,0,2025,2025,1,https://github.com/XhuaSpy/Java-Single-Music-Player
Abstract Factory,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Abstract Factory,MazeGame,"In this Project, I created a simple maze game. There are three folders. MazeLab is a simple game. The other two folders contains maze game but has more features and I used factory method and abstract factory method design pattern using Java. ",0,0,2017,2017,1,https://github.com/pratikshekhar/MazeGame
Abstract Factory,sadp_assignment_2,This Java program has been designed to assess graphical user interfaces (GUIs) across different generations of Word Processing Applications developed by MicroOffice. The program leverages the Abstract Factory and Singleton design patterns to manage the creation of GUI components specific to each Word generation.,0,0,2023,2023,0,https://github.com/rchavan1998/sadp_assignment_2
Abstract Factory,IT-Equipment-Purchasing-Console-Application,"An application where user can make individual/mass IT equipment purchase (laptop, monitor plus randomly generated accessories) based on the type(gaming/office) that is chosen by the user. The project used various data structures(hashtable, dictionary, queue, list, array) and design patterns(abstract factory, factory, flyweight, singleton, facade).",0,0,2022,2022,1,https://github.com/simulbista/IT-Equipment-Purchasing-Console-Application
Abstract Factory,Online-Marketplace,"The main objective of this project is to implement a software design pattern and framework to create an online marketplace. Following software design patterns were used for the implementation purpose: Abstract Factory, Command, Front Controller, Role Based Access Control, Authorization, Proxy, Reflection, Monitor Object, Future, Guarded Suspension, Scope Locking, Thread-Safe Interface. Additionally, I will make use of Java Annotation to perform Role Based Access Control and MySQL for Database related tasks. To maintain several versions of the project I'm making use of Github environment. I have made use of Agile Methodologies through out in the project.",0,0,2018,2018,1,https://github.com/anushkaaaa/Online-Marketplace
Abstract Factory,Singleton-Desing-Pattern-in-CSharp,"Singleton Pattern belongs to Creational type pattern. Gang of four(GOF) have defined five design patterns that belongs to creational design type category. Singleton is one among them and the rest are Factory, Abstract Factory, Builder and Prototype patterns. As the name implies, creational design type deals with object creation mechanisms. Basically, to simplify this, creational pattern explain us the creation of objects in a manner suitable to a given situation.",0,0,2019,2019,1,https://github.com/pradeept95/Singleton-Desing-Pattern-in-CSharp
Abstract Factory,Gas-Pump,"The goal of the project is to design two Gas Pump components using the Model Driven Architecture (MDA) and then implement these Gas Pump components based on this design using the OO programming language. In this project I have implemented the following OO design patterns: State pattern, Strategy pattern and Abstract Factory pattern. Upon Activate() the data is stored in respective database based on the parameters .The execution commences after the START state where the mode of payment is selected , the type of gas is selected based on the menu displayed .Once the selection is done Gas Pump is started and desired amount of gas is pumped out if payment is successful. The user has been provided with two choices upon stopping of the pump whether to print the receipt or not.",0,0,2018,2018,1,https://github.com/KomalParchand/Gas-Pump
Builder,design_patterns_in_typescript,:triangular_ruler: Design pattern implementations in TypeScript,5272,763,2013,2025,8,https://github.com/torokmark/design_patterns_in_typescript
Builder,Leopard,"Provide a HTTP request thread safety to satisfy daily needs package Library, the underlying the Retrofit + Okhttp + RxJava support, by building builder design pattern implementation. Current POST and GET (support custom header files, form the key value of the request, the custom data sources such as basic request), file upload management (support single file upload and file upload, do not restrict the file type), file download manager (support single file download with multiple files to download, do not restrict the file type, support large file download and breakpoint download)",179,44,2016,2024,3,https://github.com/sivenwu/Leopard
Builder,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Builder,JTelegramBot,JTelegramBot is a Java library that wraps Telegram Bot API with a simpler API using Builder design pattern,71,23,2016,2025,1,https://github.com/Eng-Fouad/JTelegramBot
Builder,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Builder,spec-pattern,Specification design pattern for JavaScript and TypeScript with bonus classes,59,4,2018,2025,3,https://github.com/thiagodp/spec-pattern
Builder,okdp,A design pattern library developed in modern c++.,54,17,2020,2025,2,https://github.com/lkimuk/okdp
Builder,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Builder,design-patterns-in-angular,Deprecated | new project: https://github.com/Itchimonji/design-patterns-in-typescript,40,15,2020,2025,0,https://github.com/Itchimonji/design-patterns-in-angular
Builder,dotnet-design-patterns-samples,The samples of .NET design patterns,37,11,2017,2025,2,https://github.com/AliakseiFutryn/dotnet-design-patterns-samples
Builder,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Builder,DesignPatterns_TypeScript,typescript版设计模式,31,9,2019,2024,2,https://github.com/jacksplwxy/DesignPatterns_TypeScript
Builder,Swift-Builder,Design Patterns in Swift: Builder,24,2,2016,2025,1,https://github.com/kingreza/Swift-Builder
Builder,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Builder,shapeless-builder,Scala case class builder design pattern using Miles Sabin's shapeless library,23,3,2013,2024,1,https://github.com/harveywi/shapeless-builder
Builder,ExcelWizard,"Easily generate Excel file in a simple and very straightforward way, even without any Excel knowledge. In addition, make the generated Excel file directly downloadable from Browser without any hassle in case of using the Blazor application. The package is built using builder design pattern.",21,5,2022,2024,3,https://github.com/farshaddavoudi/ExcelWizard
Builder,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Builder,flutter-mvvm-arch,"Clean Architecture Design Pattern MVVM - Model - View - View Model Pattern ViewModel Inputs and Outputs Base ViewModel and Base UseCase Application Layer - Dependency Injection, Routes Manager and Application class Application Layer - Extensions and Shared Functions Data Layer - Data Sources (Remote Data Source/ Local Data Source) Data Layer - API Service Client (Same as Retorfit in Android) Data Layer - Calling APIs (Remote Data Source) Data Layer - Adding Logger Interceptor Data Layer - Caching APIs responses (Local Data Source) Data Layer - Json Serialization and Annotations Data Layer - Repository Implementation Data Layer - Mapper (Converting responses into Models) Data Layer - Mapper (Using toDomain Concept) Data Layer - Applying Null Safety Data Layer - Creating Mock APIs (Stub APIs) Domain Layer - Models Domain Layer - Repository Interfaces Domain Layer - UseCases Domain Layer - Either Concepts (Left - Failure) / (Right - Success) Domain Layer - Data Classes Presentation Layer - UI (Splash - Onboarding - Login - Register - Forgot Password - Main - Details - Settings - Notification - Search)) Presentation Layer - State Renderer (Full Screen States - Popup States) Presentation Layer - State Management (Stream Controller - RX Dart - Stream Builder) Presentation Layer - Localisations (English - Arabic), (RTL - LTR) Presentation Layer - Assets Manager (Android and Ios Icons and Images sizes) Presentation Layer - (Fonts - Styles - Themes - Strings - Values - Colors) Managers Presentation Layer - Using Json Animations Presentation Layer - Using SVG images Using 18 Flutter Packages Getting Device Info (Android - Ios) Using Abstract classes",17,3,2022,2024,1,https://github.com/Ahmedabdelalem61/flutter-mvvm-arch
Builder,youtube_DesignPatterns_Builder,,16,5,2022,2025,1,https://github.com/salihcantekin/youtube_DesignPatterns_Builder
Builder,Builder-Design-Pattern,Builder Design Pattern,16,0,2018,2024,2,https://github.com/akshayblevel/Builder-Design-Pattern
Builder,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Builder,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Builder,TestAutomationFramework_UDEMY_OC_Web_Selenium_Java_V2,"Automation Testing | Web+API | Java | Selenium WebDriver | RestAssured | OOPS (Inheritance, Polymorphism, Abstraction, Encapsulation)| TestNG | Maven | Allure Reports | Design Patterns (Page Object Model, Singleton, Fluent, Builder) | Jenkins | Data-Driven Testing using JSON file",11,9,2022,2024,1,https://github.com/rajatt95/TestAutomationFramework_UDEMY_OC_Web_Selenium_Java_V2
Builder,php-builders,sample php traits to add ability to use builder design patterns with easy in PHP applications,11,1,2025,2025,1,https://github.com/omaralalwi/php-builders
Builder,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Builder,URLShortener,Url shortener written in python flask with builder design pattern,9,1,2020,2022,2,https://github.com/gkydev/URLShortener
Builder,actions-builder-patterns-nodejs,Common design patterns for Actions Builder,8,2,2020,2021,2,https://github.com/actions-on-google/actions-builder-patterns-nodejs
Builder,Desing_Patterns,"In this project, i will explain DesignPatterns.I will explain how many way we have design pattern. ",8,0,2021,2022,1,https://github.com/SongulSYTRK/Desing_Patterns
Builder,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Builder,inventory-management-system,JavaFX app which implements various design patterns and oop principles.,7,0,2024,2025,1,https://github.com/yaeby/inventory-management-system
Builder,better-business-logic-with-typescript,"The repository will provide examples on how to use and implement design patterns (like Composite, Builder, Template Method and others) using Typescript. The repository will demonstrate code reuse strategies and extensibility techniques for building robust Angular Services and Business Logic.  The repository will demonstrate how to implement shared Angular services and how to use them in Angular domain services. The services will include rich business logic layers that use the angular-rules-engine and angular-actions NPM packages.",7,0,2017,2021,1,https://github.com/buildmotion/better-business-logic-with-typescript
Builder,ComposeBuilderDotNet,Generate Docker-Compose files in C# using the popular builder design pattern,6,6,2019,2024,2,https://github.com/ddolyniuk1/ComposeBuilderDotNet
Builder,Software-Architecture-Assignment," Software Architecture and Design 1st assignment, Builder Design Pattern and Adapter Design pattern.",6,0,2020,2020,1,https://github.com/aatakanakman/Software-Architecture-Assignment
Builder,golang-design-patterns,This repository provides a comprehensive collection of design patterns implemented in Go (Golang). It serves as a practical guide to understanding and applying common software design patterns in real-world Golang projects. ,6,0,2024,2024,1,https://github.com/Beretta350/golang-design-patterns
Builder,Builgen-plugin,Builgen plugin for eclipse and idea.Generate code for Java bean builder design pattern.,5,8,2017,2020,2,https://github.com/clyoudu/Builgen-plugin
Builder,BuilderDesignPatternDemo,Builder Design Pattern in ASP.NET Core - Demo Project for a blog post available at https://www.ezzylearning.net/tutorial/builder-design-pattern-in-asp-net-core,5,2,2021,2023,1,https://github.com/ezzylearning/BuilderDesignPatternDemo
Builder,typescript_design_patterns,Implementations of design patterns (GOF) in Typescript,5,0,2018,2022,1,https://github.com/Uncleseneca/typescript_design_patterns
Builder,CreationalDesignPatternsSample,"Including Builder, Factory method, Abstract Factory, Prototype and Singleton",5,0,2020,2023,1,https://github.com/ZahraHeydari/CreationalDesignPatternsSample
Builder,OpenGL-Common-Design-Patterns,"Using OpenGL to demonstrate the use of common design patterns such as Abstract Factory, Builder, Singleton, and Pointer to Implementation (PIMPL)",5,0,2017,2023,1,https://github.com/efryscok/OpenGL-Common-Design-Patterns
Builder,ExternalAPIRequest,Salesforce External Callout Helper leveraging the Builder Design Pattern,4,0,2023,2024,1,https://github.com/evan-hyer/ExternalAPIRequest
Builder,design-patterns-builder,,4,0,2023,2024,1,https://github.com/AgostinoArcadi/design-patterns-builder
Builder,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Builder,Builder-Pattern,Builder pattern was introduced to solve some of the problems with Factory and Abstract Factory design patterns when the Object contains a lot of attributes.  There are three major issues with Factory and Abstract Factory design patterns when the Object contains a lot of attributes.,4,0,2018,2023,1,https://github.com/Design-pattrns/Builder-Pattern
Builder,Creational-Design-Pattern-In-Programming,"Tell you about 5 sample in creational design pattern: Factory Method, Abstract Method, Singleton, Builder & Prototype",4,0,2022,2023,1,https://github.com/Phong-Kaster/Creational-Design-Pattern-In-Programming
Builder,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Builder,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Builder,design-pattern-builder,Here I am with my another article on design patterns - Builder Design Pattern. A very useful creational design pattern that lets us construct complex objects step by step.,3,3,2020,2023,1,https://github.com/BrijeshSaxena/design-pattern-builder
Builder,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Builder,builder,Android builder design pattern,3,0,2022,2025,1,https://github.com/bijondev/builder
Builder,DesignPatterns,"Design patterns learning course for C#. Creational Patterns. Singleton, Prototype, Builder, Factory Method, Abstract Factory.",3,0,2019,2024,1,https://github.com/arsentd/DesignPatterns
Builder,builder-pattern-in-react,An example of Creational Design Pattern for Builder Pattern in React,3,0,2023,2024,1,https://github.com/muhamadzolfaghari/builder-pattern-in-react
Builder,Design-patterns---Builder,,3,0,2023,2024,1,https://github.com/samisaud95/Design-patterns---Builder
Builder,TypescriptDesignPattern,"Design pattern may improve your project better, reduce redundant code, make it reusable and maintainable.",3,1,2017,2024,1,https://github.com/Aumeeb/TypescriptDesignPattern
Builder,Design-Patterns-Builder-Prototype-Singleton,,3,0,2021,2021,1,https://github.com/AmiraslanSumgait/Design-Patterns-Builder-Prototype-Singleton
Builder,design-patterns,"Creational design patterns in C#: Abstract Factory, Builder, Factory, Factory Method, Object-Pool, Prototype, Singleton.",3,1,2023,2024,1,https://github.com/cenkerkumlucali/design-patterns
Builder,DesignPattern.Creational.BuilderPattern,I have prepared an example of organizing calculations over a single point using the Builder Design Pattern in an application with a subscription system.,3,0,2021,2021,1,https://github.com/gsmtcnr/DesignPattern.Creational.BuilderPattern
Builder,Design-Patterns,Bu repoda Yazılım Tasarımı ve Mimarisi dersi ile paralel yürüttüğüm Desing Patterns ile ilgili çalışmalarım ve patternslar ile ilgili notlarım bulunmaktadır.,3,0,2021,2023,1,https://github.com/emirhandogandemir/Design-Patterns
Builder,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Builder,BlogApi,"This is project, use ASP .Net Core, Web api and N tier architecture.I use nine layer architecture so layers name are Business,DAL,Entities,Dto,Repository,Tools,UI and Web Api.Also ı used Entity Framework Code first,Repository Pattern,Builder Design Pattern and Adapter Design Pattern. Self reference comment, search, Json Web Token,Nlog logs, Fluent Validations and Auto Mapper operations.",3,0,2020,2023,1,https://github.com/YasinKalender/BlogApi
Builder,keyware," • Designed the Technical specs of software by building class diagram, sequence & state diagram using UML and used Model View Control Design Pattern • Implemented the database of the application by using flat files to store the data of user’s account. • Designed user-friendly interface of password manager by using Scene Builder in JavaFX. Contributors 1. Mohit Sonwane 2. Patrick Chau 3. Oliver Mancebo 4. Artharv Mangal",3,0,2022,2024,1,https://github.com/sonwamoh/keyware
Builder,BuilderExample,An example of the Builder design pattern,2,15,2014,2020,1,https://github.com/csc301-fall2014/BuilderExample
Builder,BuilderPattern,Builder design pattern in Java,2,0,2017,2020,1,https://github.com/artik00/BuilderPattern
Builder,pluploader_builder,used builder design pattern,2,0,2019,2023,0,https://github.com/polycompo/pluploader_builder
Builder,Design-Patterns,C# Design Patterns,2,0,2023,2024,1,https://github.com/Faris-Abuali/Design-Patterns
Builder,VIPER-Module-Builder,Custom VIPER design pattern builder script,2,0,2022,2023,1,https://github.com/darkbringer1/VIPER-Module-Builder
Builder,Builder-Design-Pattern,Proceed to the next Design Pattern,2,0,2022,2022,2,https://github.com/Dev-Taha/Builder-Design-Pattern
Builder,url-builder,A URL Builder using the builder design pattern,2,0,2023,2024,1,https://github.com/TheLe0/url-builder
Builder,DesignPatterns,https://www.dofactory.com/net/builder-design-pattern,2,0,2020,2023,1,https://github.com/sdilsiz/DesignPatterns
Builder,design-patterns,Examples for design patterns,2,1,2022,2024,1,https://github.com/Jovidon/design-patterns
Builder,PhpDesignPatterns-Builder,Builder,2,0,2018,2024,1,https://github.com/Jagepard/PhpDesignPatterns-Builder
Builder,classified_draft_builder,"Building ""sahibinden.com Classified Draft Object"" with Builder Design Pattern",2,0,2020,2021,1,https://github.com/batux/classified_draft_builder
Builder,AhmetButton,"Custom Button ,Ripple Effect, Shadow Effect, Builder Design Pattern",2,0,2021,2022,1,https://github.com/bybozyurt/AhmetButton
Builder,DesignPatterns,"Some design patterns (Singleton, Simple and Abstract Factory, Builder, Facade, Adapter, Chain of Responsibility, Mediator) examples written in C#",2,0,2018,2024,1,https://github.com/alexandra-valkova/DesignPatterns
Builder,design-patterns-examples,"Simple examples of the builder, factory method, singleton and iterator design patterns.",2,0,2022,2024,1,https://github.com/jmj0502/design-patterns-examples
Builder,design-patterns-builder-facade-factory-etc..,,2,0,2023,2024,1,https://github.com/mgunawardhana/design-patterns-builder-facade-factory-etc..
Builder,Cleaning-Management,"Robot vacuum simulator, usage of Abstract Factory, Builder, Singleton and Observer design patterns.",2,0,2017,2017,1,https://github.com/irenexychen/Cleaning-Management
Builder,iDB,Promises based SQL-like abstraction library for indexedDB using the builder design pattern.,2,0,2016,2018,1,https://github.com/DanRuta/iDB
Builder,DesignPattern,"Design pattern ""Gang of Four"" : Proxy, Composite, Decorator, Strategy, Observer, Adapter, Builder, Factory, FactoryAbstract.",2,0,2021,2021,1,https://github.com/belaid1993/DesignPattern
Builder,Pizza-Maker,An android app to test out a couple of stuffs:Java's Builder Design Pattern ,2,1,2015,2016,1,https://github.com/LiewJunTung/Pizza-Maker
Builder,banking-management-web-app,"System management web application for online banking using Next JS & Tailwind CSS, Spring Boot, Entity Framework, PostgreSQL, Lombok and Builder Design Patterns.",2,1,2023,2024,5,https://github.com/codewithaltin/banking-management-web-app
Builder,Fruit-ninja,"It is a single player game in which player slices fruits with a blade controlled by mouse swipes. GUI created using javafx libraries and Scene builder, Timers, Animation and Audio. Design Patterns are used.",2,0,2019,2023,4,https://github.com/MahmoudElkarargy/Fruit-ninja
Builder,medical_clinic_system_SW,"A Java-based desktop application designed to manage patient records, doctor schedules, and appointments. This system utilizes multiple design patterns, including Singleton, Factory, Builder, Adapter, Proxy, and Prototype, ensuring scalability, maintainability, and code reusability.",2,0,2024,2025,1,https://github.com/mohamedmagdy2301/medical_clinic_system_SW
Builder,MVVMRB,"MVVM+RB is a design pattern framework. The name MVVM+RB is short for Model, View, ViewModel, Router, and Builder which are core components of this architecture. This framework is designed for mobile apps with a large number of engineers and nested states.",2,0,2020,2023,2,https://github.com/olxgroup-oss/MVVMRB
Builder,Pharmacy-Management-System,"I've developed a Spring Boot application with Thymeleaf, incorporating all the SOLID Principles alongside four key Design Patterns: Factory, Singleton, Builder, and Adapter. This project boasts several standout features, such as dual ports dedicated to administration and customer interactions, among other functionalities.",2,0,2024,2025,1,https://github.com/mohammed-taha-roshan/Pharmacy-Management-System
Builder,Multi-threaded-Monte-Carlo-Simulation-for-Option-Pricing-C-11-14-,"Overview of the Multi-threaded Monte Carlo Simulation Console App for approximating the prices of financial derivatives (options) via Finite-Difference Methods, the Euler and Milstein Approximations, built using RAT domain architecture and the builder design pattern in C++11/C++14",2,1,2017,2024,1,https://github.com/psakoglou/Multi-threaded-Monte-Carlo-Simulation-for-Option-Pricing-C-11-14-
Builder,Advanced_OOP_Cinema_ConsoleApp_FallProject,"The Cinema Management System is a Java-based application that demonstrates the use of key design patterns such as Abstract Factory, Builder, Chain of Responsibility, and Singleton. It simulates interactions between customers, employees, and a cinema database system to manage movie screenings, customer reservations, and employee tasks.",2,0,2024,2024,1,https://github.com/tuanh00/Advanced_OOP_Cinema_ConsoleApp_FallProject
Builder,L2,"The L2 Project is a collection of twelve programming tasks designed to enhance understanding and implementation of various concepts in Go, including design patterns (such as Facade, Builder, and Strategy), string manipulation, file handling, NTP communication, regular expressions, and the development of basic utilities and custom tools.",2,0,2024,2025,0,https://github.com/mysticalien/L2
Builder,OOSW-Project2-SpaceInvanders,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",2,0,2021,2023,1,https://github.com/johnnylongvo/OOSW-Project2-SpaceInvanders
Builder,design-pattern-real-builder,Here I am with my another article on design patterns - Builder Design Pattern. A very useful creational design pattern that lets us construct complex objects step by step.,1,4,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-real-builder
Builder,builder,#design_pattern,1,0,2024,2024,1,https://github.com/Paul-Fontaine/builder
Builder,desginpattern,"Exercício de refatoração e aplicação dos design patterns Builder, Chain e Template Method",1,2,2023,2024,0,https://github.com/joaocarloslima/desginpattern
Builder,Builder,Design Pattern implemented in C#,1,0,2020,2024,1,https://github.com/wojciechligeza/Builder
Builder,BuilderPattern,Design pattern builder,1,0,2020,2023,1,https://github.com/tonytomk/BuilderPattern
Builder,BuilderDesignPattern,Builder Design Pattern,1,0,2022,2023,1,https://github.com/Manupendra/BuilderDesignPattern
Builder,BuilderDesignPattern,Builder Design Pattern,1,0,2024,2025,1,https://github.com/mkefclio/BuilderDesignPattern
Builder,builder,design pattern builder in Magento 2,1,0,2025,2025,0,https://github.com/verlatyidev/builder
Builder,Design-Pattern-Builder,Design Pattern Builder,1,0,2022,2022,1,https://github.com/Jacky0624/Design-Pattern-Builder
Builder,Builder_Design_Pattern,Builder Design Pattern,1,0,2019,2022,1,https://github.com/mtnaln/Builder_Design_Pattern
Builder,builder-pattern,Builder Design Pattern,1,0,2020,2020,1,https://github.com/sina-developer/builder-pattern
Builder,design_patterns-Builder,Creational Design Patterns,1,0,2020,2020,1,https://github.com/malbohy/design_patterns-Builder
Builder,BuilderPattern,Java | Design patterns | Builder pattern,1,0,2020,2021,1,https://github.com/PadmaGnanapriya/BuilderPattern
Builder,BuilderDesignPattern,Builder Design Pattern using C#,1,0,2020,2023,1,https://github.com/aalloc/BuilderDesignPattern
Builder,Builder_Pattern,Design Pattern with Kotlin,1,0,2022,2022,1,https://github.com/xfoxcom/Builder_Pattern
Builder,builder_pattern_Cars,design_pattern_with_tests,1,0,2023,2023,1,https://github.com/davmid/builder_pattern_Cars
Builder,jsBuilder,Builder Design Pattern in JavaScript,1,1,2016,2016,1,https://github.com/gergob/jsBuilder
Builder,builder_pattern,Builder Design Pattern in Java,1,0,2018,2019,1,https://github.com/parsa-JPM/builder_pattern
Builder,crud-builder,Builder - GoF - Design Pattern - Example,1,0,2021,2021,1,https://github.com/paulosalesmobly/crud-builder
Builder,java-builder-design-pattern-example,Java Builder Design Pattern Example,1,0,2021,2021,1,https://github.com/evrentan/java-builder-design-pattern-example
Builder,SQL-QUERY-BUILDER,Query builder com design patterns,1,0,2020,2021,0,https://github.com/gustavowerle/SQL-QUERY-BUILDER
Builder,HeavySpace,Builder Design Pattern Application Example,1,0,2020,2020,1,https://github.com/mertguven/HeavySpace
Builder,design-pattern-builder,Simple example using Design Pattern Builder,1,0,2018,2023,1,https://github.com/augustocolombelli/design-pattern-builder
Builder,Builder_Pattern_Project,Java ile builder design pattern projesi,1,0,2024,2024,1,https://github.com/Hereetria/Builder_Pattern_Project
Builder,DesignPattern-Builder,Example implementation of Builder design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Builder
Builder,DVBuilder,Builder Design Pattern in Objective C,1,0,2011,2013,1,https://github.com/KiwiVandi/DVBuilder
Builder,DesignPatterns-BuilderPattern,,1,0,2022,2022,1,https://github.com/thiagocantero/DesignPatterns-BuilderPattern
Builder,CompositeBuilderPatterns,combined composite and builder design pattern example,1,0,2014,2018,1,https://github.com/tuncayalt/CompositeBuilderPatterns
Builder,DesignPatterns,Facade and Builder Pattern Examples,1,0,2020,2021,1,https://github.com/ahmetyavuzoruc/DesignPatterns
Builder,csharp_builder_pattern_assignment,The builder design pattern implemented in csharp,1,0,2025,2025,2,https://github.com/JesseVanEvert/csharp_builder_pattern_assignment
Builder,advanced_builder,Example how to create design pattern called 'Builder'.,1,0,2018,2019,0,https://github.com/vrenclouff/advanced_builder
Builder,DesignPatterns,"Design patterns: Singleton, Builder, Facade, FactoryMethod, Prototype,",1,0,2022,2022,1,https://github.com/heminmoh/DesignPatterns
Builder,WorldGenerator,Console App demonstrating the Builder Design Pattern,1,0,2022,2024,1,https://github.com/vlastami/WorldGenerator
Builder,Ex5-Builder-Design-Pattern,05506230-Design Patterns In Object-Oriented Programming ,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex5-Builder-Design-Pattern
Builder,multitenancy-with-builder,Example of builder design pattern + multitenancy with Laravel.,1,0,2021,2023,1,https://github.com/mjalbdour/multitenancy-with-builder
Builder,DesignPatternBuilder,Working with creational design pattern :: Builder in Objective c,1,1,2014,2014,1,https://github.com/yeshbourne/DesignPatternBuilder
Builder,DesignPattern,collection of Java design pattern implementations,1,0,2024,2025,1,https://github.com/bunu23/DesignPattern
Builder,builder,Project for study or make a revision of Design Patterns. In this project we have an example of Builder. ,1,0,2022,2023,1,https://github.com/alexandrehsantos/builder
Builder,builder-design-pattern,Usando Builder Design Pattern para construir objetos complexos em C#,1,0,2024,2024,1,https://github.com/jfs-dev/builder-design-pattern
Builder,Builder-DesignPattern,Implementation of the Builder design Pattern (Java) for Academic purpose.,1,0,2020,2023,1,https://github.com/tiagorpatricio/Builder-DesignPattern
Builder,BuilderAirPlane,Um projeto de estudo que tem como objetivo entender o Design Pattern Builder,1,0,2020,2021,0,https://github.com/LuizMPelizaro/BuilderAirPlane
Builder,simple-java-class-generator,Simple Java Class Generator based on Builder Design Pattern,1,0,2020,2020,1,https://github.com/victormsti/simple-java-class-generator
Builder,c-sharp-design-patterns,Gang of Four design patterns in c#,1,0,2021,2023,1,https://github.com/tobbie/c-sharp-design-patterns
Builder,Builder-Design-Pattern,A walk-through on how to utilize the Builder Design Pattern,1,0,2024,2024,1,https://github.com/kht3110/Builder-Design-Pattern
Builder,design-patterns-software-engineering,Studies on design patterns and software engineering.,1,0,2024,2025,1,https://github.com/kastorcode/design-patterns-software-engineering
Builder,go-builder,Projeto criado para aprendizagem da metodologia de design patterns Builder em Go.,1,0,2024,2024,1,https://github.com/pietroBragaAquinoJunior/go-builder
Builder,got-builder-proxy,Wrapper around GOT using builder design pattern with support for express proxy,1,0,2020,2020,2,https://github.com/josezone/got-builder-proxy
Builder,builder-builder-ts,"Generates builder-classes from plain TypeScript classes, following conventions from the classic Builder design pattern.",1,0,2023,2024,1,https://github.com/eaardal/builder-builder-ts
Builder,software-quality-and-testing,"Design patterns: Factory, Builder, Adapter, Decorator, Strategy, Memento, and others.",1,0,2021,2022,1,https://github.com/sabrinalupsan/software-quality-and-testing
Builder,design_patterns,"Design patterns in Java and Kotlin - Singleton, Factory, Builder etc..",1,0,2025,2025,1,https://github.com/diyorbekhamidov/design_patterns
Builder,design_patterns_builder,Source code from the Chapter Design Patterns - Builder (of the More programming with Java book),1,0,2016,2022,1,https://github.com/progund/design_patterns_builder
Builder,Design_Patterns_Builder,,1,0,2023,2023,1,https://github.com/theImpish/Design_Patterns_Builder
Builder,DesignPatterns,ios常用的设计模式:抽象工厂、责任链、Builder、中介者、等等,1,0,2020,2020,1,https://github.com/housenkui/DesignPatterns
Builder,Design-Patterns-Csharp,Estudo de Design Patterns com C#,1,1,2020,2024,1,https://github.com/thiago-roock/Design-Patterns-Csharp
Builder,Design_Patterns,"Estudo em JAVA sobre DesignPatterns ( Builder, Singleton, Adapter).",1,0,2023,2023,1,https://github.com/SenaFernando/Design_Patterns
Builder,Builder-DesignPattern,Xcode Playground showing implementation of the Builder Design Pattern with URLRequest and URLSessionDataTask,1,0,2020,2020,1,https://github.com/zafarivaev/Builder-DesignPattern
Builder,design-patterns,"Disponíveis exemplos de padrões de projetos em Java, como SOLID, Factory Method, Abstract Factory, Builder, Bridge, entre outros.",1,0,2023,2024,1,https://github.com/ThaliaLevy/design-patterns
Builder,designpattern,Reservation system and reporting using abstract factory and builder design pattern,1,0,2023,2023,1,https://github.com/erayselvi/designpattern
Builder,Pizzeria,Simple console application in Java using builder and factory design patterns.,1,0,2019,2020,1,https://github.com/mborkowski1/Pizzeria
Builder,parseidon,Knex.js based query builder to interpret design patterns in MermaidJS.,1,1,2022,2024,1,https://github.com/quarterfall/parseidon
Builder,nodejs-rest-api,NodeJs Rest API to study design pattern Fluent Interface and Builder,1,0,2021,2023,2,https://github.com/AlexandreSouzaRocha/nodejs-rest-api
Builder,Facebook-App-using-Design-Patterns,"Facebook app using 3 design patterns (cache Proxy, Factory Method, Builder)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-using-Design-Patterns
Builder,java-annotation-processor-sample,A simple example of Java annotation processor for the builder design pattern.,1,0,2023,2023,1,https://github.com/goldenfingers98/java-annotation-processor-sample
Builder,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Builder,Builder,This Design pattern is used when we have too much parameters to use in the constructor method and we are with a hard to maintain a good code structure.,1,0,2023,2024,1,https://github.com/Medeiroshenrique/Builder
Builder,udemy_DesignPatterns,"Course instructed by Dmitri Nesteruk that taught about SOLID principles and creational, structural and behavioral patterns such as Factory,Builder, Singleton*, Memento and a little bit of IOC and dependency injection. ",1,0,2018,2022,1,https://github.com/iuryamicussi/udemy_DesignPatterns
Builder,Mastering-Design-Patterns-in-Java,"real world examples for singleton, factory, builder, adapter, decorator, observer design patterns",1,0,2024,2024,1,https://github.com/DharshiBalasubramaniyam/Mastering-Design-Patterns-in-Java
Builder,patterns,"Design Patterns Sample (Creational[Builder, Factory Method,Singleton], Structural[Adapter, Facade, Proxy] )",1,0,2016,2023,1,https://github.com/asanchezyu/patterns
Builder,patterns2,"Abstract Factory, Adapter, Builder, Façade, and Factory Method Design Patterns sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns2
Builder,RestServer,Simple Java Rest Server using Gson library and Builder/Singleton design patterns,1,1,2024,2024,1,https://github.com/MovieTone/RestServer
Builder,design-patterns-bi-directional-builder,Slides for the video lecture about the bi-directional builders example (More programming with Java),1,0,2016,2022,1,https://github.com/progund/design-patterns-bi-directional-builder
Builder,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Builder,AircraftManagement_DesignPatterns,"This repository contains a Java application that implements three design patterns: Builder, Abstract Factory, and State patterns. The project also includes comprehensive JUnit tests to verify functionality and ensure smooth operation.",1,0,2024,2024,1,https://github.com/tuanh00/AircraftManagement_DesignPatterns
Builder,Implementation_FactoryMethod_Builder_And_Singleton_Design_Patterns,"This is the small example on Implementation of Design Patterns (Singleton, Builder, Factory Method)",1,0,2018,2020,1,https://github.com/rafaewaqarqazi/Implementation_FactoryMethod_Builder_And_Singleton_Design_Patterns
Builder,BuilderDesignPatternInDotNetCSharp,Step by step guide to develop a Fluent API from scratch in .NET C# using the Builder Design Pattern.,1,0,2022,2023,1,https://github.com/AhmedTarekHasan/BuilderDesignPatternInDotNetCSharp
Builder,cloaked-batman,Adobe AIR communicating with native processes(ImageMagick) with AS3 Builder Design Pattern demostrated.,1,0,2014,2019,1,https://github.com/yangboz/cloaked-batman
Builder,Design-Patterns-TD1-Strategy--Builder,,1,0,2020,2020,2,https://github.com/sebassgb/Design-Patterns-TD1-Strategy--Builder
Builder,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Builder,Facebook-App-DP,"Facebook app using 6 design patterns (cache Proxy, Factory Method, Builder, Strategy, Observer, Decorator)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-DP
Builder,TicTacToe,"Classical TicTacToe game implemented using Design Patterns like Factory, Strategy, Builder and Command pattern",1,0,2021,2022,1,https://github.com/anshx/TicTacToe
Builder,creational-methods,"A TypeScript module for creational design patterns (Builder Method, With, Auto Setters and Getters)",1,0,2024,2024,1,https://github.com/ZZiane/creational-methods
Builder,AnnotationServiceBuilder.Patterns,AnnotationServiceBuilder.Patterns is a library that provides support for implementing common design patterns in .NET applications using custom annotations. ,1,0,2024,2024,2,https://github.com/genryianchev/AnnotationServiceBuilder.Patterns
Builder,design-patterns,:alien: A list of design patterns implementeds in JAVA that I worked during my graduation,1,0,2017,2019,1,https://github.com/MarceloBritoWD/design-patterns
Builder,Design-Patterns-.NET,Examples of design patterns written in C#. Most of the popular design patterns that can be used in application development are described here.,1,0,2024,2024,1,https://github.com/qpashkaaa/Design-Patterns-.NET
Builder,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Builder,Design-Patterns,"Explore a collection of commonly used design patterns implemented in Java. This repository showcases examples of Singleton, Factory, Abstract Factory, Adapter, Strategy, and Builder patterns. Each pattern is implemented in its own package, providing clear demonstrations and usage guidelines.",1,0,2023,2023,1,https://github.com/Meriyemelhajoui/Design-Patterns
Builder,Cool-Hamburger-Builder,A demo of the implementation of a Stepwise Fluent Builder Design Pattern. And who doesn't like to assemble their own custom hamburgers anyway?,1,1,2021,2023,1,https://github.com/Timiman1/Cool-Hamburger-Builder
Builder,Crew-Builder,"iOS app written in UIKit with programmatic UI following MVC design pattern. Makes network call to GitHub API  to get data, and uses UserDefaults for persistence.",1,0,2022,2023,1,https://github.com/sans-connaissance/Crew-Builder
Builder,connectfour,"Connect4 game implemented for the Production Quality Software class. Uses Builder, Observer, Factory and Singleton design patterns.",1,0,2012,2015,1,https://github.com/hm1021/connectfour
Builder,pizzaria-with-pattern,"It is an example of a senary where it encompasses design patterns (Abstract Factory, State and Builder)",1,0,2019,2021,0,https://github.com/kevempedro/pizzaria-with-pattern
Builder,image-flow,Python image modification class using builder/method chaining design pattern. Originally intended for preprocessing ML input images.,1,0,2019,2019,1,https://github.com/caxon/image-flow
Builder,JS-Expert,#Criando interfaces em programas de linha de comando com o pacote Blessed  e o design pattern padrão Builder,1,0,2021,2021,1,https://github.com/williamfernands/JS-Expert
Builder,Creational-Design-Patterns-in-Java,"This repository showcases implementations of five key creational design patterns in Java: Singleton, Factory, Abstract Factory, Builder, and Prototype. Each pattern is implemented with real-world scenarios, demonstrating how to create objects in a flexible, reusable, and efficient manner.",1,0,2024,2024,1,https://github.com/KUMARAN1601/Creational-Design-Patterns-in-Java
Builder,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Builder,desktop-application-for-quick-customer-handle,"This is a desktop application (Java) that can handle customer food orders quickly. This application is made using 6 different design patterns. Such as builder, decorator, fly-weight, interpreter, chain of responsibility and mediator design patterns.",1,0,2024,2024,1,https://github.com/Varnitha12345/desktop-application-for-quick-customer-handle
Builder,alura-design-patterns-java-I,"Design Patterns Java I: Boas práticas de programação - Não repita código com Template Method, Saiba da importancia de estudar os Padrões de projeto, Resolva problemas de muito Ifs usando Strategy, Adicione comportamentos ao seu objeto com Decorator, Crie diferentes ações com Observer, Use o Builder para criação de objetos complicados",1,0,2020,2022,1,https://github.com/Edufreitass/alura-design-patterns-java-I
Builder,Online-Food-Ordering-System,"Hands-on Low Level Designing for ""Food Ordering System"". Leveraging the power of different design patterns like factory, strategy, builder, etc.",1,0,2024,2024,1,https://github.com/i-nikhil/Online-Food-Ordering-System
Builder,drone-delivery-system,"System supports simulation of drone delivery services and restaurants which purchase ingredients from them. Includes class hierarchies, builder design pattern, membership system.  ",1,0,2022,2023,3,https://github.com/vicente6j/drone-delivery-system
Builder,scraper,"The Scraper project is a modular web scraper with configurable intervals, demonstrating the practical use of Factory, Builder, and Singleton design patterns.",1,0,2023,2024,2,https://github.com/surenpoghosian/scraper
Builder,builder-design-pattern-csharp,"Explore a concise C# implementation of the Builder design pattern. This project demonstrates the step-by-step creation of complex objects, ideal for constructing meals in a fast-food restaurant scenario. Discover modular and flexible coding practices with this practical Builder pattern example.",1,0,2024,2024,0,https://github.com/VinuWeer/builder-design-pattern-csharp
Builder,three-in-a-row-game-with-design-patterns,"Juego tres en raya, realizado en el lenguaje de programacion JAVA, utilizando el IDE netbeans 8.2. El juego se diseño principalmente para ser aplicado los patrones de diseño los cuales son los siguientes: patron Builder, patron factory, patron singleton, patron observer y patron facade, como resultado final tenemos que el programa tiene funcionalidad optima, trabajando conjuntamente con los patrones de diseño implementados.",1,0,2022,2022,1,https://github.com/bryherna/three-in-a-row-game-with-design-patterns
Builder,Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns,"This is an Application Implementing 5 design Patterns like Strategy, Singleton, Builder, Observer and Adapter. It is a Basic Job Posting and Hiring Application implementing login and Register Functionality with Job Posting and Job Hiring , it also sends out SMS Messages to Subscribed Phone Numbers.",1,0,2024,2024,1,https://github.com/SpecteR926/Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns
Builder,Elementor-widget-builder-design-pattren,"An Elementor plugin that utilizes the Builder design pattern to create and manage custom widgets. This plugin includes a flexible widget builder for creating Elementor widgets, such as CardBox and Tabs, with easy configuration and updates. It also supports auto-updates from GitHub",1,1,2024,2024,1,https://github.com/FarjadAkbar/Elementor-widget-builder-design-pattren
Builder,DesginPatterns,"My GitHub repository showcases JavaScript design patterns including Null Object, Builder, Singleton, Command, and Facade. Learn how to implement these powerful patterns for clean and reusable code. Boost your development skills with concise examples and explanations. Dive into the world of design patterns in JavaScript.",1,0,2023,2023,1,https://github.com/Ankush-ai/DesginPatterns
Builder,Patterns,"This repository showcases implementations of fundamental design patterns in C#, covering creational, structural, and behavioral patterns. Each pattern is demonstrated through easy-to-understand, practical examples, illustrating how to solve common software design challenges.",1,0,2024,2024,1,https://github.com/pome1lo/Patterns
Builder,Simple_Pool_game,"This is a simple pool game which only implements the function for hitting balls with a cue. The implementation used 3 design patterns: Factory method, Builder and Singleton.",1,0,2018,2019,1,https://github.com/EuniceMadya/Simple_Pool_game
Builder,StockManagement,"Developed a robust stock management application integrating design patterns such as Facade, Builder, MVC, SOLID principles, and Command patterns, focusing on abstraction and code reusability to ensure scalability and extensibility.",1,0,2024,2025,1,https://github.com/pratheeshkumar99/StockManagement
Builder,News-Management-Project---Express-JS,"""News Management Project Implemented By : Express JS, MySQL, EJS, Bootstrap, jQuery , Design Patterns like MVC, Factory, Builder, Dependency Injection . AdminLTE panel for admin tasks. Middleware for authentication, validation, and session management.""",1,0,2023,2023,1,https://github.com/Osama-Wael-03/News-Management-Project---Express-JS
Builder,DesignPattern_Project,https://youtu.be/bXKfP5Tbnt8 This is a single project where the following design patterns were used: POOL - FACTORY - OBSERVER - STRATEGY - BUILDER - LOOK UP TABLE - MVC - LOCALIZATION MANANGER - SCREEN MANANGER - FLYWEIGHT - PROTOTYPE - EVENT MANANGER,1,0,2021,2022,1,https://github.com/Gmorenoprat/DesignPattern_Project
Builder,Week40_TaskManagement_SpringBoot,TODO IT Application: A Spring Boot project that includes Role-User-Person-Task entities with Service and Repository layers. Application perform CRUD operations using Spring Data JPA. It uses Lombok and Builder design patterns.,1,0,2024,2024,1,https://github.com/Saru-Jayaraman/Week40_TaskManagement_SpringBoot
Builder,quality-control,"This repository hosts a Laravel application named ""Quality Control,"" designed for managing product quality assurance using HMVC architecture and various design patterns such as Repository, Builder, Data Mapper, Strategy, and Factory Method for scalability and maintainability.",1,0,2024,2024,1,https://github.com/ijeyg/quality-control
Builder,Turn-based-strategy-game," A Java/ Java Swing application that implements a turn-based strategy game with user authentication GUI • Players’ credentials and their characteristics were extracted from JSON files • Used design patterns such as Singleton, Factory, Builder and Visitor for the implementation",1,0,2023,2023,1,https://github.com/Indracatana/Turn-based-strategy-game
Builder,tinyUrl," (java springBoot) tinyUrl – Application for shortening URL addresses.  Backend project, use of bigdata, the databasic: cassandra, redis, mongoDB. I used builder   and Design Pattern in this project. Use of tools: swagger UI, studio 3t, table plus, docker-  compose, heroku etc. ",1,0,2022,2022,1,https://github.com/ShayLevAviv/tinyUrl
Builder,Big-Mahn-Tech-Sons-,"City Builder Simulation - A C++ simulation that allows users to manage resources, construct buildings, and maintain citizen satisfaction. This project is designed using various design patterns and includes text-based interaction, Git version control, automated unit testing, and comprehensive documentation.",1,0,2024,2024,7,https://github.com/YourfavCompSciGirlie/Big-Mahn-Tech-Sons-
Builder,Online-Forum-Platform,"This Spring Boot-based platform integrates design patterns like Singleton, Builder, Factory, and Abstract Factory, with an H2 in-memory database for lightweight storage. It features a user-friendly interface and runs on port 8087, showcasing scalable and maintainable modern software engineering practices.",1,0,2024,2024,1,https://github.com/Ahmetaygun/Online-Forum-Platform
Builder,rule_engine,"Simple RuleEngine where each rule is abstracted using Strategy Design Pattern, keeping in mind that each algorithm can grow separately. A client can chain multiple rules and and execute. Strategy, builder, generics and open closed principles are used out of box to achieve the functionality.",1,0,2018,2020,1,https://github.com/arvindbasant/rule_engine
Builder,Parking-System-Application,"Extensive Java project that simulates a Parking System software. The concepts explored for this assignment are: UML diagrams, inheritance, interface classes, design patterns (strategy, factory, command, decorator, observer, and builders), serialization through JSON and JUnit testing. Made for the MS in ICT: Software Design and Programming.",1,0,2022,2022,1,https://github.com/ingridjone/Parking-System-Application
Builder,Makeup-Recommendation-Website,"Designed and developed a full-stack application using Spring Boot and ReactJS  for makeup product recommendations, implementing design patterns such as Factory and Builder,  email functionality via Java Mail, user authentication with two types of users, where admin can create, update, delete products and export reports in different formats.",1,1,2024,2024,1,https://github.com/oanasabau1/Makeup-Recommendation-Website
Builder,JavaCLI-Tic-Tac-Toe,"This project implements a classic Tic Tac Toe game in Java, utilizing fundamental object-oriented programming (OOP) principles and employing the builder design pattern for enhanced structure and flexibility. The game interface interacts with users through the command line, where players input their moves to play against each other.",1,0,2024,2024,1,https://github.com/SriRajKumarYaramsetti/JavaCLI-Tic-Tac-Toe
Builder,Same_mealCheck_pySolution,I was once asked on a Yelp SWE interview to write code that add a list of meals and a same meal checker function. Thought I should share my solution here in both Java[For Java solution go into the Java Algo section ] and Python. I took the Builder Design Pattern approach which enables us to apply same method chaining when adding recipes. Enjoy ,1,0,2021,2021,0,https://github.com/frazynondo/Same_mealCheck_pySolution
Builder,OOSW-Project2-,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",1,0,2021,2023,1,https://github.com/classicvalues/OOSW-Project2-
Builder,tpv-exercise,"Usage of design patterns (abstract factory, strategy, builder, singleton)",0,41,2020,2022,1,https://github.com/iuresti/tpv-exercise
Builder,car-builder,Sample application demonstrating the use of Builder Design Pattern.,0,11,2021,2021,1,https://github.com/jbarillasgarcia/car-builder
Builder,lab-04,Lab 4: The builder and factory method design patterns,0,10,2023,2024,1,https://github.com/cpit252/lab-04
Builder,Lgroup.DesignPatterns.Builder,,0,2,2016,2016,1,https://github.com/ErickWendel/Lgroup.DesignPatterns.Builder
Builder,Builder,Design pattern,0,0,2024,2024,1,https://github.com/OctavioCastillo/Builder
Builder,builder,design pattern,0,0,2014,2016,1,https://github.com/magiclud/builder
Builder,Builder,Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/Builder
Builder,Builder,Creational Design Pattern in C# | Builder Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Builder
Builder,sipreman,"Student's achievement manager for state polytechnic of malang final projet, built with native php by implementing mvc design pattern and my own sql builder ",0,4,2024,2024,5,https://github.com/hmdnu/sipreman
Builder,Builder,Design pattern Builder,0,0,2017,2017,1,https://github.com/vitkozgit/Builder
Builder,Builder,Builder design pattern,0,0,2018,2018,0,https://github.com/scyzeq/Builder
Builder,Builder,Builder Design Pattern,0,0,2024,2024,1,https://github.com/KausHimanshu/Builder
Builder,Builder,Design Patterns GoF,0,0,2021,2021,0,https://github.com/YuraSomyk/Builder
Builder,Builder,Builder (Design) Pattern,0,0,2021,2021,1,https://github.com/muratcelikk/Builder
Builder,builder,builder design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/builder
Builder,Builder,Creational Design Patterns,0,0,2020,2020,1,https://github.com/rjiosum/Builder
Builder,Builder,Builder design pattern,0,0,2022,2022,2,https://github.com/CodeDesignPatterns/Builder
Builder,builder,Design Pattern Builder,0,0,2020,2023,1,https://github.com/mydesignpatters/builder
Builder,Builder,Design Pattern Builder,0,0,2021,2022,1,https://github.com/aliounemane2/Builder
Builder,builder,Builder Creational Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/builder
Builder,Builder,Builder Design Pattern Examples,0,0,2017,2017,1,https://github.com/Sirhc27/Builder
Builder,builder,Ruby Design pattern constructor,0,0,2022,2023,1,https://github.com/Wusinho/builder
Builder,Builder,Builder design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Builder
Builder,builder,Builder design pattern implemented,0,0,2020,2020,1,https://github.com/rafamagalhas/builder
Builder,Builder,One more design pattern,0,0,2021,2021,1,https://github.com/icegar1k/Builder
Builder,Builder,Builder Design Pattern Example,0,0,2018,2018,1,https://github.com/faridhuseynov/Builder
Builder,Builder,Design Pattern (Creational group),0,0,2020,2020,1,https://github.com/artghlijyan/Builder
Builder,BuilderPattern,Design Patterns,0,0,2022,2022,1,https://github.com/Mohammad-Abohasan/BuilderPattern
Builder,BuilderPattern,Design Pattern,0,0,2017,2017,1,https://github.com/martowu/BuilderPattern
Builder,builderPattern,Design patterns,0,0,2020,2020,1,https://github.com/lTristanl/builderPattern
Builder,Builder-Design-Pattern,Creational Design Patterns: Builder Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Builder-Design-Pattern
Builder,Builder,Design patterns exercise - Builder pattern,0,0,2020,2020,0,https://github.com/milicaklaric/Builder
Builder,Builder,This is Creational Design Pattern,0,0,2021,2021,1,https://github.com/pranavvichare/Builder
Builder,Builder,Builder design pattern Xamarin MVVM,0,0,2019,2019,0,https://github.com/XamarinCDS/Builder
Builder,Builder,Aplicando o design pattern - Builder,0,0,2023,2023,1,https://github.com/diegomaustem/Builder
Builder,Builder,System Architecture | Design Pattern | Builder,0,0,2021,2021,0,https://github.com/giangTPham/Builder
Builder,Builder,Builder Creational Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Builder
Builder,Builder,Example for Builder design pattern ,0,0,2022,2022,1,https://github.com/BSX8GS/Builder
Builder,builderpattern,design pattern,0,0,2022,2022,1,https://github.com/kumarij701/builderpattern
Builder,BuilderPatterns,Design Pattern examples,0,0,2019,2019,1,https://github.com/CathalAherne/BuilderPatterns
Builder,BuilderPattern,Design pattern :: BuilderPattern,0,0,2019,2019,1,https://github.com/onsaurav/BuilderPattern
Builder,BuilderDemo,design pattern test,0,0,2015,2015,1,https://github.com/ilroberts/BuilderDemo
Builder,BuilderPattern,Design Pattern 'Builder',0,0,2024,2024,1,https://github.com/Mi-Friedrichs/BuilderPattern
Builder,BuilderPattern,Builder Design Pattern,0,0,2022,2022,1,https://github.com/HarshavardhanDanda/BuilderPattern
Builder,BuilderPattern,Design Pattern - Creational,0,0,2021,2021,1,https://github.com/ritikaverma05/BuilderPattern
Builder,BuilderPokemon,Design Pattern Builder,0,0,2024,2024,1,https://github.com/bpimentacaetano/BuilderPokemon
Builder,BuilderExample,Design Pattern Builder,0,0,2018,2018,0,https://github.com/00162317/BuilderExample
Builder,BuilderDesignPattern,Builder Design Pattern,0,0,2018,2018,1,https://github.com/Zulqarnain007/BuilderDesignPattern
Builder,BuilderDesignPattern,Builder Design Pattern,0,0,2021,2022,1,https://github.com/alierqul/BuilderDesignPattern
Builder,BuilderDesignPattern,Builder design pattern,0,0,2020,2020,1,https://github.com/semihtr13/BuilderDesignPattern
Builder,BuilderPatternNet,Design Patterns: Builder,0,0,2023,2023,0,https://github.com/gruningzen202302/BuilderPatternNet
Builder,BuilderDesignPattern,Builder Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/BuilderDesignPattern
Builder,builderDesignPattern,builder design pattern,0,0,2021,2021,1,https://github.com/jsamperevazquez/builderDesignPattern
Builder,BuilderDesignPattern,Builder Design Pattern,0,0,2022,2022,1,https://github.com/joaonunodev/BuilderDesignPattern
Builder,Builder,Builder design pattern by Specialist course,0,0,2023,2023,1,https://github.com/radiotech205/Builder
Builder,builder,this is builder design pattern implementation,0,0,2022,2022,0,https://github.com/MadhuHS/builder
Builder,Builder,Unity project with builder design pattern,0,0,2020,2020,1,https://github.com/OzgeKocaoglu/Builder
Builder,builder,Exemplo de Código - Design Pattern Builder,0,0,2023,2023,1,https://github.com/vitorbalsanello/builder
Builder,Design-Pattern-Builder,Design Pattern,0,0,2016,2016,1,https://github.com/aakash140/Design-Pattern-Builder
Builder,Builder,This is implementation of Builder design pattern . source : https://refactoring.guru/design-patterns/builder/java/example,0,0,2020,2020,2,https://github.com/TrueMohsen/Builder
Builder,Builder,Builder Design Pattern Example in C++,0,0,2019,2019,1,https://github.com/Wyder7PL/Builder
Builder,Builder_Chain_Prototype,Design Patterns,0,0,2021,2021,1,https://github.com/EdgeOfMordor/Builder_Chain_Prototype
Builder,Employee,Builder design pattern,0,0,2020,2020,1,https://github.com/SlamhHajar/Employee
Builder,builder_design_pattern,builder_design_pattern,0,0,2022,2022,1,https://github.com/neupan/builder_design_pattern
Builder,dp-builder,Builder Design Pattern,0,0,2019,2020,1,https://github.com/italocuzziol/dp-builder
Builder,DPcreativeAssignment,builder design pattern,0,0,2022,2022,1,https://github.com/GauravShripad/DPcreativeAssignment
Builder,builder-python,Builder Design Pattern ,0,0,2022,2022,0,https://github.com/gilmar-sales/builder-python
Builder,Builder-Design-Pattern,Builder Design Pattern,0,0,2018,2019,1,https://github.com/ibavli/Builder-Design-Pattern
Builder,Text-based-calculator,Builder design pattern,0,0,2020,2020,1,https://github.com/rulick76/Text-based-calculator
Builder,builder_design_pattern,Builder - Design Pattern,0,0,2020,2020,1,https://github.com/lukasz-glib/builder_design_pattern
Builder,builder_design_pattern,builder design pattern,0,0,2023,2023,0,https://github.com/SaidBenaissa/builder_design_pattern
Builder,Builder_design_pattern,Builder_design_pattern,0,0,2023,2023,0,https://github.com/rajsoni5197/Builder_design_pattern
Builder,builder-pattern,Builder Design Pattern,0,0,2018,2018,1,https://github.com/bilal966/builder-pattern
Builder,designPatterns-creational-builder,Builder Design Pattern,0,0,2019,2019,0,https://github.com/dragosc02/designPatterns-creational-builder
Builder,CoffeeBuilder,Builder Design Pattern,0,0,2022,2022,1,https://github.com/Auvsexvc/CoffeeBuilder
Builder,Builder-Design,builder design pattern ,0,0,2023,2023,1,https://github.com/aliseydi4/Builder-Design
Builder,builder-design-pattern,Builder Design Pattern,0,0,2021,2021,1,https://github.com/gaurav4083/builder-design-pattern
Builder,Builder_design_pattern,Builder_design_pattern,0,0,2020,2020,1,https://github.com/Alaga/Builder_design_pattern
Builder,builder-design-pattern,Builder Design Pattern,0,0,2018,2018,1,https://github.com/itsankov/builder-design-pattern
Builder,DP_Builder,Builder design pattern,0,0,2017,2017,0,https://github.com/bsadiki/DP_Builder
Builder,DesignPatternBuilder,Design Pattern Builder,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternBuilder
Builder,Tarea1-Builder,Builder Design Pattern,0,0,2022,2022,1,https://github.com/bbqboneless/Tarea1-Builder
Builder,Codigo-028---Hamburgeria,Design Pattern Builder,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-028---Hamburgeria
Builder,designPatternsBuilder,Builder Design Pattern,0,0,2020,2020,1,https://github.com/ilkaypolat1985/designPatternsBuilder
Builder,design-patterns-builder,Design patterns builder,0,0,2024,2024,1,https://github.com/guiffsouza/design-patterns-builder
Builder,DesignPattern-Builder,Builder design Pattern,0,0,2017,2017,1,https://github.com/RishikeshGIT/DesignPattern-Builder
Builder,Builder_Pattern,Builder Design Pattern,0,0,2019,2019,0,https://github.com/smartprogrammer0014/Builder_Pattern
Builder,yazilim-mimarisi-ve-tasarimi-2,Builder Design Pattern,0,0,2019,2024,1,https://github.com/RukiyeSahin/yazilim-mimarisi-ve-tasarimi-2
Builder,Builder-Design-Pattern,Builder Design Pattern,0,0,2020,2021,1,https://github.com/priyankasvns/Builder-Design-Pattern
Builder,Builder-Design-Pattern--Fast-food-order,Builder design pattern,0,0,2023,2023,1,https://github.com/ParisaArbab/Builder-Design-Pattern--Fast-food-order
Builder,builder-design-pattern,builder-design-pattern,0,0,2019,2019,0,https://github.com/rajasekharreddybusireddy/builder-design-pattern
Builder,AP9-Builder-Singleton-Prototype,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/AP9-Builder-Singleton-Prototype
Builder,BuilderPattern,Design Pattern: BuilderPattern (C++),0,0,2015,2015,1,https://github.com/SunXiaoShan/BuilderPattern
Builder,BuilderPattern,Implement Builder Design Pattern,0,0,2019,2019,0,https://github.com/ajqportal/BuilderPattern
Builder,BuilderPattern,OOP - builder Design pattern,0,0,2019,2019,1,https://github.com/NicholaiWP/BuilderPattern
Builder,Builder,Entrando nos design patterns de java - Builder,0,0,2024,2024,1,https://github.com/Anderson1605R/Builder
Builder,Builder,A simple Builder design pattern in DELPHI,0,1,2024,2024,1,https://github.com/hindermath/Builder
Builder,builder,To learn builder design pattern in Java,0,0,2025,2025,1,https://github.com/pumbatimon473/builder
Builder,BuilderDesignPattern,Design Pattern in Java,0,0,2018,2018,0,https://github.com/oddman-reborn/BuilderDesignPattern
Builder,BuilderDesignPattern,Builder Design Pattern example,0,0,2020,2020,1,https://github.com/aasmc/BuilderDesignPattern
Builder,BuilderDesignPattern,Builder Design Pattern - example,0,0,2017,2017,2,https://github.com/przemlat/BuilderDesignPattern
Builder,BuilderPatternExample,Builder Design Pattern Example,0,0,2022,2022,1,https://github.com/manugsnu1/BuilderPatternExample
Builder,Builder-Pattern,Design Pattern - Creational,0,0,2017,2017,1,https://github.com/mhtmalpani/Builder-Pattern
Builder,PatternBuilder-Example,Creational design patterns,0,0,2017,2017,1,https://github.com/amarqueze/PatternBuilder-Example
Builder,EmployeeReport_BuilderDesignPattern,Builder Design Pattern Example,0,0,2021,2021,1,https://github.com/VaibhavBhapkar/EmployeeReport_BuilderDesignPattern
Builder,Java_Builder_Pattern,Design Pattern in Java -> Creational Design Pattern ->Abstract Factory Pattern,0,0,2021,2021,0,https://github.com/TechnoJunior/Java_Builder_Pattern
Builder,Builder,Learning design patterns. My example of using Builder,0,0,2019,2019,1,https://github.com/k-oksenych/Builder
Builder,Design-Pattern-Builder-Pattern,Practice design pattern,0,0,2019,2019,1,https://github.com/ahmedmagdy512/Design-Pattern-Builder-Pattern
Builder,PlayFieldFactoryBuilder,design patterns training,0,0,2015,2016,1,https://github.com/Ceditvodu/PlayFieldFactoryBuilder
Builder,Builder,design pattern associated with the software architecture discipline,0,0,2023,2023,1,https://github.com/alvaro-veiga/Builder
Builder,BuilderPattern,Creation Design Pattern in Java,0,0,2021,2021,1,https://github.com/sudippain/BuilderPattern
Builder,BuilderPattern,Java Design Pattern - Builder Pattern,0,0,2024,2024,0,https://github.com/ashishpatel007/BuilderPattern
Builder,builderJS,Builder design pattern in Javascript,0,0,2019,2019,1,https://github.com/HBull5/builderJS
Builder,BuilderDemo,Demo for Builder design pattern,0,0,2020,2020,1,https://github.com/TobyXYan/BuilderDemo
Builder,BuilderPattern,Builder Software Design Pattern demo,0,0,2013,2013,1,https://github.com/leroyvaughan/BuilderPattern
Builder,builderCSharp,Example using Builder Design Pattern ,0,0,2020,2020,1,https://github.com/blackmamba85/builderCSharp
Builder,builderpattern,Design patterns: Builder pattern,0,0,2018,2018,0,https://github.com/unal-dpc/builderpattern
Builder,DPBuilder,Design Pattern Creational Builder,0,0,2020,2020,1,https://github.com/panji140299/DPBuilder
Builder,NLayerPassengerApp,NLayerPassengerApp-Builder Design Pattern,0,0,2022,2022,1,https://github.com/fatihseftali/NLayerPassengerApp
Builder,builder-method,Design patterns - Builder method. ,0,0,2022,2022,1,https://github.com/m4t3u2/builder-method
Builder,Design_Patterns_Builder_pattern,Design-Patterns-Builder-pattern,0,0,2022,2022,1,https://github.com/prostatus123/Design_Patterns_Builder_pattern
Builder,Java-Builder-Design-Pattern,Java-Builder-Design-Pattern,0,0,2021,2021,1,https://github.com/Docsconsole/Java-Builder-Design-Pattern
Builder,DesignPatternBuilder,Exemplo Design Pattern - Builder,0,0,2022,2022,1,https://github.com/felipemascarin/DesignPatternBuilder
Builder,DesignPattern-Java-Builders,Design Pattern Java builder,0,0,2025,2025,1,https://github.com/ChoppariRavi/DesignPattern-Java-Builders
Builder,dp-Builder,Design Patterns 2 - Builder,0,0,2022,2022,1,https://github.com/euaaron/dp-Builder
Builder,builder-implementation,Creational Builder Design Pattern,0,0,2022,2022,1,https://github.com/rosoares/builder-implementation
Builder,pattern-design-builder,Example Design Pattern : Builder,0,1,2020,2020,2,https://github.com/jmirandacosta/pattern-design-builder
Builder,builder-pattern,Design pattern: Builder pattern,0,0,2021,2021,1,https://github.com/TomSawyer404/builder-pattern
Builder,csharp-builder-pattern,csharp builder design pattern,0,0,2022,2022,0,https://github.com/MarshalOfficial/csharp-builder-pattern
Builder,DP_Builder,Creational Design Pattern - Builder ,0,0,2021,2021,0,https://github.com/harpreet9ja/DP_Builder
Builder,dp-builder,Builder Design Pattern Sample,0,0,2023,2023,1,https://github.com/rodolfofajardo/dp-builder
Builder,go-builder-design-pattern,Builder Design Pattern | Go,0,0,2023,2023,0,https://github.com/loxt/go-builder-design-pattern
Builder,Design-Patterns-Faceted-Builder,Design Patterns – Faceted Builder,0,0,2020,2020,1,https://github.com/lt1379/Design-Patterns-Faceted-Builder
Builder,Builder-Design-Pattern-Exercise-,Builder Design Pattern Exercise ,0,0,2018,2018,1,https://github.com/Dante4109/Builder-Design-Pattern-Exercise-
Builder,java-builder,Creational Builder Design Pattern,0,0,2021,2021,1,https://github.com/wescleycaldeira/java-builder
Builder,typescript-builder-pattern,Implement Builder Design Pattern,0,0,2021,2021,1,https://github.com/wahyufeb/typescript-builder-pattern
Builder,CarProdution,Builder Design Pattern Example,0,0,2023,2023,0,https://github.com/VladislavPavlyuk/CarProdution
Builder,js-builder-design-pattern,JavaScript Builder Design Pattern,0,0,2020,2020,1,https://github.com/mohamedisakr/js-builder-design-pattern
Builder,builder_design_pattern,Builder Design Pattern Example,0,0,2022,2022,1,https://github.com/gunerkalan/builder_design_pattern
Builder,STRUCTURAL-DESIGN-PATTERN-Builder-,STRUCTURAL DESIGN PATTERN (Builder),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-Builder-
Builder,design.patterns.builder,Builder design pattern demo,0,0,2024,2024,1,https://github.com/niteshcodespace/design.patterns.builder
Builder,TaskBuilder,Fluent Builder Design Pattern,0,0,2020,2020,1,https://github.com/stefanos-paschalis/TaskBuilder
Builder,builder-design-pattern,example builder-design-pattern,0,0,2021,2021,1,https://github.com/mendesmustafa/builder-design-pattern
Builder,Employee,Builder design pattern example,0,0,2022,2022,1,https://github.com/suzanastojkovic88/Employee
Builder,dpcreate-builder_dafanasyev,Creational DESIGN PATTERNS: Builder,0,0,2022,2022,1,https://github.com/mslobodyanyuk/dpcreate-builder_dafanasyev
Builder,Design-Pattern-Builder,Quizz Design Pattern Builder,0,0,2018,2018,1,https://github.com/LeoLacoste/Design-Pattern-Builder
Builder,DP-Builder,TP Design Pattern Builder,0,0,2019,2019,1,https://github.com/amechin/DP-Builder
Builder,builder-design-pattern,Builder Design Pattern - LaraStack,0,0,2023,2023,1,https://github.com/LaraPlayGround/builder-design-pattern
Builder,builder-design-pattern,"Builder Design Pattern, Java",0,0,2023,2023,1,https://github.com/NikolManolova07/builder-design-pattern
Builder,KotlinChallengeNo10.1,Builder Design Pattern Example,0,0,2020,2020,1,https://github.com/MohammedFouadx/KotlinChallengeNo10.1
Builder,builder-pattern,C# - Builder design pattern.,0,0,2023,2023,1,https://github.com/flcristian/builder-pattern
Builder,Design_Pattern_Builder,Implement Design_Pattern_Builder,0,0,2022,2022,1,https://github.com/Mithu0229/Design_Pattern_Builder
Builder,builder_design_pattern,Builder design pattern example,0,0,2017,2017,0,https://github.com/mietech/builder_design_pattern
Builder,Builder-Design-Pattern-Example,Builder Design Pattern Example,0,0,2018,2018,1,https://github.com/AhmedEltorky/Builder-Design-Pattern-Example
Builder,Design-Pattern---Builder-Planner,Design Pattern - Builder Planner,0,0,2021,2021,0,https://github.com/michaelangelo2288/Design-Pattern---Builder-Planner
Builder,Builder-Facets,Builder Facets design pattern,0,0,2022,2022,1,https://github.com/Stambezzi/Builder-Facets
Builder,Builder-Design-Pattern,Implement Builder Design Pattern,0,0,2023,2023,1,https://github.com/suraj-0657/Builder-Design-Pattern
Builder,Builder-design-pattern,Builder design pattern tasarladım,0,0,2024,2024,1,https://github.com/yusufortacdeveloper/Builder-design-pattern
Builder,DesignPatterns_Builder,Practice Builder design pattern,0,0,2025,2025,1,https://github.com/MiroslavaVikhrenko/DesignPatterns_Builder
Builder,BuilderDesignPattern-,Implementation of builder design pattern,0,0,2019,2019,1,https://github.com/ravindraugale/BuilderDesignPattern-
Builder,builderDesignPattern,Demo for builder design pattern,0,0,2014,2014,1,https://github.com/swollenBrains/builderDesignPattern
Builder,Javaquarium_BuilderDP,Javaquarium using builder Design Pattern,0,0,2022,2022,1,https://github.com/RitchieHollis/Javaquarium_BuilderDP
Builder,builderDesignPattern,Demonstration of builder design pattern ,0,0,2023,2024,1,https://github.com/priyanshu8751/builderDesignPattern
Builder,BuilderDesignPattern,Homework presentation -> Builder Design Pattern,0,0,2018,2018,1,https://github.com/Rodrigo816/BuilderDesignPattern
Builder,BuilderDesignPattern,Example of Builder design pattern,0,0,2019,2019,1,https://github.com/fikaduastu/BuilderDesignPattern
Builder,BuilderDesignPattern,LLD for Builder Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/BuilderDesignPattern
Builder,TheBuilder,design pattern in swift,0,0,2020,2020,1,https://github.com/officialyenum/TheBuilder
Builder,BuilderDesignPatternExample,A sample building design pattern,0,0,2023,2023,1,https://github.com/TheOriginalReben/BuilderDesignPatternExample
Builder,PC-Builder,Design Pattern Course Work,0,0,2022,2022,1,https://github.com/Todekk/PC-Builder
Builder,BuilderDesignPatternPoc,POC on Builder Design Pattern,0,0,2024,2024,1,https://github.com/Akshay1825/BuilderDesignPatternPoc
Builder,Builder,An implementation of the Builder Design Pattern in C++,0,1,2012,2013,1,https://github.com/abrahamkoshy/Builder
Builder,SantanderCoders-BuilderEmJava,"Builder, design patterns em JAVA.",0,0,2024,2024,1,https://github.com/devPabloEdu/SantanderCoders-BuilderEmJava
Builder,builder_design_pattern,Builder design pattern and builder annotation,0,0,2023,2023,1,https://github.com/Husna-POYRAZ/builder_design_pattern
Builder,Builder,Implementação de uma lanchonete utilizando o Design Pattern Builder,0,0,2023,2023,1,https://github.com/felipe-SBC/Builder
Builder,Builder,Example of the Creational design pattern Builder in Java.,0,0,2016,2016,1,https://github.com/levyoav/Builder
Builder,Builder_Design_Pattern,Design Pattern Using Java,0,0,2024,2024,1,https://github.com/NikleshFernando/Builder_Design_Pattern
Builder,design-patterns,Recreating design patterns,0,0,2021,2022,1,https://github.com/zsomborjoel/design-patterns
Builder,BuilderPattern,Example of the Builder Design Pattern,0,0,2015,2015,1,https://github.com/Runman44/BuilderPattern
Builder,3-2-DesignPatterns-StudentBuilder,"Design Patterns in Object-Oriented Programming Fifth Task ""Builder Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-StudentBuilder
Builder,builderdesingpatterndigitalocean,Java Builder Design Pattern examples,0,0,2024,2024,1,https://github.com/adanir417/builderdesingpatterndigitalocean
Builder,BuilderDesignPattern,Code Demo Project Builder Design Pattern,0,0,2021,2021,0,https://github.com/Girflerpham/BuilderDesignPattern
Builder,BuilderPatternProject,Sample project implementing builder design pattern,0,0,2023,2024,1,https://github.com/MD-ARIF-073/BuilderPatternProject
Builder,BuilderDesignPattern,Program utilizing the builder design pattern,0,0,2025,2025,1,https://github.com/m-y-lee2002/BuilderDesignPattern
Builder,BuilderDesignDemo,Simple Example for Builder Design Pattern.,0,0,2024,2024,1,https://github.com/d33raj/BuilderDesignDemo
Builder,BuilderDesignPattern,C# Implementation of Builder Design Pattern,0,0,2021,2021,1,https://github.com/ShubhamRoy96/BuilderDesignPattern
Builder,BuilderPatternMethod,Example of the builder design pattern,0,0,2018,2018,0,https://github.com/elkhami001/BuilderPatternMethod
Builder,java-builder-pattern,Builder Design Pattern is used to create objects (similar to Factory Design Pattern).,0,0,2020,2020,1,https://github.com/fmandelli/java-builder-pattern
Builder,PizzaBuilder,Code for Builder Design Pattern,0,0,2017,2017,1,https://github.com/denverschleifer/PizzaBuilder
Builder,ComputerBuilder,Example of Builder design pattern,0,0,2017,2017,1,https://github.com/thya6769/ComputerBuilder
Builder,TP-Builder,Final CS design pattern project,0,0,2019,2023,2,https://github.com/gabaudette/TP-Builder
Builder,builder_pattern,[ Builder Pattern ] Design Pattern Demo,0,0,2021,2021,1,https://github.com/zero0rder/builder_pattern
Builder,patterns-builder,Design Patterns in C# (Builder),0,0,2019,2019,0,https://github.com/tiny-ghost/patterns-builder
Builder,Builder-Pattern,JAVA Builder Pattern Design Pattern,0,0,2020,2020,1,https://github.com/Valthion/Builder-Pattern
Builder,fluentBuilder,Fluent Builder Design Pattern Example,0,0,2021,2021,1,https://github.com/OlgaYatsenko/fluentBuilder
Builder,Builder-01,"Design Pattern, Builder, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/Builder-01
Builder,builder-,example about builder of design patterns,0,0,2024,2024,1,https://github.com/ahmedelfarr/builder-
Builder,builder-design-pattern-js,Builder Design Pattern in JavaScript ,0,0,2024,2024,1,https://github.com/nirajapril7/builder-design-pattern-js
Builder,CarBuilder,Exercising the builder design pattern,0,0,2023,2023,1,https://github.com/JohRome/CarBuilder
Builder,GOF-Builder,Builder design pattern by GOF,0,0,2023,2023,1,https://github.com/radiotech205/GOF-Builder
Builder,Smartphones,Design patterns Factory and Builder,0,0,2019,2019,2,https://github.com/RaymondCiuca/Smartphones
Builder,Belajar-Design-Pattern-Python-Builder,Python Design Pattern Example | Builder,0,0,2021,2021,1,https://github.com/fakhriinaufal/Belajar-Design-Pattern-Python-Builder
Builder,Builder-Design-Pattern,Demonstration of Builder Design Pattern ,0,0,2024,2024,1,https://github.com/vijayrao97/Builder-Design-Pattern
Builder,HTMLBuilderExercise,Exercise in Builder design pattern,0,0,2021,2021,1,https://github.com/csherwood98/HTMLBuilderExercise
Builder,User,Design Patterns Workshop - Builder Pattern,0,0,2022,2022,1,https://github.com/abitaaugustine/User
Builder,DesignPattern-ClasicBuilder,Java - Design patterns - classic builder,0,0,2016,2016,1,https://github.com/djnx80/DesignPattern-ClasicBuilder
Builder,notafiscal,Builder design pattern simple example,0,0,2017,2017,0,https://github.com/aokicassio/notafiscal
Builder,desing-pattern-builder,Design Patterns - Builder (Creational pattern),0,0,2020,2020,1,https://github.com/1987diegog/desing-pattern-builder
Builder,Builder_DesignPattern,Code for Builder design pattern,0,0,2023,2023,1,https://github.com/uday8247/Builder_DesignPattern
Builder,buildPattern,Implementation of builder design pattern,0,0,2024,2024,1,https://github.com/Vikas-Saini-420/buildPattern
Builder,steads-manager,Builder design pattern for Nodejs,0,0,2023,2023,1,https://github.com/zareismail/steads-manager
Builder,builder-design-pattern,Builder Design Pattern in Swift,0,0,2020,2020,0,https://github.com/tagaruma/builder-design-pattern
Builder,c-Builder-Design-Pattern-Practice,builder design pattern practice c#,0,0,2021,2021,0,https://github.com/Bilal-Nadeem-Ahmed/c-Builder-Design-Pattern-Practice
Builder,HENDRICE_Masi1_COO_Seance5,Builder & State design patterns exercice,0,0,2023,2024,1,https://github.com/Hendremy/HENDRICE_Masi1_COO_Seance5
Builder,DesignPattern-Builder,Test of Builder Design Pattern,0,0,2020,2020,1,https://github.com/FerrazFerrara/DesignPattern-Builder
Builder,dp-cpp-parameterized-builder,C++ Design Pattern - Parameterized Builder,0,0,2021,2021,1,https://github.com/sun-flat-yamada/dp-cpp-parameterized-builder
Builder,Builder_DesignPattern,Usage of Builder design pattern,0,0,2022,2022,0,https://github.com/hazeemcool/Builder_DesignPattern
Builder,design-pattern-builder,Modelo de design pattern builder,0,0,2023,2023,1,https://github.com/guilhermeviso/design-pattern-builder
Builder,builder-design-pattern-example-1,builder-design-pattern-example-1,0,0,2017,2017,1,https://github.com/DesignPatterns101/builder-design-pattern-example-1
Builder,CSharpDP_Creational_Builder2,Creational Builder example 2 Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_Builder2
Builder,Design-Patterns-Builder-Pattern-Website,Design Patterns - Builder Pattern Website ,0,0,2016,2016,1,https://github.com/kmprax/Design-Patterns-Builder-Pattern-Website
Builder,DesignPattern-Builder,Practice of Builder Design Pattern,0,0,2018,2018,1,https://github.com/KNaka88/DesignPattern-Builder
Builder,design-pattern-builder,Design pattern practice: builder method,0,0,2020,2020,0,https://github.com/wenchin77/design-pattern-builder
Builder,steads,Builder design pattern for Nodejs,0,0,2023,2023,1,https://github.com/zareismail/steads
Builder,real-estate,Factory Method & Builder Design Pattern,0,0,2023,2023,1,https://github.com/ayahosnii/real-estate
Builder,engComp.padroesDeProjeto.builder,Builder design pattern in java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.builder
Builder,builder-design-pattern-in-php,Creational Patterns: Builder Design Pattern,0,0,2021,2021,1,https://github.com/AhmedHelalAhmed/builder-design-pattern-in-php
Builder,builder-design-pattern,builder design pattern in go,0,0,2022,2022,1,https://github.com/yudaph/builder-design-pattern
Builder,java_gof_builder,"design pattern ""builder"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_builder
Builder,CSharpDP_Creational_Builder1,Creational Builder example 1 Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_Builder1
Builder,OODdesign_Java,"Design Patterns: builder, factory, singleton ...",0,0,2020,2020,1,https://github.com/jingjingliao/OODdesign_Java
Builder,BuilderPattern,A design pattern. YouTube Channel Derek Banas,0,0,2021,2021,1,https://github.com/mariaAlejaAF/BuilderPattern
Builder,BuilderDP,Simple project that implements Builder design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/BuilderDP
Builder,BuilderExample,"An example of ""Builder"" software design pattern",0,0,2023,2023,1,https://github.com/vladdubceac/BuilderExample
Builder,BuilderCar,This repository covers the Builder design pattern,0,0,2019,2019,1,https://github.com/terryjohnson901/BuilderCar
Builder,php-design-patterns-builder,PHP Design Patterns - Builder Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-builder
Builder,BuilderDesignPattern,Demonstrating the builder Design Pattern in C#,0,0,2024,2024,1,https://github.com/BackToTech-Study/BuilderDesignPattern
Builder,Builder,"Design Patterns in Modern C++ by Dmitri Nesteruk, chapter Builder, examples",0,0,2022,2022,1,https://github.com/r-tarnowski/Builder
Builder,BuilderDesignPattern,C# builder design pattern example usage project.,0,0,2023,2023,1,https://github.com/OguzhannOzturk/BuilderDesignPattern
Builder,designPatternBuilderJS,Implement design pattern with javascript,0,0,2021,2021,1,https://github.com/hdarioDev/designPatternBuilderJS
Builder,BuilderDesignPattern,program of CarBuilderApp with builder design pattern,0,0,2024,2024,1,https://github.com/assistant1277/BuilderDesignPattern
Builder,BuilderDesignPatternEx,This is builder design pattern implementation example.,0,0,2021,2021,1,https://github.com/lhossainduet094026/BuilderDesignPatternEx
Builder,DesignPatterns,Builder Patterns,0,0,2019,2019,1,https://github.com/Yomesh1995/DesignPatterns
Builder,designPatterns,"Factory, Builder",0,0,2014,2014,0,https://github.com/iunia27/designPatterns
Builder,ExercicioBuilder,exercicio sobre o Design Pattern Builder ,0,0,2020,2020,1,https://github.com/bernardo2512/ExercicioBuilder
Builder,Procedural-Builder,Open-source Procedural Builder design pattern.,0,0,2015,2020,2,https://github.com/NullVoxPopuli/Procedural-Builder
Builder,builder-pattern,Builder Design Pattern Demo in C#,0,0,2022,2022,1,https://github.com/jebarcha/builder-pattern
Builder,Builder-demo,This repository implement Builder Design Pattern,0,0,2023,2023,0,https://github.com/Aradhy12/Builder-demo
Builder,app-builder,Java application with design pattern Builder,0,0,2021,2021,1,https://github.com/TheJamylle/app-builder
Builder,ChainBuilder,Chain Builder Pattern  (C++ Design Pattern),0,0,2013,2013,1,https://github.com/0xfffffff7/ChainBuilder
Builder,Builder-Pattern,Builder Design Pattern Implementation by Java,0,0,2020,2020,1,https://github.com/Mamun-Al-Babu-Shikder/Builder-Pattern
Builder,builder-pattern,cool example of builder design pattern,0,0,2013,2013,1,https://github.com/phoenix2fire/builder-pattern
Builder,builder-dp,sample implementation of builder design pattern,0,0,2021,2021,1,https://github.com/rwedzony/builder-dp
Builder,go-builder,Builder design pattern written on Golang,0,0,2021,2021,0,https://github.com/hugolesta/go-builder
Builder,BuilderWithDirectorDesignPattern,Demo of Builder with Directory Design Pattern,0,0,2020,2020,1,https://github.com/smarigowda/BuilderWithDirectorDesignPattern
Builder,go-design-pattern,design pattern for golang,0,0,2019,2019,1,https://github.com/enix223/go-design-pattern
Builder,BuilderSpice,A Builder design pattern wrapper implementation for RoboSpice,0,0,2015,2015,1,https://github.com/andreiverdes/BuilderSpice
Builder,BuilderPattern,Meal Builder using Builder design pattern in C++,0,0,2017,2017,1,https://github.com/EmeraldSoul/BuilderPattern
Builder,BuilderPattern,Uses a builder design pattern to organize books,0,0,2019,2019,1,https://github.com/ScriptKitty74/BuilderPattern
Builder,BuilderPattern,A sample program to demonstrate builder design pattern,0,0,2024,2024,1,https://github.com/atishagarwaal/BuilderPattern
Builder,BuilderPattern,My representation of the GoF Builder design pattern.,0,0,2018,2018,1,https://github.com/j-runser/BuilderPattern
Builder,Design_Pattern_Builder,Bilder Design Pattern Sample By Java,0,0,2021,2021,1,https://github.com/pedramkarevan/Design_Pattern_Builder
Builder,builder-design-pattern,Example code for builder design pattern,0,0,2022,2022,1,https://github.com/bit-sahti/builder-design-pattern
Builder,design-pattern-builder,Example of the design pattern builder,0,0,2019,2019,1,https://github.com/robrig92/design-pattern-builder
Builder,builder-design-pattern,Builder Design Pattern with mandatory fields,0,0,2024,2024,1,https://github.com/ketulpatel03/builder-design-pattern
Builder,goBuilderPattern,The builder design pattern in Go,0,0,2020,2020,1,https://github.com/irisida/goBuilderPattern
Builder,Builder-Design-Pattern,Example for learning Builder Design Pattern,0,0,2022,2022,2,https://github.com/christopher-canenguez/Builder-Design-Pattern
Builder,design-pattern-builder,Conceptual Example of Builder Design Pattern,0,0,2023,2023,1,https://github.com/ajunquit/design-pattern-builder
Builder,Builder-Design-Pattern,simple example for builder design pattern,0,0,2017,2017,1,https://github.com/manikandan103222/Builder-Design-Pattern
Builder,Builder-D.P,Builder Design Pattern ile konsol uygulaması ,0,0,2018,2018,1,https://github.com/HarunYetgindag/Builder-D.P
Builder,builder-pattern-lumen,Builder Design Pattern In Lumen Example,0,0,2022,2022,1,https://github.com/BadrChoujai/builder-pattern-lumen
Builder,Builder-Design-Pattern,"Adv Software engineering, Builder Design Pattern",0,0,2023,2023,0,https://github.com/stutitrivedi/Builder-Design-Pattern
Builder,Builder-Design-Pattern,One of the Creational Design Patterns,0,0,2019,2019,0,https://github.com/mukeshkrr/Builder-Design-Pattern
Builder,builder-design-pattern,Java Implementation of builder design pattern,0,0,2022,2022,1,https://github.com/JuanF2019/builder-design-pattern
Builder,builder_design_pattern,Builder design pattern practice in Flutter,0,0,2023,2023,1,https://github.com/valeriiaradzivilo/builder_design_pattern
Builder,InheritorBuilderClass,Using Design Pattern C# Chapter 1,0,0,2024,2024,1,https://github.com/loaisaber07/InheritorBuilderClass
Builder,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Builder,BuilderDesignPattern,Assignment: building a demo of a design pattern,0,0,2021,2021,1,https://github.com/esRueda/BuilderDesignPattern
Builder,BuilderDesignPattern,This repo shows different creational builder design patterns ,0,0,2024,2024,1,https://github.com/javad270/BuilderDesignPattern
Builder,springboot-builder,Builder Design Pattern with Spring Boot -- @Builder annotation,0,0,2020,2020,0,https://github.com/ParlaYerli/springboot-builder
Builder,query_builder,applying builder design pattern on query builder class,0,0,2022,2022,1,https://github.com/HamadBakeel/query_builder
Builder,PersonCreator,"Java, Builder and Fluent Builder Design Pattern, JSON",0,0,2016,2016,1,https://github.com/jrswtk/PersonCreator
Builder,weather-v2,Applying Builder and Template Design Pattern,0,0,2019,2019,0,https://github.com/pprogrammer93/weather-v2
Builder,BuilderDesignPattern,a simple example of the Builder design pattern,0,0,2024,2024,1,https://github.com/gruchh/BuilderDesignPattern
Builder,design_patterns_1,"Creational design patterns: Singleton, Factory, Builder.",0,0,2021,2021,1,https://github.com/elvinvaliyev/design_patterns_1
Builder,CSE336s_design-pattern, certain application using BUILDER design pattern.,0,0,2024,2024,1,https://github.com/AlaaAtef2003/CSE336s_design-pattern
Builder,DesignPatterns,Builder and Mediator,0,0,2018,2018,1,https://github.com/badamosor/DesignPatterns
Builder,DesignPatterns,"Builder , factory , Singleton",0,0,2021,2021,1,https://github.com/sharmaashish54/DesignPatterns
Builder,DesignPattern---fluentBuilder,Java design pattern - fluent builder - example,0,0,2016,2016,1,https://github.com/djnx80/DesignPattern---fluentBuilder
Builder,cake-shops,builder and factory-method design pattern.,0,0,2020,2023,1,https://github.com/CristinaRacovita/cake-shops
Builder,Backend-Api-Example-Builder-DP,Backend Api Example Builder Design Pattern,0,0,2023,2023,1,https://github.com/ekremcv/Backend-Api-Example-Builder-DP
Builder,Atividade_Design_Pattern_Builder,Atividade sobre o design pattern Builder,0,0,2024,2024,1,https://github.com/EzequielCavalcante/Atividade_Design_Pattern_Builder
Builder,Design-Pattern-Practice-Builder,My practice of design patterns (Builder),0,0,2017,2017,1,https://github.com/impuls93/Design-Pattern-Practice-Builder
Builder,Computer-Store-Using-JSP,Computer Store Using Builder design pattern,0,0,2024,2024,2,https://github.com/Laksana11/Computer-Store-Using-JSP
Builder,Decorator,"Builder design pattern, might need improvement.",0,0,2018,2018,0,https://github.com/scyzeq/Decorator
Builder,house-builder-pattern-example,C# - Builder design pattern house example.,0,0,2023,2023,1,https://github.com/flcristian/house-builder-pattern-example
Builder,BuilderDesignPattern,Simple Number Converter App - Builder Design Pattern Practice,0,0,2020,2020,1,https://github.com/andres-sumihe/BuilderDesignPattern
Builder,BoatFactory,Boat Factory using Builder design pattern,0,0,2023,2023,1,https://github.com/Strzelba72/BoatFactory
Builder,lab-padroes-projeto-dio,Example of implemented design pattern builder,0,0,2023,2023,1,https://github.com/FransergioDev/lab-padroes-projeto-dio
Builder,SalarySlipBuilderApp,Salary Slip App with Design Patterns,0,0,2018,2018,0,https://github.com/Jhilmil92/SalarySlipBuilderApp
Builder,Builder-Pattern-with-KFC,An object creation software design pattern.,0,0,2017,2017,1,https://github.com/duanyukun69/Builder-Pattern-with-KFC
Builder,BuilderPattern-PersonBuilder,Builder Pattern is a part of Creational Design Pattern,0,0,2023,2023,1,https://github.com/manikandan103222/BuilderPattern-PersonBuilder
Builder,ccdp_tugas_besar,"Pada point yang saya kerjakan adalah Builder Creational Design Pattern, Bridge Structural Design Pattern, Strategy Behavioral Design Pattern ",0,0,2024,2024,1,https://github.com/ngodingmace/ccdp_tugas_besar
Builder,builder-pattern,Example code for the builder design pattern,0,0,2019,2019,1,https://github.com/Ro4052/builder-pattern
Builder,Builder-Pattern,Code exmaple for the Builder design pattern,0,0,2021,2021,0,https://github.com/JoseCruzA/Builder-Pattern
Builder,builder-pattern,This repository about implementing Builder Design Pattern,0,0,2025,2025,1,https://github.com/MahmoudEL-Afandy/builder-pattern
Builder,Builder-Pattern,Example of the Java Builder design pattern,0,0,2015,2015,0,https://github.com/dconey646/Builder-Pattern
Builder,BuilderPattern,Design Pattern explaining how a composite object gets created.,0,0,2020,2020,1,https://github.com/seryafarma/BuilderPattern
Builder,url-builder,Simple Builder Design Patterns Example Using Python,0,0,2024,2024,1,https://github.com/PrashDev425/url-builder
Builder,DesignPatterns,Singleton and Builder Pattern,0,0,2019,2019,0,https://github.com/thamlat-zz/DesignPatterns
Builder,BuilderTemplate,API para exemplificação do funcionamento utilizando design pattern builder,0,0,2023,2023,1,https://github.com/AlanEdward19/BuilderTemplate
Builder,BuilderTWO,Another practical exercise about the creational design pattern Builder,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/BuilderTWO
Builder,design-patterns,Learning Design Patterns.,0,0,2022,2022,1,https://github.com/tnusraddinov/design-patterns
Builder,designPatterns-builderSingleton,College activity about builder and singleton patterns.,0,0,2021,2021,1,https://github.com/euaaron/designPatterns-builderSingleton
Builder,BuilderPattern-DesignPatterns,,0,0,2024,2024,1,https://github.com/FullstackEsther/BuilderPattern-DesignPatterns
Builder,DesignPatterns-Builder2,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Builder2
Builder,DesignPatterns.BuilderExercise,Builders chapter coding exercise in Design Patterns in C# and .NET Udemy course by Dmitri Nesteruk.,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.BuilderExercise
Builder,DesignPattern-Builder,Exemplo do design pattern Builder em java,0,0,2025,2025,1,https://github.com/JulianaNishimura/DesignPattern-Builder
Builder,BuilderDesignPatern,Example of builder design pattern and OOP in Java.,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/BuilderDesignPatern
Builder,Design-Patterns-Builder,Praticando e entendo o Design Pattern Builder.,0,0,2025,2025,1,https://github.com/eurmartins/Design-Patterns-Builder
Builder,BuilderDesignPattern,Builder design pattern with cars and car components exampple,0,0,2023,2023,1,https://github.com/97JN/BuilderDesignPattern
Builder,BuilderDesignPattern,Implementation of Builder Design Pattern Using PUBG Weapons Example.,0,0,2023,2023,1,https://github.com/Satya190597/BuilderDesignPattern
Builder,Cpp-Fluent-Builder,Design Patterns in Modern C++ (Udemy course),0,0,2017,2017,1,https://github.com/dimensionaldivergence/Cpp-Fluent-Builder
Builder,DesignPattern.Builder,Exemplo de implementação do design pattern builder,0,0,2020,2020,1,https://github.com/LexGalante/DesignPattern.Builder
Builder,QA_BuilderPresentation,Builder creational design pattern code for presentation with demo.,0,0,2021,2021,1,https://github.com/Matthew-Place/QA_BuilderPresentation
Builder,DesignPatternBuilder,"Creational design pattern - Builder, a simple example",0,0,2017,2017,1,https://github.com/OlegGlizerin/DesignPatternBuilder
Builder,sqlQueryBuilder,sqlQueryBuilder using Builder design pattern in Java,0,0,2024,2024,1,https://github.com/surjeetvermaiitm/sqlQueryBuilder
Builder,builder-design-pattern,Example implementation of the builder design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/builder-design-pattern
Builder,Builder_Design_pattern,getting the basics of Builder_Design_pattern,0,0,2019,2019,1,https://github.com/Xxtractz/Builder_Design_pattern
Builder,BuilderDesignPattern,Exemplo de implementação em C# do design pattern Builder.,0,0,2015,2019,0,https://github.com/robsoncastilho/BuilderDesignPattern
Builder,builderpattern,The use and implementation of Builder Design Pattern,0,0,2025,2025,1,https://github.com/dinesh-g1/builderpattern
Builder,BuilderDesignPatternExample,Example code of a Builder Design Pattern in C#.,0,0,2019,2019,0,https://github.com/Freelancer-it/BuilderDesignPatternExample
Builder,DesignPatterns,"Singleton,Factory,Builder,Decorator,Strategy",0,0,2024,2024,1,https://github.com/Sruthilenka/DesignPatterns
Builder,SimpleHtmlBuilderCSharp,Simple HTML Builder to demonstrate the Builder Design Pattern,0,0,2023,2023,1,https://github.com/sean-campbelltech/SimpleHtmlBuilderCSharp
Builder,simple-htmlbuilder-java,Simple HTML Builder to demonstrate the Builder Design Pattern,0,0,2023,2023,1,https://github.com/sean-campbelltech/simple-htmlbuilder-java
Builder,cpp-design-pattern-builder,This repository demonstrates the builder design pattern,0,0,2021,2021,1,https://github.com/BruceChanJianLe/cpp-design-pattern-builder
Builder,go_builder_design_pattern,Implementation of builder design pattern  in go .,0,0,2022,2022,0,https://github.com/ParinB/go_builder_design_pattern
Builder,BuilderPattern-HouseRoomsBuilder,House Room Builder is a part of Creational Design Pattern,0,0,2023,2023,1,https://github.com/manikandan103222/BuilderPattern-HouseRoomsBuilder
Builder,Design-Patterns,Design Patterns in C#,0,0,2022,2022,1,https://github.com/nayeemsweb/Design-Patterns
Builder,CarDealer_BuilderDesignPattern,"Building cars with Builder Design Pattern, calculating their prices",0,0,2020,2020,1,https://github.com/vital667/CarDealer_BuilderDesignPattern
Builder,builderPattern,This is an example of Builder Design Pattern in JAVA,0,0,2024,2024,1,https://github.com/ClarkBelen/builderPattern
Builder,BuilderPattern,How can I implement the Builder design pattern in Python?,0,0,2023,2023,1,https://github.com/Humam-Dwikat/BuilderPattern
Builder,BuilderPattern,"Builder Design Pattern using ASP.NET Core, React Js UI",0,0,2020,2020,1,https://github.com/aalloc/BuilderPattern
Builder,AutomationDesignPattern,Builder pattern and Factory Method design pattern ,0,0,2022,2022,1,https://github.com/karthikpalameri/AutomationDesignPattern
Builder,Design-Patterns,"Factory, Builder, Adapter, Singleton, Observer Design Pattern",0,0,2024,2024,1,https://github.com/runitrupam/Design-Patterns
Builder,builder-pattern,design pattern and all other pattern are uploaded,0,0,2019,2019,1,https://github.com/taimurzeb/builder-pattern
Builder,pong-game-java,design pattern strategy builder abstract observer singleton,0,0,2021,2021,1,https://github.com/islamOTH/pong-game-java
Builder,Builder2,"builder - same problem, resolved by ""classic version"" of design pattern",0,0,2021,2021,1,https://github.com/KKMalysa/Builder2
Builder,EsempioBuilder,Questo è un esempio di design pattern Builder,0,0,2021,2021,1,https://github.com/fcauteruccio/EsempioBuilder
Builder,WinterHoliday,Simple implementation of Builder & Strategy design pattern.,0,0,2016,2016,1,https://github.com/HonzoBonzo/WinterHoliday
Builder,br.ucsal.padraoProjetoBuilder,Um codigo maven com design pattern Builder,0,0,2021,2021,1,https://github.com/felipeAEMO/br.ucsal.padraoProjetoBuilder
Builder,design_pattern_builder_en_java,implementation du design pattern builder en java,0,0,2023,2023,1,https://github.com/enigmaBil/design_pattern_builder_en_java
Builder,Repo_builder,Repo building utility for design pattern retrieval system. ,0,0,2018,2018,1,https://github.com/tanzeel-bhatti/Repo_builder
Builder,demo-builder,demo-builder design pattern using .NET 6.0,0,0,2022,2022,1,https://github.com/DimiHk/demo-builder
Builder,Patterns,"Java design Patterns : Singleton, Factory, Builder,Observer",0,0,2020,2020,1,https://github.com/MartinBugar/Patterns
Builder,CompositeDesignPatternWithBuilder,Apply Composite Design Pattern With Builder Approach.,0,0,2022,2022,1,https://github.com/osamaMahmoud328/CompositeDesignPatternWithBuilder
Builder,android-basic-builder-design-pattern-example,Builder Design Pattern Example In Android (Java),0,0,2022,2022,1,https://github.com/Moradix96/android-basic-builder-design-pattern-example
Builder,dpmbs,Design Pattern and module Builder for SFDX,0,0,2018,2018,1,https://github.com/anandbhardwaj/dpmbs
Builder,CustomDialog,Implement Custom dislog with builder design pattern,0,0,2021,2021,1,https://github.com/mokeshawy/CustomDialog
Builder,builder-pattern,Demo of builder design pattern with fluent interface,0,0,2020,2020,1,https://github.com/DrOldGuy/builder-pattern
Builder,Builder-sandwich,Practice and explication of the builder design pattern,0,0,2023,2023,1,https://github.com/KeiJeff/Builder-sandwich
Builder,DPBuilder,Exemplo de implementação do Design Pattern Builder,0,0,2024,2024,1,https://github.com/Felipe-Pestana/DPBuilder
Builder,House-Builder,Simple implementation of builder design pattern in C#,0,0,2022,2022,1,https://github.com/lahns/House-Builder
Builder,demo,"Demo App - Factory, Builder & Singleton Design Pattern",0,0,2016,2016,1,https://github.com/smruti05/demo
Builder,Ex1,Exercise of using Design Patterns - Command & Builder.,0,0,2019,2019,0,https://github.com/bariudin777/Ex1
Builder,CS665Assign3,"Design Patterns, SimpleFactory, Abstract Factory, Director, Builder ",0,0,2024,2024,1,https://github.com/jimmyjazz31/CS665Assign3
Builder,Design_Pattern,"Creational design patterns: Abstract Factory, Prototype, Builder",0,0,2021,2021,1,https://github.com/AnnDv/Design_Pattern
Builder,Self-Service-Restaurant,Self Service Restaurant uses Builder Design Pattern,0,0,2015,2015,1,https://github.com/BMomani/Self-Service-Restaurant
Builder,stored-procedure,"store procedure , database first , builder design pattern",0,0,2024,2024,1,https://github.com/heinwaiyanhtet/stored-procedure
Builder,Builder-Iterator-Chain-of-Responsibilities,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/Builder-Iterator-Chain-of-Responsibilities
Builder,DesignPatternsProject,Implementation of two design patterns-Builder+Singleton,0,0,2022,2022,0,https://github.com/LarisaBardita/DesignPatternsProject
Builder,DesignPatternJava,"Design patterns for Java (Builder, Factory, Adapter )",0,0,2022,2022,0,https://github.com/pokhrelricha/DesignPatternJava
Builder,cgpa-calculator,Using factory design pattern and builders design pattern to build a CGPA calculator system,0,0,2022,2022,1,https://github.com/Akinpelumi/cgpa-calculator
Builder,BuilderDesignPattern,This is a Java implementation of the Builder design pattern,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/BuilderDesignPattern
Builder,BuilderExampleCpp,A simple design pattern to illustrate how a builder works,0,0,2020,2020,1,https://github.com/bk-wrattler/BuilderExampleCpp
Builder,BuilderDesignPattern,this is an implementation of Builder design pattern in Java,0,0,2021,2021,1,https://github.com/aalsomali/BuilderDesignPattern
Builder,Builder_Design_practice,Attempts at understanding and practicing Builder Design patterns,0,0,2021,2021,1,https://github.com/DylonColquitt96/Builder_Design_practice
Builder,DesignPatternsBuilder,,0,0,2018,2018,0,https://github.com/xufeixianggithub/DesignPatternsBuilder
Builder,DesignPatterns.Builder,,0,0,2021,2021,1,https://github.com/Vali-Mandeal/DesignPatterns.Builder
Builder,DesignPatterns.Builder,,0,0,2024,2024,1,https://github.com/francomacri17/DesignPatterns.Builder
Builder,DesignPatterns_Builder,,0,0,2021,2021,1,https://github.com/RVSN451/DesignPatterns_Builder
Builder,DesignPatternsBuilder,POLSL Homework,0,0,2024,2024,1,https://github.com/nimoCreator/DesignPatternsBuilder
Builder,DesignPatternsBuilder,Um exemplo de padrão de projeto builder e factory,0,0,2016,2016,0,https://github.com/victorhugolgr/DesignPatternsBuilder
Builder,DesignPatterns-Builder,,0,0,2021,2021,1,https://github.com/reinaldohneto/DesignPatterns-Builder
Builder,DesignPatterns_Builder,,0,0,2022,2022,1,https://github.com/Prod4Oz/DesignPatterns_Builder
Builder,DesignPatternsBuilder,DesignPatterns,0,1,2013,2014,1,https://github.com/MindD3v/DesignPatternsBuilder
Builder,DesignPatterns-Builder,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Builder
Builder,DesignPatterns-Builder,Example Builder pattern as described in Design Patterns - Elements of Reusable Object-Oriented Software,0,0,2018,2018,1,https://github.com/spencer-shadley/DesignPatterns-Builder
Builder,exemplo-builder-java,Exemplo do Builder Design Pattern feito em Java,0,0,2024,2024,1,https://github.com/JulioEstrela/exemplo-builder-java
Builder,DesignPatterns.Builder,,0,0,2020,2020,0,https://github.com/Jeroo/DesignPatterns.Builder
Builder,DesignPatterns-Builder,,0,0,2024,2024,1,https://github.com/wep1980/DesignPatterns-Builder
Builder,DesignPatterns-Builder,,0,0,2020,2020,0,https://github.com/shahabahi/DesignPatterns-Builder
Builder,DesignPatterns-Builder,,0,0,2021,2021,1,https://github.com/DanielMachado29/DesignPatterns-Builder
Builder,DesignPatterns.Builder,,0,0,2022,2022,1,https://github.com/dFarkhod/DesignPatterns.Builder
Builder,DesignPatternsBuilder,,0,0,2024,2024,1,https://github.com/AleCam04/DesignPatternsBuilder
Builder,DesignPatterns-Builder,,0,1,2014,2014,1,https://github.com/dagge22/DesignPatterns-Builder
Builder,DesignPatternsBuilder,DesignPattrnBuilder,0,0,2022,2022,1,https://github.com/t-tatarski/DesignPatternsBuilder
Builder,GoF-Builder,Studying the theory and implementation of Design Patterns,0,0,2023,2023,1,https://github.com/RuanK07/GoF-Builder
Builder,DesignPatterns-Builder,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Builder
Builder,DesignPatterns_Builder,,0,0,2021,2021,1,https://github.com/glucaas/DesignPatterns_Builder
Builder,BuilderPattern_HouseBuilder,Builder Design Pattern in C#. Real World example is House Builder.,0,0,2014,2014,1,https://github.com/wcadap/BuilderPattern_HouseBuilder
Builder,DesignPatterns-Builder,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Builder
Builder,DesignPatterns-Builder,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-Builder
Builder,Builder-Design-Pattern,"A simple messaging service, implementing Builder Design Pattern.",0,0,2024,2024,1,https://github.com/asudigital/Builder-Design-Pattern
Builder,SwiftBuilderPattern,Sample project of Builder design pattern with Swift ,0,0,2017,2021,1,https://github.com/eiwaithein/SwiftBuilderPattern
Builder,swiftBuilderDP,"👷 Builder Design Pattern, in Swift 3.0",0,1,2017,2017,1,https://github.com/adagio/swiftBuilderDP
Builder,Builder-Design-Pattern,Builder Design Pattern  with its Use Case Scenario,0,0,2023,2023,0,https://github.com/nirmala-sharma/Builder-Design-Pattern
Builder,design-patterns-builder,This is an example of builder design pattern,0,0,2018,2018,0,https://github.com/boczkas/design-patterns-builder
Builder,DesignPatterns-Builder,,0,0,2021,2021,1,https://github.com/GabrielBronte/DesignPatterns-Builder
Builder,DesignPatterns.Builder,The Builder design pattern separates the construction of a complex object from its representation so that the same construction process can create different representations.,0,0,2022,2022,1,https://github.com/Paolo1995/DesignPatterns.Builder
Builder,DesignPatterns_Builder,,0,0,2024,2024,1,https://github.com/claudiovdev/DesignPatterns_Builder
Builder,Builder_Factory_Model,Builder and Factory Model are Creational Design Pattern,0,1,2021,2021,1,https://github.com/abhish-knp/Builder_Factory_Model
Builder,BuilderDesignPatternDemo,Spring boot project where model follows the builder design pattern,0,0,2022,2022,1,https://github.com/rohit-56/BuilderDesignPatternDemo
Builder,DesignPatterns,"Builder, Factory, Command, Mediator, State, Observer etc.",0,0,2023,2023,1,https://github.com/duhayildirim/DesignPatterns
Builder,designPatterns,"Exercise: Abstract Factory, Builder, Singleton, Decorator, Facade",0,0,2019,2019,1,https://github.com/alexandrakurek/designPatterns
Builder,DesignPatterns-Java,"Singleton, Factory Abstract & Builder in (Java)",0,0,2020,2021,1,https://github.com/anas11cs/DesignPatterns-Java
Builder,Usecase-Builder-design-pattern,It shows the implementation of builder design pattern,0,0,2024,2024,0,https://github.com/N-andish/Usecase-Builder-design-pattern
Builder,BuilderPattern,This Repository hosts how a Builder Design Pattern could be used.,0,0,2019,2019,1,https://github.com/DonkeyKongJr/BuilderPattern
Builder,Room_Builder_Design_Patterns,A C++ Memory Management and Design Pattern Exercise,0,0,2020,2022,2,https://github.com/DouglasHWalker/Room_Builder_Design_Patterns
Builder,BuilderPattern,This project shows the implementation of Builder design pattern in Java.,0,0,2021,2021,0,https://github.com/m-h-s/BuilderPattern
Builder,Builder-Observer-Design-Patterns,"Example of using the Builder, Observer design patterns",0,0,2023,2023,1,https://github.com/emrepektemek/Builder-Observer-Design-Patterns
Builder,DesignPatternsCircuitBuilder,Circuit builder application for Design Patterns 1 Avans,0,0,2018,2018,2,https://github.com/JacobMeister/DesignPatternsCircuitBuilder
Builder,fluent-interface-and-builder,Training and improve my abilities about Design Patterns.,0,0,2021,2021,1,https://github.com/giovanivrech/fluent-interface-and-builder
Builder,Demo.DesignPattern.Builder,An example of builder design pattern in C#,0,0,2023,2023,1,https://github.com/LiteObject/Demo.DesignPattern.Builder
Builder,BDesignPatternFluentBuilder,The Builder design pattern is a creational design pattern that lets us create an object one step at a time.,0,0,2021,2021,1,https://github.com/eosoria87/BDesignPatternFluentBuilder
Builder,builder-design-pattern,Builder Design Pattern in Python - example of a pizza builder. ,0,0,2019,2019,1,https://github.com/theookoye/builder-design-pattern
Builder,GenericBuilder,A Builder design pattern generic implementation for .NET Core,0,0,2021,2021,1,https://github.com/rubemrocha/GenericBuilder
Builder,CarBuilder,Multiple design pattern using Java for customized Car builder,0,0,2017,2017,1,https://github.com/amitr1983/CarBuilder
Builder,DeviceBuilder,Implementation of builder and adapter object oriented design patterns,0,0,2024,2024,1,https://github.com/ManuRodriguez10/DeviceBuilder
Builder,CityBuilder,city bulilder udemy course solid priciple and design pattern,0,0,2023,2023,1,https://github.com/RohanchoudharyNOFEAR/CityBuilder
Builder,DrumBuilder,Using the Builder Design Pattern for our Drum Objects.,0,0,2024,2024,1,https://github.com/philbowden/DrumBuilder
Builder,DesignPatterns,Singleton Factory Builder Facade Observer Design patterns examples,0,0,2019,2019,1,https://github.com/Sandaka/DesignPatterns
Builder,html-builder-pattern,A HTML builder with Builder Design Pattern inspired by d3js.,0,0,2024,2024,1,https://github.com/atmr0/html-builder-pattern
Builder,builder_exercise,Flutter exercise about the design pattern Builder in Flutter,0,0,2022,2022,1,https://github.com/cindistar/builder_exercise
Builder,DesignPatterns,Some examples of design patterns,0,0,2021,2021,1,https://github.com/EdgarPozas/DesignPatterns
Builder,DesignPatternsCpp,"Composite, Builder, Abstract Factory, Visitor, Prototype Patterns",0,1,2014,2015,0,https://github.com/paumayr/DesignPatternsCpp
Builder,design-patterns-builder-singleton-prototype,"Example of design patterns builder , singleton et prototype",0,0,2023,2023,1,https://github.com/Bouzidhadjer/design-patterns-builder-singleton-prototype
Builder,Xperiments.DesignPatterns.Builder,A litttle implementation of Builder pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Builder
Builder,DesignPatterns-Creational-Builder,Builder pattern allows you to separate and reuse a specific process to build something,0,0,2021,2021,1,https://github.com/bethovenacha/DesignPatterns-Creational-Builder
Builder,BuilderAndOtherDesignPatterns,Builder Design Pattern and other Design Patterns to revise learned from https://www.youtube.com/watch?v=M7Xi1yO_s8E&list=PLZlA0Gpn_vH_CthENcPCM0Dww6a5XYC7f&index=3,0,0,2019,2019,1,https://github.com/markpackham/BuilderAndOtherDesignPatterns
Builder,DesignPatterns-Cre-Builder,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Cre-Builder
Builder,DesignPatterns-Fluent-Builder,,0,0,2021,2021,1,https://github.com/in-hemantgupta/DesignPatterns-Fluent-Builder
Builder,DesignPatterns_1_Builder,,0,0,2023,2023,1,https://github.com/VioK0709/DesignPatterns_1_Builder
Builder,CSharp-DesignPatterns-Builder,"Simple application demonstrating the ""Builder"" design pattern in C#",0,1,2014,2014,1,https://github.com/diamonddelt/CSharp-DesignPatterns-Builder
Builder,DesignPatterns-Creational-Builder,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Creational-Builder
Builder,designPatterns-2-Builder,,0,0,2024,2024,1,https://github.com/vekaonelove/designPatterns-2-Builder
Builder,designPatternsBuilder1,,0,0,2024,2024,1,https://github.com/LuigiMottola/designPatternsBuilder1
Builder,DesignPatterns,"Creational Design Patterns (Factory, Abstract Factory , Singleton , Builder, Prototype)",0,0,2022,2022,1,https://github.com/shari06/DesignPatterns
Builder,DesignPatterns.FluentBuilder,,0,0,2020,2020,0,https://github.com/Jeroo/DesignPatterns.FluentBuilder
Builder,DesignPatterns.2.Builder,,0,0,2024,2024,1,https://github.com/SimoCu3/DesignPatterns.2.Builder
Builder,builder_design_pattern,"#Day3, approach to implement #java builder design pattern. #100DaysOfCode",0,0,2020,2020,1,https://github.com/jashuRc/builder_design_pattern
Builder,builder_dp_typescript,An example of the Builder Design Pattern in TypeScript,0,0,2021,2021,1,https://github.com/edkaresli/builder_dp_typescript
Builder,FinancialReportBuilder,This is an example of the builder design pattern,0,0,2015,2015,1,https://github.com/fishesofhawaii/FinancialReportBuilder
Builder,DesignPatterns,"Builder, Singleton and Factory Method Design Patterns + Test Cases",0,0,2014,2014,0,https://github.com/210016299/DesignPatterns
Builder,DesignPatternsPersonalBuilder,,0,0,2024,2024,1,https://github.com/Kaulina/DesignPatternsPersonalBuilder
Builder,PizzaBuilderPattern,Quick demo to show how Builder Design Pattern works,0,0,2016,2016,1,https://github.com/ruyakubu/PizzaBuilderPattern
Builder,test-data-builder,project using and learning design pattern test-data-builder,0,0,2023,2023,1,https://github.com/Joao-Pedro15/test-data-builder
Builder,DesignPatterns,"Adapter, Builder, Decorator, Chain of Responsibility, Factory, Observer, Singleton",0,0,2022,2022,0,https://github.com/KarynaAliushkevich14/DesignPatterns
Builder,builder-design-pattern,How to creating chaining builder design pattern in C++,0,0,2022,2022,1,https://github.com/Bernard-wuam/builder-design-pattern
Builder,ChainOfResponsibility,Chain of Responsibility Design Pattern example with Builder,0,0,2019,2019,1,https://github.com/bonggalshn/ChainOfResponsibility
Builder,SSDI-Assignment1,Showcase of the Builder Design Pattern in Java,0,0,2022,2022,1,https://github.com/AmmarHatiya/SSDI-Assignment1
Builder,Observer-design-pattern,Implementing Observer design pattern with Undoable string builder,0,0,2022,2022,1,https://github.com/naelaboraya/Observer-design-pattern
Builder,design-pattern-2,"-- DESIGN PATTERNS USED  -- Composition, Decorator, Proxy, Builder, Singleton",0,0,2022,2022,0,https://github.com/yhann0695/design-pattern-2
Builder,Coffee-machine-Project,"Coffee machine project using Strategy,Builder Design patterns.",0,0,2022,2024,1,https://github.com/Nevocohen111/Coffee-machine-Project
Builder,br.edu.umfg.prog-tres.builder,Design Patterns - Builder - 1424 . Diego Garcia Perez Biguette,0,0,2024,2024,1,https://github.com/D1360-64RC14/br.edu.umfg.prog-tres.builder
Builder,Zombie_Game,"Applied design pattern such as composite, decorator, builder",0,0,2017,2017,1,https://github.com/KilyN/Zombie_Game
Builder,StudentOrientation-Program-System,A java based system implementing Builder Design Pattern,0,0,2017,2017,0,https://github.com/triveni899/StudentOrientation-Program-System
Builder,builder_design_pattern_carBuilder,Car object is build using builder design pattern from refactoring guru,0,0,2023,2023,1,https://github.com/shishirjain/builder_design_pattern_carBuilder
Builder,CSE336s_PROJECT,design for certain application using Builder design pattern.,0,0,2024,2024,1,https://github.com/EsraaAtef2101016/CSE336s_PROJECT
Builder,builder,Simple project demonstrating the builder design pattern. For this project I made an application wich builds a computer,0,0,2021,2022,1,https://github.com/Piazzi/builder
Builder,DesignPatterns,"Singleton, Factory method, Adapter, Facade, Command, Mediator, Observer, Repository, Builder",0,0,2022,2022,1,https://github.com/Xakimov1610/DesignPatterns
Builder,builder_design_pattern_example,Java Clean Code Tutorial #3 - Builder Design Pattern Example,0,0,2020,2021,1,https://github.com/fluxmeister/builder_design_pattern_example
Builder,PocOnBuilderDP,Demonstrated Builder Design Pattern Using Simple Example in C#,0,0,2024,2024,1,https://github.com/Durgeshbeldar/PocOnBuilderDP
Builder,BurgerBuilderPatternExample,"Here's my example of creational design pattern ""Builder""",0,0,2022,2022,1,https://github.com/99Astral99/BurgerBuilderPatternExample
Builder,BuilderDesignPattern,Implementation of a Builder Design Pattern and same solution using Lombok framework,0,0,2022,2022,1,https://github.com/Fiap-TDS2/BuilderDesignPattern
Builder,padraoBuilder,Design Pattern Builder With Java. P.s: created with Intellij,0,0,2021,2021,1,https://github.com/sankassio99/padraoBuilder
Builder,Builder-Pattern,An illustration of the use of the builder design pattern,0,0,2021,2021,1,https://github.com/v1b3m/Builder-Pattern
Builder,Builder-Pattern,Builder Design Pattern: Separarea constructiei unui obiect de reprezentarea acestuia.,0,0,2023,2023,1,https://github.com/PrisacariuAndrei/Builder-Pattern
Builder,BuilderPatternPython,This is a simplified example of the builder design pattern in python.,0,0,2022,2023,1,https://github.com/Viscmad/BuilderPatternPython
Builder,JavaBuilder,Simple demo implementation of the Builder design pattern in Java,0,0,2021,2021,1,https://github.com/renanrfranca/JavaBuilder
Builder,BuilderDesignPattern,This code shows implementation of Building select query using Builder Design Pattern ,0,0,2023,2023,1,https://github.com/LasindaDilshan/BuilderDesignPattern
Builder,CoffeeBuilder,Java Project using Test and example of Builder Design Pattern,0,0,2024,2024,1,https://github.com/mrp4sten/CoffeeBuilder
Builder,Creational-Builder,This is a short implementation of the Builder design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Creational-Builder
Builder,ScalaBuilder,For educational purposes only. Implementation of Builder Creational Design Pattern,0,0,2024,2024,1,https://github.com/admiral2k/ScalaBuilder
Builder,builder-example,Design Pattern university course practical excercise for displaying Builder pattern,0,0,2023,2023,0,https://github.com/tadaskarmanovas/builder-example
Builder,GameHub,"Design pattern CS542 final project made using Object Pool, Snapshot, Singleton, Builder and State Design Pattern.",0,1,2020,2024,1,https://github.com/nihalnihalani/GameHub
Builder,DesignPatternsProject,"Example wpf project with Builder, Template Method and Singleton.",0,0,2020,2020,1,https://github.com/koper0315/DesignPatternsProject
Builder,DesignPatterns,"Pizza restaurant dealer applying Factory, Abstract Factory, Builder and Singleton patterns ",0,0,2024,2024,1,https://github.com/ivetmompin/DesignPatterns
Builder,Design-Patterns,Builder & Factory examples,0,0,2024,2024,1,https://github.com/PixelHell97/Design-Patterns
Builder,design-pattern-builder-imp-car,Implementation of example's Car using Builder Design Pattern,0,0,2023,2023,1,https://github.com/ajunquit/design-pattern-builder-imp-car
Builder,DesignPatterns_HW1Builder,,0,0,2023,2023,1,https://github.com/semyonsavenkov/DesignPatterns_HW1Builder
Builder,YamlBuilder,a gitlab yaml builder using fluent API and builder design pattern,0,0,2022,2022,2,https://github.com/w-3513y/YamlBuilder
Builder,java-DesignPatterns-StockBuilder,,0,0,2020,2020,1,https://github.com/cocoiscoding/java-DesignPatterns-StockBuilder
Builder,DesignPatternsProject-Builder-Observer,Builder and Observer design patterns explanation with examples + code practices ,0,0,2020,2020,1,https://github.com/Diaj3/DesignPatternsProject-Builder-Observer
Builder,BuilderDesignPatterns,Builder Tasarım kalıbı,0,0,2022,2022,1,https://github.com/UmutBilgen/BuilderDesignPatterns
Builder,BuilderDesignPatterns,BuildefDesignerPatterns ,0,0,2023,2023,0,https://github.com/mammadovturqay/BuilderDesignPatterns
Builder,DesignPatternsExamples,"Demo Betting App with Singelton, Builder, Adapter and ChainOfResponsibility Pattern",0,0,2020,2020,1,https://github.com/donstany/DesignPatternsExamples
Builder,Builder-design-pattern,This prohect is about how to use builder design pattern,0,0,2022,2022,1,https://github.com/giancarlo20/Builder-design-pattern
Builder,Builder-Design-Pattern,Implementation of builder design pattern in java for quick demo,0,0,2019,2020,1,https://github.com/pkErbynn/Builder-Design-Pattern
Builder,Design-Pattern-Builder,Teste de uso do Design Pattern Builder TypeScript e Node,0,0,2024,2024,1,https://github.com/jerickleandro/Design-Pattern-Builder
Builder,Builder-Design-Pattern,This repo contains pseudocode of Builder design pattern in JAVA,0,0,2023,2023,1,https://github.com/samarth36483/Builder-Design-Pattern
Builder,builder_design_pattern,This project implements a use case of Builder Design Pattern.,0,0,2024,2024,1,https://github.com/GabrielBortolote/builder_design_pattern
Builder,builder-pattern-java,Builder design pattern implementation in Java to build complex objects,0,0,2024,2024,1,https://github.com/williamfisher9/builder-pattern-java
Builder,DemoFacetedBuilder,Faceted Builder  Design pattern example for a complicated objects instantiation,0,0,2021,2021,1,https://github.com/OlgaYatsenko/DemoFacetedBuilder
Builder,Builder-Design-Pattern,Builder Design Pattern to create an itinerary for visiting university,0,0,2023,2023,1,https://github.com/anis-agwan/Builder-Design-Pattern
Builder,jpatterns,Java annotation processor that helps to implement popular software design patterns,0,0,2020,2020,2,https://github.com/mariusnarmontas/jpatterns
Builder,DesignPatternsCSharp,"Example of Builder, Abstract Factory, Visitor and Prototype in iterative steps",0,1,2014,2014,0,https://github.com/paumayr/DesignPatternsCSharp
Builder,DesignPatterns,"Projetos com as metodologias, Builder, Template Method, Cadeia de responsabilidades, Decorator, Observer, State.",0,1,2016,2016,1,https://github.com/diegocar448/DesignPatterns
Builder,refactoring-guru,own implementation for design-patterns in refactoring-guru,0,0,2023,2023,1,https://github.com/joseederangojr/refactoring-guru
Builder,builder_design_pattern_integu,Java Builder design pattern as seen on integu's site,0,0,2020,2020,1,https://github.com/fluxmeister/builder_design_pattern_integu
Builder,produto-builder,Projeto Java de fim acadêmico para demonstração do design pattern Builder,0,0,2021,2021,1,https://github.com/TheJamylle/produto-builder
Builder,Design-Patterns,Patron de diseño Builder,0,0,2019,2019,1,https://github.com/JoseBuitrago/Design-Patterns
Builder,Design_patterns,"Observer, builder, adapter, decorator",0,0,2023,2023,2,https://github.com/timofeev-vadim-96/Design_patterns
Builder,builder-go,Source: https://refactoring.guru/design-patterns/builder/go/example#example-0,0,0,2022,2022,1,https://github.com/fabiorubim/builder-go
Builder,derive-builder,Implementation of The Builder Design pattern with Rust's Procedural macro,0,0,2021,2021,1,https://github.com/victor-iyi/derive-builder
Builder,Qt5_Intermediate_13.2_DesignPatterns_BuilderPattern,,0,0,2021,2021,1,https://github.com/RS-codes/Qt5_Intermediate_13.2_DesignPatterns_BuilderPattern
Builder,flightDiscount-builder-guava,implementing builder design pattern for discount policies in flight bookings,0,0,2019,2019,1,https://github.com/farshad-nsh/flightDiscount-builder-guava
Builder,builder-pattern,The Implementation of Builder Pattern as the Part of Design Pattern,0,0,2020,2020,1,https://github.com/erikrios/builder-pattern
Builder,circuit_builder,A fun java project to practice software design patterns and architecture.,0,0,2022,2022,1,https://github.com/HeadJk/circuit_builder
Builder,design-patterns-builder,Builder Pattern (GoF),0,0,2020,2020,1,https://github.com/dev-tommy/design-patterns-builder
Builder,blueprint-interface,Provides a standard for the blueprint-builder design pattern,0,0,2016,2016,1,https://github.com/Dhii/blueprint-interface
Builder,Design-Pattern,Contoh implementasi design pattern Builder dan Singleton pada Springboot,0,0,2024,2024,1,https://github.com/daffaraihandika/Design-Pattern
Builder,Bulider-pattern,Builder design pattern on java in SQL API example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Bulider-pattern
Builder,the_crepe_house, Crepe house project created using the design pattern: builder. ,0,0,2023,2023,1,https://github.com/ITrepka/the_crepe_house
Builder,javaExerciseParking,"Java exercise (Builder design pattern, Interface, StringBuilders, JUnit testing)",0,0,2023,2023,1,https://github.com/tutankamos/javaExerciseParking
Builder,DroneSystem,Implementation of factory and builder object oriented design patterns ,0,0,2024,2024,1,https://github.com/ManuRodriguez10/DroneSystem
Builder,payment-service,"Implementing a payment service with Builder, Strategy design patterns.",0,0,2022,2022,1,https://github.com/Miltonjacomini/payment-service
Builder,design_patterns,"Small POCs on Factory, Singletoon and Builder design pattern",0,0,2023,2023,1,https://github.com/shridhardaga04/design_patterns
Builder,Observer,Observer / Builder Design Pattern Implementation for Student records Backup,0,0,2016,2016,0,https://github.com/hprem991/Observer
Builder,car-manufacture,Using java to implement Builder and Prototype design patterns,0,0,2023,2023,1,https://github.com/mohammadsoukar2/car-manufacture
Builder,DPBuilder,Design Pattern Builder use to provide object serialization deserialization ,0,0,2015,2015,1,https://github.com/crespo2014/DPBuilder
Builder,burger-service,A Java project that illustrates the Builder Design Pattern,0,0,2023,2023,1,https://github.com/NdiranguMuchai/burger-service
Builder,design-patterns-spring-boot,"This project, implementing, design patterns, command, factory, decorator, builder",0,0,2024,2024,1,https://github.com/guilhermeferreira0/design-patterns-spring-boot
Builder,DesignPatternImplementation,"Sample implementation of two design pattern, Abstract and Builder.",0,0,2019,2019,0,https://github.com/shopip/DesignPatternImplementation
Builder,CreationalDesignPatternsComparison,"Comparison of Abstract Factory, Builder and Prototype design patterns",0,0,2020,2020,1,https://github.com/Pokoi/CreationalDesignPatternsComparison
Builder,DesignPatterns," Se aplicó los principios de los patrones de diseño Singleton, Builder y Factory Method ",0,0,2023,2023,2,https://github.com/MenMor/DesignPatterns
Builder,Burger_Joint,Single screen Flutter web app with builder design pattern,0,0,2020,2020,1,https://github.com/mahnoor-fatima-saad/Burger_Joint
Builder,design-patterns-ts,"Examples for Builder, Facade, Visitor and Memento Design Patterns",0,0,2017,2017,1,https://github.com/BlackHarpy/design-patterns-ts
Builder,golang-design-pattern,"Research design pattern golang Builder, Factory, Inversion of control",0,0,2022,2022,1,https://github.com/phan-trong/golang-design-pattern
Builder,BuilderHamburgueria,Projeto utilizando o design pattern Builder no preparo de hamburguers numa hamburgueria como McDonalds.,0,0,2019,2019,1,https://github.com/pedrospim/BuilderHamburgueria
Builder,BuilderTutorial,"Source code examples describes Builder design pattern, also is describe in blog devman.pl",0,0,2018,2018,1,https://github.com/Slaw145/BuilderTutorial
Builder,blueprint-abstract,An abstract implementation of the blueprint-builder design pattern.,0,0,2016,2016,1,https://github.com/Dhii/blueprint-abstract
Builder,TacoStand,Taco Stand created using Builder design pattern in C++.,0,0,2020,2020,1,https://github.com/mbaumaister13/TacoStand
Builder,CSharp.DesignPatterns.2.Creational.Builder,,0,0,2021,2021,1,https://github.com/oscarcortez/CSharp.DesignPatterns.2.Creational.Builder
Builder,UniversalChartBuilder,"Flowchart Builder with GoJS,JsPlumb and mxGraph library (Strategy Design Pattern)",0,0,2017,2023,2,https://github.com/kmate1/UniversalChartBuilder
Builder,Builder-Design-Pattern,Example demonstrating creation of an object using the Builder Design Pattern.,0,0,2017,2017,1,https://github.com/nazgulrider/Builder-Design-Pattern
Builder,Builder-design-pattern-,this is an example for Builder design pattern  done by me ,0,0,2024,2024,0,https://github.com/DragosBobo/Builder-design-pattern-
Builder,builderDesignPatternInLaravel,Shows how to use the builder design pattern in Laravel. Watch the video. ,0,0,2024,2024,0,https://github.com/talksonweb/builderDesignPatternInLaravel
Builder,Builder-Design-Pattern,learning about the Builder Design pattern and how to implement it,0,0,2020,2020,1,https://github.com/StutiBansal21/Builder-Design-Pattern
Builder,Builder-Design-Pattern,A simple example showing the implementation of the buildeer design pattern,0,0,2020,2023,1,https://github.com/ShaneMaglangit/Builder-Design-Pattern
Builder,padrao-projeto-builder,Esse é um projeto de estudo sobre o design pattern builder,0,0,2024,2024,1,https://github.com/devalexferreira/padrao-projeto-builder
Builder,java-builder-pattern,Design pattern builder to construct complex objects in a flexible approach,0,0,2023,2023,1,https://github.com/JAVA-MSDT/java-builder-pattern
Builder,rust-builder-pattern,This an example for builder design pattern in rust programming language.,0,0,2024,2024,1,https://github.com/benjaminjamesxyz/rust-builder-pattern
Builder,Design_Patterns_BuilderPattern,,0,0,2022,2022,0,https://github.com/ColdSwordX/Design_Patterns_BuilderPattern
Builder,design-patterns-builder,Padrão de Projeto Builder,0,0,2019,2019,1,https://github.com/kevinPugliese/design-patterns-builder
Builder,JavaDesignPatterns,AbstractFactory-Builder-Factory-Singeltone,0,0,2020,2020,1,https://github.com/einkaaf/JavaDesignPatterns
Builder,udemy-builder,This is an example code from C++ Design Patterns lecture in Udemy.,0,0,2021,2021,1,https://github.com/onurtuna/udemy-builder
Builder,Builder-Patterns,this is Builder Patterns one of creational design patterns with car example,0,0,2022,2022,1,https://github.com/Mohamedzayed52100/Builder-Patterns
Builder,Builder-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Builder-Pattern
Builder,DesignPatterns-Creational,"Study about creational design patterns such as Singleton, Prototype, Factory, Abstract Factory and Builder",0,0,2019,2019,1,https://github.com/costalopes71/DesignPatterns-Creational
Builder,Builder-Design-Patterns,Implementation of Builder DP.,0,0,2020,2020,0,https://github.com/alltimeJoe216/Builder-Design-Patterns
Builder,builder-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Builder em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/builder-java
Builder,LLD_CreationalDesign,"Implemented some of the design Patterns which comes under Creational design mainly (Singleton, Builder and Factory Design pattern ",0,0,2023,2023,1,https://github.com/itsyashid/LLD_CreationalDesign
Builder,builder-pattern,The project includes various design patterns which are often used in Unity.,0,0,2024,2024,1,https://github.com/sdurlanik/builder-pattern
Builder,Design-Patterns-Tutorial-Builder, This project is taken from Derek Banas' Design Patterns Tutorial series.,0,0,2019,2019,1,https://github.com/olosinno/Design-Patterns-Tutorial-Builder
Builder,HW_Design_Patterns_-_Builder,Порождающие шаблоны. Builder,0,0,2023,2023,1,https://github.com/ischeglov/HW_Design_Patterns_-_Builder
Builder,Design_patterns_1.1,Шаблоны проектирования - Builder,0,0,2023,2023,1,https://github.com/alexeylh/Design_patterns_1.1
Builder,DesignPatterns,"Solution in C# including most common used design patterns such as: Factory, Adapter, Strategy, Facade and Builder",0,0,2022,2022,1,https://github.com/johann67880/DesignPatterns
Builder,Design-Patterns,Practise of factory and builder pattern,0,0,2016,2016,0,https://github.com/atul221282/Design-Patterns
Builder,DesignPatternsRust,"Algunos patrones de diseño en Rust, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,1,https://github.com/Jonathana1106/DesignPatternsRust
Builder,Design-Patterns,Singleton; Factory /Abstract Factory; Builder; Repository,0,0,2019,2019,1,https://github.com/chjoaquim/Design-Patterns
Builder,DesignPatterns,"Algunos ejemplos de algunos patrones de diseño en C++, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,2,https://github.com/Jonathana1106/DesignPatterns
Builder,CS474_ScalaBuilderPattern,Scala implementation of the Builder design pattern exploiting type level programming,0,0,2017,2018,1,https://github.com/muscionig/CS474_ScalaBuilderPattern
Builder,StarTrek_Builder,A Star Trek Implementation of the Gang Of Four Builder Design Pattern,0,0,2020,2020,1,https://github.com/rxp8385/StarTrek_Builder
Builder,FactoryAndBuilderDesignPatterns,Combination of Factory and Builder Design Patterns in a single project,0,0,2022,2022,1,https://github.com/goktugcebe/FactoryAndBuilderDesignPatterns
Builder,email.step.builder,"to introduce the java design pattern: Step builder, using a email example",0,0,2017,2017,0,https://github.com/xueyuanl/email.step.builder
Builder,BuilderPatternPlayground,My inplementation from this article https://theswiftdev.com/2018/05/24/swift-builder-design-pattern/,0,0,2018,2018,1,https://github.com/spprichard/BuilderPatternPlayground
Builder,APICall-BuilderPattern,Creating an easy to use API Call interface in Swift with the Builder-Design-Pattern. ,0,0,2020,2020,1,https://github.com/ZackDavidWalker/APICall-BuilderPattern
Builder,DesignPatterns-Creational,"Creational design patterns, Singleton, Builder, Prototype, Factory, and AbstractFactory as defined by the Gang of Four",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Creational
Builder,Risks_Practising_DesignPatterns,"A simple project to implement myself a few design patterns: Builder, Decorator and Command.",0,0,2019,2019,1,https://github.com/pisanina/Risks_Practising_DesignPatterns
Builder,builder-pattern-with-static-builder-class,Builder design pattern implementation in Java to build complex objects with static builder class,0,0,2024,2024,1,https://github.com/williamfisher9/builder-pattern-with-static-builder-class
Builder,flightBooking202_personal,"flightBooking202_personal -> design pattern chain of responsibility , builder pattern , singleton ",0,0,2022,2022,1,https://github.com/satishkkk/flightBooking202_personal
Builder,nest-prisma-design-patterns,🚀 Builder An API with Nest + Prisma + SQLite + Design Patterns,0,0,2023,2023,1,https://github.com/dedaldinodev4/nest-prisma-design-patterns
Builder,Brewers-Bench,Potion builder app built as a refresher on design patterns,0,0,2017,2017,1,https://github.com/kuffert/Brewers-Bench
Builder,Multiplyar_Card_Frenzy,This game is developed using MVC and Builder Design Pattern,0,0,2023,2023,1,https://github.com/omuu8/Multiplyar_Card_Frenzy
Builder,PizzaFactory,"Pizza builder, covering the intuition behind the factory design pattern.",0,0,2018,2020,1,https://github.com/lilamcilveen/PizzaFactory
Builder,WeddingPlanner,"Implementation of factory, singleton and builder object oriented design patterns",0,0,2024,2024,1,https://github.com/ManuRodriguez10/WeddingPlanner
Builder,DesignPatters,"Example of using the state, factory and builder design patterns",0,0,2015,2015,1,https://github.com/jose-zama/DesignPatters
Builder,Cafe,"Used Design patterns -> Factory Method, Null Object, Decorator and Builder",0,0,2020,2020,1,https://github.com/Diiiya/Cafe
Builder,Solvd-Intern-Project-Homework19,"Design Pattern Factory,Abstract Factory,Builder,Listener and SOLID Principles",0,0,2023,2023,1,https://github.com/Emaya009/Solvd-Intern-Project-Homework19
Builder,DesignPatternExample,Some design pattern example like fectory builder and countinue updating.,0,0,2019,2019,1,https://github.com/anandNC679/DesignPatternExample
Builder,Design-Patterns-Assignments, A sandwich and meal maker using Builder Design Pattern #java,0,0,2019,2020,1,https://github.com/Ranakhamis/Design-Patterns-Assignments
Builder,programmers-pizzeria,Pizza Ordering Website based on the famous Builder Design Pattern,0,0,2023,2023,1,https://github.com/CharbelElBateh/programmers-pizzeria
Builder,GameMaster,"Exercise is creational design patterns, combines abstract factory and builder.",0,0,2015,2015,1,https://github.com/finalnyte/GameMaster
Builder,basicDP,"4 of basic design patterns: bridge, builder, adapter and proxy.",0,0,2018,2018,1,https://github.com/gevorgsukias/basicDP
Builder,sf6-symfonycasts-design-patterns,"4 branches for each Design Pattern (Strategy, Builder, Factory, Observer)",0,0,2024,2024,1,https://github.com/radoibogdan/sf6-symfonycasts-design-patterns
Builder,DesignPatterns.NET,"Most popular design patterns in C# (.NET). OOP, SOLID, Builder, Factory, Abstract Factory, Prototype, Singleton, Strategy, Observer",0,0,2024,2024,1,https://github.com/bartoszclapinski/DesignPatterns.NET
Builder,Creational-Design-Patterns,"Design Patterns series covering Factory, AbstractFactory, Singleton, Builder, Prototype, Singleton",0,0,2024,2024,0,https://github.com/Rocket387/Creational-Design-Patterns
Builder,Design-Patterns,Example of a builder pattern in Java,0,0,2020,2021,1,https://github.com/JamesPMColeman/Design-Patterns
Builder,design-patterns,"3 simples patterns exercise. Singleton, Facade, Builder.",0,0,2020,2020,1,https://github.com/astachurski-intj/design-patterns
Builder,BuilderDemo,Design Pattern Builder Tutorial on this video https://www.youtube.com/watch?v=PWi6hSBn06g&t=458s,0,0,2018,2018,1,https://github.com/dynoChris/BuilderDemo
Builder,ExamBuilder,"Course project in Object Oriented Programming in Java with JavaFX, Design Patterns, MVC ",0,0,2023,2024,1,https://github.com/GalAngel15/ExamBuilder
Builder,builder-macro,builder-macro is a macro that implements the Builder design pattern in Swift,0,0,2024,2024,2,https://github.com/space-code/builder-macro
Builder,email-builder,Simple interface for sending emails with the builder design pattern with different services.,0,0,2023,2023,1,https://github.com/ryan-schreiber/email-builder
Builder,Design-pattern-exercise-FluentBuilder-Factory,Exercises using design pattern fluent builder and factory with included tests,0,0,2021,2022,1,https://github.com/aMetini/Design-pattern-exercise-FluentBuilder-Factory
Builder,Design-Patterns,Factory Method and Builder Example with food,0,0,2024,2024,1,https://github.com/KKDinev20/Design-Patterns
Builder,DesignPatternsAndComparatorInterface,"A demonstration of common patterns (builder ,strategy), factory methods, and the Comparator interface",0,0,2018,2018,1,https://github.com/Mike-415/DesignPatternsAndComparatorInterface
Builder,design-patterns-gof-creational-builder,GoF - Creational - Builder,0,0,2024,2024,1,https://github.com/NelsonBN/design-patterns-gof-creational-builder
Builder,kodilla-design-patterns_mod_11,"The most common design patterns: Singleton, Prototype, Strategy, Factory, Builder",0,0,2018,2018,1,https://github.com/paulina-bukowska/kodilla-design-patterns_mod_11
Builder,DesignPatternSpringboot,"It contains design patterns for spring boot (Factory, Builder, Adapter)",0,0,2022,2022,0,https://github.com/pokhrelricha/DesignPatternSpringboot
Builder,design-patterns-builder,,0,0,2021,2022,1,https://github.com/lucasrodrigues19/design-patterns-builder
Builder,design__patterns_builder,,0,0,2022,2022,1,https://github.com/catalunha/design__patterns_builder
Builder,Design_Patterns_Builder,,0,0,2023,2023,1,https://github.com/MarceloTomaz666/Design_Patterns_Builder
Builder,design-patterns-builder,,0,0,2021,2021,1,https://github.com/patrickAbarbosa/design-patterns-builder
Builder,design-patterns-builder,,0,0,2018,2018,1,https://github.com/naorbar/design-patterns-builder
Builder,Design_Patterns_Builder,,0,0,2020,2020,1,https://github.com/formelaanna/Design_Patterns_Builder
Builder,design-patterns-builder,,0,0,2021,2021,1,https://github.com/Machadofabio/design-patterns-builder
Builder,design-patterns-builder,,0,0,2021,2021,1,https://github.com/VictorDuart/design-patterns-builder
Builder,Design-Patterns---Builder,,0,0,2024,2024,1,https://github.com/ElisabettaT50/Design-Patterns---Builder
Builder,DesignPatternsWithMaven,"I had learnt and resolved tasks about design patterns like Singleton, Builder, Strategy or Decorator.",0,0,2022,2022,0,https://github.com/Sherlocky1809-PrzemyslawMadej/DesignPatternsWithMaven
Builder,java-builder-design-pattern,Short example for the usage of Builder Design Pattern implemented in java.,0,0,2023,2023,1,https://github.com/NoIdeaForMyName/java-builder-design-pattern
Builder,design-patterns-builder,,0,0,2023,2023,0,https://github.com/Eg0rR0di0n0v/design-patterns-builder
Builder,Design-Patterns-Builder,,0,0,2023,2023,1,https://github.com/Nazarov-Dmitriy/Design-Patterns-Builder
Builder,Design-Patterns-Builder,,0,0,2023,2023,1,https://github.com/roman-lehendzevych-vitech/Design-Patterns-Builder
Builder,builder-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/builder-design-patterns
Builder,design-patterns-builder,,0,0,2024,2024,1,https://github.com/NicolasAgustoni17/design-patterns-builder
Builder,example-builder-design-pattern,This is a simple implementation of the builder design pattern in PHP.,0,0,2023,2023,0,https://github.com/ngtrdai/example-builder-design-pattern
Builder,go-builder-design-pattern,Implementing a basic builder design pattern in Golang in a fun way,0,0,2024,2024,1,https://github.com/eRaBxEs/go-builder-design-pattern
Builder,design-patterns-builder,,0,0,2020,2020,1,https://github.com/Pampa-Devs/design-patterns-builder
Builder,Design-Patterns-Builder,back-end development,0,0,2022,2023,1,https://github.com/MiguelCastro9/Design-Patterns-Builder
Builder,design-patterns-builder,,0,0,2024,2024,1,https://github.com/scalone-cw/design-patterns-builder
Builder,design-patterns---builder,"Домашнее задание к занятию 1.1: Порождающие шаблоны. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2022,2022,1,https://github.com/TimurDushanov/design-patterns---builder
Builder,Design-patterns---Builder,,0,0,2024,2024,1,https://github.com/alegudev39/Design-patterns---Builder
Builder,Design_Patterns_Builder,Separates object construction from its representation,0,0,2017,2017,1,https://github.com/TaharLOUKIL/Design_Patterns_Builder
Builder,design-patterns-builder,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-builder
Builder,Design-Patterns-Builder,,0,0,2019,2019,1,https://github.com/IamMartinPeek/Design-Patterns-Builder
Builder,design-patterns-builder,,0,0,2024,2024,1,https://github.com/josegabrielfc/design-patterns-builder
Builder,design-patterns-builder,,0,0,2019,2019,1,https://github.com/scalone/design-patterns-builder
Builder,builder-design-patterns,,0,0,2020,2020,1,https://github.com/5m-friday/builder-design-patterns
Builder,Design-patterns---Builder,,0,0,2024,2024,1,https://github.com/LuttiDavide/Design-patterns---Builder
Builder,builder-pattern,Design pattern criacional (gof) Builder para construção de objetos complexos passo a passo,0,0,2021,2021,1,https://github.com/Jhow-R/builder-pattern
Builder,Builder-Pattern,Pluralsight course https://app.pluralsight.com/library/courses/c-sharp-design-patterns-builder/,0,0,2022,2022,0,https://github.com/lunawen/Builder-Pattern
Builder,Design-Patterns-Builder,,0,0,2023,2023,1,https://github.com/valdenir-ziger/Design-Patterns-Builder
Builder,Design-patterns---Builder,,0,0,2024,2024,1,https://github.com/Ilaria-93/Design-patterns---Builder
Builder,Design-Patterns-Builder,,0,0,2025,2025,1,https://github.com/HaneenEhdaa/Design-Patterns-Builder
Builder,idea-plugin-java-builder,Plugin for IntelliJ IDEA for automation of builder design pattern in Java.,0,0,2020,2020,1,https://github.com/gontijolucas/idea-plugin-java-builder
Builder,Design-Patterns-Builder,,0,0,2023,2023,1,https://github.com/crispimluiz/Design-Patterns-Builder
Builder,DesignPatternsInJava,An application to make design pattern practice,0,0,2020,2020,1,https://github.com/xChivalrouSx/DesignPatternsInJava
Builder,4_DesignPatterns_hw1_1_PersonBuilder,,0,0,2023,2023,1,https://github.com/FoxnArt/4_DesignPatterns_hw1_1_PersonBuilder
Builder,CreationalDesignPatterns,"Singleton, Prototype, Factory, Abstract Factory, Builder",0,0,2020,2021,1,https://github.com/bozburak/CreationalDesignPatterns
Builder,Builder-Design-Pattern,This is a demo which is used to descibe the Builder Design Pattern,0,0,2018,2018,1,https://github.com/sbbug/Builder-Design-Pattern
Builder,design_pattern_builder," Develop a system that uses the pattern given in class. ""Builder"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_builder
Builder,design-patterns,Object Oriented Design | #Builder_Pattern | #Circuit_Breaker_Pattern,0,0,2020,2024,1,https://github.com/fesabelilla/design-patterns
Builder,Builder-Design-Pattern,This is a sample C# Console application project to demonstrate Builder Design Pattern.,0,0,2019,2019,1,https://github.com/jjeffrin/Builder-Design-Pattern
Builder,cch1-builder-design-pattern,A university project to learn how to implement a builder design pattern,0,0,2023,2023,1,https://github.com/Daniel-Fonseca-S/cch1-builder-design-pattern
Builder,se-designpatterns,Some design patterns written in Python for Software engineering classes.,0,0,2018,2023,1,https://github.com/MateuszGrabuszynski/se-designpatterns
Builder,CodEg-FactoryAndBuilder,Creazione di personaggi D&D utilizzando i design patterns factory e builder ,0,1,2024,2024,1,https://github.com/saianiro/CodEg-FactoryAndBuilder
Builder,Builder-Player,Program that uses the builder design pattern with C# to create a new character,0,0,2023,2023,1,https://github.com/xCarlosDevx/Builder-Player
Builder,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Builder,restaurante-builder,Implementation of an use case for generating a report using the Builder design pattern. ,0,0,2020,2021,1,https://github.com/luis-nvrr/restaurante-builder
Builder,creational-design-patterns,Singleton - Prototype - Builder - Abstract Factory - Factory Method,0,0,2024,2024,1,https://github.com/mainProgram/creational-design-patterns
Builder,Builder-Creational-Design-Pattern,This is an example to understand the builder creational design pattern in JAVA,0,0,2020,2021,1,https://github.com/hamzaamjad699/Builder-Creational-Design-Pattern
Builder,JSON-XML-Document-Builder,"School project, proof of basic design patterns knowledge, using composites, builders, and directors.",0,0,2019,2019,1,https://github.com/OwlsNeck/JSON-XML-Document-Builder
Builder,CreationalDesignPatterns,"Builder, Factory, Singleton, Protoype, Object Pool Pattern. ",0,0,2022,2022,2,https://github.com/Muscan/CreationalDesignPatterns
Builder,Resume-Builder-Application-using-Design-Patterns,"Practical application of creational, structural and behavioral design patterns in java programming",0,0,2023,2023,1,https://github.com/vedants03/Resume-Builder-Application-using-Design-Patterns
Builder,labwork7,Java implementation of a simple database schema builder using Builder and Singleton Design Patterns,0,0,2024,2024,1,https://github.com/7910528/labwork7
Builder,RestAssured-API-BuilderDesignPatterns,,0,0,2023,2023,1,https://github.com/senthiljaishankaran/RestAssured-API-BuilderDesignPatterns
Builder,DesignPattern,Implementation of different types of software design pattern,0,0,2022,2023,1,https://github.com/parvez86/DesignPattern
Builder,DesignPatterns,This project demonstrates the implementation of various design patterns in Java.,0,0,2022,2022,1,https://github.com/jchoker/DesignPatterns
Builder,Game,"2D Game using Design Patterns: Builder, Factory, Observer, Memento, Command (C++)",0,0,2021,2024,1,https://github.com/ranatasha/Game
Builder,builder-design-pattern,This is a repo to explain the builder design pattern with example in PHP,0,0,2024,2024,1,https://github.com/yaman-shahbander-dev/builder-design-pattern
Builder,tree-expression-calculator,"Expression calculator implemented with the Visitor, Composite, and Builder design patterns.",0,0,2019,2020,2,https://github.com/peymathi/tree-expression-calculator
Builder,creationalDesignPatterns,"Creational Design Patterns(Simple Factory, Factory Method, Factory Abstraction, Builder, Prototype)",0,0,2024,2024,1,https://github.com/ghajarehsan/creationalDesignPatterns
Builder,Design_Pattern_Task,"Assignment of Abstract Factory, Adapter, Builder Design Patterns and Solid Principles",0,0,2023,2024,1,https://github.com/jerin-priya/Design_Pattern_Task
Builder,patterns-levelup,"Design Patterns: Singleton, Factory, Builder, Abstract Factory, and Prototype; Layering Architecture",0,0,2024,2024,1,https://github.com/clocoyashuv/patterns-levelup
Builder,designpatternJAVA,"Design Pattern that are involving Singleton, Factory, Abstract Factory,Builder,Prototype",0,0,2020,2020,1,https://github.com/WanAzlin/designpatternJAVA
Builder,ParallelWebCrawler,Implementation of a web crawler based  on the builder design pattern,0,0,2022,2022,1,https://github.com/YannickBihege/ParallelWebCrawler
Builder,PC-Builder-Application-PRACTICE-APP-,"app to practice software design patterns, this one utilizes the builder pattern approach.",0,0,2025,2025,1,https://github.com/wafool420/PC-Builder-Application-PRACTICE-APP-
Builder,ProductFinder,Use a Builder design pattern to create a product filter system.,0,0,2019,2019,1,https://github.com/jdanylko/ProductFinder
Builder,design-patterns-builder-typescript,,0,0,2023,2023,0,https://github.com/leonardopottmayer/design-patterns-builder-typescript
Builder,cch-design-patterns-builder,Projeto criado para a CCH de Arquitetura de Software,0,0,2019,2019,1,https://github.com/viniciuscasani1/cch-design-patterns-builder
Builder,Design_Patterns_QuiryBuilder,,0,0,2022,2022,1,https://github.com/abdullahAljuhi/Design_Patterns_QuiryBuilder
Builder,design-patterns-1-builder,,0,0,2023,2023,1,https://github.com/PavelMart/design-patterns-1-builder
Builder,design-patterns-training-builder,,0,0,2019,2019,0,https://github.com/bykowski/design-patterns-training-builder
Builder,design_patterns-builder-composite,,0,0,2020,2020,1,https://github.com/TimasJackus/design_patterns-builder-composite
Builder,Builder-designer-pattern-w-GUI,This is a Burger shop GUI were I used the Builder design pattern,0,0,2024,2024,1,https://github.com/Seboostian02/Builder-designer-pattern-w-GUI
Builder,JavaDesignPatterns.Builder,,0,0,2021,2021,1,https://github.com/Shaposhnikov-Nick/JavaDesignPatterns.Builder
Builder,Design-Patterns-Android,"Singleton, factory and builder pattern uses in android",0,0,2022,2022,1,https://github.com/saugatrai33/Design-Patterns-Android
Builder,java-design-patterns-builder,Desafio realizado durante bootcamp Santander promovido pela Digital Innovation One,0,0,2023,2023,1,https://github.com/silviorneto/java-design-patterns-builder
Builder,Builder-Pattern-Design-Patterns-,"This repository contains a Windows Forms application developed using the Builder design pattern. The application simulates a computer shop where various custom computers can be displayed and selected by users. Computers are categorized as Barebone, Home, Office, Gaming, and Beast, each with specific hardware configurations.",0,0,2024,2024,1,https://github.com/lukskalashs/Builder-Pattern-Design-Patterns-
Builder,PedindoBoneco,"Using design patterns like Prototype, nullObject and Builder in C# (✔️)",0,0,2021,2021,1,https://github.com/wellingtonPLF/PedindoBoneco
Builder,go-design-patterns,"Creational Patterns - Singleton, Builder, Factory, Prototype, and Abstract Factory Design Patterns",0,0,2023,2023,1,https://github.com/Hudayberdyyev/go-design-patterns
Builder,design-patterns-golang-builder,This example Go project demonstrates the use of the Builder design pattern to build complex objects step by step.,0,0,2023,2023,0,https://github.com/cristianino/design-patterns-golang-builder
Builder,-MIRROR-design_patterns_object_pool,Object pool + builder + prototype OP. ,0,0,2021,2021,1,https://github.com/dcesarz/-MIRROR-design_patterns_object_pool
Builder,Design-Patterns-Samples-Builder,,0,0,2023,2023,1,https://github.com/vasilecristian/Design-Patterns-Samples-Builder
Builder,design-patterns-builder-produto,,0,0,2024,2024,1,https://github.com/huan-carlos/design-patterns-builder-produto
Builder,DesignPatterns,"Explore practical examples of common design patterns in C#, including Singleton, Factory, Observer, and Builder patterns. Ideal for learning how to apply design patterns in real-world C# projects.",0,0,2024,2024,1,https://github.com/patpatwithhat/DesignPatterns
Builder,code-builder,A basic implementation of the builder design pattern. Builds simple c# classes from string inputs.,0,0,2019,2019,0,https://github.com/DTAPigeons/code-builder
Builder,designPatterns,A repo with a collection of design patterns,0,1,2020,2021,1,https://github.com/daniel199410/designPatterns
Builder,Builder-Design-Pattern-Example,Builder Design Pattern Used to create a pdf system given certain currently undocumented constraints. ,0,0,2025,2025,0,https://github.com/nanitight/Builder-Design-Pattern-Example
Builder,Design-patterns,"Having some fun with factory, singleton, builder, command and visitor pattern.",0,0,2022,2022,1,https://github.com/etakacs99/Design-patterns
Builder,Design-patterns,"C# Beispiele zu den Entwicklungsmustern: Observer, Facade, MVC, Builder und Decorator.",0,0,2022,2022,1,https://github.com/amargapinho/Design-patterns
Builder,DesignPatterns,"Archival - my implementation of GoF design patterns, I've tried to make them easy to learn by using real-life/games related examples. The builder & factory pattern implementation could be corrected.",0,0,2020,2024,1,https://github.com/piotrbulkowski/DesignPatterns
Builder,Design-patterns-exercise,"Simple exercise with builder, memento and state design paterns",0,0,2019,2019,1,https://github.com/pawelzajglicz/Design-patterns-exercise
Builder,BuilderDP_MakingPizza,"Simple project (simpler than the BuilderDP project on my github), that explains the purpose of Builder design pattern.",0,0,2020,2020,1,https://github.com/uros-veljkovic/BuilderDP_MakingPizza
Builder,DesignPattern_Builder,"Implementation of Builder, one of the 23 GoF's Design pattern in a concrete case",0,0,2017,2017,1,https://github.com/Nevermind-s/DesignPattern_Builder
Builder,FactoryAndBuilderDesignPatterns,Factory ve Builder Tasarım Deseni Kombinasyonu,0,0,2023,2023,1,https://github.com/SureyyaSenturk/FactoryAndBuilderDesignPatterns
Builder,junit-matchers-builders,Sources of an article about using Matcher and Builder design pattern for eloquent JUnit tests.,0,0,2014,2014,1,https://github.com/seiza/junit-matchers-builders
Builder,BuilderVisitorAndFluentInterfaceDesignPatterns,,0,0,2020,2023,1,https://github.com/danalexandrunicoara/BuilderVisitorAndFluentInterfaceDesignPatterns
Builder,IceCreamBuilder,An example of using the builder design pattern to generate products from the specific menu.,0,0,2022,2022,1,https://github.com/Vvay/IceCreamBuilder
Builder,Builder_Design_Pattern,"This is an example of Builder Design Pattern with Classes, Function and Javascript also Typescript",0,0,2023,2023,1,https://github.com/xus84/Builder_Design_Pattern
Builder,Design-Patterns,"Design Patterns - Singleton, Prototype, Builder, Service Discovery, Connection Pooling, Circuit Breaker etc.",0,0,2021,2024,1,https://github.com/pavanuppuluri/Design-Patterns
Builder,php-builders,sample php traits to add ability to use builder design patterns with easy in PHP applications,0,0,2025,2025,1,https://github.com/Fran101-bn/php-builders
Builder,api-builder,A TypeScript project that simplifies API request construction and execution by using the Builder Design Pattern. ,0,0,2023,2023,1,https://github.com/nir11/api-builder
Builder,oop-design-patterns,"Understanding Singleton, Factory (+Abstract), Strategy, State, Builder (CPS), Observer, Adapter",0,0,2023,2023,1,https://github.com/xThirteenIII/oop-design-patterns
Builder,builderProject,this repo examples the usage of builder design pattern in the java when same processes are used for different object,0,0,2022,2022,1,https://github.com/Krishna-web-dev/builderProject
Builder,DesignPatternsGoF,"Solucionar situações utilizando alguns dos Design Patterns mais conhecidos do Gang of Four (GoF), sendo eles: Abstract Factory, Factory, Builder, Bridge, Adapter e Chains of Responsibility",0,0,2024,2024,1,https://github.com/CaueCG/DesignPatternsGoF
Builder,CSVReader-Java,"CSVReader é um projeto de aprendizagem, objetivando compreender o design pattern builder.",0,0,2022,2023,1,https://github.com/MateusSantosF/CSVReader-Java
Builder,App-using-3-design-patterns,"Food factory using Prototype, Builder, Factory patterns",0,0,2023,2023,1,https://github.com/Alejandr099/App-using-3-design-patterns
Builder,StepBuilderToolbarDemo,This's a demo for custom toolbar on keyboard that using Step Builder design pattern,0,0,2019,2019,1,https://github.com/tanklin/StepBuilderToolbarDemo
Builder,471ICookFinal,"Finished project. Contains Factory Method, Command, Memento, Builder and Singleton Design patterns.",0,0,2021,2021,1,https://github.com/bryanmiller7sixty/471ICookFinal
Builder,DesignPattern,"All about design pattern : Adapter, strategy, builder, factory et chaine de responsabilité",0,0,2023,2023,1,https://github.com/JeremRkt/DesignPattern
Builder,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Builder,JavaDesignPatterns,Java App with implementation of builder and chain of responsibility design patterns.,0,0,2017,2017,1,https://github.com/gkostkowski/JavaDesignPatterns
Builder,designpattern,"this is design pattern by go language, including builder, abstract-factory ,etc.",0,0,2024,2024,1,https://github.com/jenny1779/designpattern
Builder,freshCakes,Small repo for testing design patterns:  Builder Command Observer (Building a cake),0,0,2025,2025,1,https://github.com/MMMbop1/freshCakes
Builder,Gang-of-Four-Design-Patterns,"Implementation of Design Patterns such as Adapter, Bridge, Builder etc in C#",0,0,2017,2017,1,https://github.com/AbubakarSarwar/Gang-of-Four-Design-Patterns
Builder,creational-design-patterns,"[Training Material] Creational design patterns: Builder, Factory, Abstract Factory, Prototype and Singelton",0,0,2018,2018,1,https://github.com/lnrsoft/creational-design-patterns
Builder,Dentist-Finder,Dentist Finder build with C# Language and with use Builder Design Pattern,0,0,2019,2019,1,https://github.com/SajedaQafeshi/Dentist-Finder
Builder,php-design-patterns,"Game application with examples of design patterns Strategy, Builder, Factory, Observer, Decorator",0,0,2023,2023,0,https://github.com/iljadedeiko/php-design-patterns
Builder,learning-java-contacts,CLI interface for managing contacts. Utilizes polymorphism + abstract factory/builder design pattern,0,0,2023,2023,1,https://github.com/sccmckenzie/learning-java-contacts
Builder,JavaDesignPatternExamples,"Original design pattern examples with java including Strategy,Singleton,Observer,Factory,Builder",0,0,2025,2025,1,https://github.com/veliemrecetin/JavaDesignPatternExamples
Builder,Students,Java program using the Builder design pattern and filtering results using Stream,0,0,2019,2019,1,https://github.com/MichalKrzyzak/Students
Builder,ListaPSS,"this repository contains some solutions using Builder, Decorator and Composite design patterns. ",0,0,2020,2020,0,https://github.com/alcebiadesogamas/ListaPSS
Builder,Design-Patterns-Builder-e-Decorator,"Implementação e características dos padrões de projeto conhecidos por Builder e por Decorator, aplicados em Java.",0,0,2024,2024,1,https://github.com/andref03/Design-Patterns-Builder-e-Decorator
Builder,Builder-Vs-Factory-Design-Patterns,,0,0,2025,2025,1,https://github.com/MahzadShafiei/Builder-Vs-Factory-Design-Patterns
Builder,design-patterns-fluent-interface-builder,,0,0,2021,2021,1,https://github.com/Andreis3/design-patterns-fluent-interface-builder
Builder,java_design_patterns_builder_mode,java设计模式_建造者模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_builder_mode
Builder,TicTacToe_ObjectOriented,"A TicTacToe game with object oriented design pattern, unit tests and builder",0,0,2020,2020,1,https://github.com/sankygawas/TicTacToe_ObjectOriented
Builder,design-patterns-singleton-builder-prototype,,0,0,2024,2024,1,https://github.com/Andynator3/design-patterns-singleton-builder-prototype
Builder,design-patterns-builder-ex-2,,0,0,2022,2022,1,https://github.com/ARPJavaPL2/design-patterns-builder-ex-2
Builder,PasswordListBuilder,Uses permutations and common password design patterns to create better password lists for more targeted cracking.,0,0,2019,2019,1,https://github.com/lesenther/PasswordListBuilder
Builder,esercizio-69-Design-patterns-Builder,,0,0,2024,2024,1,https://github.com/cla-gambino/esercizio-69-Design-patterns-Builder
Builder,BuilderDesignPattern,"Using the Builder design pattern and C# language, a console program has been written to make all kinds of sandwiches.",0,0,2024,2024,0,https://github.com/aparsaeeyan/BuilderDesignPattern
Builder,vehicle-showroom,"A vehicle showroom system built with ""Builder Design Pattern"", implemented with C++.",0,0,2021,2021,1,https://github.com/sakif-khan/vehicle-showroom
Builder,BuilderDesignPattern,"This is an example about how you can implement a builder pattern in a ""file creator"" (Using Builder Design Pattern)",0,0,2023,2023,1,https://github.com/JorgeADevelop/BuilderDesignPattern
Builder,Builder-Design-Pattern,"In this repository you will find a short example and explanation about the design pattern ""Builder""",0,0,2024,2024,2,https://github.com/HaraldHaarig/Builder-Design-Pattern
Builder,design-patterns,"implementação dos design patterns: strategy, chain of responsibility, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns
Builder,DesignPatterns,Não repita código com Template Method Saiba da importância de estudar os padrões de projeto Resolva problemas de muito ifs usando Strategy Adicione comportamentos ao seu objeto com Decorator Crie diferentes ações com Observer Use o Builder para a criação de objetos complicados,0,0,2022,2022,1,https://github.com/Honey-lee429/DesignPatterns
Builder,java-singleton-builder-factory-patterns,"Practice on the topic ""Using the DAO pattern and design patterns: Singleton, Builder, Factory Method""",0,0,2023,2024,1,https://github.com/vykhryst/java-singleton-builder-factory-patterns
Builder,Java-design-patterns,"ejemplos de patrones de diseño en java como el singleton , builder , decorator",0,0,2020,2021,1,https://github.com/vidal1101/Java-design-patterns
Builder,design_patterns_examples,"Examplos dos padrões Builder, Decorator e Strategy, para um trabalho da faculdade. ",0,0,2021,2021,1,https://github.com/mmdutra/design_patterns_examples
Builder,SoftwareDevelopment_DesignPatterns,"Creating the Customize Development Framework like Spring framework and Spring Boot by applying the design patterns like.....Singleton,Command,Observer,Facade,Factory,Composit,COR,Strategy,State,Iterator,Adapter,Decorator,Builder,Adapter",0,0,2024,2024,1,https://github.com/HsuMinHtet/SoftwareDevelopment_DesignPatterns
Builder,Java_Pizza-Builder-Deisng-Pattern-Example,Example for Builder design pattern (for any class constructor that need too many undefined parameter),0,0,2019,2019,1,https://github.com/DicesGod/Java_Pizza-Builder-Deisng-Pattern-Example
Builder,JavaBuilderPatternToolkit,"Java-based repository showcasing the Builder Design Pattern. Demonstrates how to simplify complex object creation processes. Includes detailed code samples, documentation, and use-case scenarios. Essential for Java developers seeking to enhance their design pattern knowledge",0,0,2023,2023,1,https://github.com/IsmaInfiniteCloud/JavaBuilderPatternToolkit
Builder,Builder,Builder is a creational design pattern that lets you construct complex objects step by step. The pattern allows you to produce different types and representations of an object using the same construction code.,0,0,2022,2022,1,https://github.com/quynhchi1009/Builder
Builder,design-patterns,"Padrão criacional: Factory method, Abstract factory e Builder.  Padrão estrutural: Brigde.  Padrão comportamental: Chain Of Responsibility.",0,0,2024,2024,1,https://github.com/rafaelzanella27/design-patterns
Builder,12DesignPatterns,simple c# implementation of 12 design patterns (Builder also has Prototype and Decorator),0,0,2023,2023,1,https://github.com/Dannymane/12DesignPatterns
Builder,simple-gui-builder,"A simple GUI builder application implemented to showcase Adapter, Singleton and Abstract Factory Design Pattern in action.",0,0,2022,2025,0,https://github.com/smmehrab/simple-gui-builder
Builder,n-design-patterns-creational,"Примеры по порождающим шаблонам. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2021,2021,1,https://github.com/humgate/n-design-patterns-creational
Builder,Burger_Builder,"A burger building app using mySql, Node, Express, Handlebars and self made ORM. Following the MVC design pattern.",0,0,2018,2018,1,https://github.com/will-miller93/Burger_Builder
Builder,ecommerce,"Console application in Java using 4 design patterns (strategy, builder, decorator and observer)",0,0,2021,2022,1,https://github.com/PalmaPedro/ecommerce
Builder,DesignChallenge1,A problem and solution for understanding the builder design pattern and fluent interfaces,0,0,2016,2016,1,https://github.com/tharakawj/DesignChallenge1
Builder,Java-Text-Editor,"Java text editor with design patterns(Iterator, Memento, Builder, Singleton, Command) and UnitTest",0,0,2023,2023,1,https://github.com/kadircopur/Java-Text-Editor
Builder,ConvertExtensionLibrary,Sık kullanılan dönüşümler için extension class'ları Builder Design Pattern uygunluğuna göre yazılmıştır.,0,0,2023,2023,1,https://github.com/sorhanselcuk/ConvertExtensionLibrary
Builder,Design-Patterns-Workshop,"Taller de aplicación de patrones de diseño, se utilizó Singleton, Builder y Factory Method.",0,0,2023,2023,1,https://github.com/AlanPachecoCueva/Design-Patterns-Workshop
Builder,FluentValidationModelDelphi,Validação de models utilizando design pattern builder criado com tipos genéricos em Delphi ,0,0,2024,2024,1,https://github.com/givanildofeitoza/FluentValidationModelDelphi
Builder,Design_Patterns,"This includes most essential design patterns including singleton, factory, abstract factory, observer, builder, prototype, strategy, template method, adapter, facade, decorator design patterns in java",0,0,2023,2023,1,https://github.com/Ansu-s/Design_Patterns
Builder,Static-Analyzer,"A context free language which uses the Visitor, State and Builder design patterns.",0,0,2015,2015,2,https://github.com/chriskerley78910/Static-Analyzer
Builder,Space-Mission-Planner,"A project to revise the creational design patterns of Factory, Builder and Prototype.",0,0,2024,2024,1,https://github.com/br-Chan/Space-Mission-Planner
Builder,simple-todo-android-app,"Simple to do app using Room library, MVP design pattern and Builder pattern",0,0,2018,2018,1,https://github.com/maks-novikov/simple-todo-android-app
Builder,2d-platformer,"Platformer project using design patterns such as Observer, MVC, Decorator, ScreenManager and Builder",0,0,2021,2021,1,https://github.com/GonzaLorenzo/2d-platformer
Builder,Creational-Design-Pattern,"Abstract Factory, Builder, Factory Method, Prototype and SIngleton creational design pattern in swift",0,0,2018,2018,2,https://github.com/LH17/Creational-Design-Pattern
Builder,TestDesignPattern,"Test design pattern like Singleton, Builder, Prototype with c# and Visual Studio 2017",0,0,2019,2019,1,https://github.com/cmmv230287/TestDesignPattern
Builder,Student-Orientation-Design-Patterns-Builder-Pattern,,0,0,2017,2017,1,https://github.com/sagarkale92/Student-Orientation-Design-Patterns-Builder-Pattern
Builder,TicTacToe,"Android App for Tic Tac Toe, Implementing Strategy, Builder and Factory Design Patterns",0,0,2023,2023,1,https://github.com/naveenmittal04/TicTacToe
Builder,impecJS,A small frontend library to render SPA using Builder design pattern with TypeScript,0,0,2024,2024,1,https://github.com/damienld22/impecJS
Builder,Boiler-Java-Clean-Architecture,Java Spring Boot using clean architecture. Using classic design pattern like builder & singletone,0,0,2024,2024,1,https://github.com/hafiihzafarhana/Boiler-Java-Clean-Architecture
Builder,C_sharp_pluralsight_design_patterns_Builder,Apply Builder Pattern with C# by follow Pluralsight course,0,0,2020,2020,1,https://github.com/ahmed-hamdy90/C_sharp_pluralsight_design_patterns_Builder
Builder,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Builder,Design_Patterns_Five_In_One_Project,Strategy - Builder - Decorator - Observer -Observer by events Pattern   ,0,0,2021,2021,1,https://github.com/ahmedelbassal/Design_Patterns_Five_In_One_Project
Builder,ColorSetter,a builder-design-pattern usage to set view textColor or backgroundcolor or backgrounddrawable,0,0,2016,2019,1,https://github.com/cxMax/ColorSetter
Builder,Design_Patterns,"This repository contains various low level design patterns such as Strategy, Observer, Factory, Builder, Singleton, Adapter, Facade etc",0,0,2022,2024,1,https://github.com/praveenchiliveri6/Design_Patterns
Builder,4778-Lab-8,"Carnival shooting game that utilizes the object pool, builder, and ovserver design patterns.",0,0,2024,2024,4,https://github.com/Dormio-san/4778-Lab-8
Builder,Backend-Design-Patterns-and-Clean-Code-BuilderPattern-Examples,,0,0,2023,2023,1,https://github.com/jaybk051183/Backend-Design-Patterns-and-Clean-Code-BuilderPattern-Examples
Builder,Android-Design-Patterns,"6 Design pattern every android developer must know Singleton, Factory, Builder, Facade, Dependency Injection, Adapter",0,0,2024,2024,1,https://github.com/abdulappengineer/Android-Design-Patterns
Builder,Creational-Design-Patterns,Creational Design Patterns  1.  Factory Method  2.  Abstract Factory  3.  Builder  4.  Prototype  5.  Singleton,0,0,2024,2024,1,https://github.com/Menna-Medhat/Creational-Design-Patterns
Builder,Query-Builder-PHP,This project was to learn how to use OOP and Design Patterns with PHP to build SQL queries,0,0,2018,2019,1,https://github.com/EclesioMeloJunior/Query-Builder-PHP
Builder,design-patterns1,"aplicação dos padrões de projeto parte 1: strategy, chain, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns1
Builder,nodejs-patterns-fluent-interface-and-builder,Live #1 - Trabalhando com os Design Patterns Fluent Interface e Builder - Pré #SemanaJSExpert - Canal Erick Wendel,0,0,2021,2021,1,https://github.com/jamangueira7/nodejs-patterns-fluent-interface-and-builder
Builder,design-patterns,"Creational Design patterns ,Singleton, Builder, Prototype pattern , Structural patterns,  Facade, Proxy, Bridge pattern, Behavioral pattern, Template, Strategy, Iterator pattern",0,0,2023,2023,1,https://github.com/fatimasultanova/design-patterns
Builder,Design-Patterns,"A general repeatable solution to a commonly occurring problem in software design. Implemented Singleton, Builder, Visitor, Prototype, Observer patterns",0,0,2017,2017,1,https://github.com/yashdivecha/Design-Patterns
Builder,PizzaBuilder,Script criado para a apresentação da talk sobre o design pattern builder na turma da residência da Apple Academy,0,0,2023,2023,1,https://github.com/WellingtonDeOliveira/PizzaBuilder
Builder,BuilderDesignPattern,This is an example of a builder design pattern following this tutorial: https://www.youtube.com/watch?v=9XnsOpjclUg&list=PLF206E906175C7E07&index=8,0,0,2019,2019,1,https://github.com/dmurtagh14/BuilderDesignPattern
Builder,Java-Multi-threads-race-game,"JAVA Game Using Design Patterns  An interactive racing game implemented in Java, showcasing various design patterns and multi-threading.Implemented design patterns: Singleton, Builder, Thread Pool, Factory Method, Prototype, State, Observer-Observable, Decorator, and Delegator",0,0,2024,2025,1,https://github.com/IlanShtilman/Java-Multi-threads-race-game
Builder,Design-Patterns,"This project involves implementing various design patterns such as Adapter, Factory, Builder and so on commonly used in software development.",0,0,2024,2024,1,https://github.com/KanwalB7/Design-Patterns
Builder,Design-Patterns,A chronicle of various design patterns implemented under software engineering course,0,0,2023,2024,1,https://github.com/mrtaz77/Design-Patterns
Builder,BuillderPattern,"This Unity project contains an example created using the ""Builder"" design pattern. The Builder design pattern is a design pattern that allows the step-by-step creation and configuration of complex objects. In this project, we simulate the process of creating a customizable game character using the Builder pattern.",0,0,2023,2023,1,https://github.com/ysfozdmr/BuillderPattern
Builder,Java-Design-Patterns,"Singleton,Factory.Builder,Decorator, Facade Design Pattern (Eager, Static Block,Lazy Initilization, ThreadSafe Singleton, Bill Pugh Singleton)",0,0,2021,2021,0,https://github.com/yigitkader/Java-Design-Patterns
Builder,Design-Patterns-Spring-Boot,"Simple project with spring boot, explain the difference between design patterns (Proxy,Builder,Decorator...)",0,0,2024,2024,1,https://github.com/imadett88/Design-Patterns-Spring-Boot
Builder,gof-creational-design-patterns,"Typescript implementation of gang-of-four creational design patterns (factory method, abstract factory, builder)",0,0,2022,2022,1,https://github.com/samlaf/gof-creational-design-patterns
Builder,builder-pattern,The builder pattern is a design pattern (creational pattern) that allows us to create complex objects using sequence of actions.,0,0,2020,2020,1,https://github.com/enigma2006x/builder-pattern
Builder,java-4h-5h-design-patterns-1,"SOLID, GoF (Abstrac Factory, Factory Method, Builder)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-1
Builder,FacadePattern,"Java code and PlantUML diagrams that illustrate the ""Facade"" Design Pattern (+ Builder Pattern bonus)",0,0,2021,2021,1,https://github.com/Alexander-Eck/FacadePattern
Builder,Projeto-E-moveis,"Projeto acadêmico: Java JDBC + Java Swing + WAMP Server Mysql + Design Patterns (DAO, Builder, Singleton) ",0,0,2021,2021,1,https://github.com/wgustavosantos/Projeto-E-moveis
Builder,design-patterns-node-based-infix-to-postfix-calculator,"Node based infix to postfix calculator demonstrating the Composite, Visitor, Builder software design patterns",0,0,2022,2022,1,https://github.com/winkingcatstudios/design-patterns-node-based-infix-to-postfix-calculator
Builder,Persona-mysql-DAO,"Learning project to test DAO with MySQL connection, applying Builder and Observer Design Patterns",0,0,2023,2023,1,https://github.com/Aierbote/Persona-mysql-DAO
Builder,design_pattern,"Examples of some of the standard design patterns- factory, builder, singleton, decorator, observer, flyweight.",0,0,2020,2022,1,https://github.com/mayank4519/design_pattern
Builder,PanierPiqueNique,"Création d'un panier pique-nique, en utilisant des design patterns (builder/factory/singleton)",0,0,2021,2021,1,https://github.com/RaptorTruite/PanierPiqueNique
Builder,Java-Desktop-Text-Editor-App-With-Design-Patterns,"Java desktop text editor app that created with command, factory and builder design patterns.",0,0,2023,2023,1,https://github.com/umutulasdemir/Java-Desktop-Text-Editor-App-With-Design-Patterns
Builder,7.8-Design-Patterns-Singleton-Factory-Builder-,,0,0,2024,2024,1,https://github.com/sabbir-the-faaz/7.8-Design-Patterns-Singleton-Factory-Builder-
Builder,ECommerceBackEnd,A program that uses the Builder design pattern to create different products for stores,0,0,2021,2021,1,https://github.com/mlibasc/ECommerceBackEnd
Prototype,Real-world-Design-Patterns-Node-JS,All the 23 (GoF) design patterns implemented in Javascript with Real World Example using Node.js APIs,393,57,2020,2025,1,https://github.com/nimit95/Real-world-Design-Patterns-Node-JS
Prototype,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Prototype,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Prototype,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Prototype,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Prototype,design-patterns-in-angular,Deprecated | new project: https://github.com/Itchimonji/design-patterns-in-typescript,40,15,2020,2025,0,https://github.com/Itchimonji/design-patterns-in-angular
Prototype,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Prototype,CreationalDesignPatterns.Prototype,,22,0,2022,2023,1,https://github.com/nirzaf/CreationalDesignPatterns.Prototype
Prototype,igf,The Indiefreaks Game Framework or IGF is a set of .Net libraries compiling a few years of experimenting and prototyping design patterns developing games for Microsoft Xna Framework using the SynapseGaming SunBurn graphics engine.,21,5,2012,2023,3,https://github.com/Indiefreaks/igf
Prototype,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Prototype,Prototype-Design-Pattern,Prototype Design Pattern,15,0,2018,2024,2,https://github.com/akshayblevel/Prototype-Design-Pattern
Prototype,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Prototype,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Prototype,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Prototype,design-patters-with-javascript,"People can learn better and faster with a summary about a specific topic, so here is my summary about design patterns with Javascript. I hope it can be useful for someone. ",11,1,2021,2024,1,https://github.com/Josehdez96/design-patters-with-javascript
Prototype,Swift-Prototype,Design Patterns in Swift: Prototype,10,2,2016,2025,1,https://github.com/kingreza/Swift-Prototype
Prototype,DesignPatterns,Java23种设计模式总结归纳(附UML图和源码),8,6,2019,2024,1,https://github.com/guangxush/DesignPatterns
Prototype,GoDesignPatterns,"We will analyze Strategy, Observer, Prototype and Memento Design Pattern in Go Lang.",8,0,2021,2022,0,https://github.com/borakasmer/GoDesignPatterns
Prototype,CreationalDesignPatternsSample,"Including Builder, Factory method, Abstract Factory, Prototype and Singleton",5,0,2020,2023,1,https://github.com/ZahraHeydari/CreationalDesignPatternsSample
Prototype,Prototype,Implements the Prototype design pattern,4,0,2012,2025,1,https://github.com/ICanBoogie/Prototype
Prototype,JJ.SaveText,Prototype app for software architecture & design patterns 🏛,4,0,2016,2024,1,https://github.com/jjvanzon/JJ.SaveText
Prototype,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Prototype,Creational-Design-Pattern-In-Programming,"Tell you about 5 sample in creational design pattern: Factory Method, Abstract Method, Singleton, Builder & Prototype",4,0,2022,2023,1,https://github.com/Phong-Kaster/Creational-Design-Pattern-In-Programming
Prototype,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Prototype,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Prototype,ranch-management,"Our team developed the drone enhanced ranch management software. The software was able to track livestock vitality and location, monitor feeding and watering systems, and monitor property status with the help of the drone(s).  Our team used Java 8 and Scenebuilder to develop the software. We created the Class diagrams, Sequence diagrams, Rapid prototypes, and other diagrams to assist us in developing the software. Also, different design patterns like Composite, Visitor, Adapter were used to develop the project.",4,0,2021,2025,1,https://github.com/prajun7/ranch-management
Prototype,bachelor-project,This is a prototype for an education game about software design pattern,3,3,2022,2023,0,https://github.com/ginogeorgiev/bachelor-project
Prototype,DesignPatterns.Prototype,"Prototype Design Pattern, C#",3,0,2022,2023,1,https://github.com/dFarkhod/DesignPatterns.Prototype
Prototype,PrototypeDesignPattern,Prototype Design Pattern In .NET C#,3,0,2022,2023,1,https://github.com/AhmedTarekHasan/PrototypeDesignPattern
Prototype,designpatterns4devs-prototype-pattern-2022-09-19,Exemplos práticos usando o design pattern criacional prototype,3,0,2022,2024,1,https://github.com/rocketseat-creators-program/designpatterns4devs-prototype-pattern-2022-09-19
Prototype,DesignPatterns,"Design patterns learning course for C#. Creational Patterns. Singleton, Prototype, Builder, Factory Method, Abstract Factory.",3,0,2019,2024,1,https://github.com/arsentd/DesignPatterns
Prototype,Prototype-Design-Pattern-Low-Level-Design-,Hey everyone this repository conatins complete explanation of Prototype Design Pattern .,3,0,2023,2023,1,https://github.com/akshatsh0610/Prototype-Design-Pattern-Low-Level-Design-
Prototype,Design-Patterns-Builder-Prototype-Singleton,,3,0,2021,2021,1,https://github.com/AmiraslanSumgait/Design-Patterns-Builder-Prototype-Singleton
Prototype,design-patterns,"Creational design patterns in C#: Abstract Factory, Builder, Factory, Factory Method, Object-Pool, Prototype, Singleton.",3,1,2023,2024,1,https://github.com/cenkerkumlucali/design-patterns
Prototype,Design-Patterns,Bu repoda Yazılım Tasarımı ve Mimarisi dersi ile paralel yürüttüğüm Desing Patterns ile ilgili çalışmalarım ve patternslar ile ilgili notlarım bulunmaktadır.,3,0,2021,2023,1,https://github.com/emirhandogandemir/Design-Patterns
Prototype,px-loan-model-proto,"Software prototype in Java which implements best practices of object-oriented programming, SOLID principles & design patterns.",3,0,2022,2025,1,https://github.com/ngljcb/px-loan-model-proto
Prototype,AR-Design-Patterns-In-Swift,用Swift来实现设计模式,3,1,2018,2020,1,https://github.com/andyRon/AR-Design-Patterns-In-Swift
Prototype,JSFundamentals,"JavaScript - The tricky bits. Types, mutation, scope, hoisting, execution context, regular context, closures, call stack, prototypal inheritance, design patterns and all that other JavaScript jazz",3,0,2015,2022,1,https://github.com/MikeDigitize/JSFundamentals
Prototype,js-patterns,"Some of my favorite JavaScript plugin design patterns: The Facade Pattern, The Revealing Module Pattern, Immediately-invoked Function Expressions (IIFE)s, The Module Pattern imports and exports …",3,1,2017,2022,1,https://github.com/mhulse/js-patterns
Prototype,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Prototype,JavaScript-Techniques,"JavaScript demos, OOP examples, design patterns, playing with prototypes...",2,2,2014,2019,0,https://github.com/VladiGGeorgiev/JavaScript-Techniques
Prototype,design-patterns,Examples for design patterns,2,1,2022,2024,1,https://github.com/Jovidon/design-patterns
Prototype,SJSU_website,SJSU Shopping website in Java. Uses MVC model as well as Composite and Prototype design patterns.,2,0,2021,2021,4,https://github.com/alenba2/SJSU_website
Prototype,Prototype-Pattern,"Prototype pattern is one of the Creational Design pattern, so it provides a mechanism of object creation. Prototype pattern is used when the Object creation is a costly affair and requires a lot of time and resources and you have a similar object already existing. So this pattern provides a mechanism to copy the original object to a new object and then modify it according to our needs. This pattern uses Java cloning to copy the object.",2,0,2018,2020,1,https://github.com/Design-pattrns/Prototype-Pattern
Prototype,medical_clinic_system_SW,"A Java-based desktop application designed to manage patient records, doctor schedules, and appointments. This system utilizes multiple design patterns, including Singleton, Factory, Builder, Adapter, Proxy, and Prototype, ensuring scalability, maintainability, and code reusability.",2,0,2024,2025,1,https://github.com/mohamedmagdy2301/medical_clinic_system_SW
Prototype,UX-Designer,"UX Designer  As a Product Designer, you will be responsible for working closely with a cross-functional teams to build and launch new experiences and features that impact the way urban Indians meet and date with a special focus on building a trustable platform for women. You will collaborate with engineers, designers, researchers, and analysts during the entire product lifecycle. You'll also work closely with the co-founders and VPs of various functions.  - The role demands great execution, bold innovation, obsession with quality, solving problems with creativity while keeping the user in mind and ambition to take projects to the finish line.  - Our approach to design is completely based on insights coming from various sources, quantitative and qualitative both that include Analytics data, User Testing, Experiments run on product etc. This helps us maximize the potential of product to serve the users while minimizing absolute opinions. You should have the skills to work across the full spectrum of Design - UX, UI, Interaction, Prototyping, Testing and kick ass in those areas.  Responsibilities:  - Collaborate with stakeholders, team members, and clients in an agile, iterative user-centered design process to design features, write user stories and work with development teams to ensure correct implementation  - Develop deep understanding of real-world customer needs and business goals unique to our clients, and collect valuable user feedback and insight to inform product decisions  - Take ownership for the full stack UX-Design process for the product including wire-framing, prototyping, user research, and defining & following design systems.  - Have a data driven approach to your designs and key milestone deliverables to peers and executive level stakeholders  - Review product analytics to derive behavioral insights for adoption, growth and user engagement  Qualifications :  - 1-6 Years of experience in a comparable role (User Experience, UI Design)  - Bachelor's degree in Interaction/ Interface/ Experience/ Visual/ Product design preferred.  - Expertise in digital design tools (Sketch, Invision, etc) and well-versed in material design, pattern libraries, and design methodologies  - Experience working with development teams in a wide variety of engagements, including concept development, prototyping, and productization.  - Experienced in design for iOS, Android and Mobile Web Apps.  - Ability to rapidly grow (or come up with) new ideas and create fabulous storyboards, mock-ups, and functional prototypes  Skills : Research, User Experience (UX), User-centered Design, User Interface Design, Design, Usability Testing, User Stories, Productization, Storyboarding, Design Tools, Wireframing, Agile Methodologies  Location : Gurgaon, India",2,0,2019,2024,0,https://github.com/Amandeepwazir/UX-Designer
Prototype,digitalmarketplace-design-patterns,Prototype for documenting the Digital Marketplace custom design patterns,1,3,2019,2023,2,https://github.com/Crown-Commercial-Service/digitalmarketplace-design-patterns
Prototype,design_patterns-Prototype,Creational Design Patterns,1,0,2020,2020,1,https://github.com/malbohy/design_patterns-Prototype
Prototype,PrototypeAndRegistry,prototype and registry design pattern,1,0,2023,2023,1,https://github.com/CodenameOverlord/PrototypeAndRegistry
Prototype,go-prototype-design-pattern,Prototype Design Pattern | Go,1,0,2023,2023,0,https://github.com/loxt/go-prototype-design-pattern
Prototype,cat-clicker,Uses prototype design pattern,1,0,2019,2020,1,https://github.com/nicoleelazar/cat-clicker
Prototype,PrototypeDesignPatternTest,simple example applied prototype design pattern,1,0,2025,2025,1,https://github.com/buzlukerdem/PrototypeDesignPatternTest
Prototype,prototype_pattern,Prototype Design Pattern in Java,1,0,2018,2019,1,https://github.com/parsa-JPM/prototype_pattern
Prototype,tp-designpatterns,"design pattern > Adapter, Composite, Prototype",1,0,2024,2024,1,https://github.com/hayatvyhr/tp-designpatterns
Prototype,DesignPattern-Prototype,Example implementation of Prototype design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Prototype
Prototype,AnimalExplorer,AnimalExplorer: a Prototype Design Pattern Project,1,0,2023,2023,1,https://github.com/amyzal02/AnimalExplorer
Prototype,prototype_design_pattern,Implementation of the prototype design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/prototype_design_pattern
Prototype,PrototypePatternDemo,A simple project using C# to demo the prototype design pattern.,1,0,2021,2023,1,https://github.com/phian/PrototypePatternDemo
Prototype,DesignPatterns,"Design patterns: Singleton, Builder, Facade, FactoryMethod, Prototype,",1,0,2022,2022,1,https://github.com/heminmoh/DesignPatterns
Prototype,DesignPatterns,"DesignPatterns Java : AbstractFactory, FactoryMethod e Prototype",1,0,2023,2023,1,https://github.com/leansouz4/DesignPatterns
Prototype,pattern-prototype,A prototype application to help discuss design patterns and UX,1,0,2018,2018,0,https://github.com/layersoflondon/pattern-prototype
Prototype,Design-Patterns,JAVA Design Pattern,1,0,2021,2021,1,https://github.com/MaheshVegada/Design-Patterns
Prototype,SymphonyManagementProject,The syllabus of this project is to produce a symphony system prototype. It has a plethora of classes implementing various uses of design patterns.,1,2,2017,2018,1,https://github.com/Cerephoros/SymphonyManagementProject
Prototype,shopping-cart-design,HCI2001 COIN Project: Shopping Cart Design Pattern prototype,1,0,2024,2024,5,https://github.com/erik-lance/shopping-cart-design
Prototype,design-patterns-software-engineering,Studies on design patterns and software engineering.,1,0,2024,2025,1,https://github.com/kastorcode/design-patterns-software-engineering
Prototype,prototype_design-patterns,Prototype for design patterns and their implementations in Python. Contains practical examples and explanations to help understand and apply these patterns in Python projects.,1,0,2024,2025,1,https://github.com/tyronejosee/prototype_design-patterns
Prototype,c-sharp-design-patterns,Gang of Four design patterns in c#,1,0,2021,2023,1,https://github.com/tobbie/c-sharp-design-patterns
Prototype,simple-prototype-java,A simple example of how to implement the Prototype design pattern in Java,1,0,2023,2024,1,https://github.com/sean-campbelltech/simple-prototype-java
Prototype,DesignPatterns,Design Patterns are reusable solutions to commonly occuring problems(in the context of software design). Design patterns were started as best practices that were applied again and again to similar problems encountered in different contexts. ,1,0,2018,2021,1,https://github.com/amitpatange88/DesignPatterns
Prototype,Design-Patterns-Csharp,Estudo de Design Patterns com C#,1,1,2020,2024,1,https://github.com/thiago-roock/Design-Patterns-Csharp
Prototype,Word-Counter-with-Backup-Implementation,"Implemented ""word counter"" command with Visitor, Prototype, and Observer Design Patterns ",1,0,2017,2017,1,https://github.com/schadal1/Word-Counter-with-Backup-Implementation
Prototype,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Prototype,examples-design-patterns,I'll be stashing all my ugly and quick prototypes here.,1,0,2013,2024,1,https://github.com/duggiefresh/examples-design-patterns
Prototype,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Prototype,design-patterns,"Demonstrates the creational, structural, and behavioral design patterns in C# and .NET 8",1,0,2023,2024,1,https://github.com/nurfarazi/design-patterns
Prototype,Design-Patterns-.NET,Examples of design patterns written in C#. Most of the popular design patterns that can be used in application development are described here.,1,0,2024,2024,1,https://github.com/qpashkaaa/Design-Patterns-.NET
Prototype,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Prototype,E2EImageReview,"prototype using IDesign method with the Strangler Fig application design pattern, to encapsulate calls across an anti-corruption layer",1,0,2018,2025,4,https://github.com/dercodey/E2EImageReview
Prototype,Creational-Design-Patterns-in-Java,"This repository showcases implementations of five key creational design patterns in Java: Singleton, Factory, Abstract Factory, Builder, and Prototype. Each pattern is implemented with real-world scenarios, demonstrating how to create objects in a flexible, reusable, and efficient manner.",1,0,2024,2024,1,https://github.com/KUMARAN1601/Creational-Design-Patterns-in-Java
Prototype,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Prototype,DesignPattern_Project,https://youtu.be/bXKfP5Tbnt8 This is a single project where the following design patterns were used: POOL - FACTORY - OBSERVER - STRATEGY - BUILDER - LOOK UP TABLE - MVC - LOCALIZATION MANANGER - SCREEN MANANGER - FLYWEIGHT - PROTOTYPE - EVENT MANANGER,1,0,2021,2022,1,https://github.com/Gmorenoprat/DesignPattern_Project
Prototype,Magazyn-Warehouse-JAVA,"The Warehouse Management project aims to provide an efficient way to  manage products in a warehouse. The application allows users to add,  sort, and clone products. It implements the Prototype design pattern to  clone objects seamlessly.",1,0,2024,2024,1,https://github.com/SzymonJaniak/Magazyn-Warehouse-JAVA
Prototype,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Prototype,Symphony-Management-System,"Developed a symphony system prototype (Domain Layer Model) for a level 3 Java course. Focused on development of UML diagram & implementation of the domain objects and test classes, application of DAO design pattern, server side components with Java Servlets and presentation layer components using HTML and JSP. Technical Environment: Java",1,0,2017,2020,4,https://github.com/abed0019/Symphony-Management-System
Prototype,New-Front-End-Web-Development-roles-in-San-Francisco,"The Digital team is responsible for enhancing the desktop/mobile/tablet experiences for our current and prospective customers. The Digital technology Team is looking for top-notch Senior Web Developers. We are building best in class Digital applications and API’s. As a Senior Development Engineer, you have mastered HTML, CSS, and JavaScript and have strong programming background in Java/J2EE or .Net. You have a passion for creating the best user experience possible. You have a deep understanding of the browser's DOM, and you understand the difference between the various browsers.   Responsibilities: - Design and write code for web/mobile HTML5 AJAX applications that scale to high-volume production quality. - Engineer a world-class platform with an eye towards rapid iteration and creative problem solving. - Prototype creative solutions quickly, and be able to collaborate with others in crafting and implementing your technical vision. - Contribute and collaborate in creation and consumption of open, standards-based solutions, while working with existing technologies and infrastructure. - Identify opportunities for process and tool improvements and drive those from concept to implementation. - R&D in emerging technologies.   Preferred Skills: - Ability to work in agile scrum development environment - Strong HTML5, CSS, JavaScript, AJAX, JSON skills & solid programming background in Java/J2EE or .Net for implementing web technologies. - Solid understanding of multithreaded software design. - Solid understanding of the AJAX and Spring frameworks. - Understanding (preferred experience) in JQuery, NodeJS, AngularJS, extJS, SenchaTouch Framework, Promise, and other frameworks like (FlightJS, requireJS, wireJS , AngularJS) - Strong knowledge of server side design patterns and continuous delivery principles. - Excellent understanding of development concepts and SDLC methodologies. - Strong customer focus, excellent problem solving and analytical skills. - Strong verbal and written communication skills. - Excellent verbal and written communication skills. - Ability to work in a rapidly changing environment.   Qualifications: - 2+ years of web development experience, experience working on Windows and Java platforms - 1+ years experience with HTML5, CSS, JavaScript, AJAX and Spring frameworks. - BS or MS in Computer Science or related field    If you are qualified, available, interested, planning to make a change, or know of a friend/colleague who might have the required qualifications and interest, please contact me ASAP at bpatterson@judge.com.   Please NOTE, in considering candidates, time is of the essence, so please respond ASAP and include: - A current copy of your CV (.DOC) - Current and Asking Rate/Compensation - Availability to Interview/Start - 3-4 sentence summary or bullet point list of your specific qualifications for this position - Any other pertinent information that may impact your qualifications for this position   Thank you very much for your time and consideration!  I look forward to hearing from you!   Sincerely, Bobby Patterson Recruiter 4030 W. Boy Scout Blvd Suite 825  Tampa, Florida 33607 (813) 463-9713 (813) 286-0668 fax bpatterson@judge.com www.judge.com   The Judge Group  Consulting  Staffing  Training   A Global Leader in Professional Services since 1970",1,0,2014,2024,0,https://github.com/pattersonbj26/New-Front-End-Web-Development-roles-in-San-Francisco
Prototype,Prototype,this repo contains prototype design pattern implementation using C#,0,36,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/Prototype
Prototype,lab-03,Lab 3: The prototype design pattern,0,12,2023,2023,1,https://github.com/cpit252/lab-03
Prototype,Prototype,Design Pattern,0,0,2017,2017,1,https://github.com/Jefferson1402/Prototype
Prototype,Prototype,Creational Design Pattern in C# | Prototype Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Prototype
Prototype,Prototype,Design Pattern Prototype,0,0,2018,2018,1,https://github.com/KNaka88/Prototype
Prototype,prototype,Prototype design pattern,0,0,2020,2020,2,https://github.com/rafamagalhas/prototype
Prototype,Prototype,Design pattern :: prototype,0,0,2019,2019,1,https://github.com/onsaurav/Prototype
Prototype,Prototype,Design Patterns - Prototype,0,0,2020,2020,1,https://github.com/euygor/Prototype
Prototype,prototype,Prototype design pattern,0,0,2022,2024,1,https://github.com/rParkerT/prototype
Prototype,Prototype,Design Pattern Prototype,0,0,2013,2014,1,https://github.com/ren4nh/Prototype
Prototype,prototype,prototype design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/prototype
Prototype,Prototype,Prototype design pattern,0,0,2016,2016,0,https://github.com/Masyanas/Prototype
Prototype,Prototype,prototyoe design pattern,0,0,2024,2024,1,https://github.com/OctavioCastillo/Prototype
Prototype,Prototype2,Creational Design Pattern in C# | Prototype Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Prototype2
Prototype,Electric-Power-System,"C#, UML, CIM, WPF / Used design patterns: Observer, Prototype, Singleton, Command and MVC. More details in ""Project.docx"" and ""Documentation.odt""",0,3,2018,2019,1,https://github.com/Milica94/Electric-Power-System
Prototype,Prototype-Design-Pattern,Creational Design Patterns: Prototype Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Prototype-Design-Pattern
Prototype,ProtoType,Proto Type Design Pattern,0,0,2022,2022,1,https://github.com/MANOJ2427/ProtoType
Prototype,Prototype,Design pattern Prototype c#,0,0,2019,2019,1,https://github.com/lechetta/Prototype
Prototype,Prototype,Design Pattern (Creational group),0,0,2020,2020,1,https://github.com/artghlijyan/Prototype
Prototype,prototype,Prototype Creational Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/prototype
Prototype,Prototype,Prototype design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Prototype
Prototype,Prototype,Design patterns exercise - Prototype,0,0,2020,2020,0,https://github.com/milicaklaric/Prototype
Prototype,Prototype,design pattern in swift,0,0,2020,2020,1,https://github.com/officialyenum/Prototype
Prototype,PrototypeExample,prototype design pattern,0,0,2015,2015,1,https://github.com/d1mnewz/PrototypeExample
Prototype,PrototypeDP,Prototype Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/PrototypeDP
Prototype,PrototypePattern,Prototype Design Pattern,0,0,2024,2024,1,https://github.com/devsquad554/PrototypePattern
Prototype,PrototypeDesignPattern,prototype Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/PrototypeDesignPattern
Prototype,PrototypeDesignPattern,Prototype Design Pattern,0,0,2023,2023,1,https://github.com/Duttabhi/PrototypeDesignPattern
Prototype,prototypePatternCSharp,Prototype design Pattern,0,0,2020,2020,1,https://github.com/blackmamba85/prototypePatternCSharp
Prototype,PrototypeDesignPatternCourse,Design Pattern Course,0,0,2017,2017,1,https://github.com/shakedd15/PrototypeDesignPatternCourse
Prototype,Builder_Chain_Prototype,Design Patterns,0,0,2021,2021,1,https://github.com/EdgeOfMordor/Builder_Chain_Prototype
Prototype,Prototype,Prototype Creational Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Prototype
Prototype,Prototype,Prototype and registry Design Pattern,0,0,2024,2024,1,https://github.com/KausHimanshu/Prototype
Prototype,AP9-Builder-Singleton-Prototype,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/AP9-Builder-Singleton-Prototype
Prototype,Prototype-Pattern,Design Pattern - Creational,0,0,2017,2017,1,https://github.com/mhtmalpani/Prototype-Pattern
Prototype,java-prototype,Prototype Design Pattern,0,0,2021,2021,1,https://github.com/wescleycaldeira/java-prototype
Prototype,Prototype_Pattern,Prototype Design Pattern,0,0,2019,2019,0,https://github.com/smartprogrammer0014/Prototype_Pattern
Prototype,Prototype,Atividade utilizando o Design Pattern Prototype,0,0,2023,2023,0,https://github.com/Sb-cruz/Prototype
Prototype,Prototype,Design Patterns - Gang of Four - Prototype,0,0,2018,2018,2,https://github.com/matheus-leao/Prototype
Prototype,Prototype-designPattern,prototype design pattern,0,0,2019,2019,0,https://github.com/ahmedco82/Prototype-designPattern
Prototype,Codigo-029---Nova-Hamburgueria,Design Pattern Prototype,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-029---Nova-Hamburgueria
Prototype,Desktop,Prototype Design Pattern,0,0,2020,2020,0,https://github.com/MdRafiqulIslamKhanSagor/Desktop
Prototype,java,Prototype Design Pattern,0,0,2024,2024,1,https://github.com/shivamraghuwanshi2001/java
Prototype,EmployeeClone_PrototypeDesignPattern,Prototype Design Pattern Example,0,0,2021,2021,1,https://github.com/VaibhavBhapkar/EmployeeClone_PrototypeDesignPattern
Prototype,SingletonAndPrototype,Design Pattern HW,0,0,2020,2020,1,https://github.com/Hatuls/SingletonAndPrototype
Prototype,JavaPrototypePattern,Java Design Pattern,0,0,2017,2017,0,https://github.com/VB10/JavaPrototypePattern
Prototype,PrototypeDemo,Demonstrates a prototype design pattern,0,0,2023,2023,1,https://github.com/MichaelSciole412/PrototypeDemo
Prototype,PrototypePattern,Java Design Pattern - Prototype Pattern,0,0,2024,2024,0,https://github.com/ashishpatel007/PrototypePattern
Prototype,PrototypeDemo,Demo for Prototype Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/PrototypeDemo
Prototype,PrototypeDesignPattern,Prototype design pattern using Java,0,0,2023,2023,0,https://github.com/FirozKumbla/PrototypeDesignPattern
Prototype,PrototypeDesignPattern,LLD for Prototype Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/PrototypeDesignPattern
Prototype,prototype,Simple project demonstrating the prototype design pattern.,0,0,2021,2022,1,https://github.com/Piazzi/prototype
Prototype,prototype,To learn Prototype design pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/prototype
Prototype,Prototype,A design pattern Prototype in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Prototype
Prototype,Prototype,Prototype design pattern from Specialist`s course,0,0,2023,2023,1,https://github.com/radiotech205/Prototype
Prototype,dp-prototype,Prototype Design Pattern Sample,0,0,2023,2023,1,https://github.com/rodolfofajardo/dp-prototype
Prototype,prototype-pattern,C# - Prototype design pattern.,0,0,2023,2023,1,https://github.com/flcristian/prototype-pattern
Prototype,prototype-design-pattern,ProtoType Design Pattern PHP,0,0,2022,2022,1,https://github.com/progakash/prototype-design-pattern
Prototype,Java-Prototype-Pattern,Java Prototype Design Pattern,0,0,2022,2022,1,https://github.com/Tpsunshine/Java-Prototype-Pattern
Prototype,Prototype-Design-Pattern,Implemented prototype design pattern,0,0,2023,2023,1,https://github.com/Mechatron00/Prototype-Design-Pattern
Prototype,Design_Pattern_Prototype,Implement Design_Pattern_Prototype,0,0,2022,2022,1,https://github.com/Mithu0229/Design_Pattern_Prototype
Prototype,typescript-prototype-pattern,Implement Prototype Design Pattern,0,0,2021,2021,1,https://github.com/wahyufeb/typescript-prototype-pattern
Prototype,csharp-prototype-pattern,csharp prototype design pattern,0,0,2022,2022,0,https://github.com/MarshalOfficial/csharp-prototype-pattern
Prototype,Prototype-DesignPattern,Prototype Design Pattern C#,0,0,2024,2024,2,https://github.com/21dh114172/Prototype-DesignPattern
Prototype,PrototypePattern,An example of Prototype Design Pattern,0,0,2019,2019,1,https://github.com/RicardoAnaniasJr/PrototypePattern
Prototype,lld-prototype-pattern,Understanding Prototype Design Pattern,0,0,2024,2024,1,https://github.com/iampushkar/lld-prototype-pattern
Prototype,swift-,swift prototype design pattern,0,0,2015,2015,1,https://github.com/cxpyear/swift-
Prototype,Prototype,design pattern associated with the software architecture discipline,0,0,2023,2023,1,https://github.com/alvaro-veiga/Prototype
Prototype,CSharpDP_Creational_Prototype,Creational Prototype Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_Prototype
Prototype,vlspoljar_zadaca_1,"Design Patterns - SINGLETON, PROTOTYPE",0,0,2015,2015,1,https://github.com/vlspoljar/vlspoljar_zadaca_1
Prototype,prototype-design-pattern-example,prototype-design-pattern-example,0,0,2017,2017,1,https://github.com/DesignPatterns101/prototype-design-pattern-example
Prototype,28_06_20_Prototype_design_pattern,Prototype design pattern example,0,0,2020,2020,0,https://github.com/GilMuzika/28_06_20_Prototype_design_pattern
Prototype,poc_design_pattern_prototype,implementation design pattern prototype,0,0,2024,2024,0,https://github.com/PabloCurty/poc_design_pattern_prototype
Prototype,Prototype,Exemplo de Design Pattern (Prototype) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/Prototype
Prototype,Advanced_programming_techniques2.2,Using Prototype design pattern,0,0,2018,2018,1,https://github.com/skrzymo/Advanced_programming_techniques2.2
Prototype,PrototypeDesignPattern,Prototype Design Pattern with IPhone Example.,0,0,2023,2023,1,https://github.com/Satya190597/PrototypeDesignPattern
Prototype,Prorotype_DP,estudando design patterns - Prototype,0,0,2024,2024,1,https://github.com/gutvono/Prorotype_DP
Prototype,DP_PrototypePattern,Small Project using Prototype Design Pattern.,0,0,2024,2024,1,https://github.com/iAmSidh108/DP_PrototypePattern
Prototype,DesignPatterns_ProxyPrototype,Experimenting w/ Design Patterns,0,0,2020,2023,1,https://github.com/samodle/DesignPatterns_ProxyPrototype
Prototype,JavaScript-Design-Patterns,"All Design Patterns with example code - ProtoType Design Pattern, Class design pattern, singleton design pattern, callbacks, factory design pattern, Abstract Factory Design pattern, mixin, modules, design pattern, Modules, Design Pattern",0,0,2019,2019,1,https://github.com/amirkhan064/JavaScript-Design-Patterns
Prototype,Prototype-Pattern,Prototype design pattern in Java,0,0,2015,2015,0,https://github.com/dconey646/Prototype-Pattern
Prototype,Prototype-01,"Design Pattern, Prototype, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/Prototype-01
Prototype,CSharpDP_Creational_Prototype2,Creational Prototype Design Pattern 2nd example,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_Prototype2
Prototype,patterns-prototype,Design patterns in C# (prototype),0,0,2019,2019,0,https://github.com/tiny-ghost/patterns-prototype
Prototype,prototype-pattern,Prototype Design Pattern in C#,0,0,2022,2022,1,https://github.com/jebarcha/prototype-pattern
Prototype,PrototypeDP,Simple project that implements prototype design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/PrototypeDP
Prototype,Prototype,An implementation of the Prototype design pattern in C++,0,0,2012,2013,1,https://github.com/abrahamkoshy/Prototype
Prototype,PrototypePattern,"Study Repository about the Design Pattern ""Prototype""",0,0,2020,2020,1,https://github.com/GQBrendel/PrototypePattern
Prototype,Prototype_DesignPattern,Code for Prototype design pattern,0,0,2023,2023,1,https://github.com/uday8247/Prototype_DesignPattern
Prototype,Prototype,"Design Patterns in Modern C++ by Dmitri Nesteruk, Prototype",0,0,2023,2023,1,https://github.com/r-tarnowski/Prototype
Prototype,Prototype-Design-Pattern,Prototype design pattern using java,0,0,2020,2020,1,https://github.com/raajbiswass9/Prototype-Design-Pattern
Prototype,DesignPattern-Prototype,Test of Prototype Design Pattern,0,0,2020,2020,1,https://github.com/FerrazFerrara/DesignPattern-Prototype
Prototype,Prototype_DesignPattern,Code vom Prototype Design Pattern,0,0,2024,2024,1,https://github.com/amarjul/Prototype_DesignPattern
Prototype,design-pattern-prototype,Estudo sobre design pattern prototype.,0,0,2024,2024,1,https://github.com/zenonxd/design-pattern-prototype
Prototype,java_gof_prototype,"design pattern ""prototype"" in java",0,1,2015,2015,1,https://github.com/osbominix/java_gof_prototype
Prototype,PrototypeCreditCard,This repository covers the Prototype design pattern,0,0,2019,2019,1,https://github.com/terryjohnson901/PrototypeCreditCard
Prototype,PrototypePatternPython,Simple code example of prototype design pattern,0,0,2022,2022,1,https://github.com/JuanDLCH/PrototypePatternPython
Prototype,ProtoType_design_pattern,This is protoType Design Pattern.,0,0,2023,2023,1,https://github.com/rajsoni5197/ProtoType_design_pattern
Prototype,RoboticPrototype,Design robot with prototypee design pattern,0,0,2024,2024,1,https://github.com/MadushaniDGS/RoboticPrototype
Prototype,prototype-pattern,This project include prototype design pattern,0,0,2023,2023,1,https://github.com/rgunindi/prototype-pattern
Prototype,Prototype-Pattern,Prototype Design Pattern Implementation by Java,0,0,2020,2020,1,https://github.com/Mamun-Al-Babu-Shikder/Prototype-Pattern
Prototype,DesignPatternPrototypeOrClone,Design Pattern Prototype Or Clone,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternPrototypeOrClone
Prototype,prototype-pattern,An example of Prototype design pattern,0,0,2023,2023,1,https://github.com/Mustaphaben1/prototype-pattern
Prototype,engComp.padroesDeProjeto.prototype,Prototype design pattern in java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.prototype
Prototype,proto-diff-pattern,Prototypical object diffing design pattern ,0,0,2018,2018,1,https://github.com/doniyor2109/proto-diff-pattern
Prototype,PrototypeExample,"An example of the software design pattern ""Prototype""",0,0,2023,2023,1,https://github.com/vladdubceac/PrototypeExample
Prototype,Simple-Prototype,Repository ini digunakan untuk menyimpan tugas besar Clean Code dan Design Pattern. Pada repository ini menggunakan design pattern creational Prototype design pattern pada domain kasus Chatbot.,0,0,2020,2020,1,https://github.com/satadii11/Simple-Prototype
Prototype,prototype_design_pattern,Learning about the prototype design pattern,0,0,2023,2023,1,https://github.com/psycode99/prototype_design_pattern
Prototype,Design-Pattern_Prototype,Prototype Design Pattern Sample By Java,0,0,2021,2021,1,https://github.com/pedramkarevan/Design-Pattern_Prototype
Prototype,prototype-performance-test,Php design pattern prototype performance test,0,0,2015,2015,1,https://github.com/dgncan/prototype-performance-test
Prototype,PrototypeDesignPattern,Sample implementation of prototype design pattern in .NET,0,0,2014,2015,1,https://github.com/kszabelski/PrototypeDesignPattern
Prototype,prototype-design-pattern,Prototype design pattern implementation in Java,0,0,2024,2024,1,https://github.com/williamfisher9/prototype-design-pattern
Prototype,prototype-design-pattern,Prototype Design Pattern Implementation in C#,0,0,2024,2024,1,https://github.com/PrashDev425/prototype-design-pattern
Prototype,PrototypeShapeEditorDemo,Demo of the Prototype design pattern in swift,0,0,2018,2018,1,https://github.com/KasperGam/PrototypeShapeEditorDemo
Prototype,tuto_pettern_singleton_prototype,Tutorial Design Pattern Singleton et Prototype,0,0,2023,2023,0,https://github.com/RachidSAOUDI/tuto_pettern_singleton_prototype
Prototype,DesignPatternTestPrototype,Test Of Design Pattern Prototype (HumanCell),0,0,2019,2019,1,https://github.com/sorenowy/DesignPatternTestPrototype
Prototype,goPrototypeDesignPattern,The prototype design pattern in go,0,0,2020,2020,1,https://github.com/irisida/goPrototypeDesignPattern
Prototype,JavaPrototypePatternSample,Sample of Java Prototype Design Pattern,0,0,2017,2017,1,https://github.com/thiagz/JavaPrototypePatternSample
Prototype,php-design-patterns-prototype,PHP Design Patterns - Prototype Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-prototype
Prototype,creational_design_patterns_prototype,Example creational design pattern using prototype,0,0,2022,2022,1,https://github.com/dukrl722/creational_design_patterns_prototype
Prototype,CreacarPrototype,An example of the Prototype design pattern.,0,0,2023,2023,1,https://github.com/emacabrera/CreacarPrototype
Prototype,Prototype_Pattern,Remedial example of a Prototype Design Pattern,0,0,2018,2018,1,https://github.com/Slidejiveman/Prototype_Pattern
Prototype,YamahaPrototype,An example of the Prototype design pattern.,0,0,2023,2023,1,https://github.com/emacabrera/YamahaPrototype
Prototype,designPatterns-prototypeFactory,College activity about prototype and Factory Method patterns.,0,0,2021,2021,1,https://github.com/euaaron/designPatterns-prototypeFactory
Prototype,CIS-434-Prototype-Design-Pattern,Source Code for Prototype Design Pattern,0,0,2020,2020,1,https://github.com/SBhatia772/CIS-434-Prototype-Design-Pattern
Prototype,DesignPatterns.PrototypeMethod,,0,0,2024,2024,1,https://github.com/francomacri17/DesignPatterns.PrototypeMethod
Prototype,PrototypePatternSwift,This is an example implementation of Prototype Design Pattern,0,0,2021,2021,1,https://github.com/osamaazmat/PrototypePatternSwift
Prototype,Design-Pattern-Prototype,Prototype Design Pattern with React and Python,0,0,2024,2024,1,https://github.com/MylesJMoore/Design-Pattern-Prototype
Prototype,design_patterns,"Implementing 3 design patterns in java(Strategy, observer and prototype design pattern)",0,0,2017,2017,1,https://github.com/shruti-14/design_patterns
Prototype,Memento_Prototype_Singleton,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/Memento_Prototype_Singleton
Prototype,prototype-design-pattern,Example implementation of the prototype design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/prototype-design-pattern
Prototype,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Prototype,design-pattern-prototype,Simple example of the prototype design pattern,0,0,2021,2021,0,https://github.com/seism0saurus/design-pattern-prototype
Prototype,DesignPattern_Prototype,Design Pattern Prototype in C# 6.0,0,0,2022,2022,1,https://github.com/fadl8/DesignPattern_Prototype
Prototype,Prototype_Design_Pattern,A simple example of prototype design pattern,0,0,2018,2018,1,https://github.com/PushkarrajPujari/Prototype_Design_Pattern
Prototype,DesignPatterns.Prototype,A sample implementation of Prototype Design Pattern,0,0,2019,2019,1,https://github.com/sebainones/DesignPatterns.Prototype
Prototype,prototype_design_-pattern,prototype design pattern Example of Mobile Phone,0,0,2022,2022,1,https://github.com/Manoharanagi/prototype_design_-pattern
Prototype,backend-communication-prototypes,Backend Communication Design Patterns Implemented in NodeJS,0,0,2024,2025,1,https://github.com/thekaranatic/backend-communication-prototypes
Prototype,Humber-Design-Pattern-Lab2-C-Sharp,This lab activity is for Singleton Design Pattern and Prototype Design Pattern,0,0,2025,2025,1,https://github.com/Gurjit211/Humber-Design-Pattern-Lab2-C-Sharp
Prototype,DesignPatterns,My study prototypes on Design Patterns,0,0,2025,2025,1,https://github.com/axsramos/DesignPatterns
Prototype,DesignPattern2-Assi2,"Using design patterns, proxy, template, prototype",0,0,2021,2021,1,https://github.com/soniafriesen/DesignPattern2-Assi2
Prototype,CopyCar,CopyCar based on Prototype Design Pattern,0,0,2023,2023,0,https://github.com/Strzelba72/CopyCar
Prototype,DesignPatterns,Factory And Prototype Design Pattern Example,0,0,2018,2018,1,https://github.com/sharad34/DesignPatterns
Prototype,CS-230_Portfolio,Backend prototype: using singleton design pattern,0,0,2021,2024,1,https://github.com/Formtrix/CS-230_Portfolio
Prototype,Bookstore,Simple implementation of Prototype design pattern.,0,0,2016,2016,1,https://github.com/HonzoBonzo/Bookstore
Prototype,javascript-under-the-hood,"Closure, prototype, oojs and design patterns",0,0,2017,2020,1,https://github.com/ranjanrajiv00/javascript-under-the-hood
Prototype,prototype-pattern,Practice implementation of the prototype creational design pattern,0,0,2023,2023,1,https://github.com/remingtondavids/prototype-pattern
Prototype,PrototypePattern_Java,A basic implementation of the Prototype design pattern in Java,0,0,2024,2024,1,https://github.com/tylerpeaster03/PrototypePattern_Java
Prototype,PrototypeDesignPattern,This is a Java implementation of the Prototype design pattern,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/PrototypeDesignPattern
Prototype,Prototype-And-Registry-Design-Pattern,Demonstration of prototype and registry design pattern.,0,0,2024,2024,1,https://github.com/vijayrao97/Prototype-And-Registry-Design-Pattern
Prototype,prototype,Project for the design patterns discipline of the Internet Systems course at UNIESP,0,0,2024,2024,1,https://github.com/guimferreira/prototype
Prototype,DesignPatterns.Prototype,"Sample Prototype exercise, where a class object is able to create a deep copy of itself",0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.Prototype
Prototype,DesignPatterns-Prototype,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Prototype
Prototype,MoneyTrackerPrototype,A group expense tracker using various design patterns,0,0,2023,2024,1,https://github.com/daerbevoli/MoneyTrackerPrototype
Prototype,DesignPatternsPrototype,,0,0,2016,2016,0,https://github.com/saxenaj/DesignPatternsPrototype
Prototype,prototype-design-pattern,Prototype Design Pattern in python - published book example,0,0,2019,2019,1,https://github.com/theookoye/prototype-design-pattern
Prototype,Prototype_Pattern_Unity,Exercising Protoype Design Pattern using Unity Game Engine.,0,0,2021,2021,1,https://github.com/CelilErenKalkan/Prototype_Pattern_Unity
Prototype,DesignPatterns-Prototype,,0,0,2021,2021,0,https://github.com/GabrielBronte/DesignPatterns-Prototype
Prototype,DesignPatterns-Prototype,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Prototype
Prototype,prototype-desgin-pattern,this repository contains code for prototype design pattern,0,0,2023,2023,1,https://github.com/ranarahul23/prototype-desgin-pattern
Prototype,DesignPatterns.Prototype,,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.Prototype
Prototype,DesignPatterns-Prototype,,0,0,2021,2021,1,https://github.com/DanielMachado29/DesignPatterns-Prototype
Prototype,Demo.DesignPattern.Prototype,An example of prototype design pattern in C#,0,0,2023,2023,1,https://github.com/LiteObject/Demo.DesignPattern.Prototype
Prototype,GaragePrototype,Implementing Prototype Design Pattern in the Existing Garage project,0,0,2018,2018,1,https://github.com/Nightmayr/GaragePrototype
Prototype,Prototype-Pattern,Prototype Design Pattern: Construcția de obiecte din obiecte existente,0,0,2022,2022,1,https://github.com/PrisacariuAndrei/Prototype-Pattern
Prototype,prototype-pattern,minimal example solve with prototype design pattern using php,0,0,2019,2019,1,https://github.com/isahlabbo/prototype-pattern
Prototype,prototype-pattern,Design pattern criacional (gof) Prototype para clonagem de objetos,0,0,2021,2021,1,https://github.com/Jhow-R/prototype-pattern
Prototype,Design-Patterns,Design Patterns in C#,0,0,2022,2022,1,https://github.com/nayeemsweb/Design-Patterns
Prototype,patterns,Markup and design patterns for app prototype,0,0,2022,2022,1,https://github.com/iit-scapp/patterns
Prototype,design-patterns-builder-singleton-prototype,"Example of design patterns builder , singleton et prototype",0,0,2023,2023,1,https://github.com/Bouzidhadjer/design-patterns-builder-singleton-prototype
Prototype,dotnet_lab1,Prototype design pattern in military unit simulation,0,0,2021,2023,1,https://github.com/nikitabubriak/dotnet_lab1
Prototype,Design_Pattern_JS,"singleton, factory , Observer, Prototype design pattern implemented",0,0,2020,2020,1,https://github.com/Pragati215/Design_Pattern_JS
Prototype,it426-final-prototype-pattern,Final project for IT426 - Prototype Design Pattern website,0,0,2016,2016,0,https://github.com/chris-knoll/it426-final-prototype-pattern
Prototype,Design_Pattern,"Creational design patterns: Abstract Factory, Prototype, Builder",0,0,2021,2021,1,https://github.com/AnnDv/Design_Pattern
Prototype,protoDesign,Prototype Design Pattern Implementation for CS371 Final,0,0,2024,2024,1,https://github.com/fosesqno/protoDesign
Prototype,proto-fruit-fly,this is a design pattern based project for the application of Prototype design pattern,0,0,2021,2021,1,https://github.com/gyan9427/proto-fruit-fly
Prototype,DesignPatterns-Cre-Prototype,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Cre-Prototype
Prototype,Design-patterns,a simple demonstration of prototype design pattern ,0,0,2019,2019,1,https://github.com/vihan125/Design-patterns
Prototype,DesignPatterns-Creational-Prototype,Allows creation of object based on another object,0,0,2021,2021,1,https://github.com/bethovenacha/DesignPatterns-Creational-Prototype
Prototype,DesignPatterns-Creational-Prototype,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Creational-Prototype
Prototype,PrototypePattern,"Simple study case of Prototype Pattern, related to Design Patterns in java",0,0,2016,2016,1,https://github.com/mvalho/PrototypePattern
Prototype,prototype_design_pattern,a simple program that illustrates the prototype design pattern,0,0,2020,2020,1,https://github.com/Sylia-RAHMANI/prototype_design_pattern
Prototype,buildrun-designpattern-prototype,Exemplo aplicado do Design Pattern Prototype em código Java,0,0,2022,2022,1,https://github.com/buildrun-tech/buildrun-designpattern-prototype
Prototype,Lab01-prototype,Lab work #1 of design patterns course by Specialist,0,0,2023,2023,1,https://github.com/radiotech205/Lab01-prototype
Prototype,PrototypeDesignPattern,Prototype Design Pattern in C#. The example use is Even Number Generator.,0,0,2014,2014,1,https://github.com/wcadap/PrototypeDesignPattern
Prototype,Prototype-Design-Pattern-Example,Little example and learning project for Prototype design pattern,0,0,2024,2024,1,https://github.com/furkanBilici/Prototype-Design-Pattern-Example
Prototype,prototype-example,It shows an implementation of prototype design pattern in Java.,0,0,2023,2023,1,https://github.com/calebeds/prototype-example
Prototype,Creational-Prototype,This is a short implementation of the Prototype design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Creational-Prototype
Prototype,prototype_design_pattern_flutter,Prototype Creational Design Pattern in Flutter 19 June 2023,0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/prototype_design_pattern_flutter
Prototype,cos214-assignment1, implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Prototype design pattern; • implement the Memento pattern;,0,0,2019,2022,2,https://github.com/giovannijoubert/cos214-assignment1
Prototype,DesignPatternsHIT,Final Project in Design Patterns - HIT ,0,0,2023,2023,2,https://github.com/Jossefo/DesignPatternsHIT
Prototype,pattern_prototype,An example of the implementation of creational design pattern: Prototype,0,0,2024,2024,0,https://github.com/JimenaLeyva07/pattern_prototype
Prototype,Prototype-Design-Pattern,Prototype design pattern comes under creational design pattern as it deals with creation of objects. It helps to copy or clone existing object.,0,0,2023,2023,1,https://github.com/tejasshaha/Prototype-Design-Pattern
Prototype,JAVA-DesignPatterns-Observer-Prototype,JAVA project to design a Backup System for Student Course Allocations using Observer Pattern and Prototype Pattern,0,0,2018,2018,1,https://github.com/vdkamdar/JAVA-DesignPatterns-Observer-Prototype
Prototype,Java-DesignPatterns-Observer-Prototype,Java project to design a Backup System for Student Course Allocations using Observer Pattern and Prototype Pattern,0,0,2018,2018,1,https://github.com/girishkurkute/Java-DesignPatterns-Observer-Prototype
Prototype,DesignPatternsCpp,"Composite, Builder, Abstract Factory, Visitor, Prototype Patterns",0,1,2014,2015,0,https://github.com/paumayr/DesignPatternsCpp
Prototype,DesignPatterns,Some examples of design patterns,0,0,2021,2021,1,https://github.com/EdgarPozas/DesignPatterns
Prototype,prototype_design_pattern,This project implements a use case of Prototype Design Pattern. ,0,0,2024,2024,1,https://github.com/GabrielBortolote/prototype_design_pattern
Prototype,DesignPatterns,"Creational Design Patterns (Factory, Abstract Factory , Singleton , Builder, Prototype)",0,0,2022,2022,1,https://github.com/shari06/DesignPatterns
Prototype,Lab03-DesignPatterns,Implementation of Prototype and Strategy Java Design Patterns,0,0,2022,2022,1,https://github.com/lmlldwn/Lab03-DesignPatterns
Prototype,exp4,Examples of design patterns: Abstract Factory and Prototype,0,0,2021,2021,2,https://github.com/selab-1400-01/exp4
Prototype,pattern-demo,"Demonstration of repository, prototype and factory design patterns",0,0,2025,2025,1,https://github.com/velikakmica/pattern-demo
Prototype,omnomic,Okay design patterns for turn-based game prototyping.,0,0,2015,2018,1,https://github.com/temetherian/omnomic
Prototype,DesignPatterns,A test cases for some prototyped designs patterns in react,0,0,2024,2024,1,https://github.com/andreyscott/DesignPatterns
Prototype,PrototypePatternDZoneFixedCode,Fixed code of Prototype Pattern tutorial https://dzone.com/articles/design-patterns-prototype,0,0,2019,2019,1,https://github.com/olegkamuz/PrototypePatternDZoneFixedCode
Prototype,prototype_design_pattern,"#Day4, approach to implement simple prototype design pattern in Java. #100DaysOfCode",0,0,2020,2020,1,https://github.com/jashuRc/prototype_design_pattern
Prototype,prototype-design-pattern,This is a simple implementation of prototype design pattern in java ,0,0,2021,2021,1,https://github.com/omidhaghighatgoo/prototype-design-pattern
Prototype,DesignPatterns,"Aplicação em Java com implementação de Padrão Factory, Prototype e Observer",0,0,2023,2023,0,https://github.com/RafaTheMonk/DesignPatterns
Prototype,PhpDesignPatterns-Prototype,Prototype,0,0,2018,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Prototype
Prototype,prototype-mvc,"A tiny MVC framework using the Command, States and Signal design patterns",0,0,2015,2015,0,https://github.com/broyeztony/prototype-mvc
Prototype,Prototype-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Prototype-Pattern
Prototype,Prototype-Pattern,A follow-along example of an implementation of the prototype design pattern,0,0,2021,2021,1,https://github.com/aharris52/Prototype-Pattern
Prototype,fluentInt-abstractFry-prototype-introduction,"Introdução aos Design Patterns Fluent Interface, Abstract Factory e Prototype",0,0,2020,2023,1,https://github.com/lucasdebeterco/fluentInt-abstractFry-prototype-introduction
Prototype,Design-Patterns-Tutorial-Prototype, This project is taken from Derek Banas' Design Patterns Tutorial series.,0,0,2019,2019,1,https://github.com/olosinno/Design-Patterns-Tutorial-Prototype
Prototype,FactoryDecoratorObserverPrototype,This code repository contains some of the design patterns integrated together.,0,1,2019,2019,1,https://github.com/Mark-Arias/FactoryDecoratorObserverPrototype
Prototype,Design-Patterns,Made some design patterns in c++. • implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Abstract Factory design pattern • implement the Prototype design pattern; • implement the Memento pattern; and • integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/Design-Patterns
Prototype,DesignPatternsCSharp,"Example of Builder, Abstract Factory, Visitor and Prototype in iterative steps",0,1,2014,2014,0,https://github.com/paumayr/DesignPatternsCSharp
Prototype,Integrated-CA-Developing-the-irVid-prototype,"Algorithms, Architecture and Design Patterns Object Oriented Analysis and Design",0,1,2022,2022,2,https://github.com/Daniel-f-ferreira/Integrated-CA-Developing-the-irVid-prototype
Prototype,clone-wars,C++ program created to explore the prototype design pattern,0,0,2023,2023,1,https://github.com/MrWhiskersss/clone-wars
Prototype,Herdsman,"Pixi-js Prototype, mostly a recap for design patterns",0,0,2024,2024,1,https://github.com/AlexandruManafu/Herdsman
Prototype,Lab3,CCSW 413 Lab 3: Java Prototype Design Pattern Lab,0,0,2024,2024,1,https://github.com/SuhaAlsulami2/Lab3
Prototype,Design-Patterns,Designed and implemented uber  -prototype using 8 design patterns. ,0,0,2018,2018,0,https://github.com/Pragati/Design-Patterns
Prototype,Design-Patterns,"Testing of Singleton,Prototype,Command and Adapter design patterns.",0,0,2020,2020,1,https://github.com/madhurima12/Design-Patterns
Prototype,ArticleService,Article service console app using the prototype design pattern.,0,0,2019,2019,1,https://github.com/SergeiOkon/ArticleService
Prototype,DesignPatternsJava,"Some of Common Design Patterns like  Observer,Singleton, Prototype,FactoryDesignPattern,and Adapter",0,0,2021,2021,2,https://github.com/manishv963/DesignPatternsJava
Prototype,Prototype,Prototype is a creational design pattern that lets you copy existing objects without making your code dependent on their classes.,0,0,2022,2022,1,https://github.com/quynhchi1009/Prototype
Prototype,car-manufacture,Using java to implement Builder and Prototype design patterns,0,0,2023,2023,1,https://github.com/mohammadsoukar2/car-manufacture
Prototype,CreationalDesignPatternsComparison,"Comparison of Abstract Factory, Builder and Prototype design patterns",0,0,2020,2020,1,https://github.com/Pokoi/CreationalDesignPatternsComparison
Prototype,WholesaleRebate,Prototype project with Decorator Design Pattern tested with Cucumber,0,0,2018,2018,1,https://github.com/ileontiuc/WholesaleRebate
Prototype,Proxy-Design-Pattern,Implementation of Prototype Design Pattern in Java using Eclipse.,0,0,2019,2019,2,https://github.com/noor-binte-amir/Proxy-Design-Pattern
Prototype,Payments-DesignPatterns,Prototype to show the implementations of Payment types using different Design PAtterns.,0,1,2018,2018,1,https://github.com/syedabdi/Payments-DesignPatterns
Prototype,Lab3-,CCSW 413 Lab 3: Java Prototype Design Pattern Lab,0,0,2024,2024,1,https://github.com/SuhaAlsulami2/Lab3-
Prototype,design-patterns-prototype,Example of prototype pattern implementation,0,0,2019,2019,1,https://github.com/robrig92/design-patterns-prototype
Prototype,design-patterns-prototype,,0,0,2022,2022,1,https://github.com/tmontini/design-patterns-prototype
Prototype,design__patterns_prototype,,0,0,2022,2022,1,https://github.com/catalunha/design__patterns_prototype
Prototype,design-patterns-prototype,,0,0,2020,2020,1,https://github.com/Pampa-Devs/design-patterns-prototype
Prototype,Prototype---design-patterns,,0,0,2022,2022,0,https://github.com/Lahut/Prototype---design-patterns
Prototype,Design-Patterns-Prototype,,0,0,2023,2023,1,https://github.com/roman-lehendzevych-vitech/Design-Patterns-Prototype
Prototype,design-patterns-prototype,,0,0,2021,2021,1,https://github.com/patrickAbarbosa/design-patterns-prototype
Prototype,design-patterns-prototype,Prototype Pattern in typescript ,0,0,2022,2022,0,https://github.com/israel-bruno/design-patterns-prototype
Prototype,-Design_Patterns_Prototype,"Specify the kind of objects to create using a prototypical instance, and create new objects by copying this prototype.",0,0,2017,2017,1,https://github.com/TaharLOUKIL/-Design_Patterns_Prototype
Prototype,Design-Patterns-Prototype,"Trabalho de Engenharia de Software 2, direcionado ao padrão Prototype",0,0,2022,2022,1,https://github.com/marydreyer/Design-Patterns-Prototype
Prototype,Design-Patterns---Prototype,,0,0,2014,2014,1,https://github.com/rafaelabes/Design-Patterns---Prototype
Prototype,design-patterns-prototype,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-prototype
Prototype,Design-Patterns-Prototype,,0,0,2019,2019,1,https://github.com/IamMartinPeek/Design-Patterns-Prototype
Prototype,prototype-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/prototype-design-patterns
Prototype,design-patterns-prototype,,0,0,2020,2020,1,https://github.com/angelicaflausino/design-patterns-prototype
Prototype,Design-Patterns-Prototype,,0,0,2023,2023,1,https://github.com/JGabriel02/Design-Patterns-Prototype
Prototype,design-patterns,Prototype e Composite. Extra: Sidecar,0,0,2023,2023,1,https://github.com/thiagoprazeres/design-patterns
Prototype,simple-prototype-python,A simple example of how to implement the Prototype design pattern in Python,0,0,2023,2023,1,https://github.com/sean-campbelltech/simple-prototype-python
Prototype,DesignPatterns-Creational,"Study about creational design patterns such as Singleton, Prototype, Factory, Abstract Factory and Builder",0,0,2019,2019,1,https://github.com/costalopes71/DesignPatterns-Creational
Prototype,ProtoTypeDesign,This  Project is use to create prototype design pattern  using swift   rogaming Langaunge ,0,0,2019,2019,1,https://github.com/Rajmaurya8085/ProtoTypeDesign
Prototype,design_pattern_prototype,"Develop a system that uses the pattern given in class. ""Prototype"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_prototype
Prototype,Prototype-Design-Pattern,This is a demo which is used to descibe the Prototype Design Pattern,0,0,2018,2018,1,https://github.com/sbbug/Prototype-Design-Pattern
Prototype,SimplePrototypeCSharp,A simple example of how to implement the Prototype design pattern in C#,0,0,2023,2023,1,https://github.com/sean-campbelltech/SimplePrototypeCSharp
Prototype,DesignPatternsHomework, A prototyped and simplified implentaion of the interactions between a mocked up database and metrics,0,0,2018,2018,1,https://github.com/mmunoz779/DesignPatternsHomework
Prototype,Design-Patterns-Java2,Singleton and Prototype,0,0,2022,2022,1,https://github.com/cerbucristi/Design-Patterns-Java2
Prototype,DesignPatterns-Creational,"Creational design patterns, Singleton, Builder, Prototype, Factory, and AbstractFactory as defined by the Gang of Four",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Creational
Prototype,DesignPatternsProj2,"A project meant to showcase the following Design Patterns: Post, Proxy, Prototype, and Template",0,0,2023,2023,1,https://github.com/Clayton-Pajot/DesignPatternsProj2
Prototype,DesignPatterns.NET,"Most popular design patterns in C# (.NET). OOP, SOLID, Builder, Factory, Abstract Factory, Prototype, Singleton, Strategy, Observer",0,0,2024,2024,1,https://github.com/bartoszclapinski/DesignPatterns.NET
Prototype,Mario,my superMario game with added prototypes for design patterns class,0,0,2021,2021,1,https://github.com/potocekn/Mario
Prototype,Holt.DataAccessLayer,This solution is a prototype using the Bridge design pattern,0,0,2016,2016,1,https://github.com/debasser/Holt.DataAccessLayer
Prototype,entitymanipulator,"A C++ demo on Composite, Prototype and Visitor design patterns",0,0,2024,2024,1,https://github.com/anttijuu/entitymanipulator
Prototype,SpringBoot-demo-container,SpringBoot app - Container examples using singleton and prototype design patterns,0,0,2019,2019,1,https://github.com/ngsankar-lab/SpringBoot-demo-container
Prototype,prototype-pattern-python,Prototype Design Pattern Implementation in Python 3.0 with Copy and ABC libraries - 2021,0,0,2021,2021,0,https://github.com/ElHurta/prototype-pattern-python
Prototype,design-patterns,"Samples of design patterns: Adapter, Command, FactoryMethod, Observable, Prototype, Singleton.",0,0,2019,2024,1,https://github.com/PauloBusch/design-patterns
Prototype,Shooter3D,Simple 3D shooter prototype with usage of appropriate design patterns ,0,0,2024,2025,1,https://github.com/colegion/Shooter3D
Prototype,self-attaching-components,Quick prototype of a design pattern I had in mind,0,0,2015,2015,2,https://github.com/vinzdef/self-attaching-components
Prototype,iGamingPaymentProcessing,iGaming Payment Processing prototype architecture by using Flyweight design pattern,0,0,2020,2022,1,https://github.com/VanchoDimitrov/iGamingPaymentProcessing
Prototype,Creational-Design-Patterns,"Design Patterns series covering Factory, AbstractFactory, Singleton, Builder, Prototype, Singleton",0,0,2024,2024,0,https://github.com/Rocket387/Creational-Design-Patterns
Prototype,Design-Patterns,"Decorator, adapter, prototype, factory method, abstract factory",0,0,2017,2017,1,https://github.com/omarushchak/Design-Patterns
Prototype,Design-Patterns-Project04,"Visitor, Observer, Prototype Patterns",0,0,2016,2016,1,https://github.com/gbonann1/Design-Patterns-Project04
Prototype,kodilla-design-patterns_mod_11,"The most common design patterns: Singleton, Prototype, Strategy, Factory, Builder",0,0,2018,2018,1,https://github.com/paulina-bukowska/kodilla-design-patterns_mod_11
Prototype,Prototype-Design-Pattern,This is a sample C# console application project for understanding the Prototype design pattern.,0,0,2019,2019,1,https://github.com/jjeffrin/Prototype-Design-Pattern
Prototype,CreationalDesignPatterns.Prototype,,0,0,2024,2024,0,https://github.com/Nitran2004/CreationalDesignPatterns.Prototype
Prototype,JS_Prototype_design_patterns,,0,0,2017,2017,1,https://github.com/devnigam24/JS_Prototype_design_patterns
Prototype,Design-Patterns-Prototype-IRENE,,0,0,2022,2022,1,https://github.com/IreneVT7/Design-Patterns-Prototype-IRENE
Prototype,DesignPatternsInJava,An application to make design pattern practice,0,0,2020,2020,1,https://github.com/xChivalrouSx/DesignPatternsInJava
Prototype,SingletonDesignPatterns,Prototype Tasarım Kalıbı Kullanımı ve örnek,0,0,2022,2022,1,https://github.com/UmutBilgen/SingletonDesignPatterns
Prototype,kotlin-prototype-kt-presentation,Presentation and code example where I explained the Prototype design pattern and its uses,0,0,2021,2021,1,https://github.com/BjornvdLaan/kotlin-prototype-kt-presentation
Prototype,Plutus,Desktop wallet graph application using 6 different design patterns,0,1,2021,2021,1,https://github.com/BartoszKlonowski/Plutus
Prototype,CreationalDesignPatterns,"Singleton, Prototype, Factory, Abstract Factory, Builder",0,0,2020,2021,1,https://github.com/bozburak/CreationalDesignPatterns
Prototype,PrototypeInLaravel,Shows how to use the Prototype design pattern in Laravel. Watch the video. The link is in the description.,0,0,2024,2024,0,https://github.com/talksonweb/PrototypeInLaravel
Prototype,prototype-in-c-,"simple code shows the main ""interface or abstract class"" for prototype concept as design pattern",0,0,2021,2021,1,https://github.com/mjmdellpython/prototype-in-c-
Prototype,prototype-design-pattern,Simple description and demo of the prototype design pattern using Java code for the demo.,0,0,2024,2024,1,https://github.com/Jodansky/prototype-design-pattern
Prototype,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Prototype,COS214-PA1,"This practical is to demonstrate various design patterns such as Momento, Prototype, Template Method, Factory and Abstract Factory Design Patterns ",0,0,2023,2023,1,https://github.com/Bigmanfish1/COS214-PA1
Prototype,prototype-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Prototype utilizando a interface Cloneable em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/prototype-java
Prototype,se-designpatterns,Some design patterns written in Python for Software engineering classes.,0,0,2018,2023,1,https://github.com/MateuszGrabuszynski/se-designpatterns
Prototype,creational-design-patterns,Singleton - Prototype - Builder - Abstract Factory - Factory Method,0,0,2024,2024,1,https://github.com/mainProgram/creational-design-patterns
Prototype,DesignPatterns-ObserverPattern_JAVA,JAVA project to design a Backup System for Student Course Allocations using Observer Pattern and Prototype Pattern,0,0,2017,2017,1,https://github.com/shahnish009/DesignPatterns-ObserverPattern_JAVA
Prototype,SE_TDD_and_Design_Patterns,,0,0,2022,2022,2,https://github.com/zahrayousefijamarani/SE_TDD_and_Design_Patterns
Prototype,DesignPatternPrototyp,Nach programmiert von http://www.dofactory.com/net/prototype-design-pattern,0,0,2017,2020,1,https://github.com/PlumpMath/DesignPatternPrototyp
Prototype,LogicGatesCpp,"Project with gates using composite, factory, prototype and visitor design patterns.",0,0,2018,2018,1,https://github.com/Dzudit/LogicGatesCpp
Prototype,creationalDesignPatterns,"Creational Design Patterns(Simple Factory, Factory Method, Factory Abstraction, Builder, Prototype)",0,0,2024,2024,1,https://github.com/ghajarehsan/creationalDesignPatterns
Prototype,swen-746-hw7,Implementing two design patterns into a prototype monster racing game project,0,0,2024,2024,1,https://github.com/ABradbury823/swen-746-hw7
Prototype,CreationalDesignPattern,"This is demo code for Factory, Abstract and Prototype Design pattern",0,0,2020,2020,1,https://github.com/Shraddharikhe123/CreationalDesignPattern
Prototype,patterns-levelup,"Design Patterns: Singleton, Factory, Builder, Abstract Factory, and Prototype; Layering Architecture",0,0,2024,2024,1,https://github.com/clocoyashuv/patterns-levelup
Prototype,DesignPatterns,This project demonstrates the implementation of various design patterns in Java.,0,0,2022,2022,1,https://github.com/jchoker/DesignPatterns
Prototype,designpatternJAVA,"Design Pattern that are involving Singleton, Factory, Abstract Factory,Builder,Prototype",0,0,2020,2020,1,https://github.com/WanAzlin/designpatternJAVA
Prototype,Design-Patterns-8.2---Prototype,,0,0,2018,2018,1,https://github.com/sakarisson/Design-Patterns-8.2---Prototype
Prototype,SpaceShooter,Simple pygame project that uses the Prototype and Template design patterns. ,0,0,2023,2023,1,https://github.com/alvaroEspinozaMerida/SpaceShooter
Prototype,java_design_patterns_prototype_mode,java设计模式_原型模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_prototype_mode
Prototype,design-patterns-singleton-builder-prototype,,0,0,2024,2024,1,https://github.com/Andynator3/design-patterns-singleton-builder-prototype
Prototype,design-patterns-prototype-ex-3,,0,0,2022,2022,1,https://github.com/ARPJavaPL2/design-patterns-prototype-ex-3
Prototype,design-pattern-prototype,"Implementation of design pattern ""prototype"" as part of the Otus C# developer professional course homework assignment.",0,0,2024,2024,1,https://github.com/ConstantinProg/design-pattern-prototype
Prototype,Prototype-Design-Pattern,"This is an assignment for class SWEN 383, creating a Prototype Design Pattern by Butrint Havolli",0,0,2023,2023,1,https://github.com/Br4x666/Prototype-Design-Pattern
Prototype,WPFMVVMSamples,Contains sample projects/prototypes for WPF apps using MVVM design pattern,0,0,2017,2017,1,https://github.com/MohammedAbdulMateen/WPFMVVMSamples
Prototype,PedindoBoneco,"Using design patterns like Prototype, nullObject and Builder in C# (✔️)",0,0,2021,2021,1,https://github.com/wellingtonPLF/PedindoBoneco
Prototype,go-design-patterns,"Creational Patterns - Singleton, Builder, Factory, Prototype, and Abstract Factory Design Patterns",0,0,2023,2023,1,https://github.com/Hudayberdyyev/go-design-patterns
Prototype,-MIRROR-design_patterns_object_pool,Object pool + builder + prototype OP. ,0,0,2021,2021,1,https://github.com/dcesarz/-MIRROR-design_patterns_object_pool
Prototype,Design-Pattern-in-FreeCol,Project/last lab in the course TDDB84 - Design Patterns. The design pattern Prototype was implemented in the open-source game FreeCol.,0,0,2017,2018,1,https://github.com/rcedermalm/Design-Pattern-in-FreeCol
Prototype,Design-Patterns,"Design Patterns - Singleton, Prototype, Builder, Service Discovery, Connection Pooling, Circuit Breaker etc.",0,0,2021,2024,1,https://github.com/pavanuppuluri/Design-Patterns
Prototype,design-patterns,Here you will find two design patterns: Prototype Pattern and Literals Object Pattern,0,0,2019,2021,0,https://github.com/luis24silva/design-patterns
Prototype,Design-Patterns,"Several small java programs experimenting with design patterns. The design patterns used are the Command, Prototype, Observer, Flyweight, State, and Singleton patterns.",0,0,2019,2019,1,https://github.com/BenDeVries856/Design-Patterns
Prototype,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Prototype,cosmos,"isTrav: cosmos: ""a system of thought"" ... prototype and singleton creational design patterns",0,0,2022,2022,1,https://github.com/c-u-l8er/cosmos
Prototype,CompanyHierarchicalStructure,Implementing a prototype of hierarchical structure of a company with design patterns,0,0,2022,2022,1,https://github.com/veliyasar/CompanyHierarchicalStructure
Prototype,Seng330-Ass2-Protoype-protocol-doxygen-testing,"Prototype design pattern, Uses Google Protocol buffer, uses Doxygen, Google testing framework",0,0,2015,2015,1,https://github.com/Jrage/Seng330-Ass2-Protoype-protocol-doxygen-testing
Prototype,creational-design-patterns,"[Training Material] Creational design patterns: Builder, Factory, Abstract Factory, Prototype and Singelton",0,0,2018,2018,1,https://github.com/lnrsoft/creational-design-patterns
Prototype,App-using-3-design-patterns,"Food factory using Prototype, Builder, Factory patterns",0,0,2023,2023,1,https://github.com/Alejandr099/App-using-3-design-patterns
Prototype,JAVA_DesignPattern-GoF-,Java Design Pattern / sigleton pattern / prototype pattern / abstract factory pattern / factory pattern,0,0,2023,2023,1,https://github.com/DevChloee/JAVA_DesignPattern-GoF-
Prototype,Prototype-Genetic-Algorithm-using-design-patterns,"This is a prototype of genetic algorithm developed in java by following design patterns (Abstract, Strategy,Singleton).",0,0,2019,2019,1,https://github.com/puniththota/Prototype-Genetic-Algorithm-using-design-patterns
Prototype,C_sharp_pluralsight_design_patterns_Prototype,Apply Prototype Pattern with C# by follow Pluralsight course,0,0,2020,2020,1,https://github.com/ahmed-hamdy90/C_sharp_pluralsight_design_patterns_Prototype
Prototype,Design-Pattern,"Project contains implementation of various design pattern like singelton, dao, prototype ... etc",0,0,2016,2016,1,https://github.com/rknoulakha/Design-Pattern
Prototype,design-pattern-example,"Combines strategy, momento and prototype design patterns inside a simple JavaFx app.",0,0,2020,2020,1,https://github.com/jerry-ye-xu/design-pattern-example
Prototype,PraticaDesignPatterns,"Criar arquivos .js utilizando os padrões Module, Prototype, Observer e Singleton.",0,0,2020,2020,0,https://github.com/charlesRampelotto/PraticaDesignPatterns
Prototype,DesignPatternPrototype,"Creating a hierarchy of several classes that implement methods for cloning objects according to the ""Prototype"" design pattern",0,0,2024,2024,1,https://github.com/KovalYevhenii/DesignPatternPrototype
Prototype,Calculator,A very simple Calculator using only Javascript and the prototype design pattern,0,0,2016,2016,1,https://github.com/juanjardim/Calculator
Prototype,prototype-js,This repo is being used to assist me in creating an article about the Prototype Design pattern in JS,0,0,2022,2022,1,https://github.com/eliwines19/prototype-js
Prototype,Design-Patterns,"This is a repository for design patterns learning examples. (singleton, factory, prototype, bridge etc.).",0,0,2021,2021,1,https://github.com/Bogdan191/Design-Patterns
Prototype,design-pattern-prototype-design-pattern-c-sharp.net,This repository explains what is prototype design pattern and its example in c-sharp .net,0,0,2016,2016,1,https://github.com/pramodchoudhari/design-pattern-prototype-design-pattern-c-sharp.net
Prototype,Design-Patterns-Strategy,Project involved the implementation a login system prototype using the strategy pattern ,0,0,2022,2022,0,https://github.com/tobiasodion/Design-Patterns-Strategy
Prototype,simons-editor-prototype,Typescript Prototype for a Markdown parser created for generating documentation for Simon's Lab built using proper design patterns.,0,0,2023,2024,1,https://github.com/Ssenseii/simons-editor-prototype
Prototype,12DesignPatterns,simple c# implementation of 12 design patterns (Builder also has Prototype and Decorator),0,0,2023,2023,1,https://github.com/Dannymane/12DesignPatterns
Prototype,js-design-patterns,"A project built in Javascript and some patterns like Prototype, Decorator and Memento",0,0,2020,2020,1,https://github.com/guilhermegarcia86/js-design-patterns
Prototype,n-design-patterns-creational,"Примеры по порождающим шаблонам. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2021,2021,1,https://github.com/humgate/n-design-patterns-creational
Prototype,design-patterns,"Using JavaScript's prototype inheritance nature to apply sorting algorithms, object oriented programming concepts, and design patterns",0,0,2013,2013,1,https://github.com/dagumak/design-patterns
Prototype,Design-patterns,i will try to put the prototypes and structures of the well known design patterns with example ,0,0,2020,2020,1,https://github.com/muhaTeshome/Design-patterns
Prototype,Design_Patterns,"This includes most essential design patterns including singleton, factory, abstract factory, observer, builder, prototype, strategy, template method, adapter, facade, decorator design patterns in java",0,0,2023,2023,1,https://github.com/Ansu-s/Design_Patterns
Prototype,SWE,"Software engineering project learning singleton, factory method, and prototype design patterns in java",0,0,2020,2020,3,https://github.com/RamanHliabovich/SWE
Prototype,todovanillajs,This is simple simple todo application using vanilla js using prototype design pattern,0,0,2017,2017,0,https://github.com/saratmurahari/todovanillajs
Prototype,Creational-Design-Pattern,"Abstract Factory, Builder, Factory Method, Prototype and SIngleton creational design pattern in swift",0,0,2018,2018,2,https://github.com/LH17/Creational-Design-Pattern
Prototype,TestDesignPattern,"Test design pattern like Singleton, Builder, Prototype with c# and Visual Studio 2017",0,0,2019,2019,1,https://github.com/cmmv230287/TestDesignPattern
Prototype,JRPG_Fighting,A small JRPG fighting prototype made with many different Design Patterns in Unity,0,0,2020,2020,1,https://github.com/marcuskaraker/JRPG_Fighting
Prototype,resume,"Resume made with React & Firebase, prototyping with Figma & designed using neumorphism design patterns",0,0,2022,2022,1,https://github.com/seakh-masum/resume
Prototype,Space-Mission-Planner,"A project to revise the creational design patterns of Factory, Builder and Prototype.",0,0,2024,2024,1,https://github.com/br-Chan/Space-Mission-Planner
Prototype,ProtoType-Pattern,Prototype is a creational design pattern that lets you copy existing objects without making your code dependent on their classes.,0,0,2021,2021,0,https://github.com/Creational-Design-Pattern-ATDev/ProtoType-Pattern
Prototype,DesignPatternLua,Design Pattern d'un prototype de jeu en Lua avec le Framework Love2D,0,0,2019,2019,1,https://github.com/ksergeant/DesignPatternLua
Prototype,design-patterns---builder,"Домашнее задание к занятию 1.1: Порождающие шаблоны. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2022,2022,1,https://github.com/TimurDushanov/design-patterns---builder
Prototype,Creational-Design-Patterns,Creational Design Patterns  1.  Factory Method  2.  Abstract Factory  3.  Builder  4.  Prototype  5.  Singleton,0,0,2024,2024,1,https://github.com/Menna-Medhat/Creational-Design-Patterns
Prototype,design-patterns,"Creational Design patterns ,Singleton, Builder, Prototype pattern , Structural patterns,  Facade, Proxy, Bridge pattern, Behavioral pattern, Template, Strategy, Iterator pattern",0,0,2023,2023,1,https://github.com/fatimasultanova/design-patterns
Prototype,Design-Patterns,"A general repeatable solution to a commonly occurring problem in software design. Implemented Singleton, Builder, Visitor, Prototype, Observer patterns",0,0,2017,2017,1,https://github.com/yashdivecha/Design-Patterns
Prototype,Java-Multi-threads-race-game,"JAVA Game Using Design Patterns  An interactive racing game implemented in Java, showcasing various design patterns and multi-threading.Implemented design patterns: Singleton, Builder, Thread Pool, Factory Method, Prototype, State, Observer-Observable, Decorator, and Delegator",0,0,2024,2025,1,https://github.com/IlanShtilman/Java-Multi-threads-race-game
Prototype,music-score-editor-prototype-pattern,"A PySide2 implementation of the prototype pattern example in the book ""Design Patterns: Elements of Reusable Object-Oriented Software""",0,0,2022,2022,1,https://github.com/sc420/music-score-editor-prototype-pattern
Prototype,JS-Design-Patterns-Exercise,Focus on these commonly used patterns: Module/IIFE Observer/PubSub Prototype/Mixin Singleton,0,0,2018,2018,1,https://github.com/mdrmtz/JS-Design-Patterns-Exercise
Prototype,casual-game-ui-prototype,"A unity casual game UI (Character selection panel) prototype with animations and json serialization implementation, following a formal design pattern.  ",0,0,2020,2020,1,https://github.com/sudikshasharma/casual-game-ui-prototype
Prototype,Prototype-Design-Pattern,Example of Prototype Design pattern : in this  example you can get an instance of  EmployeeRecord from some of Data that you Write.,0,0,2017,2017,1,https://github.com/aliOsm3n/Prototype-Design-Pattern
Prototype,Multiplayer_Fighting_Game_Using-Design_Patterns,Create a Prototype for a Multiplayer Fighting Game Using all The Popular Design Patterns,0,0,2016,2016,1,https://github.com/prajdheeraj/Multiplayer_Fighting_Game_Using-Design_Patterns
Prototype,Exercise_Db,Prototype code : showing C++ 11/14/17 and Dependency Injection &  Command Design pattern usage,0,0,2022,2022,1,https://github.com/jimdealuk/Exercise_Db
Prototype,SuperTUXAdventuresOne,"A little game 2D in JavaFX, to demonstrate the use of Design Pattern Prototype",0,0,2018,2023,1,https://github.com/JGabrielGruber/SuperTUXAdventuresOne
Prototype,javapoz7designpatterns,"Introduction to design patterns - singleton, prototype, hexagonal, facade, factory, dependency injection, chain, builder, adapter",0,0,2018,2018,1,https://github.com/rafinho91/javapoz7designpatterns
Prototype,Design-patterns-implementations,"showcases the use of Template,Factory,Abstract Factory,prototype and memento patterns and how to integrate them all together.",0,0,2021,2021,1,https://github.com/ecoryndonbakeruni/Design-patterns-implementations
Prototype,Design-Patterns," The GitHub repository consists of separate implementations of various design patterns, including Adapter, Command, Decorator, Facade, Observer, Prototype, Proxy, Singleton, and Strategy, in Java.",0,0,2021,2023,1,https://github.com/mozammalrahat/Design-Patterns
Prototype,JavaDesignPatterns,"Multiple examples of design patterns  : Adapter, Command, Composite, Decorator, State, Fabric, AbstractFabric, FlyWeigth, Mediator, Observer, Prototype, Singleton, Strategy, TemplateMethod",0,0,2022,2022,1,https://github.com/leo77777/JavaDesignPatterns
Prototype,modularDesignWithReact-whiteBoardPrototype,Project of the course called modular design patterns I have taken in Spring 2018 Semester in Harvard extension school.,0,0,2018,2018,1,https://github.com/ps37/modularDesignWithReact-whiteBoardPrototype
Prototype,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Prototype,buildrun-design-pattern-prototype-na-pratica,Código utilizado no vídeo em que ensinamos o passo a passo para você aprender o Design Pattern Prototype na prática!,0,0,2023,2024,1,https://github.com/buildrun-tech/buildrun-design-pattern-prototype-na-pratica
Prototype,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Prototype,Kernmodule-GDEV-Design-Patterns,Prototype of a game desplaying implementations of certain design patterns. Made for the GDEV Kernmodule - Game Hierarchy,0,0,2023,2023,1,https://github.com/Diedeliedee/Kernmodule-GDEV-Design-Patterns
Prototype,Implementacoes_Design_Patterns_Java,"implementações do Creational Design Patterns em java no caso Factory Method,Abstract Factory,Builder,Prototype é Singleton",0,0,2024,2024,1,https://github.com/willianpireslima/Implementacoes_Design_Patterns_Java
Prototype,Design-Patterns-Java,"Detail implementation of all design patterns in java ( creational(builder , prototype, abstract factory, singleton), structural (decorator, composite, adapter, facade)  and behavioural )",0,0,2025,2025,1,https://github.com/CynthiaAbi03/Design-Patterns-Java
Prototype,ManicMondayPrototyping_S7,A project that resembles my manic monday prototyping sessions where I test different design patterns with a basic setup to help me understand the design patterns better,0,0,2022,2022,1,https://github.com/lucsomers/ManicMondayPrototyping_S7
Prototype,WebShopApplication,"A web shop prototype enabling custom clothes ordering, utilizing design patterns for efficient processing and customer interaction. Project for the 'Design Patterns and Architectures' course at EduGrade",0,0,2024,2024,1,https://github.com/AbaSheger/WebShopApplication
Prototype,Design-Patterns-in-Java,"In this training, I reviewed somme design patterns such as strategy, adapter, decorator, composite, proxy, builder, singleton and prototype.",0,0,2023,2023,1,https://github.com/ClaudEbro/Design-Patterns-in-Java
Prototype,project-patterns," design patterns like these: Abstract Factory, Decorator, Builder, Command, Prototype, Iterator, Bridge, Observer, Composite, Strategy",0,0,2019,2020,1,https://github.com/jhonatheberson/project-patterns
Prototype,Racing-Game,"Racing game with GUI using Design patterns such as : Decorator, Prototype ,Factory, Observer, Builder etc",0,0,2022,2022,1,https://github.com/AlexBoyev/Racing-Game
Prototype,SENG330_Assign2,"Assignment 2 for SENG 330, writing Prototype Design Pattern example in C++ and creating framework",0,0,2015,2015,1,https://github.com/ZacBroit/SENG330_Assign2
Prototype,Quizzy,"Quizzy Library while using classic design patterns: Singleton,  Factory, Prototype, Builder and Data Access Object.",0,0,2023,2023,1,https://github.com/Almoglevi1/Quizzy
Prototype,Design-Patterns,"This repository contains clear and practical examples of several design patterns implemented in TypeScript, using a Vite application. The design patterns included are: Adapter, Abstract Factory, Builder, Factory Method, Prototype, Singleton, among others.",0,0,2024,2024,1,https://github.com/cristianManco/Design-Patterns
Prototype,CreationalDesignPatterns,"Exploring different design patterns related to the creation of objects in OOP. Specifically, implementing an Abstract Factory, a Builder, a Factory Method, a Prototype and a Singleton",0,0,2022,2022,0,https://github.com/Dutesier/CreationalDesignPatterns
Prototype,farm-dashboard-prototype,"A prototype for a farmer utility application built with JavaFX as an exercise in using design patterns such as entity-control-boundary, composite, visitor, and adapter",0,0,2021,2021,2,https://github.com/eolatham/farm-dashboard-prototype
Prototype,Prototype,"You are developing a system for managing products in an online store. One of the tasks of the system is to create copies of products for editing or creating new products based on existing ones. You need to implement this functionality using the ""Prototype"" design pattern.",0,0,2023,2023,1,https://github.com/Minisiia/Prototype
Prototype,awesomeshop_api-restful_dpc-prototype_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPC (Design Pattern Creational) Prototype, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dpc-prototype_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Prototype,java-4h-5h-design-patterns-2,"Creational (Singleton, Prototype, etc) and Structural (Proxy, Composite, Decorator, Adapter and Bridge)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-2
Prototype,AbstractFactory,An implementation of the Abstract Factory Design Pattern in C++ (includes both Factory Method & Prototype implementations),0,0,2012,2014,1,https://github.com/abrahamkoshy/AbstractFactory
Prototype,Ski-competition,"Java game using the following design patterns: Prototype, Factory Method, Builder, Thread Pool, Decorator, Observer, State",0,0,2021,2021,1,https://github.com/vladich11/Ski-competition
Prototype,profile-group-community-odp,"Ontology Design Pattern describing prototypes of profiles, groups and communities for supporting data integration and discovery",0,1,2021,2021,1,https://github.com/modellingDH/profile-group-community-odp
Prototype,csharp-spellbook,"A collection(spellbook) with various libraries, tools, design patterns, prototypes, architectures, around C# language and Dotnet.",0,0,2024,2024,1,https://github.com/zacharatos/csharp-spellbook
Prototype,Creational-design-patterns,"This repository aims on teaching Builder, Factory and abstract factory, prototype, and singleton patterns. The repository contains bad code and refactored good code using these patterns for cleaner programming practice using Java.",0,0,2024,2024,1,https://github.com/AnirudhHosur/Creational-design-patterns
Prototype,Creational-Design-Patterns,"This provides an overview of a number of creational design patterns including, but not limited to, the Singleton, Factory Method, Abstract Factory, Prototype, and Builder patterns with their approaches  used on my article",0,0,2024,2024,1,https://github.com/cartel360/Creational-Design-Patterns
Prototype,OOP_CourseWork,"Course work on the design pattern topics. I've made a graphic redactor using wpf and design pattern, such as: Factory Method, Prototype, Chain of Command, Command, Memento,  Strategy, State",0,0,2023,2023,1,https://github.com/allmallino/OOP_CourseWork
Prototype,SimplePaintWithDesignPatterns,"The Project uses Win32API Window to draw the simple Shapes (Line, Shape, Rectangle, Square, Ellipse, Circle). Using the Factorty Pattern and Prototype Pattern",0,0,2018,2018,1,https://github.com/nguyenthanhchungfit/SimplePaintWithDesignPatterns
Prototype,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Prototype,Aquarium,"Aquarium application. Using design pattern(singleton, abstract factory, prototype, listener/observer, decorator, memento,state), MVC and threads",0,1,2018,2018,1,https://github.com/KatrinKroin/Aquarium
Prototype,Prototype_Sort,O objetivo do projeto é demonstrar o uso do padrão Prototype em conjunto com o conceito de estratégias de ordenação (design pattern Strategy) para organizar dados de forma flexível e modular.,0,0,2024,2024,1,https://github.com/thiagobrnrd/Prototype_Sort
Prototype,ebusiness,"Strategy and Prototype Design Patterns in Scala, E-commerce project - Angular 4, Scala Play, Slick, Auth0, Docker",0,0,2017,2020,1,https://github.com/malgorzataolak/ebusiness
Prototype,Quizzy-Library,"A library for creating quizzes implemented with the following design patterns: Singleton, DAO, Factory, Prototype, and Builder.",0,0,2023,2023,1,https://github.com/KfirTayar/Quizzy-Library
Prototype,prototype-design-pattern,"Usando Prototype Design Pattern para a criação de objetos, reduzindo a sobrecarga associada à criação direta de novas instâncias e promovendo um baixo acoplamento entre clientes e protótipos usando C#",0,0,2024,2024,1,https://github.com/jfs-dev/prototype-design-pattern
Prototype,design-patterns-in-java,TR: Java dizayn mimarileri kullanılmış ve UMLleri verilmiştir.  EN: Java design patterns with UML,0,0,2019,2019,1,https://github.com/mertselimb/design-patterns-in-java
Prototype,Developersstack-Java-prototype_dp,"Discover the Prototype design pattern in Java through the Developersstack course repository. Learn to clone objects dynamically, enhancing flexibility and efficiency in software design with practical examples and best practices.",0,0,2024,2024,0,https://github.com/ayesh156/Developersstack-Java-prototype_dp
Prototype,java_paint_clean_code,"Java Swing paint application demonstrating principles of Clean Code and Design Patterns (MVC, Adapter, Command, Observer, Strategy, Prototype))",0,0,2022,2023,2,https://github.com/NatalijaGajic/java_paint_clean_code
Prototype,creational-design-patterns-blog,"This repository contains code examples for a blog post that explores five fundamental creational design patterns: Factory Method, Abstract Factory, Builder, Prototype, and Singleton. Each pattern is demonstrated with real-world examples in Java, showcasing their practical applications and benefits.",0,0,2024,2024,1,https://github.com/tharindu1998/creational-design-patterns-blog
Prototype,Unscramble,A small scale prototype app in order to develop my concepts on Android app architecture using MVVM design pattern,0,0,2024,2024,1,https://github.com/ahmadhassan44/Unscramble
Prototype,Telephone-Class,"A telephone package that demonstrates the use of the Constructor, Singleton, Factory, Observer, and Prototype design patterns in JavaScript.",0,0,2023,2023,1,https://github.com/Adaobi-Chuks/Telephone-Class
Prototype,Hotel-System,"Hotel Management System by (Java , Php my admin , Gui for interface ) and design patterns [ Proxy , Prototype , Factory, Singleton , Builder ].",0,0,2024,2024,1,https://github.com/KariemHatem/Hotel-System
Prototype,kafkaNeo4jClient,"Implemented a prototype project which involves kafka, neo4jclient, factory design pattern, retryable to create a topic and restful api.",0,0,2024,2024,1,https://github.com/IshaGula/kafkaNeo4jClient
Prototype,OraclePermissionGeneratorAndroid,"OraclePermissionGeneratorAndroid is a working prototype of an enterprise / business Android application, utilizing the MVP (Model View Presenter) design pattern",0,0,2016,2019,0,https://github.com/alastairwyse/OraclePermissionGeneratorAndroid
Prototype,CPP_DP,Implémentation du design pattern prototype dans le cadre du cours de programmation avancée en C++ à l'IMT Atlantique.,0,0,2021,2021,2,https://github.com/justinlblc/CPP_DP
Prototype,Telephone-Class,"A telephone package that demonstrates the use of the Constructor, Singleton, Factory, Observer, and Prototype design patterns in JavaScript.",0,0,2024,2024,1,https://github.com/Jessie-Chuks/Telephone-Class
Prototype,ImageManipulation,"Project with fundamentals of Image Processing in OpenCV and design patterns Prototype and Bridge. Technology stack: C#, VS22, WinForms, OpenCV. ",0,0,2023,2023,1,https://github.com/werma56s/ImageManipulation
Prototype,Multiplayer-Demo-Project,"In this project, I made a small multiplayer prototype to get more familiar with multiplayer and applied some design patterns",0,0,2024,2024,1,https://github.com/AnisKaram/Multiplayer-Demo-Project
Prototype,advanceJS,"Including topics like closures, prototypal inheritance, asynchronous programming, DOM manipulation, ES6+ features, functional programming, design patterns, error handling, and performance optimization.",0,0,2023,2023,1,https://github.com/Utkarsh2902/advanceJS
Prototype,Course-Registration-System-Creational-Design-Patterns,"The Course Registration System is a Java-based application that simulates a university course registration process. It allows students to enroll in courses, instructors to manage their courses, and IT workers to create and clone courses into new sections. The system uses several design patterns such as Factory, Singleton, and Prototype ",0,0,2024,2024,1,https://github.com/barannmeisterr/Course-Registration-System-Creational-Design-Patterns
Prototype,ECommerece,"An e-commerce API that utilizes nine design patterns: FACTORY METHOD, PROTOTYPE, BUILDER, PROXY, FACADE, ADAPTER, CHAIN OF RESPONSABILITY, MEDIATOR, COMMAND",0,0,2024,2024,1,https://github.com/MunMihai/ECommerece
Prototype,RoomBookingSystem,Prototype room booking system that allows an educational institute to hire out their rooms for events.This application uses a range of design patterns and data structures to facilitate this.,0,0,2020,2020,1,https://github.com/matthew-levene/RoomBookingSystem
Prototype,ClothesOnDemand,"Welcome to the Clothes On Demand Shop project repository!  This web shop prototype enables custom clothes ordering, developed as part of the 'Design Patterns and Architectures' course at EduGrade. Leveraging design patterns ensures efficient processing and enhances customer interaction.",0,0,2024,2024,1,https://github.com/RickardEkstedt/ClothesOnDemand
Prototype,Bineco-Recycling-App,"Conception, architecture and first prototype for Bineco, a recycling app. This project served as an introduction to system architecture and design patterns",0,0,2022,2024,4,https://github.com/MkYacine/Bineco-Recycling-App
Prototype,design-pattern-example,"Explore and implement popular design patterns in Java! This repository includes examples of Singleton, Factory, Proxy, Bridge, Prototype, Abstract-Factory, and Proxy patterns with clear explanations and code samples. Perfect for learning and applying design patterns in real-world projects.""",0,0,2024,2024,1,https://github.com/togrul01/design-pattern-example
Prototype,DesignPattern-Prototype,"This C# code demonstrates the Prototype Design Pattern by creating and cloning complex Product objects, allowing for efficient duplication and modification. It showcases the use of an interface for cloning, a concrete class for object creation, and a demonstration of creating and modifying separate product instances.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Prototype
Prototype,Battle_Tank_Game_Project,A sample project for creating a battle tank game prototype in order to study the implementation of the Model-View-Controller Design Pattern,0,0,2024,2024,1,https://github.com/Zeus007-123/Battle_Tank_Game_Project
Prototype,NTSS-National-Trade-Show-Service-design,"Conducted requirements analysis, design and prototyping of a National Trade Show Services application using an agile unified methodology, and design patterns in a teamwork environment.",0,0,2023,2023,1,https://github.com/abhi43/NTSS-National-Trade-Show-Service-design
Prototype,BounceRunner,"Small Prototype, where I tried to make a game around 1 fps movement mechanic - Focus on gameplay feel, code design patterns and clean blueprinting structure",0,0,2020,2020,1,https://github.com/RollarN/BounceRunner
Prototype,LowLevelDesignRepo,"let's learn about low level design in which we will learn about various design pattern i.e, Singleton, Builder, prototype and registry and factory and many more",0,0,2024,2024,1,https://github.com/aqilahmad2k16/LowLevelDesignRepo
Prototype,chicken-game,"This is a Java game whose principle is the same as the online game Egg Catcher. Three design patterns are applied to generate the game: MVC, Singleton and Prototype.",0,0,2016,2016,0,https://github.com/nhanduong95/chicken-game
Prototype,Data-Structures,"Independently designed and implemented various data structures using TypeScript, including Binary Search Tree (BST), Map, Stack, Queue, and LinkedList. Leveraged design patterns such as Observer, Prototype, Memento, and Strategy",0,0,2022,2024,1,https://github.com/roieGolst/Data-Structures
Prototype,Sheridan-Courses-App,This application is a Figma prototype used to display courses taken at Sheridan College. It is simplified for any user age and experience. Also follows best design patterns and  ,0,0,2023,2023,1,https://github.com/RoosterMonkey777/Sheridan-Courses-App
Prototype,2D-App,"A 2d drawing application built in Java. The application was built with MVC concepts in mind. Implemented in the application are command, observer, strategy, adapter and prototype design patterns.",0,0,2021,2021,1,https://github.com/MarkoMihajlovIT51-2017/2D-App
Prototype,cs542-Design-Patterns-Distributed-Systems--Tree-of-Student-Records,"A distributed in-memory cache based on tree data-store that relies on a robust replication algorithm that uses the Publish-Subscribe model. It relies on the Observer Pattern, Prototype Pattern, Factory Pattern, and the Singleton Pattern, to demonstrate how Distributed Systems could work internally, to maintain data consistency. This application uses a simple Binary Search Tree to store Students sorted by their IDs, and creates a variable number of Trees, which are replicas of each other, and sets up the Observer pattern among the same nodes of all the trees, thus, if any node is updated, that node will notify all the other nodes in other trees with the update, and the observers would finally make the same changes to their own instance.",0,0,2020,2021,1,https://github.com/harshitv95/cs542-Design-Patterns-Distributed-Systems--Tree-of-Student-Records
Prototype,Design-Pattern,"In this repository, I’ve implemented three key design patterns in Python: Factory, Prototype, and Adapter. These patterns make the code more flexible, reusable, and scalable for solving complex problems.",0,0,2024,2024,1,https://github.com/AdrikaPanwar/Design-Pattern
Prototype,GardenBlock-Game,"Based on the idea of LEGO game, this prototype let users design patterns with premade tiles (GardenBlocks) and then instantiate them into full-scale spaces to experience their own design.",0,1,2023,2023,2,https://github.com/shuang-bi/GardenBlock-Game
Prototype,library,"JS: LIBRARY. This is the first JavaScript project of ""The Odin Project. In this project, we have used one of the common design pattern i.e. Objects and Object Constructors. We have made use of prototypes and prototypal inheritance.",0,0,2024,2024,1,https://github.com/cleancoder-in/library
Prototype,ZooProject,"Zoo project – zoo with the possibility of feeding animals by type, with emphasis on the following design patterns: Thread Pool, Decorator, Abstract Factory, Prototype, Memento, Observer and Singleton. Written in Java.",0,0,2018,2018,1,https://github.com/ha1m/ZooProject
Prototype,Payable_Abstract_Factory_Pattern,"Here, I have tried to make a simple prototype of abstract factory design pattern, where the client code calls the creation methods of a factory object instead of creating products directly.",0,1,2021,2021,1,https://github.com/emowzz/Payable_Abstract_Factory_Pattern
Prototype,three-generative-patterns-Factory-method-Abstract-factory-Builder,"This project showcases the implementation of design patterns: Abstract Factory, Builder, and Prototype.  Features Abstract Factory: Creates different types of furniture (Classic and Modern). Builder: Constructs various computers (Gaming and Office) step by step. Prototype: Enables cloning of car objects.",0,0,2024,2024,1,https://github.com/Mattheuszu/three-generative-patterns-Factory-method-Abstract-factory-Builder
Prototype,GumballSurfer,"Developed a 3D game in which player has to collect coins to get gumballs. Implemented software design patterns like Observer, State, Prototype, Factory and Chain of Responsibility pattern. Followed Scrum Agile practices.",0,0,2014,2014,1,https://github.com/ankitd89/GumballSurfer
Prototype,rule-pattern-builder,Legacy Windows Forms with .NET Framework. This prototype was used to create a rule pattern from an expression. Depending on the pattern selected a rule mask is created for the expression. Developed as a prototype and to explore various object oriented and design pattern principles.,0,0,2019,2024,1,https://github.com/rob-bl8ke/rule-pattern-builder
Prototype,cqrs,A simple Java-based prototype demonstrating the CQRS (Command Query Responsibility Segregation) design pattern. This project uses Maven for dependency management and showcases a basic User Management System with clearly separated command and query responsibilities.,0,0,2025,2025,1,https://github.com/NehaGour1108/cqrs
Prototype,GAME_PacmanGamePhase2,"This Pac-Man game improves upon the previous version by implementing additional design patterns: State, Decorator, Strategy, and Prototype. Existing patterns: Singleton, Factory Method, Command, and Observer, have also been upgraded for enhanced functionality and performance.",0,0,2024,2024,1,https://github.com/PierceLe/GAME_PacmanGamePhase2
Prototype,Mock-PoS-App,This is a prototype of a point of sales system. It allows for a store employee to process purchases and manage orders. Built in C# WPF and MySql  with a Model-View-View-Model design pattern.,0,0,2021,2022,1,https://github.com/gadnandev/Mock-PoS-App
Prototype,UI_UX_Principles_and_Prototyping_Figma,Designed a user-friendly product registration page for a bakery using Figma. Researched existing forms to identify design patterns and pain points. Created low-fidelity wireframes and a mid-fidelity prototype integrating company branding and UI elements.,0,0,2024,2024,1,https://github.com/Kayla-Ard/UI_UX_Principles_and_Prototyping_Figma
Prototype,double-cat-clicker,Udacity Javascript Design Patterns Course Class Work (2) - An html page with 2 cat pictures that can be clicked to increase their click count. The code uses Javascript prototype which allows for cat pictures to be added easily. ,0,0,2015,2015,1,https://github.com/joylol/double-cat-clicker
Prototype,Tugas-Besar-CCDP-10116073-10116076,"Repository ini digunakan untuk menyimpan file atau project dari tugas besar clean code dan design pattern. Pada repository ini ada 3 tipe design pattern yang diimplementasikan yaitu creational, structural, dan behavioral pattern. Dimana diambil dua contoh pattern dari ketiga tipe tersebut. Dimana untuk creational dipilih abstrac factory pattern dan prototype pattern, untuk structural dipilih proxy pattern dan composite pattern, dan untuk behavioral dipilih mediator pattern dan iterator pattern.",0,0,2020,2020,1,https://github.com/fritsonagung/Tugas-Besar-CCDP-10116073-10116076
Prototype,design-pattern,"Explore and implement the 23 GoF design patterns in C#. Features detailed C# examples and explanations to help programmers enhance their .NET projects with elegant, scalable designs. Dive into object-oriented design and improve your software architecture skills.",0,0,2024,2025,1,https://github.com/faisalcse1/design-pattern
Prototype,Custom-meal-planning-protoype-service,"This service is an example application to display Prototype Design Pattern. This design is used typically used when the cost of creating a new instance is high or complex, and there is a need to avoid subclassing to create new objects.",0,0,2024,2024,1,https://github.com/kulkarnishruti4/Custom-meal-planning-protoype-service
Prototype,Tutorial-Derek-Banas-Object-Orientated-JS,"In this tutorial, I code along with YouTuber Derek Banas as he explores object-orientated programming in JavaScript. Some topics covered: objects, constructor functions, instanceof, prototypes, hasOwnProperty, private properties, getters/setters, inheritance, call parent functions, EMCAScript 6, design patterns, etc.",0,0,2016,2016,1,https://github.com/johnjamesmartin/Tutorial-Derek-Banas-Object-Orientated-JS
Prototype,java-experiments,"A collection of experimental Java projects and code snippets. This repository serves as a sandbox for exploring new Java features, libraries, frameworks, and design patterns. Ideal for learning, prototyping, and testing innovative ideas in Java programming.  Feel free to clone, explore, and contribute!",0,0,2025,2025,0,https://github.com/dhanu678/java-experiments
Prototype,a-n-p6-Fisheye,"Developing an accessible and modular web platform for artists using JavaScript design patterns. Build a responsive prototype with HTML, CSS, and JavaScript, integrating features like data fetching, navigation between profiles, contact modals, media LightBoxes, and like management for an engaging user experience.",0,0,2023,2024,1,https://github.com/SupMBH/a-n-p6-Fisheye
Prototype,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Prototype,Restaurant-Reservations-Android-Application,"Android app in Java for interacting with a RESTful API, to handle booking reservations for the Dockside Delight seaside restaurant. Features include a worker thread for API communication, implementation of design patterns such as MVC and MVVM, and adherence to my high-fidelity prototype on Figma.",0,0,2024,2024,2,https://github.com/Tamara-Cossins/Restaurant-Reservations-Android-Application
Prototype,JavaThreadsCompetition,"A Java project with a GUI visualizing a competitive event using multithreading. Each thread represents a participant, with real-time GUI updates. The project demonstrates concurrent programming and uses design patterns like Prototype, State, Decorator, Observer, and Factory Method for object-oriented design and GUI development.",0,0,2024,2024,1,https://github.com/arielperstin10/JavaThreadsCompetition
Prototype,Library-mangment-system-pattern-educational-demo,"This project is a Library Management System utilizing various design patterns like Singleton (for database connection and logging), Prototype (for cloning books), Factory (for book creation), Adapter (for integrating external books), Builder (for constructing books), Proxy (for adding security and logging), and Command (for book transactions).",0,0,2024,2024,1,https://github.com/mohammedsalama0/Library-mangment-system-pattern-educational-demo
Prototype,Simple-E-commerce-Cart-System,"A compact cart management system using OOP and design patterns. Users interact via a CLI, adding/updating items, and viewing the total bill. The Strategy Pattern handles discounts, while the Prototype Pattern clones products. Emphasis on clarity, maintainability, and user experience. Ideal for code walkthroughs and showcasing design decisions.",0,0,2023,2023,1,https://github.com/vishalredoc/Simple-E-commerce-Cart-System
Prototype,Quizzy,"The Quizzy Library in Java is a final project that uses design patterns like Singleton, Factory, Prototype, DAO, and Builder. Packaged as quizzy.jar, it manages quizzes with interfaces and classes for lifecycle, file operations, and question handling. It includes JUnit tests and demonstrates best practices in software design.",0,0,2024,2024,1,https://github.com/YardenBliz/Quizzy
Prototype,React-Native-Udemy-2020,Create real-world native apps using React Native Make truly reusable components that look great Understand the terminology and concepts of Redux Prototype and deploy your own applications to the Apple and Google Play Stores Get up to speed with React design principles and methodologies Discover mobile design patterns used by experienced engineers,0,0,2020,2020,1,https://github.com/AumDove/React-Native-Udemy-2020
Prototype,CS317MindGlow,A prototype of a JavaScript web app designed to promote mindfulness and being in the moment. This project utilises the model view controller design pattern and makes use of the Firebase library in order to enable push notifications. This project was created as part of a group project in the module CS317: Mobile App Development.,0,0,2025,2025,1,https://github.com/OwenBoyle03/CS317MindGlow
Prototype,React_native_2020,What you'll learn Create real-world native apps using React Native Make truly reusable components that look great Understand the terminology and concepts of Redux Prototype and deploy your own applications to the Apple and Google Play Stores Get up to speed with React design principles and methodologies Discover mobile design patterns used by experienced engineers,0,0,2020,2020,1,https://github.com/jhatting/React_native_2020
Prototype,Assignment3_DesignModel,"For Part III of the project you should provide a software DESIGN model and update your prototypes. You should also explore the usage of architectural styles, design patterns and other design principles to improve the QUALITY of your system design. You may refine your architecture and enhance your design model based on reasonable design decisions by applying some design principles or patterns.",0,0,2022,2024,1,https://github.com/TeachMe42036701/Assignment3_DesignModel
Prototype,Unity-Random-State-Machine,"A simple finite state machine. The project contains a scene where an enemy will switch between three states: patrol, wander and chase. The enemy will also drop coins at random intervals that the player can pick up. This is only a prototype for a state machine design pattern, and not necessarily a part of any game. This project uses the NavMesh fuction of Unity.",0,0,2020,2020,1,https://github.com/Lineweaver/Unity-Random-State-Machine
Prototype,Dungeon-Game,"This is a dungeon game in which the hero quests to fight monsters and obtain treasures gaining levels and unlocking new maps along the way. In this game, the hero has an inventory that can hold items such as health potion, gold, keys, and armor. The monsters each have different sets of powers and level of strengths. I used several design patterns like Singletons, Prototype, Decorator, and Factory.",0,0,2022,2022,0,https://github.com/judyhli01/Dungeon-Game
Prototype,Singleton-Desing-Pattern-in-CSharp,"Singleton Pattern belongs to Creational type pattern. Gang of four(GOF) have defined five design patterns that belongs to creational design type category. Singleton is one among them and the rest are Factory, Abstract Factory, Builder and Prototype patterns. As the name implies, creational design type deals with object creation mechanisms. Basically, to simplify this, creational pattern explain us the creation of objects in a manner suitable to a given situation.",0,0,2019,2019,1,https://github.com/pradeept95/Singleton-Desing-Pattern-in-CSharp
Prototype,Ski-game---finished-product," The game simulates a ski game, in which you can choose a number of players, gender and player type, and run them in different competitions. The game combines the technologies: Multithreading, synchronization, locks. compesition and inheritance. The game is written in java and is displayed in java eclipse gui. In addition, the game is designed according to 6 design patterns: 1. prototype 2. factory method 3.Builder 4. decorator 5. observer 6. state   enjoy (:",0,0,2019,2019,1,https://github.com/SapirOhava/Ski-game---finished-product
Prototype,Money-Flow,"For testing purpose and as part of the process to learn .net core framework carefully this is a micro project to prove the architecture of building a web API based on repository pattern and practicing to  implement  design patterns  and apply what I've learnt in SOLID Principles , it's like a prototype of a several API's that I've worked on with authenticate using Identity in ASPNET Core with entity framework core and implementing exception handling middleware with logger services using NLog Library and mapping resources to model with Auto-Mapper, all of that under supervised of senior developers .  ",0,0,2021,2021,1,https://github.com/osama-abu-baker/Money-Flow
Singleton,settingslogic,A simple and straightforward settings solution that uses an ERB enabled YAML file and a singleton design pattern.,1399,186,2008,2025,16,https://github.com/binarylogic/settingslogic
Singleton,react-design-patterns,A research project to apply the object-oriented design patterns to React.,592,67,2019,2025,2,https://github.com/themithy/react-design-patterns
Singleton,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Singleton,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Singleton,MasterSeleniumFramework,"Automation Testing | Web | Java | OOPS | Selenium WebDriver | TestNG | Maven | ExtentReport | Allure Reports | Java mail API | Design Patterns (Page Object Model, Singleton) | Jenkins | Data-Driven Testing using JSON file",93,60,2021,2025,1,https://github.com/rajatt95/MasterSeleniumFramework
Singleton,javascript-design-pattern,:building_construction: Design Pattern With Javascript,91,11,2018,2024,1,https://github.com/tangweikun/javascript-design-pattern
Singleton,Python-Design-Patterns,Python Design Patterns,87,28,2017,2025,1,https://github.com/rajan2275/Python-Design-Patterns
Singleton,PDO4You,PDO4You is a class that implements the Singleton design pattern for connecting the database using the PDO extension (PHP Data Objects),75,32,2011,2024,2,https://github.com/giovanniramos/PDO4You
Singleton,MasterSeleniumFramework_BDD,"Automation Testing | Web | API | Atomic Tests | Cucumber | Java | OOPS | Selenium WebDriver | TestNG | Maven | Cucumber Reports | Java mail API | Design Patterns (Page Object Model, Singleton) | Jenkins",56,33,2022,2024,1,https://github.com/rajatt95/MasterSeleniumFramework_BDD
Singleton,okdp,A design pattern library developed in modern c++.,54,17,2020,2025,2,https://github.com/lkimuk/okdp
Singleton,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Singleton,MasterRestAssuredFramework,Automation Testing | RESTful webservices | Java | RestAssured | OAuth 2.0 | Lombok | TestNG | Maven | ExtentReport | Allure Reports | Java mail API | Design Patterns (Singleton) | Jenkins | Data-Driven Testing using JSON file | Expected Data using XML file,42,28,2021,2025,2,https://github.com/rajatt95/MasterRestAssuredFramework
Singleton,MasterAppiumFramework,"Automation Testing | Mobile | android | iOS | Java | OOPS | Appium | TestNG | Maven | ExtentReport | Java mail API | Logging (Log4J2) | Design Patterns (Page Object Model, Singleton) | Page Factories | Jenkins | Data-Driven Testing using JSON file | Expected Data using XML file",42,28,2021,2025,1,https://github.com/rajatt95/MasterAppiumFramework
Singleton,design-patterns-in-angular,Deprecated | new project: https://github.com/Itchimonji/design-patterns-in-typescript,40,15,2020,2025,0,https://github.com/Itchimonji/design-patterns-in-angular
Singleton,dotnet-design-patterns-samples,The samples of .NET design patterns,37,11,2017,2025,2,https://github.com/AliakseiFutryn/dotnet-design-patterns-samples
Singleton,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Singleton,design-pattern,🌴 Detail design pattern and give many demos in Java.,30,16,2017,2024,1,https://github.com/guobinhit/design-pattern
Singleton,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Singleton,Software-Design-Patterns,"🎨 A comprehensive exploration of object-oriented design patterns, featuring fully implemented examples like inheritance, composition, observers, decorators, and factory methods. Built with Java to demonstrate their real-world applications in scalable and maintainable software design.",18,15,2024,2025,1,https://github.com/hoangsonww/Software-Design-Patterns
Singleton,design-patterns-in-arabic,Design patterns بالمختصر المفيد 🎈,17,3,2022,2025,2,https://github.com/Abd-Beltaji/design-patterns-in-arabic
Singleton,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Singleton,quark-state,🗽 Simple state manager based on Singleton design pattern,16,0,2017,2023,2,https://github.com/fm-ph/quark-state
Singleton,Singleton-Design-Pattern,Singleton Design Pattern,15,0,2018,2024,1,https://github.com/akshayblevel/Singleton-Design-Pattern
Singleton,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Singleton,PHP-Component-Util-Singleton,The Singleton (and Registry of Singletons a.k.a. Multiton) creational design pattern as a PHP component.,14,0,2012,2020,2,https://github.com/FlorianWolters/PHP-Component-Util-Singleton
Singleton,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Singleton,line-bot-oop, line-bot refactor use oop (design pattern),11,6,2018,2024,1,https://github.com/twtrubiks/line-bot-oop
Singleton,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Singleton,TestAutomationFramework_UDEMY_OC_Web_Selenium_Java_V2,"Automation Testing | Web+API | Java | Selenium WebDriver | RestAssured | OOPS (Inheritance, Polymorphism, Abstraction, Encapsulation)| TestNG | Maven | Allure Reports | Design Patterns (Page Object Model, Singleton, Fluent, Builder) | Jenkins | Data-Driven Testing using JSON file",11,9,2022,2024,1,https://github.com/rajatt95/TestAutomationFramework_UDEMY_OC_Web_Selenium_Java_V2
Singleton,Toastify,Mobile Android-App Toastify(Notification and Message) - Show Android Toast in Singleton design pattern with queue.,11,2,2022,2024,3,https://github.com/collegedunia-com/Toastify
Singleton,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Singleton,python-design-patterns,It contains python implementation of famous design patterns. ,10,5,2017,2021,1,https://github.com/charulagrl/python-design-patterns
Singleton,php-singleton-pattern,A lightweight PHP implementation of the Design Pattern Singleton using trait.,9,3,2015,2024,2,https://github.com/byjg/php-singleton-pattern
Singleton,Desing_Patterns,"In this project, i will explain DesignPatterns.I will explain how many way we have design pattern. ",8,0,2021,2022,1,https://github.com/SongulSYTRK/Desing_Patterns
Singleton,Maze-Runner," A game close to bomberman, but aim to escaping a maze. Game included random maze generation, nice gui and animation along with a lot other features moreover implemented bunch of Design patterns such as Singleton, Flyweight, Factory, Command and much more.",8,3,2017,2023,4,https://github.com/youssefAli11997/Maze-Runner
Singleton,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Singleton,ValidationFactory,"We will create custom tag attributes. We will validate records for email, date, and string text properties globally. We will encrypt and hash properties, which are marked by custom (encrypt and hash) tags in the Post Request method. We will decrypt, encrypted fields in getting the Request Method. We will create a unique suitable validator for per custom attribute by using reflection. We will create a validator by using the Singleton Pattern and call ""GetValidator()"" method by using Strategy Design Pattern.",8,2,2022,2023,0,https://github.com/borakasmer/ValidationFactory
Singleton,SingletonInSwift,Design pattern in Swift: Singleton,7,2,2018,2023,1,https://github.com/appcoda/SingletonInSwift
Singleton,django-singleton-tutorial,Example repo for Singleton model in Django tutorial. http://steelkiwi.com/blog/practical-application-singleton-design-pattern/,7,2,2017,2020,2,https://github.com/steelkiwi/django-singleton-tutorial
Singleton,DesignPatterns,"In this project, I explained Singleton pattern and BuilderPattern, both theoretically and with examples.",7,0,2020,2021,0,https://github.com/nihatcanertug/DesignPatterns
Singleton,wrapping-socket-with-nextJs, Socket.IO Connection with Custom React Hook in Next.js by Singleton Design Pattern,7,1,2023,2024,1,https://github.com/mahmodghnaj/wrapping-socket-with-nextJs
Singleton,inventory-management-system,JavaFX app which implements various design patterns and oop principles.,7,0,2024,2025,1,https://github.com/yaeby/inventory-management-system
Singleton,singleton,C++ Multi-threaded Singleton Design Pattern Example,6,3,2017,2023,1,https://github.com/dcblack/singleton
Singleton,php-cache-class,"A simple PHP class using the singleton design pattern to handle caching data via APC, eaccelerator, xcache and file-based caching.",6,5,2012,2024,1,https://github.com/agking/php-cache-class
Singleton,design_patterns_singleton,软件设计模式-详细讲解（代码示例）------ 本项目是通过代码示例的方式，讲解单例模式：2种饿汉模式的实现、4种懒汉模式实现、序列化和反射是如何破坏单例的、如何防止序列化和反射破坏单例。 ,6,0,2022,2024,1,https://github.com/xiaoguangbiao-github/design_patterns_singleton
Singleton,Design-Patterns,"Patrones de diseño / Clase Template C++ / Parciales / Exámenes de Programación 4 de Facultad de Ingeniería UdelaR - Uruguay. Análisis, Diseño e implementación en C++ usando programación orientada a objetos. UML. Design Patterns, Template C++, exercises...",6,2,2018,2024,2,https://github.com/mathiasuy/Design-Patterns
Singleton,golang-design-patterns,This repository provides a comprehensive collection of design patterns implemented in Go (Golang). It serves as a practical guide to understanding and applying common software design patterns in real-world Golang projects. ,6,0,2024,2024,1,https://github.com/Beretta350/golang-design-patterns
Singleton,elevator-system,In process of writing Elevator System for learning system design patterns,5,8,2020,2024,1,https://github.com/thevarunjain/elevator-system
Singleton,UE4SingletonDemo,Unreal Engine 4 Design Pattern (Singleton),5,2,2017,2023,0,https://github.com/returnzero23/UE4SingletonDemo
Singleton,base-singleton,A Singleton Design Pattern which allow easy used singleton class.,5,2,2019,2022,1,https://github.com/cs-eliseev/base-singleton
Singleton,MGS.DesignPattern,Design pattern code for C# and Unity project develop.,5,2,2018,2024,1,https://github.com/mogoson/MGS.DesignPattern
Singleton,java-design-pattern-singleton,Examples for singleton design pattern in Java,5,1,2019,2023,1,https://github.com/swathisprasad/java-design-pattern-singleton
Singleton,Wholesale_Management_System,"Layered Architecture | Singleton, Facade, Factory Design patterns",5,0,2022,2023,1,https://github.com/chama97/Wholesale_Management_System
Singleton,quark-raf,⏰ Simple requestAnimationFrame based on Singleton design pattern,5,1,2017,2024,1,https://github.com/fm-ph/quark-raf
Singleton,node_base_project,node base project implementing sequelize CLI and singleton design pattern,5,1,2023,2023,1,https://github.com/JonathanChunibyo/node_base_project
Singleton,DesignPatternsCSharp,Design Patterns sample in C#,5,0,2020,2023,1,https://github.com/RezaJenabi/DesignPatternsCSharp
Singleton,CreationalDesignPatternsSample,"Including Builder, Factory method, Abstract Factory, Prototype and Singleton",5,0,2020,2023,1,https://github.com/ZahraHeydari/CreationalDesignPatternsSample
Singleton,go-design-patterns,Software design patterns examples in Golang,5,1,2018,2024,1,https://github.com/max-prosper/go-design-patterns
Singleton,OpenGL-Common-Design-Patterns,"Using OpenGL to demonstrate the use of common design patterns such as Abstract Factory, Builder, Singleton, and Pointer to Implementation (PIMPL)",5,0,2017,2023,1,https://github.com/efryscok/OpenGL-Common-Design-Patterns
Singleton,flutter_designer_patterns_singleton,,4,2,2020,2021,1,https://github.com/rodrigorahman/flutter_designer_patterns_singleton
Singleton,Pizza-Delivery-System,"A pizza delivery system that showcases the usage of Observer, Abstract Factory, Singleton, Command, and Iterator design patterns. ",4,2,2017,2021,1,https://github.com/DuyguKeskek/Pizza-Delivery-System
Singleton,design-patterns-singleton,,4,0,2023,2024,1,https://github.com/AgostinoArcadi/design-patterns-singleton
Singleton,designpatterns4devs-singleton-monostate-2022-09-08,Aula da série Design Patterns 4Devs sobre os padrões singleton e monostate,4,1,2022,2024,2,https://github.com/rocketseat-creators-program/designpatterns4devs-singleton-monostate-2022-09-08
Singleton,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Singleton,Creational-Design-Pattern-In-Programming,"Tell you about 5 sample in creational design pattern: Factory Method, Abstract Method, Singleton, Builder & Prototype",4,0,2022,2023,1,https://github.com/Phong-Kaster/Creational-Design-Pattern-In-Programming
Singleton,Design-Patterns---PMS---Patient-Information-System-Simple,"Simple Project For Singleton, Abstract Factory, Command, Iterator, Decarator Observer and Adapter Design Patterns, All in One",4,0,2020,2021,0,https://github.com/muammersahin/Design-Patterns---PMS---Patient-Information-System-Simple
Singleton,design-patterns-java,"The Java Design Patterns Library is an open-source collection of common design patterns in Java, featuring reusable, well-documented examples. It helps developers implement best practices with patterns like Singleton and Factory.",4,0,2024,2024,1,https://github.com/ahmedelazab1220/design-patterns-java
Singleton,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Singleton,Isabelle,"Isabelle is a Discord Bot that incorporates three design patterns: Singleton, Strategy, and Command. Unit tests were made using jest. ",4,0,2020,2023,5,https://github.com/andreidimaano/Isabelle
Singleton,Singleton-Pattern,"Singleton pattern restricts the instantiation of a class and ensures that only one instance of the class exists in the java virtual machine. It seems to be a very simple design pattern but when it comes to implementation, it comes with a lot of implementation concerns. The implementation of Singleton pattern has always been a controversial topic among developers.",4,0,2018,2022,1,https://github.com/Design-pattrns/Singleton-Pattern
Singleton,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Singleton,WholeSaleMavenSpringJPA,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with JPA, Spring and Maven",4,1,2019,2022,1,https://github.com/AnujaKoralage/WholeSaleMavenSpringJPA
Singleton,dp-creational-singleton-templates,Design Pattern: creational-singleton with templates,3,3,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-creational-singleton-templates
Singleton,dp-creational-singleton,Design Pattern: creational-singleton,3,2,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-creational-singleton
Singleton,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Singleton,SingletonClassDesignPattern,Singleton class design pattern in java,3,0,2020,2023,1,https://github.com/Raushann/SingletonClassDesignPattern
Singleton,Singleton-Design-Pattern-in-C-,Singleton Design Pattern in C#,3,0,2018,2021,1,https://github.com/akhilmittal/Singleton-Design-Pattern-in-C-
Singleton,DesignPattern-Singleton,Analysis and implementation of the Singleton Design Pattern,3,0,2023,2024,1,https://github.com/aminehsan/DesignPattern-Singleton
Singleton,DesignPatterns-Singleton,,3,0,2022,2023,1,https://github.com/dFarkhod/DesignPatterns-Singleton
Singleton,DesignPatterns-CSharp-Singleton,Tasarım Kalıplarından olan Singleton Pattern,3,0,2024,2024,1,https://github.com/ghhsyn/DesignPatterns-CSharp-Singleton
Singleton,2024GA,"Design Pattern Unity (Singleton, Command, StateMachine, Observer,...Addressable)",3,0,2024,2024,1,https://github.com/mindongun123/2024GA
Singleton,singleton-configuration-manager-example,A Configuration Manager Class with the GOF Design Pattern Singleton,3,1,2018,2022,1,https://github.com/bzdgn/singleton-configuration-manager-example
Singleton,Computer-Store-DP,A Java Project using Singleton/ Observer/ Factory Design Patterns,3,0,2022,2023,1,https://github.com/AchillesKastanas/Computer-Store-DP
Singleton,DesignPatterns,"Design patterns learning course for C#. Creational Patterns. Singleton, Prototype, Builder, Factory Method, Abstract Factory.",3,0,2019,2024,1,https://github.com/arsentd/DesignPatterns
Singleton,UnifiedAutomation,UI automation framework using Page Object Model & Singleton design patterns,3,0,2018,2023,1,https://github.com/rajesha2016/UnifiedAutomation
Singleton,Design-patterns---Singleton-static,,3,0,2023,2024,1,https://github.com/samisaud95/Design-patterns---Singleton-static
Singleton,Design-Patterns-Builder-Prototype-Singleton,,3,0,2021,2021,1,https://github.com/AmiraslanSumgait/Design-Patterns-Builder-Prototype-Singleton
Singleton,ApiRateLimiter_Core_Java,Thread safe implementaion of ratelimter using core java and singleton design pattern,3,0,2023,2024,1,https://github.com/shubhamharitash/ApiRateLimiter_Core_Java
Singleton,IntelliMediaCore,"Collection of C# design patterns (MVVM, Repository, Promise, Singleton) and utility classes. The class library is intended to be used in conjunction with Unity 3D game engine projects or Mono-based servers and tools.",3,3,2016,2022,2,https://github.com/rtaylornc-zz/IntelliMediaCore
Singleton,design-patterns,"Creational design patterns in C#: Abstract Factory, Builder, Factory, Factory Method, Object-Pool, Prototype, Singleton.",3,1,2023,2024,1,https://github.com/cenkerkumlucali/design-patterns
Singleton,pythonDesignPatterns,"Repo to study the book Learning Python Design Patterns and http://www.newthinktank.com/videos/design-patterns-tutorial/ playlist. Each pattern contains a generic, an advanced, and a real use example if necessary.",3,0,2020,2025,1,https://github.com/gtfuhr/pythonDesignPatterns
Singleton,BattleShip---Project-OO,"Simple battleship game, object oriented design/patterns",3,0,2017,2022,1,https://github.com/MarieVerdonck/BattleShip---Project-OO
Singleton,Design-Patterns,Bu repoda Yazılım Tasarımı ve Mimarisi dersi ile paralel yürüttüğüm Desing Patterns ile ilgili çalışmalarım ve patternslar ile ilgili notlarım bulunmaktadır.,3,0,2021,2023,1,https://github.com/emirhandogandemir/Design-Patterns
Singleton,AR-Design-Patterns-In-Swift,用Swift来实现设计模式,3,1,2018,2020,1,https://github.com/andyRon/AR-Design-Patterns-In-Swift
Singleton,OOP-Shopping-Cart,A small project using OOP programming to create an shopping cart. I also use design pattern for this project: Singleton and Factory,3,1,2019,2022,1,https://github.com/Tony1106/OOP-Shopping-Cart
Singleton,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Singleton,GameSimulator-Advanced-OOP-CPP,Project using Design Patterns. Model View and Controller objects (architectural pattern) for running the Simulator. The Model is a Singleton. Creating the vehicles with a Factory method Object.,3,1,2022,2024,2,https://github.com/ilanRothman/GameSimulator-Advanced-OOP-CPP
Singleton,POS-System,"This standalone application was developed aiming Layered Architecture. Several Design Patterns were used including Facade, Factory and Singleton. Knowledge of Java (including OOP concepts) and MySQL along with latest trending technological tools were implemented inclusively.",3,0,2022,2023,1,https://github.com/Dazzler123/POS-System
Singleton,MasterAppiumFramework,"Automation Testing | Mobile | android | iOS | Java | OOPS | Appium | TestNG | Maven | ExtentReport | Java mail API | Logging (Log4J2) | Design Patterns (Page Object Model, Singleton) | Page Factories | Jenkins | Data-Driven Testing using JSON file | Expected Data using XML file",3,0,2024,2024,1,https://github.com/rashmiiyengar/MasterAppiumFramework
Singleton,Medical-clinic,"Medical clinic Java desktop application for efficient management of patient records and appointments. By leveraging powerful design patterns such as Factory, Singleton, and DAO, the application provides seamless data storage options using SQL database or file-based serialization.",3,0,2023,2024,1,https://github.com/ayman-gassi/Medical-clinic
Singleton,Design-Pattern-Java,"This repo provides key Java Design Patterns 🎯 for writing clean, scalable, and maintainable code! 💻 It includes Creational 🏗️ (e.g., Singleton), Structural 🏢 (e.g., Adapter), and Behavioral 🤖 (e.g., Strategy) patterns to improve your Java development process. 🚀",3,0,2024,2024,1,https://github.com/jathurT/Design-Pattern-Java
Singleton,Singleton_Design_Pattern_Thread_Safe,Singleton Design Pattern Thread Safe,2,2,2018,2024,1,https://github.com/mtnaln/Singleton_Design_Pattern_Thread_Safe
Singleton,SE-311-Design-Pattern-Project-Patient-Management-System,"This project was for our Design Patterns course. We used 5 different design patterns which are Observer, Abstract Factory, Template Method, Singleton, Command, in one project.",2,2,2018,2025,1,https://github.com/efeuruk/SE-311-Design-Pattern-Project-Patient-Management-System
Singleton,SingletonDesignPattern,Singleton  Design Pattern's different approaches,2,0,2019,2022,1,https://github.com/oguzhancagliyan/SingletonDesignPattern
Singleton,Configuration-Manager,Using a Singleton Design Pattern,2,0,2024,2024,1,https://github.com/celsopuerto/Configuration-Manager
Singleton,singleton-pattern,Implementing Singleton design pattern in Typescript,2,0,2019,2021,0,https://github.com/ultrasonicsoft/singleton-pattern
Singleton,Design-Patterns,Design Patterns,2,0,2022,2025,2,https://github.com/darshna22/Design-Patterns
Singleton,Singleton,example for singleton design pattern in java or kotlin,2,0,2020,2021,1,https://github.com/MahdiAsoudeh/Singleton
Singleton,Design-Patterns,C# Design Patterns,2,0,2023,2024,1,https://github.com/Faris-Abuali/Design-Patterns
Singleton,designPatterns-Java,"practicing singleton, Strategy, Facade and Spring",2,0,2022,2022,1,https://github.com/m-carecho/designPatterns-Java
Singleton,eCommerceJEE-Hmimssa-Soufiane-micro-Project,Sample implementation of DAO Design  Patterns and Singleton,2,0,2020,2021,1,https://github.com/HmimssaSoufiane/eCommerceJEE-Hmimssa-Soufiane-micro-Project
Singleton,TestableSingletonDP,Convert Creational Singleton design pattern to testable with dependency injection,2,0,2023,2023,1,https://github.com/esaygiver/TestableSingletonDP
Singleton,SingletonPHPConnectionClass,"A Connection.php class using Singleton design pattern and PDO, with a config.ini file;",2,0,2016,2023,0,https://github.com/echart/SingletonPHPConnectionClass
Singleton,DesignPatterns,This repo is a collection of design pattern in swift or js language.,2,0,2017,2023,1,https://github.com/Schabaani/DesignPatterns
Singleton,DesignPatterns,"Implement common design patterns in programming (factory/singleton/composition/element/observation/state, etc.)",2,0,2021,2023,1,https://github.com/Keneyr/DesignPatterns
Singleton,webale-chess,"Build a type of chess called Webale chess using Java, and implemented different ""Gang of 4 Design Patterns"" including MVC, singleton, strategy, memento, etc.",2,2,2020,2025,4,https://github.com/LiewKuanYung/webale-chess
Singleton,SmallerJavaProjects,"Smaller Java Projects including Factory, Singleton, and Facade Design Patterns.",2,0,2015,2016,1,https://github.com/ebanks31/SmallerJavaProjects
Singleton,DesignPatterns,"Some design patterns (Singleton, Simple and Abstract Factory, Builder, Facade, Adapter, Chain of Responsibility, Mediator) examples written in C#",2,0,2018,2024,1,https://github.com/alexandra-valkova/DesignPatterns
Singleton,design-patterns,Examples for design patterns,2,1,2022,2024,1,https://github.com/Jovidon/design-patterns
Singleton,AndroidObserverDesignPatterns,Ease to manage Singleton Class in apps,2,0,2017,2018,1,https://github.com/opannapo/AndroidObserverDesignPatterns
Singleton,Design-Patterns,All the design patterns which i know,2,0,2021,2023,1,https://github.com/thirtwo/Design-Patterns
Singleton,DesignPatterns,Sample codes with c++ to understand design patterns.,2,0,2020,2021,1,https://github.com/hamuryen/DesignPatterns
Singleton,shopmanagement,"Shop management project using JAVAFX and some design patterns : DAO, MVC, Singleton",2,0,2019,2020,1,https://github.com/yahyakharrazi/shopmanagement
Singleton,design-patterns-examples,"Simple examples of the builder, factory method, singleton and iterator design patterns.",2,0,2022,2024,1,https://github.com/jmj0502/design-patterns-examples
Singleton,Cleaning-Management,"Robot vacuum simulator, usage of Abstract Factory, Builder, Singleton and Observer design patterns.",2,0,2017,2017,1,https://github.com/irenexychen/Cleaning-Management
Singleton,Factory-Singleton-and-Strategy-Design-Patterns_Examples,"🐉 Solved problems demonstrating the use of Factory, Singleton and Strategy Design Patterns using Java. These problems were solved during the course ""Object Oriented Analysis and Design CS309""",2,1,2018,2025,1,https://github.com/harismuneer/Factory-Singleton-and-Strategy-Design-Patterns_Examples
Singleton,design-patterns,Design Patterns in Java. Easy to understand examples of SOLID principles and popular GoF Design Patterns.,2,1,2020,2024,1,https://github.com/abhinav-nath/design-patterns
Singleton,design-patterns,"PHP implementations of various design patterns, including Singleton, Factory, Adapter, and more, to demonstrate key software design principles",2,0,2020,2025,1,https://github.com/maliknaik16/design-patterns
Singleton,Design-Pattern,Simple Examples for GOF Design patterns,2,0,2019,2019,1,https://github.com/Houshangian/Design-Pattern
Singleton,Singleton-Pattern,"I am starting to study design patterns, so  here is a way to make sure only one instance of an object may be created.",2,0,2023,2024,1,https://github.com/Medeiroshenrique/Singleton-Pattern
Singleton,news-portal-mvc,"News portal, PHP back-end, MVC design pattern",2,1,2020,2023,1,https://github.com/waking-eni/news-portal-mvc
Singleton,Hotel-Management-System,"The system is implemented in C++ using various design patterns like Singleton, Factory, and Strategy",2,1,2021,2025,1,https://github.com/Niveshpai/Hotel-Management-System
Singleton,Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF,"In this project; command, factory, singleton, adapter and facade design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2021,2022,1,https://github.com/kamilhan-karaismailoglu/Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF
Singleton,Database_Connection_Singleton_Python,"This is an example of the implementation of a design pattern Singleton on the programing language Python, to have a single instance to connect a database",2,0,2019,2023,1,https://github.com/victorolave/Database_Connection_Singleton_Python
Singleton,SingletonPattern,"In software engineering, the singleton pattern is a software design pattern that restricts the instantiation of a class to one ""single"" instance. This is useful when exactly one object is needed to coordinate actions across the system. The term comes from the mathematical concept of a singleton.",2,0,2021,2021,1,https://github.com/RuslanPr0g/SingletonPattern
Singleton,GSG--MRT--Singleton,This repository showcases the implementation of the Singleton Design Pattern in a software component. The goal is to build a singleton component and demonstrate why it should be implemented as a singleton.,2,0,2024,2024,1,https://github.com/Hajar013/GSG--MRT--Singleton
Singleton,ToDoAppRealm,Build a To Do App from scratch with Realm and Singleton Design Pattern in Swift 5 Hindi.,2,2,2022,2024,1,https://github.com/YogeshPateliOS/ToDoAppRealm
Singleton,ToBeSingleton,"this is an example Repo, it is public and the first commit will contain the very simple code for a hypothetical Network resource provider, the target is to implement a Singleton design pattern, (BY converting the NetworkResourceProvider class to singleton class). ",2,0,2022,2022,1,https://github.com/RashidMehmoodCUIATD/ToBeSingleton
Singleton,DesignPattern.Creational.Singleton,Singleton pattern is one of the simplest design patterns in any language development. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.  This pattern involves a single class which is responsible to create an object while making sure that only single object gets created. This class provides a way to access its only object which can be accessed directly without need to instantiate the object of the class.,2,0,2020,2023,1,https://github.com/ajunquit/DesignPattern.Creational.Singleton
Singleton,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Singleton,SingleTonePattern,"There are cases when you need only one instance of a class. So, whenever you call the object of the class, then the new object should not be created(only one-time object creation will be there). This design pattern provides a global point of access to a class. For example, the network connection in an application should be done once and not every time because it is a very expensive process. So in these cases, we can use a singleton.",2,0,2021,2022,1,https://github.com/KareemMansy123/SingleTonePattern
Singleton,Lumiere-server,"Node.js backend server for a Kotlin mobile app, using an MVC architecture. Implements design patterns like Adapter, Singleton, and Factory to enhance system flexibility and scalability.",2,1,2024,2024,2,https://github.com/oscarvasquez28/Lumiere-server
Singleton,banking-system,A Java implementation of a basic banking system where users can perform account balance withdrawal and deposit  using multi threading. Featuring Receipts objects and a Singleton design pattern for the ATM object.,2,0,2023,2023,1,https://github.com/fernandesmike/banking-system
Singleton,WholeSalePOSWithwithHibernate,"This system was developed for whole sale order and item management system for super market.  System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with Native Hibernate",2,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSalePOSWithwithHibernate
Singleton,CoronaHotel,"Java project: a system that management Corona Hotel. The system is based on several guidelines and implements design patterns such as Singleton, Strategy, Factory Method and MVC. Additional use of Multithreading, Serialization.",2,0,2020,2023,1,https://github.com/ArielleMizrahi/CoronaHotel
Singleton,WholeSaleWithSpringDataJPA,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with JPA, Spring Data JPA",2,1,2019,2019,1,https://github.com/AnujaKoralage/WholeSaleWithSpringDataJPA
Singleton,medical_clinic_system_SW,"A Java-based desktop application designed to manage patient records, doctor schedules, and appointments. This system utilizes multiple design patterns, including Singleton, Factory, Builder, Adapter, Proxy, and Prototype, ensuring scalability, maintainability, and code reusability.",2,0,2024,2025,1,https://github.com/mohamedmagdy2301/medical_clinic_system_SW
Singleton,Banking-Application-with-GUI,"Banking App with GUI, allows users to deposit, purchase, withdraw and has memory of previous executions of the application. The program writes and read in files of current customer information. Manager is used to add/delete users and is implemented with a singleton design pattern. The customer uses a state design pattern. All relevant javadocs are included as well as UML diagrams.",2,0,2020,2023,1,https://github.com/JoshMelo21/Banking-Application-with-GUI
Singleton,DunkContest,"An interactive Dunk Contest simulation developed in Java, implementing various design patterns (Strategy, Factory Method, Singleton) to model player interactions, judge evaluations, and scoring logic. This project showcases object-oriented programming skills, intricate algorithms for dunk evaluation, and comprehensive user interaction.",2,0,2024,2024,1,https://github.com/davidxosei/DunkContest
Singleton,Stock-Market-Simulator,"As part of the final grades of a subject called Object Orientation with Design Patterns was requested to design and implement a simulator of a simplified model of a stock market.Using technologies such as Singleton, Factory, DAO and MVC (Model View Controller).",2,0,2019,2021,1,https://github.com/marcosvaldeni/Stock-Market-Simulator
Singleton,Pharmacy-Management-System,"I've developed a Spring Boot application with Thymeleaf, incorporating all the SOLID Principles alongside four key Design Patterns: Factory, Singleton, Builder, and Adapter. This project boasts several standout features, such as dual ports dedicated to administration and customer interactions, among other functionalities.",2,0,2024,2025,1,https://github.com/mohammed-taha-roshan/Pharmacy-Management-System
Singleton,UnityCodePatterns,"Unity Code Patterns: A collection of common design patterns implemented in Unity C#. Features practical examples of MVC, Singleton, and Object Pooling patterns, with clear explanations and reusable code. Ideal for Unity developers looking to improve code structure and efficiency in game development.",2,0,2024,2025,1,https://github.com/freddynewton/UnityCodePatterns
Singleton,Advanced_OOP_Cinema_ConsoleApp_FallProject,"The Cinema Management System is a Java-based application that demonstrates the use of key design patterns such as Abstract Factory, Builder, Chain of Responsibility, and Singleton. It simulates interactions between customers, employees, and a cinema database system to manage movie screenings, customer reservations, and employee tasks.",2,0,2024,2024,1,https://github.com/tuanh00/Advanced_OOP_Cinema_ConsoleApp_FallProject
Singleton,facetube,"An iOS 9 Swift 2 Material Design inspired social networking app using the Facebook SDK natively for login, Firebase as its data backend, and ImageShack for photos. Alamofire is used for networking and CocoaPods for dependency management. A MVC-N design pattern is used with a Singleton Network Controller providing Data Services.",2,0,2015,2016,1,https://github.com/duliodenis/facetube
Singleton,Water-N-Go-Vue,"Vue remaster of Water and Go web application utilizing Vue 3 TypeScript front end SPA framework composition API implementation. TypeScript Express backend utilizing class based API system, singleton route design pattern, and DAOs (Data Access Objects) and DTOs (Data Transfer Objects) for scalable reusable code for models. Authentication and Authorization middleware for API routes.",2,0,2022,2022,1,https://github.com/Kooki-eByte/Water-N-Go-Vue
Singleton,OBL_Project,The project built in the Java-Eclipse environment it is about building a computerized information system for the library • The system has a decentralized operational nature and is organized in a client-server architecture   A tabular database and data retention is performed using JDBC technologies. • The communication between the clients and the server runs through a local network IP / TCP based LAN • We used the Singleton Design Pattern design template • We use protocol request and response to communicate between the server and the database. • The web-based human interface is designed and built in JAVAFX,2,0,2020,2023,1,https://github.com/MoneraSaad/OBL_Project
Singleton,TheGame,"This document describes the team work assignment for Telerik Academy students studying Object-Oriented Programming (OOP) – February 2014. Project Description Design and implement an object-oriented Role Playing Game by choice. Here are some suggestions: -	The world can be fantasy, sci-fi, modern, etc. -	You may have one or more heroes, gaining experience, having skills, wearing items, etc. -	You may have one or more players, fighting against a computer or against each other -	You may have enemies like creatures, machines, warriors, etc.  -	You may have items like swords, guns, armor, space-suits, etc. -	You may have skills like double-damage, teleportation, etc.  General Requirements Please define and implement the following object-oriented assets in your project: •	At least 5 interfaces (with one or more implementations) •	At least 15 classes (implementing the application logic) •	At least 3 abstract class (with inheritors) •	At least 1 exception class (with usage in your code) •	At least 3 levels of depth in inheritance •	At least 1 polymorphism usage •	At least 1 structure •	At least 1 enumeration •	At least 1 event (with subscribers) •	At least 1 design pattern (e.g. Composite, Singleton, Factory, Wrapper, Bridge, Command, Iterator, …) You might read about design patterns in Wikipedia, Sourcemaking, DoFactory and others. Additional Requirements •	Follow the best practices for OO design: use data encapsulation, use exception handling properly, use delegates and events like it is recommended in MSDN, use inheritance, abstraction and polymorphism properly, follow the principles of strong cohesion and loose coupling. •	Obligatory use Git to keep your source code and for team collaboration (you might use https://github.com/). TFS or SVN are not allowed. Use Git. •	Provide a class diagram (to visualize all types). Optional Requirements If you have a chance, time and a suitable situation, you might add some of the following to your project: •	Static members (fields, properties, constructor, etc.) •	Constants, generic types, indexers, operators •	Lambda expressions and LINQ •	Implementation of IEnumerable<T>, ICloneable, ToString() override •	Namespaces (if your classes are too much)  •	User interface (UI) – console, graphical, web or mobile Non-Required Work •	Completely finished project is not obligatory required. It will not be a big problem if your project is not completely finished or is not working greatly. This team work project is for educational purpose. Its main purpose it to experience object-oriented modeling and OOP in a real-world project and to get some experience in team working and team collaboration with Git.  Deliverables Put the following in a ZIP archive and submit it (each team member submits the same file): •	The complete source code. •	Brief documentation of your project (2-3 pages). It should provide the following information (in brief): o	Team name and list of team members o	Project purpose – what problem do you solve? o	Class diagram of your types o	The URL of your Git repository o	Any other information (optionally) •	Optionally provide a PowerPoint presentation designed for the project defense. Public Project Defense Each team will have to deliver a public defense of its work in from of the other students and trainers. You will have only 10 minutes for the following: •	Demonstrate the application (very shortly). •	Show the class diagram (just a glance). •	Show the source code in the Git web-based source code browser. •	Show the commits logs to confirm those team members who have contributed. •	Optionally you might prepare a PowerPoint presentation (3-4 slides). Please be strict in timing! Be well prepared for presenting maximum of your work for minimum time. Bring your own laptop. Test it preliminary with the multimedia projector. Open the project assets beforehand to save time. You have 10 minutes, no more. Give Feedback about Your Teammates You will be invited to provide feedback about all your teammates, their attitude to this project, their technical skills, their team working skills, their contribution to the project, etc. The feedback is important part of the project evaluation so take it seriously and be honest.",2,3,2014,2019,1,https://github.com/TeamSazerac/TheGame
Singleton,Design-patterns,Design patterns,1,6,2022,2024,1,https://github.com/mkassaf/Design-patterns
Singleton,singleton-design-pattern,What is Singleton Design pattern ?How many way we can create Singleton class ? which one is best practice ,1,8,2018,2021,1,https://github.com/Java-Techie-jt/singleton-design-pattern
Singleton,design-patterns,Singleton Problem,1,4,2013,2013,1,https://github.com/fabiooshiro/design-patterns
Singleton,Hotel-Management-System,"The system is implemented in C++ using various design patterns like Singleton, Factory and Strategy",1,6,2020,2023,1,https://github.com/ShefaliDigikar/Hotel-Management-System
Singleton,Singleton-Design-Pattern,An example for Singleton Design Pattern,1,2,2013,2013,1,https://github.com/moztro/Singleton-Design-Pattern
Singleton,design-pattern-example,Exploring Singleton and Factory Design Patterns in Depth,1,2,2022,2023,1,https://github.com/arifuzzaman-tanin/design-pattern-example
Singleton,SharedInstanceTesting,Fundamental iOS design patterns: SharedInstance (Singleton in Objective C),1,2,2013,2013,1,https://github.com/davealbert/SharedInstanceTesting
Singleton,singleton,Singleton Design Pattern,1,0,2019,2019,1,https://github.com/jfayyaz945/singleton
Singleton,SingletonDesignPattern_2,Design pattern code,1,1,2020,2022,1,https://github.com/kkjavatutorials/SingletonDesignPattern_2
Singleton,singleton-design-pattern,singleton-design-pattern,1,0,2018,2019,1,https://github.com/rajasekharreddybusireddy/singleton-design-pattern
Singleton,LandmarkBook,Singleton Design Pattern,1,0,2021,2021,1,https://github.com/mehmet-dogru/LandmarkBook
Singleton,Design-Pattern-Singleton,Design Pattern Singleton,1,0,2020,2020,1,https://github.com/YousraMzouz/Design-Pattern-Singleton
Singleton,Singleton_Design_Pattern,Singleton Design Pattern,1,0,2021,2023,1,https://github.com/Malaka98/Singleton_Design_Pattern
Singleton,Singleton_Design_Pattern,Singleton Design Pattern,1,0,2018,2023,1,https://github.com/mtnaln/Singleton_Design_Pattern
Singleton,SingleTon-Example,Design Pattern,1,0,2017,2021,1,https://github.com/sandeep-srivastav/SingleTon-Example
Singleton,Singleton,Implementing Singleton Design Pattern,1,0,2022,2022,1,https://github.com/BrunoSouzza/Singleton
Singleton,SingletonPattern,Finals - Lab 1 Design Pattern,1,0,2024,2025,1,https://github.com/Telenshaina/SingletonPattern
Singleton,SingletonDesignPattern,Singleton Design Pattern in C++,1,0,2014,2021,1,https://github.com/roldie/SingletonDesignPattern
Singleton,SingletonDesignPattern,Singleton Design Pattern in java,1,0,2019,2019,1,https://github.com/kalpesh997/SingletonDesignPattern
Singleton,design_patterns-singleton,Creational Design Patterns,1,0,2020,2020,1,https://github.com/malbohy/design_patterns-singleton
Singleton,design-pattern-singleton-laravel,design pattern singleton laravel,1,0,2022,2022,1,https://github.com/mohsenmojadam2019/design-pattern-singleton-laravel
Singleton,ObjectPoolDesignPatternTest,"ObjectPool design pattern, Example with Singleton design pattern",1,0,2025,2025,1,https://github.com/buzlukerdem/ObjectPoolDesignPatternTest
Singleton,Insurance-Management-System,"A simulation of Insurance Management system using MVC architecture with Facade, Chain of responsibility and Singleton design patterns",1,2,2023,2024,1,https://github.com/Keshavaram/Insurance-Management-System
Singleton,Singleton-Design-Pattern,Singleton Design Pattern Demo,1,0,2025,2025,1,https://github.com/pphatt/Singleton-Design-Pattern
Singleton,SingletonExample,this is example of Singleton Design Pattern,1,0,2024,2024,2,https://github.com/Arashjahangiri/SingletonExample
Singleton,Singleton-DesignPattern,Singleton Design Pattern Implementation in C#,1,0,2020,2023,1,https://github.com/KJayanthKumar/Singleton-DesignPattern
Singleton,Singleton-design-pattern-in-Android,Singleton design pattern in Android,1,0,2021,2021,1,https://github.com/ChetanaSalunkhe/Singleton-design-pattern-in-Android
Singleton,HotelApp,DotNet7 HotellApp SingleTon Design Pattern,1,0,2023,2025,3,https://github.com/nLabsGlobalTechnologgies/HotelApp
Singleton,singleton,Singleton and pool of objects design pattern,1,0,2023,2023,1,https://github.com/starseeker-code/singleton
Singleton,singleton-demonstration-java,Singleton design pattern demonstration in java.,1,0,2021,2021,1,https://github.com/amir-shiati/singleton-demonstration-java
Singleton,DesignPattern-Singleton,Example implementation of Singleton design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Singleton
Singleton,the-singleton-pattern-javascript,The singleton JavaScript design pattern demo.,1,0,2021,2023,1,https://github.com/joemar-tagpuno/the-singleton-pattern-javascript
Singleton,JDBC-Singleton-Design-Pattern,Jdbc crud with Singleton design pattern,1,0,2019,2021,1,https://github.com/kubilaycicek/JDBC-Singleton-Design-Pattern
Singleton,SingleTon-Design-Pattern-Implementation-in-CSharp,Coded a Basic Singleton Design Pattern,1,0,2022,2022,1,https://github.com/hassanraza51/SingleTon-Design-Pattern-Implementation-in-CSharp
Singleton,DesignPatterns,Inital commit - Singleton Pattern,1,0,2015,2015,1,https://github.com/vmchalla/DesignPatterns
Singleton,Singleton,This is a sample for implementing Singleton design pattern,1,0,2024,2024,1,https://github.com/bluescreen1999/Singleton
Singleton,pooled-singleton-design-pattern,Example of Pooled Singleton Design Pattern,1,0,2016,2016,1,https://github.com/NickNaso/pooled-singleton-design-pattern
Singleton,SingletonVSFactory,An example explaining the difference between the two design patterns,1,0,2019,2019,1,https://github.com/samjonescode/SingletonVSFactory
Singleton,PHP_cache_singleton,Example of cache and singleton design pattern.,1,0,2024,2024,1,https://github.com/luizrfreitas/PHP_cache_singleton
Singleton,Design_Patterns,Design Pattern Examples,1,0,2022,2022,0,https://github.com/mertcanuygun/Design_Patterns
Singleton,csharp_singleton_design_pattern,The singleton design pattern implemented in C#,1,0,2025,2025,2,https://github.com/JesseVanEvert/csharp_singleton_design_pattern
Singleton,SingletonDesignPattern,This Repository hosts how a Singleton Design Pattern could be used.,1,0,2019,2020,1,https://github.com/DonkeyKongJr/SingletonDesignPattern
Singleton,singleton_design_pattern,Implementation of the singleton design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/singleton_design_pattern
Singleton,Singleton,This project aims to show in practice the singleton design pattern,1,0,2022,2022,1,https://github.com/ViniciusFausto/Singleton
Singleton,RiverGame,"Used OOP design patterns singleton, command, Strategy",1,0,2021,2022,1,https://github.com/Youssefa99/RiverGame
Singleton,singleton-design-pattern,Simple multi thread implementation of singleton design pattern,1,0,2019,2020,1,https://github.com/thibeDev/singleton-design-pattern
Singleton,DesignPatterns,"Design patterns: Singleton, Builder, Facade, FactoryMethod, Prototype,",1,0,2022,2022,1,https://github.com/heminmoh/DesignPatterns
Singleton,SingletonPattern,For the Unity Singleton Design Pattern repository created for the Medium article.,1,1,2022,2024,1,https://github.com/IMetex/SingletonPattern
Singleton,node_design_pattern,"nodejs design pattern, singleton, object, export, module",1,1,2016,2019,1,https://github.com/wahengchang/node_design_pattern
Singleton,Singleton-Pattern,an implementation of the Singleton design pattern using c#,1,0,2023,2023,1,https://github.com/Reham135/Singleton-Pattern
Singleton,singleton-spring,Repository of an api implementation using Singleton Design Pattern,1,0,2022,2022,0,https://github.com/Gustavo053/singleton-spring
Singleton,CSharp_Design_Patterns,Singleton_Pattern,1,0,2021,2025,1,https://github.com/Nadeera551/CSharp_Design_Patterns
Singleton,Chat-Application--Java,Chat Application  using Thread-pool & singleton design pattern ,1,0,2015,2024,1,https://github.com/aashay91/Chat-Application--Java
Singleton,Multi-User-Chat-Room-JAVA-,"JAVA Design patterns: mediator, bridge, singleton, factory, observer.",1,0,2012,2013,1,https://github.com/yaxing/Multi-User-Chat-Room-JAVA-
Singleton,Homework-11-JSMX,Homework #11. Design Patterns Singleton and Factory Method.,1,0,2023,2024,2,https://github.com/iWaraxe/Homework-11-JSMX
Singleton,Design_Pattern,"Design Pattern, like Singleton, Decorator, State, Strategy, etc",1,0,2023,2024,1,https://github.com/PeterHUistyping/Design_Pattern
Singleton,Singleton-Design-Pattern-based-Water-Connection-Project,An application of Singleton Design Pattern in Java.,1,0,2019,2020,1,https://github.com/rajansh87/Singleton-Design-Pattern-based-Water-Connection-Project
Singleton,Flask-Design-Patterns,"Design Patterns(Singleton,Adapter,Mediator) with flask framework",1,0,2020,2022,2,https://github.com/mzuvin/Flask-Design-Patterns
Singleton,design-patterns,"design pattern session MSRIT , Singleton and Strategy Patterns",1,0,2022,2022,1,https://github.com/MSPawanRanjith/design-patterns
Singleton,Singleton-Design-Pattern,A project of applying singleton design pattern written in C++.,1,0,2020,2020,1,https://github.com/duc1807/Singleton-Design-Pattern
Singleton,DesignPatternSingleton,This is an interface singleton design pattern for your script,1,0,2021,2021,2,https://github.com/ArchNet-1/DesignPatternSingleton
Singleton,PizziSalle,Pizza App with Design Patterns (Java).,1,0,2024,2024,1,https://github.com/oscarjuly23/PizziSalle
Singleton,Singleton--Design-pattern,"Singleton Design pattern using C#.NET , Implementations, Explanations and Notes",1,0,2022,2022,1,https://github.com/abhishekpandaOfficial/Singleton--Design-pattern
Singleton,DesignPatterns,"Singleton, Factory Method and Abstract Factory Design Patterns in C#",1,0,2022,2022,1,https://github.com/bilgeyillmaz/DesignPatterns
Singleton,simple-singleton-java,A simple example of how to implement the Singleton design pattern,1,0,2023,2024,1,https://github.com/sean-campbelltech/simple-singleton-java
Singleton,Java-Paint-DesignPatterns,"Paint application in java using design patterns Singleton, Observer ...",1,0,2020,2021,1,https://github.com/HathoutFatna/Java-Paint-DesignPatterns
Singleton,design-pattern-singleton,There are several ways to use the singleton design pattern. Check out this post on how to use the singleton design pattern through four different methods.,1,0,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-singleton
Singleton,demoSingleton_Design,Singleton Design Pattern and how to use with basic method explain,1,0,2021,2021,1,https://github.com/firatdemircan/demoSingleton_Design
Singleton,singleton-demo,A non-thread safe implementation of the Singleton design pattern in C#,1,0,2020,2022,1,https://github.com/surya-sk/singleton-demo
Singleton,Design-Pattern,Software Design pattern implementation in Java,1,0,2019,2019,1,https://github.com/tonoy30/Design-Pattern
Singleton,DesignPatternSingletonScriptableObject,This extension is a design pattern singleton for scriptable objects.,1,0,2021,2021,2,https://github.com/ArchNet-1/DesignPatternSingletonScriptableObject
Singleton,Android-Design-Patterns,Android-Design-Patterns base on Java 23 kinds of design pattern and example.,1,0,2017,2021,1,https://github.com/xinpengfei520/Android-Design-Patterns
Singleton,OOP-Project3,"OOP project implementing singleton, factory and decorator design patterns.",1,0,2023,2024,1,https://github.com/CiobanuPaul/OOP-Project3
Singleton,TutorialDesignPatterns,"Tutorial design patterns in java : Singleton, factory-method, Decorator, ...",1,0,2019,2019,1,https://github.com/ilaghrissi/TutorialDesignPatterns
Singleton,UtilityFor--DB--POJO--JSON,"Java, MySql database, Json, Singleton design pattern , Maven, POJO",1,1,2020,2020,1,https://github.com/Rashu1991/UtilityFor--DB--POJO--JSON
Singleton,FactoryPlugAndPlay,Written in Java Using Singleton And Observer Design Pattern.,1,0,2021,2023,1,https://github.com/Rafcon96/FactoryPlugAndPlay
Singleton,cross-language-Pattern,"Implementation of singleton, factory, design patterns in different languages.",1,0,2023,2023,1,https://github.com/oussama-zbair/cross-language-Pattern
Singleton,DesignPatterns,The most used Design Patterns that softwares engineers work with. ,1,0,2020,2020,1,https://github.com/flaviocr2012/DesignPatterns
Singleton,Design_Patterns_Singleton,,1,0,2023,2023,1,https://github.com/theImpish/Design_Patterns_Singleton
Singleton,design-patterns-singleton,Code and examples from the Design patterns Singleton chapter of More programming with Java,1,0,2016,2022,1,https://github.com/progund/design-patterns-singleton
Singleton,OOD,"Design Patterns project: MVC, Singleton, file iterator, Observer, Command, Memento.",1,0,2023,2023,1,https://github.com/RamDvlp/OOD
Singleton,design_patterns,"Design patterns in Java and Kotlin - Singleton, Factory, Builder etc..",1,0,2025,2025,1,https://github.com/diyorbekhamidov/design_patterns
Singleton,BlueLibrary,"Design pattern illustration: Singleton, MVC, Decorator, Adapter, Facade, Observer, Memento.",1,0,2017,2020,1,https://github.com/ngominhtrint/BlueLibrary
Singleton,singleton-design-pattern-study,📚 A study case and school activity about the classic Singleton design pattern.,1,0,2022,2023,1,https://github.com/cristianprochnow/singleton-design-pattern-study
Singleton,fantasy-rpg-game,"This project implements Singleton, Factory, Strategy and Observer design patterns.",1,0,2017,2019,1,https://github.com/rd-spring-coder/fantasy-rpg-game
Singleton,UnityPatterns,"Unity Design Patterns UPM package (e.g Singleton, Strategy, Facade...)",1,0,2022,2022,1,https://github.com/mfdeveloper/UnityPatterns
Singleton,Design_Patterns,"Estudo em JAVA sobre DesignPatterns ( Builder, Singleton, Adapter).",1,0,2023,2023,1,https://github.com/SenaFernando/Design_Patterns
Singleton,Design-Patterns,JAVA Design Pattern,1,0,2021,2021,1,https://github.com/MaheshVegada/Design-Patterns
Singleton,Singleton-Pattern,The Singleton Design Pattern is best used to gain reference to instances of singular classes.,1,0,2024,2024,1,https://github.com/DylanDorey/Singleton-Pattern
Singleton,Neo4j-Python-Singleton,Connection à la base de données neo4j en utilisant le design pattern Singleton,1,0,2021,2022,1,https://github.com/daniel-aime/Neo4j-Python-Singleton
Singleton,DesignPattern,collection of Java design pattern implementations,1,0,2024,2025,1,https://github.com/bunu23/DesignPattern
Singleton,cpp-component-util-singleton,The Singleton and Multiton (Registry of Singletons) creational design patterns as reusable C++11 components.,1,0,2014,2018,1,https://github.com/FlorianWolters/cpp-component-util-singleton
Singleton,CS-100-Final-Project,Sudoku Game coded in C++. Implements Strategy and Singleton design patterns.,1,0,2021,2022,1,https://github.com/vmeno0020/CS-100-Final-Project
Singleton,AdventureGame,"Java and JavaFX game, testing design patterns. Observer, Strategy, Singleton, Factory.",1,0,2016,2024,1,https://github.com/dsenese/AdventureGame
Singleton,zmprog2,"kod do laboratorium 2 z zmprog , design patterns singleton & factory method",1,0,2024,2024,1,https://github.com/V2gkr/zmprog2
Singleton,MeyersSingleton,"An example of how we can implement the Singleton design pattern using Meyers method, in game development",1,0,2023,2023,1,https://github.com/khimleesi/MeyersSingleton
Singleton,common-design-patterns,"[WIP][LEARNING] Annotated Observer, Factory, Singleton, and so on",1,0,2023,2024,1,https://github.com/stuymedova/common-design-patterns
Singleton,design-patterns-software-engineering,Studies on design patterns and software engineering.,1,0,2024,2025,1,https://github.com/kastorcode/design-patterns-software-engineering
Singleton,DotNet_Repository,"Sample Projects on Design Pattern such as Singleton, Factory Design Pattern, MVC, Linq, Web API using C# and .Net Framework.",1,0,2019,2020,0,https://github.com/abhishek8055/DotNet_Repository
Singleton,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
Singleton,patterns,"Design Patterns Sample (Creational[Builder, Factory Method,Singleton], Structural[Adapter, Facade, Proxy] )",1,0,2016,2023,1,https://github.com/asanchezyu/patterns
Singleton,MemeApp,Android App For Enjoying Meme and Sharing them using singleton design pattern,1,0,2023,2024,1,https://github.com/PariharAditya/MemeApp
Singleton,RestServer,Simple Java Rest Server using Gson library and Builder/Singleton design patterns,1,1,2024,2024,1,https://github.com/MovieTone/RestServer
Singleton,Design-Patterns,"Explore a collection of commonly used design patterns implemented in Java. This repository showcases examples of Singleton, Factory, Abstract Factory, Adapter, Strategy, and Builder patterns. Each pattern is implemented in its own package, providing clear demonstrations and usage guidelines.",1,0,2023,2023,1,https://github.com/Meriyemelhajoui/Design-Patterns
Singleton,Library-Book-Tracker-Application,"An application demonstrating the collaboration of State, Singleton, and Observer Design Patterns",1,0,2022,2022,2,https://github.com/aleeckman/Library-Book-Tracker-Application
Singleton,Software-design-patterns.-University-Second-Year,"5 Software design patterns work for IS2: Singleton, Factory, State, Observer, Strategy",1,0,2018,2020,2,https://github.com/lakidain/Software-design-patterns.-University-Second-Year
Singleton,ImplementYourOwn,"Basic implementation of malloc, threadpool, object pool, timer wheel, singleton design pattern.",1,0,2018,2023,1,https://github.com/sonugiri1043/ImplementYourOwn
Singleton,Mastering-Design-Patterns-in-Java,"real world examples for singleton, factory, builder, adapter, decorator, observer design patterns",1,0,2024,2024,1,https://github.com/DharshiBalasubramaniyam/Mastering-Design-Patterns-in-Java
Singleton,Implementation_FactoryMethod_Builder_And_Singleton_Design_Patterns,"This is the small example on Implementation of Design Patterns (Singleton, Builder, Factory Method)",1,0,2018,2020,1,https://github.com/rafaewaqarqazi/Implementation_FactoryMethod_Builder_And_Singleton_Design_Patterns
Singleton,DesignPatterns,Design Patterns are reusable solutions to commonly occuring problems(in the context of software design). Design patterns were started as best practices that were applied again and again to similar problems encountered in different contexts. ,1,0,2018,2021,1,https://github.com/amitpatange88/DesignPatterns
Singleton,SingletonDesignPattern,"Singleton Design Pattern:  In the context of a logger class, the Singleton design pattern ensures that there's only one logger instance in the entire application, and it provides a global point of access to that logger.  Why Use Singleton (Logger Example):  Single Logging Point: Ensure there's only one logger to record events or messages.",1,0,2024,2024,1,https://github.com/nirajtiwari91/SingletonDesignPattern
Singleton,prototype_design-patterns,Prototype for design patterns and their implementations in Python. Contains practical examples and explanations to help understand and apply these patterns in Python projects.,1,0,2024,2025,1,https://github.com/tyronejosee/prototype_design-patterns
Singleton,design-patterns,"Projeto com exemplo de utilização dos principais Design Patterns com php como DAO, Singleton, ConnectionFactory etc.",1,0,2010,2013,0,https://github.com/AlexandreSantos/design-patterns
Singleton,Hospitality-Management-----Web-Based-Application,"We are using MVC method and singleton design pattern. Java, Jsp, Database MYSQL",1,0,2019,2020,1,https://github.com/Thavananthan/Hospitality-Management-----Web-Based-Application
Singleton,Hamburguer_Store_JAVA,"Hamburguer store system developed in Java with Singleton, Factory and Composite design patterns.",1,0,2024,2024,1,https://github.com/lautaros4/Hamburguer_Store_JAVA
Singleton,Xonix,"Java game using Model-view-controller, singleton, proxy, strategy and iterator Design Patterns",1,0,2015,2017,1,https://github.com/davidsaechao/Xonix
Singleton,udemy_DesignPatterns,"Course instructed by Dmitri Nesteruk that taught about SOLID principles and creational, structural and behavioral patterns such as Factory,Builder, Singleton*, Memento and a little bit of IOC and dependency injection. ",1,0,2018,2022,1,https://github.com/iuryamicussi/udemy_DesignPatterns
Singleton,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Singleton,Design-Patterns-Csharp,Estudo de Design Patterns com C#,1,1,2020,2024,1,https://github.com/thiago-roock/Design-Patterns-Csharp
Singleton,DesignPatterns,"This repository is a practical demonstration of some of the widely use object-oriented design patterns used in Java. Includes coding examples to illustrate the implementation of  Singleton,Factory,Decorator,Observer and Adaptor Design Patterns.",1,0,2024,2024,1,https://github.com/umayanganacooray/DesignPatterns
Singleton,design-patterns-java,"Simple Java exercises to familiarize with design patterns such as abstract factory, singleton and repository.",1,0,2022,2022,1,https://github.com/vittorioexp/design-patterns-java
Singleton,DesignPatterns,"Design Patterns Project: An educational resource showcasing popular patterns like Singleton, Factory, Observer, Dependency Injection, and Template Method. Explore code and labeled sections for insights into practical implementation and concepts. Enhance understanding of design patterns easily.",1,0,2023,2023,1,https://github.com/ovinokurov/DesignPatterns
Singleton,SingletonPattern-getInstance-LazyInitialization-GlobalInstance,"Singleton Pattern in Java: Example showcasing the creational Singleton pattern. Ensures a single instance, offering global access. Ideal for understanding and applying design patterns in Java.",1,0,2023,2024,1,https://github.com/MauricioResmar/SingletonPattern-getInstance-LazyInitialization-GlobalInstance
Singleton,Aula_01,"Aula 01 - Introdução a .Net e Orientação a Objetos, Design Patterns 01 e Singleton",1,0,2014,2020,1,https://github.com/glaucia86/Aula_01
Singleton,CoolIce,"WPF CRUD app  Using MVVM Design Pattern along with Singleton(ProjectManager)   XAML, Sqlite, C# ",1,1,2017,2023,0,https://github.com/CompG33k/CoolIce
Singleton,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Singleton,Java-Singleton-and-Reflection,Simple program that serves as proof of concept of the singleton design pattern and how it can be circled around by using Reflection,1,0,2017,2017,1,https://github.com/csanc195/Java-Singleton-and-Reflection
Singleton,SoftwareDesignPatterns,"A repository that explores various software design patterns, providing code examples, explanations, and use cases for common design patterns like Singleton, Factory, Observer, and Strategy.",1,1,2023,2023,1,https://github.com/migustoo/SoftwareDesignPatterns
Singleton,Multiplayer-Tambola-Game-using-Multithreading,"This repository contains a multithreaded application based on 'n' player Tambola game developed using Observer Design Pattern, Singleton Design Pattern and Multi-threading in Java.",1,0,2020,2020,1,https://github.com/neelabhsinha/Multiplayer-Tambola-Game-using-Multithreading
Singleton,design-patterns-library2,"Sistema bibliotecário com padrões de projetos: Composite, Chain of responsibility, Decorator, Proxy, Static factory method e Singleton",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library2
Singleton,StoreCashier_OODesign2021A,"Object-Oriented-Design course project JavaFx, MVC, Design Patterns: Command, Memento, File Iterator, Singleton, Threads...",1,0,2021,2021,2,https://github.com/ShahaRaz/StoreCashier_OODesign2021A
Singleton,Design-Patterns,This repo will contain full examples and tests and explanations on most of the known design patterns,1,1,2023,2024,1,https://github.com/ayoubachak/Design-Patterns
Singleton,ruby-design-patterns,,1,0,2016,2017,1,https://github.com/kalelc/ruby-design-patterns
Singleton,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Singleton,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Singleton,Singleton-design-pattern,"Singleton design pattern allows us to create one object from the class; however a customer needs to take advantage of this design pattern for class that is used to create a connection via ssh, telnet, http, scp and ftp protocols. The class should create one object for each protocol. In addition, the app can create 3 concurrent connections at most.",1,0,2021,2024,1,https://github.com/GhaidaaShtayeh/Singleton-design-pattern
Singleton,iOSSingletonExample,This is an example of how to make use the singleton design pattern in Objective-C,1,0,2014,2014,1,https://github.com/cmilne/iOSSingletonExample
Singleton,LEAGUE-of-OOP,"A java application which simulate a RPG game using, using the Factory and Singleton design patterns.",1,0,2018,2019,1,https://github.com/AntonescuAlexandru/LEAGUE-of-OOP
Singleton,Aula_01c,"Terceiro exemplo sobre a Introdução a .Net e Orientação a Objetos, Design Patterns 01 e Singleton",1,0,2014,2020,1,https://github.com/glaucia86/Aula_01c
Singleton,.Net-Core-Web-API-CRUD-Campground-Locations-Example,"SOA (Service Orianted Architecture) , .NET Core Web API, Singleton Design Pattern, Dependency Injection, N Layered Architecture",1,0,2021,2021,1,https://github.com/emrepelit/.Net-Core-Web-API-CRUD-Campground-Locations-Example
Singleton,optional-singleton,Optional Singleton is this adaptation of the Singleton Design Pattern that strives to be more test friendly while also maintening the global scope that is the main purpose of the pattern.,1,0,2024,2024,1,https://github.com/nadjiel/optional-singleton
Singleton,Framework-Implementing-Design-Patterns,"A framework specially for financial institution like bank, insurance using the best practice of design patterns like Singleton, Factory, Observer, Strategy,  Decorator",1,0,2022,2022,1,https://github.com/lisa99990/Framework-Implementing-Design-Patterns
Singleton,Design-patterns-in-dart,"selected design patterns implemented with dart programming language, oriented for flutter development",1,0,2024,2024,1,https://github.com/ziadasem/Design-patterns-in-dart
Singleton,AndroidContentProvider,MVVM design pattern ile Android Content Provider yapısını ele alan server-client mantığında 2 adet native uygulama,1,0,2022,2022,1,https://github.com/ahmeteminkara/AndroidContentProvider
Singleton,Singleton-Design-Pattern,This project demonstrates the Singleton design pattern implementation in Dart. The Singleton pattern ensures that a class has only one instance and provides a global point of access to that instance.,1,0,2025,2025,1,https://github.com/mohamedsalah918101/Singleton-Design-Pattern
Singleton,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Singleton,JogoCobrinhaDesignPatterns,"Simples jogo da cobrinha, desenvolvido em C++ no QtCreator, e fazendo uso de padrões de projeto.  Os padrões utilizados são State, Singleton e Memento.",1,0,2019,2019,1,https://github.com/mauriciobenigno/JogoCobrinhaDesignPatterns
Singleton,Memorandum,"A simple memorandum demo, mainly to demonstrate the usage of shareSDK, core data and singleton design pattern.",1,0,2015,2017,1,https://github.com/leobxpan/Memorandum
Singleton,Aula_01a,"Um Segundo exemplo da Primeira Aula - Introdução a .Net e Orientação a Objetos, Design Patterns e Singleton",1,0,2014,2020,1,https://github.com/glaucia86/Aula_01a
Singleton,connectfour,"Connect4 game implemented for the Production Quality Software class. Uses Builder, Observer, Factory and Singleton design patterns.",1,0,2012,2015,1,https://github.com/hm1021/connectfour
Singleton,evernote-sample-project,"mvc,linq-ef,jquery,bootstrap,oop,N-Tier Architecture,c#,html,Repository Desing Pattern,Singleton Design Pattern",1,0,2017,2020,1,https://github.com/tugaykosekahya/evernote-sample-project
Singleton,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Singleton,Store_Final_Project_Design_Patterns," Streaming Binary I/O, Collections, Design Patterns: Comparator, Iterator (For file), List Iterator, Observer, MVC, Singleton, Command, Adapter, Decorator, Memento and Multi Treading Systems",1,0,2021,2022,1,https://github.com/RonShmaya/Store_Final_Project_Design_Patterns
Singleton,design-patterns,:alien: A list of design patterns implementeds in JAVA that I worked during my graduation,1,0,2017,2019,1,https://github.com/MarceloBritoWD/design-patterns
Singleton,Refactoring_and_Implementing_Software_Design_Patterns,"Enhance CPP_OOP_Online_Store by refactoring and integrating software design patterns like Factory, Singleton, Observer, and Strategy. Improve maintainability and scalability while deepening understanding of design patterns in C++.",1,2,2024,2024,1,https://github.com/amaralazizy/Refactoring_and_Implementing_Software_Design_Patterns
Singleton,Typescript-design-patterns,"Fundamentals of the Typescript programming language. Repository with examples and basic exercises of design patterns (Factory, Singleton, etc). This repository is part of a self-taught supplemental course to help students develop skills.",1,0,2023,2023,1,https://github.com/dcortesnet/Typescript-design-patterns
Singleton,typescript-oop-practice,"This project demonstrates the usage of OOP (Object-Oriented Programming) and design patterns, such as Singleton, with Typescript.",1,0,2024,2024,1,https://github.com/djrequejo/typescript-oop-practice
Singleton,PharmaPlus,"CSE-3120 | Software Engineering and Information Systems Laboratory Android studio project with Factory , SingleTon , adapter , Observer Design pattern",1,1,2024,2024,3,https://github.com/Mofazzal874/PharmaPlus
Singleton,SnakeLadderGame,"Implementation contains graphical interface and the use of design patterns such as factory, SINGLETON and ITERATOR, in java",1,0,2021,2021,1,https://github.com/Ramonlobo633/SnakeLadderGame
Singleton,EvspoID,"Platform E-commerce perlengkapan olahraga dibangun dengan Java menggunakan design pattern factory, abstract factory, strategy, singleton, facade pattern",1,0,2023,2023,1,https://github.com/malikfajarh/EvspoID
Singleton,Cinema_Manager_System,"A Java applicaton for cinema mangment, using JavaFx, designed according to Design-Patterns such as: Observers, MVC, Singleton",1,0,2021,2022,1,https://github.com/rotemmi/Cinema_Manager_System
Singleton,JframeJava-patient-care-crud,"This is a patient clinic care simulation developed in Java using Jframe, with DAO and Singleton design patterns  ",1,0,2022,2022,1,https://github.com/AlejandroFerrera/JframeJava-patient-care-crud
Singleton,Design-Patterns,"🛠️ Explore key software design patterns with Java demos! This repository features the Adapter, Observer, and Singleton patterns with practical examples to boost your understanding of reusable and scalable code structures. Perfect for developers diving into design principles! 🚀 #DesignPatterns #Java #Coding",1,0,2024,2024,1,https://github.com/Sassri24/Design-Patterns
Singleton,Books-List-with-SwiftUI,"I have fetched books list from New York times using Alamofire. It is entirely developed using SwiftUI framework. This project uses MVVM architecture and has some standard design patterns integrated as well such as: Singleton Patter, Strategy Pattern, Factory Pattern and  Observer Pattern.",1,1,2020,2023,1,https://github.com/HannyTufail/Books-List-with-SwiftUI
Singleton,Design_Patterns,You can find examples of design patterns in this project. How many design patterns we have and you can see how some of them are used.,1,0,2022,2023,1,https://github.com/EnesSERENLI/Design_Patterns
Singleton,software-design-patterns-java,"Explore Java code examples for software design patterns—creational (Singleton, Factory), structural (Adapter, Decorator), and behavioral (Observer, Strategy). Master best practices for writing maintainable, flexible, and scalable Java code in this comprehensive repository.",1,0,2023,2023,1,https://github.com/kodiidok/software-design-patterns-java
Singleton,Secure-Software-Design-Patterns,"This repository contains implementations for multiple creational patterns like Singleton, Pattern & Factory patterns using Java. All pattern implementations are organized in different Java files  which you can find in its respective folders' source folder.",1,0,2023,2023,1,https://github.com/mhuzaifi0604/Secure-Software-Design-Patterns
Singleton,warships-game,"this is a console game with usage of spectre, implementing many design patterns such as singleton, state, factory etc.",1,0,2025,2025,1,https://github.com/Doomalewski/warships-game
Singleton,Flutter-Dev,"A basic Flutter application which includes API calls, EventStream, Card Design. Designed by implementing Reactive and SingleTon Design pattern.",1,0,2020,2021,1,https://github.com/Yunus0or1/Flutter-Dev
Singleton,CyberSecurity-Management-in-Healthcare-Application-Engineering-Development-,Java Swing application using singleton design pattern and Db4O database to simulate cyber security features in health care domain,1,0,2017,2020,1,https://github.com/tambean/CyberSecurity-Management-in-Healthcare-Application-Engineering-Development-
Singleton,neoflex_patterns,"Assignment from the lecturer of the Neoflex training center on the topic of Design patterns (singleton, factory, proxy, adapter).",1,0,2021,2021,1,https://github.com/stasbaglaev/neoflex_patterns
Singleton,Laboratory,"Laboratory management system. Version 1.0 (Version 2.0 source codes are private) | Java & JavaFX |  Design patterns used: MVC, Singleton",1,0,2023,2024,1,https://github.com/wasiqbarat/Laboratory
Singleton,EsiMealApp,"a flutter mobile app for restaurant management  implementig design patterns (chain of responsibility, decorator, factory method, singleton, strategy and facade).",1,1,2020,2020,2,https://github.com/Sihamtahi/EsiMealApp
Singleton,JavaDesignPatternsWorld,"JavaDesignPatternsWorld 🌟: Master Java Design Patterns and SOLID Principles with real-world examples, code snippets, and quizzes. Learn Creational, Structural, and Behavioral patterns, including Singleton, Factory, Adapter, Observer, and more. Perfect for beginners, developers, and architects to create scalable, maintainable software! 🚀",1,0,2024,2024,1,https://github.com/rohitbhardwaj/JavaDesignPatternsWorld
Singleton,SeenaAndroidTask,"Seena Android Task Using: Restful Apis , Retrofit , Singleton Design Pattern  , Mvvm Design Architecture and RxJava  and Third Party Library ( Picasso )",1,0,2022,2022,2,https://github.com/MahmoudAbdullahGITHUB/SeenaAndroidTask
Singleton,unityDesignPattern_Holistic3D,"Penny De Byl's Udemy course about useful design patterns for game programming. The course teach a full set of design patterns for many game dev scenarios like singleton, command pattern, observer pattern, etc...",1,1,2021,2022,1,https://github.com/Kassout/unityDesignPattern_Holistic3D
Singleton,design-patterns,A GitHub repository providing simple explanations and code snippets for various design patterns in JavaScript and Python.,1,0,2023,2023,1,https://github.com/simon-das/design-patterns
Singleton,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Singleton,Creational-Design-Patterns-in-Java,"This repository showcases implementations of five key creational design patterns in Java: Singleton, Factory, Abstract Factory, Builder, and Prototype. Each pattern is implemented with real-world scenarios, demonstrating how to create objects in a flexible, reusable, and efficient manner.",1,0,2024,2024,1,https://github.com/KUMARAN1601/Creational-Design-Patterns-in-Java
Singleton,cheque_management_system,"FREELANCE PROJECT - java ee,  JUnit 4,  JavaScript, bootstrap, css, html, jsp, servlet, mysql [ architecture and design patterns- Singleton, Data Access Object Design Patterns and MVC architecture]    - Running project screenshots have been attached under issue #7",1,1,2020,2021,1,https://github.com/itsmeAmal/cheque_management_system
Singleton,webSiteVisitorReport-HRPeak-Challenge,"Using .Net Core MVC, HTML5, CSS3, Boostrap4, Ajax, Singleton Design Pattern. Site visitor counter reporter and filtering them by date, page.",1,0,2021,2021,1,https://github.com/burakguler/webSiteVisitorReport-HRPeak-Challenge
Singleton,Template-Webpack-Typescript,"This project provides a template to jump into a typescript project. Also provides a few design patterns (Factory, Singleton and Strategy)",1,1,2021,2021,0,https://github.com/hectorrodriguez773/Template-Webpack-Typescript
Singleton,NewsApp,"News App - Android studio application utilizing the News API, Android Studio, Java, Room ORM, FirebaseJobService, and various design patterns (Singleton and Observer).",1,0,2018,2018,1,https://github.com/EmilyPascua/NewsApp
Singleton,custome-mvc-sample-application,"custom MVC framework in PHP 7 with mixers of Decorator, Factory and Singleton design patterns | support of MySQL and MS-SQL databases.",1,0,2020,2020,2,https://github.com/kuldeep198811/custome-mvc-sample-application
Singleton,DotNet,"System development for driving students, testers and driving tests. Using MVVM architecture, Design Patterns (Observer ,Contract ,Factory Method ,Singleton), and XML DOM.",1,0,2018,2021,1,https://github.com/DvoraRit/DotNet
Singleton,scraper,"The Scraper project is a modular web scraper with configurable intervals, demonstrating the practical use of Factory, Builder, and Singleton design patterns.",1,0,2023,2024,2,https://github.com/surenpoghosian/scraper
Singleton,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Singleton,HeadlessZombie,"This project is a game that I created using object oriented design patterns. Patterns used in this project include decorator, command, and singleton.",1,0,2017,2017,0,https://github.com/jazart/HeadlessZombie
Singleton,Sport-Competitions-3rd-homework-OOP,"A Java program that manages sports competitions (teams registration, matches, rankings calculation). Multiple design patterns have been used: Singleton, Factory, Visitor, Observer, Strategy.",1,0,2020,2022,1,https://github.com/mateipetre/Sport-Competitions-3rd-homework-OOP
Singleton,VehicleAgency,"This project is a vehicle agency graphical user interface (GUI) implemented in Java. It incorporates various design patterns to enhance code organization and functionality. The design patterns utilized include the thread pool, memento, observer, singleton, abstract factory method, and decorator patterns.",1,0,2023,2025,1,https://github.com/RonyBubnovsky/VehicleAgency
Singleton,TheDialogGame,TheDialogGame is a text-based adventure game developed as part of a first-year Java course. This project emphasizes object-oriented programming (OOP) principles and integrates design patterns to create a modular and extensible game experience. ,1,0,2024,2025,1,https://github.com/K-sel/TheDialogGame
Singleton,MonsterHunter,"Java game based on a 2D map, classes of heroes, monsters and treasures. This app implements various design patterns: observer, singleton, factory, strategy, command.",1,0,2018,2023,1,https://github.com/razvanra2/MonsterHunter
Singleton,BankingFramework,"Banking System: creating and managing customers, accounts, credit cards, interest, deposits and withdrawals. Used Java8, Java Swing, Design Patterns (Command, Factory, Singleton, Template, Façade).",1,0,2016,2021,1,https://github.com/abdullahashik/BankingFramework
Singleton,clothestore-v2,Projeto interdisciplinar abordando princípios do paradigma orientado à objeto. Implantado Design Patterns como Facade e Singleton e utilizado DAO para a camada de persistência,1,0,2021,2021,1,https://github.com/bruno-albino/clothestore-v2
Singleton,JSONCustomers,"Reads JSONObjects from a URL and filters the data according to certain criteria. This Project implements the following design patterns: Filter/Criteria, Singleton, MVC.",1,0,2015,2016,1,https://github.com/barry-dempsey/JSONCustomers
Singleton,Dental-Managerial-System,"Developed a managerial system for a dental clinic that also helps to automate all required paperwork. Using MVC,Observer,Singleton,and Strategy Design patterns.",1,0,2023,2023,1,https://github.com/Ahmedawad24/Dental-Managerial-System
Singleton,Institute,"This project has been developed to monitor graduates of an institute...Tools: PHP, MySQL, NETBEANS, Javascript, CSS, HTML... Design Patterns: MVC, Abstract Factory, Singleton.",1,0,2020,2021,1,https://github.com/JuniorAguilera/Institute
Singleton,AnimalCareSimulator-OOP-and-Design-Patterns-in-Action,"A C# project utilizing the singleton design pattern and object-oriented programming to simulate Steve's care for tarantulas, hamsters, and cats. The project features a structured codebase, unit testing, and comprehensive documentation, including a UML diagram and blackbox testing scenarios.",1,0,2023,2024,1,https://github.com/Abdelhamidkh7/AnimalCareSimulator-OOP-and-Design-Patterns-in-Action
Singleton,AnimeArea,"an eCommerce  site to sell anime t-shirts , this project is an attempt to apply some design pattern such as singleton and observer ,decorator . and the most awesome part is that it's based on  laravel . ",1,0,2017,2022,1,https://github.com/amrHassanAbdallah/AnimeArea
Singleton,MasterSeleniumFramework_BDD,"Automation Testing | Web | API | Atomic Tests | Cucumber | Java | OOPS | Selenium WebDriver | TestNG | Maven | Cucumber Reports | Java mail API | Design Patterns (Page Object Model, Singleton) | Jenkins",1,0,2024,2024,1,https://github.com/RichardBricio/MasterSeleniumFramework_BDD
Singleton,Software-Analysis-Design,"UML-driven backend for a trading card game. Utilizes Singleton, Observer, Composite, State Design patterns. Enables card creation, expansion management, and real-time status updates.",1,0,2024,2024,1,https://github.com/TobiZelders/Software-Analysis-Design
Singleton,MusicAlbums,"This app shows a Music Album collection and allows you edit the list. It uses different design patterns like Singleton, MVC, Decorator, Adapter, Facade, Observer.",1,0,2017,2018,0,https://github.com/josman185/MusicAlbums
Singleton,TD-Game,"Strategy Based ""TOWER DEFENSE GAME"". The game provides implementation of different design patterns and communication between them i.e. Singleton patter, Factory pattern, Strategy Pattern etc.",1,1,2016,2016,5,https://github.com/umerkk/TD-Game
Singleton,Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns,"This is an Application Implementing 5 design Patterns like Strategy, Singleton, Builder, Observer and Adapter. It is a Basic Job Posting and Hiring Application implementing login and Register Functionality with Job Posting and Job Hiring , it also sends out SMS Messages to Subscribed Phone Numbers.",1,0,2024,2024,1,https://github.com/SpecteR926/Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns
Singleton,DesginPatterns,"My GitHub repository showcases JavaScript design patterns including Null Object, Builder, Singleton, Command, and Facade. Learn how to implement these powerful patterns for clean and reusable code. Boost your development skills with concise examples and explanations. Dive into the world of design patterns in JavaScript.",1,0,2023,2023,1,https://github.com/Ankush-ai/DesginPatterns
Singleton,three-in-a-row-game-with-design-patterns,"Juego tres en raya, realizado en el lenguaje de programacion JAVA, utilizando el IDE netbeans 8.2. El juego se diseño principalmente para ser aplicado los patrones de diseño los cuales son los siguientes: patron Builder, patron factory, patron singleton, patron observer y patron facade, como resultado final tenemos que el programa tiene funcionalidad optima, trabajando conjuntamente con los patrones de diseño implementados.",1,0,2022,2022,1,https://github.com/bryherna/three-in-a-row-game-with-design-patterns
Singleton,Countries,"I have used this techniques ; Api's and Json Parse, singleton design pattern, Mvc, Protocol and Delegates,Extension, KingFisher(Third Party Library), SvgKit(Third Party Library),Extensions.",1,0,2022,2022,1,https://github.com/TelOkan/Countries
Singleton,Online-Realtor,"Online Realtor is a framework for an online real estate application. The goal of this application was to design loosely coupled software using multiple software design patterns. I used the mediator, factory, and singleton design patterns to create a mock framework for a real estate application. ",1,0,2020,2020,1,https://github.com/dhirajdesign/Online-Realtor
Singleton,usersAPI,General API for use with some application to consume an external API. The code contains implementation of Factory design pattern for Logger and Singleton for In-Memory-Cache,1,0,2021,2021,1,https://github.com/Ruling-Alfa/usersAPI
Singleton,online-shopping-simulation,"This project is an Online Shopping System that implements Singleton, Factory, Decorator, and Observer Design Patterns to manage shopping carts, apply discounts, process payments, and track order statuses.",1,0,2025,2025,1,https://github.com/meliscann/online-shopping-simulation
Singleton,MasterSeleniumFramework,"Automation Testing | Web | Java | OOPS | Selenium WebDriver | TestNG | Maven | ExtentReport | Allure Reports | Java mail API | Design Patterns (Page Object Model, Singleton) | Jenkins | Data-Driven Testing using JSON file",1,0,2024,2024,1,https://github.com/rashmiiyengar/MasterSeleniumFramework
Singleton,Simple_Pool_game,"This is a simple pool game which only implements the function for hitting balls with a cue. The implementation used 3 design patterns: Factory method, Builder and Singleton.",1,0,2018,2019,1,https://github.com/EuniceMadya/Simple_Pool_game
Singleton,Patterns,"This repository showcases implementations of fundamental design patterns in C#, covering creational, structural, and behavioral patterns. Each pattern is demonstrated through easy-to-understand, practical examples, illustrating how to solve common software design challenges.",1,0,2024,2024,1,https://github.com/pome1lo/Patterns
Singleton,iLetter,"Swift UI, Email/Google Authentication, Firebase Firestore and Storage, Real-time chat with image/text messages, MessageKit, NSLayoutAnchor and StackViews, Design Pattern - Singleton, UICollectionView Compositional Layout, UICollectionView Diffable Datasource",1,0,2020,2020,1,https://github.com/novembrz/iLetter
Singleton,ensalamento-api-javaweb-hibernate,"Este projeto contempla a estruturação de aplicações web, aplicando o modelo MVC. São aplicados também alguns design patterns importantes usados na construção de aplicações, como DAO, factory e singleton.",1,0,2022,2022,1,https://github.com/arianerfrancisco/ensalamento-api-javaweb-hibernate
Singleton,asp.net-northwind,"ASP.NET MVC application leveraging design patterns, including singleton, strategy pattern and factory method. This application connects the user with a Microsoft Access Database (.mdb) via OleDb and Odbc.",1,0,2016,2016,1,https://github.com/mshutter/asp.net-northwind
Singleton,WholeSalePosWithJPA,"This system was developed for whole sale order and item management system for super market.  System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns",1,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSalePosWithJPA
Singleton,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Singleton,Elegant_API,"Elegant API has been developed with the objective of have  most design patterns posible, using Singleton, Dependencies Injection, Facade, Currying, an adapter in hipothetic case and trying to has clean code.",1,0,2021,2023,1,https://github.com/yuNNNu/Elegant_API
Singleton,Client-Management-System-with-Design-Pattern-Architecture,"The system implements three design patterns: Table Data Gateway, Singleton, and Model View Controller (MVC). It connects to a database and provides functionality to search, add, delete, and view client information.",1,0,2024,2024,1,https://github.com/Ivan10121/Client-Management-System-with-Design-Pattern-Architecture
Singleton,The-Fish-Master,I made a clone of The Fish Master game. I used Unity and C# while I was doing this project. Also I was used Model-View-Controller (MVC) and Singleton Design Patterns.,1,0,2022,2023,1,https://github.com/ismailgulsen99/The-Fish-Master
Singleton,AirLogger,"I reinvent the wheel for the Simple Logger class. Log4cpp or similar logger is too large and complicated for my project. In the meanwhile, it is a practice for singleton design pattern.",1,0,2015,2021,1,https://github.com/zeroch/AirLogger
Singleton,RestAssuredTestNGFramework,Automation Testing | RESTful webservices | Java | RestAssured | OAuth 2.0 | Lombok | TestNG | Maven | ExtentReport | Allure Reports | Java mail API | Design Patterns (Singleton) | Jenkins | Data-Driven Testing using JSON file | Expected Data using XML file,1,1,2022,2024,1,https://github.com/keshavjha06/RestAssuredTestNGFramework
Singleton,Java-Projects,"Java par la pratique, Concepts fondamentaux, les Exceptions,  les Design patterns (Singleton, Factory, Observer, Modèle Vue  Contrôleur), la programmation graphique et évènementielle avec JavaFx, API JDBC, Hibernate 5, Data Access Object Pattern (DAO)",1,0,2021,2022,1,https://github.com/MouhamadouFALL/Java-Projects
Singleton,WholeSaleMavenSpringHibernate,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with JPA, Spring and Maven",1,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSaleMavenSpringHibernate
Singleton,Estacionamento-Factory-Pattern,"Projeto de Simulação de Estacionamento em C# .Net Core  - Aplica Design Patterns (Factory), Injeção de Dependências (Singleton e Scoped), Herança, Composição, Polimorfismo, Interfaces, Abstract Class, Generic Class, Princípios SOLID, Práticas Clean Code, Abordagem DDD",1,0,2023,2023,1,https://github.com/MarcoManhaes/Estacionamento-Factory-Pattern
Singleton,Bookstore,"A Java based Bookstore that implements design patterns (Singleton, Abstract Factory, and Factory), data encryption, Object Oriented Principles, and file storage.  The application has a cart, user/admin controls, point systems, coupons and book purchasing.",1,0,2024,2024,1,https://github.com/SugenJey/Bookstore
Singleton,UI_Automation_Cucumber,"Automated testing of the OrangeHRM application, covering CRUD operations for five key scenarios: Verify CFO Name, Add, Read, Edit, and Delete Employee. Built a structured framework using Cucumber, POM, Extent Reports, WebDriverManager, and Singleton Design Pattern.",1,0,2025,2025,0,https://github.com/Ranjith862/UI_Automation_Cucumber
Singleton,WholeSaleMavenSpringConnectedJPA,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns and Spring Framework and Java Persistence API",1,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSaleMavenSpringConnectedJPA
Singleton,JavaScript,"Data Structures:Developed using Generics - 2D Arrays, Stacks, Queues, Dequeues, Ordered & Unordered Linked List, Object Orientated design: Strong understanding of OOP Concepts, Exception Design Handling and Proficient in Design Patterns such such as Singleton, Factory, DI, MVC",1,0,2019,2019,1,https://github.com/bekiran/JavaScript
Singleton,JavaPrograms,"Data Structures:Developed using Generics - 2D Arrays, Stacks, Queues, Dequeues, Ordered & Unordered Linked List, Object Orientated design: Strong understanding of OOP Concepts, Exception Design Handling and Proficient in Design Patterns such such as Singleton, Factory, DI, MVC",1,0,2019,2019,1,https://github.com/bekiran/JavaPrograms
Singleton,ZipCo-API-Challenge,"This is a coding project for Senior .NET Engineer at Zip Co, which contemplates a Web API in ASP.NET Core MVC C# using interfaces, design principle of inversion of control (IoC), singleton design pattern and more.",1,0,2022,2024,1,https://github.com/allexmmr/ZipCo-API-Challenge
Singleton,Food-App-,Android Food App for meals based on free API for meals . Able to use Material Design principles and components . ( MVP pattern - Retrofit2 – Butter Knife - ViewPager Adapters Fragment - Menu – Dialog - Recycler view adapter - Picasso Material Design – Intents – Singleton design pattern ),1,0,2019,2020,1,https://github.com/AhmedKhozam/Food-App-
Singleton,PolishStemmer,"Updated/New Stemmer project. Tried to focus on Singleton Design pattern and Executor multithreading method. If redone, I would change the order for sorting to improve speed - instead of searching for input in db, use db to mark words.",1,0,2018,2018,1,https://github.com/zursk19/PolishStemmer
Singleton,Trustwave-TechnicalTest,"This is a coding project for Senior Full Stack Developer at Trustwave, which contemplates a Subdomain API in ASP.NET Core MVC C# using Web API, interfaces, design principle of inversion of control (IoC), singleton design pattern and more.",1,0,2021,2021,2,https://github.com/allexmmr/Trustwave-TechnicalTest
Singleton,Turn-based-strategy-game," A Java/ Java Swing application that implements a turn-based strategy game with user authentication GUI • Players’ credentials and their characteristics were extracted from JSON files • Used design patterns such as Singleton, Factory, Builder and Visitor for the implementation",1,0,2023,2023,1,https://github.com/Indracatana/Turn-based-strategy-game
Singleton,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Singleton,ADO.NET-Simple-CRUD-App,"A database-first CRUD app implemented in a class library using Microsoft.Data.SqlClient & SQL Server,  Applying Singleton design pattern, and dependency injection, ready to be used in your application whether ASP.NET Core, Xamarin / .NET MAUI or WPF.",1,0,2024,2024,0,https://github.com/yussuf-codes/ADO.NET-Simple-CRUD-App
Singleton,dotNet5782_3723_8408,"Creating a management system of Drones, customer and charging stations while using three-layer architecture. The project includes: creating GUI while using WPF library, multithreading, working with XML files and design patterns such as: observer, contract, factory method and singleton.",1,0,2021,2024,2,https://github.com/pinskishira/dotNet5782_3723_8408
Singleton,TrainTicketReservationSystem-,"Train Ticket Reservation System: A Java application implementing a ticket reservation system for trains, featuring GUI interactions for viewing available seats, booking seats, and canceling bookings. Uses design patterns such as Singleton, MVC, and State for efficient and structured development.",1,0,2024,2024,2,https://github.com/Swathikone/TrainTicketReservationSystem-
Singleton,ProductOrderApi,"A sample ASP.NET Core Web API project demonstrating CRUD operations for managing products and orders using a repository pattern, Entity Framework Core for database operations, and a Singleton design pattern for logging. The project also includes Swagger for API documentation and testing.",1,0,2024,2024,1,https://github.com/TheNiyiRichard/ProductOrderApi
Singleton,online_store-app,"📚 🐘A web store (also online store, e-shop) can be described as a sales and communication-oriented website. This web application is created using HTML, CSS, JS, jQuery, PHP, OOP/PDO, MVC and Singleton Design Pattern, and abide to SOLID Principles. ",1,0,2023,2024,1,https://github.com/lexiscode/online_store-app
Singleton,Application_for_Kindergarden,"Developed a CRUD application in JavaFX using the DAO design pattern, MVC architecture for structured code organization, and the Singleton pattern for efficient resource management. Employed MySQL for the database backend and ensure application reliability through unit testing using JUnit and Mockito framework.",1,0,2022,2023,1,https://github.com/smakesoska1/Application_for_Kindergarden
Singleton,Pilacoin,"Develop a Web application preferably in Java, using design patterns already discussed in class, and during the course, such as DAO, MVC, Singletons, etc. The system to be developed is a Web interface for mining, validation, and management/transfer of pila coins.",1,0,2023,2024,1,https://github.com/Valentim-Gab/Pilacoin
Singleton,Online-Forum-Platform,"This Spring Boot-based platform integrates design patterns like Singleton, Builder, Factory, and Abstract Factory, with an H2 in-memory database for lightweight storage. It features a user-friendly interface and runs on port 8087, showcasing scalable and maintainable modern software engineering practices.",1,0,2024,2024,1,https://github.com/Ahmetaygun/Online-Forum-Platform
Singleton,SimpleNoteApp,"This is a simple note app that you can swipe to delete notes and undo them, SQLite used in this project In addition Adapter pattern and singleton design pattern used in this project. This is a simple app and definitely is under maintenance.Goodluck",1,0,2020,2022,0,https://github.com/aliemamalinezhad/SimpleNoteApp
Singleton,BookStoreApplication," Java and JavaFX-based Virtual Bookstore Application, showcasing advanced software engineering and design pattern integration, including Singleton, State, and Observer. This project features a secure login system, versatile book purchasing options, and admin controls, emphasizing both usability and educational value. It's a demonstration",1,0,2023,2024,5,https://github.com/Verifiedz/BookStoreApplication
Singleton,Hotel-Management-System,"A Hotel Management System built using C++ and Qt. The project allows users to select and book rooms of different types based on pricing, manage check-ins and check-outs, and track additional expenses. The Singleton Design Pattern is implemented for efficient resource management.",1,0,2025,2025,1,https://github.com/Oyku-hub/Hotel-Management-System
Singleton,emergency-center,"This is code that uses design patterns like singleton, composite and strategy in order to simulate the behavior of an emergency center. The emergency center has access to all the different sensors in all the different locations. Each location and have other sub-locations. ",1,0,2023,2024,1,https://github.com/louisevelayo/emergency-center
Singleton,CI533-CW-MiniStore-KyleBirch,"The miniStore is a Java-based retail system for managing products, transactions, and customer data. It uses OOP principles with design patterns like Factory and Singleton for scalability. The aim is to enhance functionality, refactor for maintainability, and demonstrate robust testing and documentation practices.",1,0,2024,2025,4,https://github.com/B007IRCH/CI533-CW-MiniStore-KyleBirch
Singleton,MMU-Simulator,"The application helps to understand how the memory management unit works. All the HW parts are presented by their analogs written in Java. Each process is presented by a separate thread. The project includes cache algorithms implementation (LRU, MRU, Random). Design patterns: Singleton, Observer, Strategy, MVC.",1,0,2019,2023,1,https://github.com/AndrewSergeev/MMU-Simulator
Singleton,Galaxy-Exploration-Simulator,"This galaxy exploration simulator can be ran in a linux terminal using the Eiffel Testing Framework, the game incorporates the singleton design pattern to allow only one instance of the simulation to be active at a given time and uses inheritance hierarchies for the necessary objects for efficient design",1,0,2020,2021,1,https://github.com/saadqamer/Galaxy-Exploration-Simulator
Singleton,JetTrivia,This Trivia application is developed using Jetpack Compose. The questions in JSON format are fetched from an API using the Retrofit library. The MVVM architecture is employed. Flow technology is utilized for data flow. Dependency Injection is implemented using the Hilt library. The Singleton Design Pattern is used.,1,0,2024,2024,1,https://github.com/muameh/JetTrivia
Singleton,Astronaut-Daily-Schedule-Organizer,"Astronaut Daily Schedule Organizer is a console-based app that manages tasks by adding, editing, viewing, and removing them, while ensuring no scheduling conflicts. It uses the Singleton, Factory, and Observer design patterns for task management and notifications. The app includes logging, error handling, and supports task prioritization.",1,0,2024,2024,1,https://github.com/SanjanaBasutkar/Astronaut-Daily-Schedule-Organizer
Singleton,Cinema-E-booking-System-,"Designed and developed a web-based application using React JS for the Frontend and Java Spring Boot for the Backend, and designed the database model using MySQL, ensuring efficient management of a theatre's movies and customers. Implemented a multi-layered architecture with Facade and Singleton design patterns, adhering to SOLID principles.",1,0,2024,2024,1,https://github.com/Ruchitha12/Cinema-E-booking-System-
Singleton,OOP-Design-Principles-For-Programmers,"The Object-Oriented Design Principles are the core of OOP programming, but I have seen most of the Java programmers chasing design patterns like Singleton pattern, Decorator pattern, or Observer pattern, and not putting enough attention on learning Object-oriented analysis and design.  It’s important to learn the basics of Object-oriented programming like Abstraction, Encapsulation, Polymorphism, and Inheritance. But, at the same time, it’s equally important to know object-oriented design principles.",1,0,2021,2022,1,https://github.com/lanaflonform/OOP-Design-Principles-For-Programmers
Singleton,hr_application,"This project follows the Singleton design pattern and Layered architecture. This project that I have developed in java contains so many things from interfaces to implementation of classes in different layers, creation of DTO, DAO classes, DAOException class, usage of JDBC and Swing to make the GUI for presentation layer. Programming this project given me a ultimate knowledge that I was not known about and also I realized how robust programming language java is.",1,0,2022,2024,1,https://github.com/deepaksharmacs19/hr_application
Singleton,GenericEA,"This EA tires to find the solution of a mathematical system that I invented at random. The important stuff is the design pattern organization. The EA tries to be very generic, allowing many different operators for crossover, mutation, selection and stop criteria to be implement using the Strategy Pattern. A factory method helps initializing the EA. And a singleton fixes the random for consistent tests. Also, the ScottPlot package helps us to create an image with the line plot of the evolution.",1,0,2021,2021,1,https://github.com/LeonardoTPereira/GenericEA
Singleton,Singleton,this repo contains singleton design pattern implementation using C#,0,40,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/Singleton
Singleton,tpv-exercise,"Usage of design patterns (abstract factory, strategy, builder, singleton)",0,41,2020,2022,1,https://github.com/iuresti/tpv-exercise
Singleton,lab-02,Lab 2: Singleton Design Pattern,0,14,2023,2024,1,https://github.com/cpit252/lab-02
Singleton,JavaSingleton,Singleton Design Pattern Lesson,0,5,2023,2023,1,https://github.com/SoftwareDesignPatternsCourse/JavaSingleton
Singleton,ITELEC2C-Lec1-Singleton,ITELECT2C Design Patterns,0,2,2018,2018,1,https://github.com/0v3rt1m3/ITELEC2C-Lec1-Singleton
Singleton,LibraryManagementSystem,Using State Design Pattern and Singleton Design Pattern on QT tool ,0,2,2020,2020,1,https://github.com/ayeshatahreem/LibraryManagementSystem
Singleton,JDBC2,Exemple - Architecture JDBC - Design Pattern DAO / Singleton,0,2,2018,2018,1,https://github.com/MichelSoko/JDBC2
Singleton,Singleton-php,Database connection with the help of Singleton design pattern (OOP),0,2,2013,2013,1,https://github.com/jijojohnx/Singleton-php
Singleton,pro_dotnet_design_pattern_framework-4.5," Design patterns are solutions to software design problems you find again and again in real-world application development. Patterns are about reusable designs and interactions of objects.  The 23 Gang of Four (GoF) patterns are generally considered the foundation for all other patterns. They are categorized in three groups: Creational, Structural, and Behavioral (for a complete list see below).  To give you a head start, the C# source code for each pattern is provided in 2 forms: structural and real-world. Structural code uses type names as defined in the pattern definition and UML diagrams. Real-world code provides real-world programming situations where you may use these patterns.  A third form, .NET optimized, demonstrates design patterns that fully exploit built-in .NET 4.5 features, such as, generics, attributes, delegates, reflection, and more. These and much more are available in our .NET Design Pattern Framework 4.5. You can see the Singleton page for a .NET 4.5 Optimized example. ",0,72,2017,2022,1,https://github.com/Sudarsan-Sridharan/pro_dotnet_design_pattern_framework-4.5
Singleton,Electric-Power-System,"C#, UML, CIM, WPF / Used design patterns: Observer, Prototype, Singleton, Command and MVC. More details in ""Project.docx"" and ""Documentation.odt""",0,3,2018,2019,1,https://github.com/Milica94/Electric-Power-System
Singleton,SingletonPattern,Design pattern,0,0,2024,2024,1,https://github.com/worknand/SingletonPattern
Singleton,Singleton2,Creational Design Pattern in C# | Singleton Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Singleton2
Singleton,Singleton,Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/Singleton
Singleton,Singleton,Creational Design Pattern in C# | Singleton Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Singleton
Singleton,SingletonDP,Singleton Design Pattern,0,0,2017,2017,0,https://github.com/shady-abdelhamid/SingletonDP
Singleton,SingletonDemo,Singleton Design Patterns,0,0,2022,2022,1,https://github.com/johanalex566/SingletonDemo
Singleton,Singleton-Design-Pattern,Creational Design Patterns: Singleton Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Singleton-Design-Pattern
Singleton,SingletonPattern,Java Design Patterns,0,0,2018,2018,1,https://github.com/balamanova/SingletonPattern
Singleton,SingletonPattern,Singleton design pattern.,0,0,2017,2017,0,https://github.com/MikMakMichael/SingletonPattern
Singleton,SingletonExample,Singleton design pattern,0,0,2020,2020,1,https://github.com/bhushan021193/SingletonExample
Singleton,SingletonDesignPattern,Singleton Design Pattern,0,0,2023,2023,0,https://github.com/SaidBenaissa/SingletonDesignPattern
Singleton,SingletonPatternAPI,singleton design pattern,0,0,2023,2023,1,https://github.com/triple93r/SingletonPatternAPI
Singleton,SingletonDesignPattern,Singleton Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/SingletonDesignPattern
Singleton,SingletonAndPrototype,Design Pattern HW,0,0,2020,2020,1,https://github.com/Hatuls/SingletonAndPrototype
Singleton,SingletonDesignPattern,Singleton Design Pattern,0,0,2018,2018,0,https://github.com/aa1994/SingletonDesignPattern
Singleton,singletonDesignPattern,singleton design pattern,0,0,2023,2023,1,https://github.com/CodenameOverlord/singletonDesignPattern
Singleton,SingletonDesignPattern,Singleton design pattern ,0,0,2020,2020,1,https://github.com/semihtr13/SingletonDesignPattern
Singleton,singleton,singleton design pattern,0,0,2022,2022,1,https://github.com/AbdulrahmanSoliman25/singleton
Singleton,Singleton,Design Patterns - Singleton,0,0,2023,2023,1,https://github.com/leoestocel/Singleton
Singleton,Singleton,Singleton Design Pattern,0,0,2016,2016,1,https://github.com/jpreese/Singleton
Singleton,Singleton,practice design pattern,0,0,2014,2014,1,https://github.com/ilovejs/Singleton
Singleton,singleton,Singleton Design Pattern,0,0,2019,2022,1,https://github.com/ifx-code/singleton
Singleton,Singleton,Design Patterns - Singleton,0,0,2020,2020,1,https://github.com/euygor/Singleton
Singleton,singleton,singleton design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/singleton
Singleton,Singleton,Singleton design pattern.,0,0,2018,2018,0,https://github.com/scyzeq/Singleton
Singleton,Singleton,Design pattern :: Singleton,0,0,2019,2019,1,https://github.com/onsaurav/Singleton
Singleton,singleton,design pattern singleton,0,0,2022,2022,1,https://github.com/prajwal070707/singleton
Singleton,Singleton,Design pattern Singleton,0,0,2017,2017,1,https://github.com/vitkozgit/Singleton
Singleton,Singleton,Design Pattern Singleton,0,0,2021,2021,1,https://github.com/aliounemane2/Singleton
Singleton,Singleton,Singleton Design Pattern,0,0,2020,2020,0,https://github.com/asimamjad/Singleton
Singleton,Singleton,Singleton design pattern,0,0,2022,2022,0,https://github.com/ppgiri/Singleton
Singleton,Singleton,Singleton- design pattern,0,0,2025,2025,1,https://github.com/MuhammadMuazAhmed/Singleton
Singleton,Singleton,Design Pattern Singleton,0,0,2017,2017,0,https://github.com/jawad-asad/Singleton
Singleton,Singleton,Design Pattern - Singleton,0,0,2022,2022,1,https://github.com/SteffyRoa/Singleton
Singleton,Singleton,Singleton Design Pattern,0,0,2023,2023,0,https://github.com/sreeja8/Singleton
Singleton,singleton,Singleton Design Pattern,0,0,2023,2023,1,https://github.com/feherstefan/singleton
Singleton,singleton,Singleton design pattern,0,0,2021,2021,1,https://github.com/joaocottabadaro/singleton
Singleton,Singleton-Pattern,Design Pattern,0,0,2022,2022,0,https://github.com/Azeemkhanu/Singleton-Pattern
Singleton,singleton-demo,design_pattern,0,0,2020,2020,1,https://github.com/LeonidWebDev/singleton-demo
Singleton,Singleton_Pattern,Design Pattern,0,0,2024,2024,1,https://github.com/Kani722/Singleton_Pattern
Singleton,DP_singleton,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_singleton
Singleton,homework_w6d3,Singleton design pattern,0,0,2017,2017,1,https://github.com/trizoza/homework_w6d3
Singleton,3week,Singleton design pattern ,0,0,2022,2022,1,https://github.com/MohammadSediqMansoor/3week
Singleton,Singleton-DesignPattern,Singleton Design Pattern,0,0,2024,2024,1,https://github.com/animeshjain2/Singleton-DesignPattern
Singleton,DesignPattern-Singleton,Singleton  Design Pattern,0,0,2017,2017,1,https://github.com/RishikeshGIT/DesignPattern-Singleton
Singleton,ios-tutorial-singleton,Singleton Design Pattern,0,0,2025,2025,1,https://github.com/EtonCollege-CS-A-Level/ios-tutorial-singleton
Singleton,Singleton-1,Singleton Design Pattern,0,0,2015,2022,1,https://github.com/sn3g14/Singleton-1
Singleton,singleton-pattern,Singleton design pattern,0,0,2017,2017,1,https://github.com/aka-danger/singleton-pattern
Singleton,Singleton-02,Singleton Design Pattern,0,0,2023,2023,0,https://github.com/ttoseeff/Singleton-02
Singleton,Project03,Singleton design pattern,0,0,2024,2024,1,https://github.com/vinnie95/Project03
Singleton,designPatternsSingleton,Singleton Design Pattern,0,0,2020,2020,1,https://github.com/ilkaypolat1985/designPatternsSingleton
Singleton,Generation41Singleton,Design pattern singleton,0,0,2020,2020,1,https://github.com/LuisGhz/Generation41Singleton
Singleton,Codigo-030---Jogo-de-Cartas,Design Pattern Singleton,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-030---Jogo-de-Cartas
Singleton,design-patterns-singleton,Singleton Design Pattern,0,0,2022,2022,1,https://github.com/astral-clive/design-patterns-singleton
Singleton,Singleton_Design_pattern,Singleton Design pattern,0,0,2024,2025,1,https://github.com/adi501/Singleton_Design_pattern
Singleton,training-task9, Design Patterns |  Singleton,0,0,2021,2021,1,https://github.com/maiqamaj/training-task9
Singleton,java-singleton,Singleton Design Pattern,0,0,2021,2021,1,https://github.com/wescleycaldeira/java-singleton
Singleton,pattern-singleton,Design Pattern Singleton,0,0,2018,2020,1,https://github.com/m1chellec/pattern-singleton
Singleton,design_pattern_singleton,Singleton Design Pattern ,0,0,2018,2018,1,https://github.com/sarwarsm/design_pattern_singleton
Singleton,DP_Singleton,Singleton design pattern,0,0,2017,2017,0,https://github.com/bsadiki/DP_Singleton
Singleton,padraodeprojeto-singleton,Design Pattern - Singleton,0,0,2020,2020,1,https://github.com/NaiaraSantoss/padraodeprojeto-singleton
Singleton,design-singleton,Design Pattern Singleton,0,0,2024,2024,1,https://github.com/sofiaclsantos/design-singleton
Singleton,Singleton-Design-Pattern,Singleton Design Pattern,0,0,2018,2018,1,https://github.com/MShahapure/Singleton-Design-Pattern
Singleton,Singleton-Pattern,Singleton Design Pattern,0,0,2021,2021,0,https://github.com/TharushaWijayabahu/Singleton-Pattern
Singleton,SingltonApi,singleton design pattern,0,0,2023,2023,0,https://github.com/SoranAhmadi/SingltonApi
Singleton,Aula08-Singleton,Singleton Design Pattern,0,0,2019,2019,1,https://github.com/FelipeDucheiko/Aula08-Singleton
Singleton,singletone,Singleton Design pattern,0,0,2022,2022,1,https://github.com/MdAsaduzzaman01/singletone
Singleton,dp-singleton,Design pattern - singleton,0,0,2023,2024,1,https://github.com/jiji-thecat/dp-singleton
Singleton,Singleton-Design-Pattern,Singleton Design Pattern,0,0,2024,2024,1,https://github.com/nishukundar/Singleton-Design-Pattern
Singleton,Design-Patterns-Singleton,Design Patterns – Singleton,0,0,2020,2020,1,https://github.com/lamboktulus1379/Design-Patterns-Singleton
Singleton,Hasanucarim,Singleton_Design_Pattern,0,0,2023,2023,1,https://github.com/Hasanucarim/Hasanucarim
Singleton,UserSettingsDemo,Singleton Design Pattern,0,0,2023,2023,1,https://github.com/EshanSingh-ES/UserSettingsDemo
Singleton,SingletonPattern,Head First Design Patterns,0,0,2015,2015,1,https://github.com/h4rib0/SingletonPattern
Singleton,SingletonJS,Singleton JavaScript Design Pattern,0,0,2019,2019,0,https://github.com/olegpi/SingletonJS
Singleton,SingletonDP,Implement Singleton Design Pattern,0,0,2024,2024,1,https://github.com/amit7678/SingletonDP
Singleton,Singleton-Pattern,Singleton Design Pattern,0,0,2021,2021,1,https://github.com/selimozcann/Singleton-Pattern
Singleton,Singleton-Dart,Design Pattern Singleton,0,0,2022,2022,1,https://github.com/ynrrizki/Singleton-Dart
Singleton,DesignPatterns_Singleton,Design Patterns Singleton,0,0,2022,2022,0,https://github.com/geanlima/DesignPatterns_Singleton
Singleton,TP_DesignP_Singleton,Design pattern singleton,0,0,2023,2023,1,https://github.com/Toudherth/TP_DesignP_Singleton
Singleton,JavaSingleton,Singleton Design Pattern,0,0,2024,2024,1,https://github.com/VictorEyeEagle/JavaSingleton
Singleton,Singleton-Design-Pattern,Singleton Design Pattern,0,0,2018,2019,1,https://github.com/ibavli/Singleton-Design-Pattern
Singleton,singleton-design-pattern,Design Pattern : Singleton,0,0,2018,2018,1,https://github.com/HarryFromSpace/singleton-design-pattern
Singleton,Design_pattern-SINGLETON,Design Pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-SINGLETON
Singleton,SingletonPractice,Head First Design Patterns,0,0,2021,2021,1,https://github.com/RyanCrowleyCode/SingletonPractice
Singleton,SingletonDesignPattern,Design Pattern in Java,0,0,2018,2018,0,https://github.com/oddman-reborn/SingletonDesignPattern
Singleton,SingletonDesignPattern,Singleton Design Pattern Örneği,0,0,2019,2019,1,https://github.com/umuteskitoglu/SingletonDesignPattern
Singleton,Observer-Singleton-DP,Improvement Observer Design Pattern adding Singleton Design Pattern,0,0,2025,2025,1,https://github.com/devjldp/Observer-Singleton-DP
Singleton,SingletoneDesignPattern,Реализация Design Pattern Singletone,0,0,2022,2022,1,https://github.com/mmarryll/SingletoneDesignPattern
Singleton,singleton,Singleton | Design Pattern | Go,0,0,2018,2018,1,https://github.com/jalbertocoder/singleton
Singleton,Singleton,The singleton design pattern,0,0,2017,2017,1,https://github.com/mhtmalpani/Singleton
Singleton,singleton,Singleton Creational Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/singleton
Singleton,Singleton,Singleton Design Pattern Homework,0,0,2020,2020,1,https://github.com/saracorreia07/Singleton
Singleton,Singleton,Singleton Design Pattern Learning,0,0,2022,2022,1,https://github.com/anraihan21/Singleton
Singleton,Singleton,Practicing singleton design pattern,0,0,2020,2020,1,https://github.com/Shendidy/Singleton
Singleton,singleton,Singleton design pattern implementation,0,0,2020,2020,2,https://github.com/rafamagalhas/singleton
Singleton,Singleton,Singleton design pattern implementation,0,0,2021,2021,1,https://github.com/artakabraham/Singleton
Singleton,singleton,Singleton design pattern example,0,0,2020,2020,1,https://github.com/felipevlourenco/singleton
Singleton,Singleton,Implementing Singleton Design Pattern,0,0,2021,2021,0,https://github.com/shubhamparasar/Singleton
Singleton,Singleton,singleton design pattern implementation,0,1,2015,2015,1,https://github.com/miskohut/Singleton
Singleton,Singleton,design Patterns in swift,0,0,2020,2020,1,https://github.com/officialyenum/Singleton
Singleton,Singleton,Design patterns exercise - Singleton,0,0,2020,2020,0,https://github.com/milicaklaric/Singleton
Singleton,SingletonDesignPatternTutorial,Singleton Design Pattern Tutorial,0,0,2019,2019,1,https://github.com/theguru06/SingletonDesignPatternTutorial
Singleton,Singleton-,Singleton  design pattern coding,0,0,2020,2020,0,https://github.com/sabyasachide/Singleton-
Singleton,Singleton_PHP,PDO Design Pattern,0,0,2018,2019,1,https://github.com/dosantosbjj/Singleton_PHP
Singleton,AP9-Builder-Singleton-Prototype,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/AP9-Builder-Singleton-Prototype
Singleton,mediator_singleton,Homework3_design_patterns,0,0,2021,2021,1,https://github.com/Diyana98/mediator_singleton
Singleton,SingletonDemo,Singleton Design Pattern Demo C#,0,0,2021,2021,1,https://github.com/arslanvirk/SingletonDemo
Singleton,singletonJava,Design Pattern - singleton in Java,0,0,2024,2024,2,https://github.com/KirinRyu/singletonJava
Singleton,SingletonDesignPattern,Singleton design pattern sample example,0,0,2018,2018,1,https://github.com/punamSynerzip/SingletonDesignPattern
Singleton,SingletonDesignPattern,LLD for Singleton Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/SingletonDesignPattern
Singleton,SingletonDesignPattern,Sample code singleton design pattern,0,0,2022,2022,1,https://github.com/sasikamiyuran/SingletonDesignPattern
Singleton,Uni-HW-Singleton,Design Patterns homework.,0,0,2024,2024,1,https://github.com/ElBookyes/Uni-HW-Singleton
Singleton,SingletonDesignPattern,Singleton design pattern using Java,0,0,2023,2023,0,https://github.com/FirozKumbla/SingletonDesignPattern
Singleton,Singleton-Design-Pattern,Learn Design Patterns,0,0,2023,2023,1,https://github.com/BimanGunarathne/Singleton-Design-Pattern
Singleton,SingletonJava,This code shows implementation of singleton design pattern using java as well as break singleton design pattern and prevent from breaking singleton design pattern,0,0,2023,2023,1,https://github.com/LasindaDilshan/SingletonJava
Singleton,Observer-Design-Pattern-Example---With-Singleton,Observer Design Pattern Example with Singleton design pattern.,0,0,2017,2018,1,https://github.com/AhmedEltorky/Observer-Design-Pattern-Example---With-Singleton
Singleton,design-pattern-singleton,Design pattern faculdade,0,0,2023,2023,1,https://github.com/munirarabi/design-pattern-singleton
Singleton,Singleton,Implementation of singleton design pattern,0,0,2022,2022,1,https://github.com/Ajay-Belgur/Singleton
Singleton,singleton,design patterns singleton on php,0,0,2021,2021,1,https://github.com/Lenar23/singleton
Singleton,Singleton,LLD Singleton Design Pattern examples,0,0,2025,2025,1,https://github.com/NagzCodz/Singleton
Singleton,Singleton,Sample of Singleton design pattern,0,0,2022,2022,1,https://github.com/EdgySantana/Singleton
Singleton,Singleton,Singleton Design Pattern using C#,0,0,2022,2023,1,https://github.com/Yusuf-Fakhreddin/Singleton
Singleton,Singleton,Aplicando o design pattern - Singleton,0,0,2023,2023,1,https://github.com/diegomaustem/Singleton
Singleton,Singleton,Menerapkan creational design pattern - Singleton,0,0,2024,2024,1,https://github.com/ridanurulafifah/Singleton
Singleton,dp-Singleton,Design Patterns 1 - Singleton,0,0,2022,2022,1,https://github.com/euaaron/dp-Singleton
Singleton,Singleton,ios singleton design pattern demo,0,0,2015,2015,1,https://github.com/XVXVXXX/Singleton
Singleton,singleton-design-pattern-example,singleton-design-pattern-example,0,0,2017,2017,1,https://github.com/DesignPatterns101/singleton-design-pattern-example
Singleton,php-singleton-trait,PHP singleton design pattern,0,0,2019,2019,2,https://github.com/w6cloud/php-singleton-trait
Singleton,design-patterns-singleton-pattern,Design Patterns Singleton Pattern,0,0,2022,2022,1,https://github.com/ysccodebase/design-patterns-singleton-pattern
Singleton,DP-Practice,singleton design pattern training ,0,0,2023,2023,0,https://github.com/rokskro/DP-Practice
Singleton,SingletonDesignPatternJS,singleton design pattern in javascript,0,0,2024,2024,1,https://github.com/bzamanbd/SingletonDesignPatternJS
Singleton,singleton,Design patterns / Creational patterns / Singleton,0,0,2023,2023,1,https://github.com/fortsm/singleton
Singleton,SingleTonDesignPatternExample,Singleton Design Pattern #MohitKumarJhariya,0,0,2017,2017,1,https://github.com/MohitKumarJhariya/SingleTonDesignPatternExample
Singleton,js-singleton-design-pattern, JavaScript Singleton Design Pattern,0,0,2020,2020,1,https://github.com/mohamedisakr/js-singleton-design-pattern
Singleton,DesignPatternMySingleTon,Design Pattern My SingleTon,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternMySingleTon
Singleton,singleton-pattern,Singleton design pattern example,0,0,2022,2022,0,https://github.com/gilmarsisjunior/singleton-pattern
Singleton,Singleton-design-pattern,Singleton design pattern Implementation,0,0,2023,2023,1,https://github.com/abdallah-7698/Singleton-design-pattern
Singleton,singleton-design-pattern,C# - Singleton design pattern.,0,0,2023,2023,1,https://github.com/flcristian/singleton-design-pattern
Singleton,DesignMonsterAssignment2,Design patterns - Singleton - Assignment,0,0,2025,2025,1,https://github.com/ciphercraftsman/DesignMonsterAssignment2
Singleton,DifferentAppraochToCreateSingletonDesignPattern,"Java, Singleton Design pattern",0,0,2020,2020,1,https://github.com/sanjeet7271/DifferentAppraochToCreateSingletonDesignPattern
Singleton,GenericSingleton-DesignPatterns,Generic Singleton Design Pattern,0,0,2023,2023,1,https://github.com/irfanSOLAK/GenericSingleton-DesignPatterns
Singleton,Singleton,Singleton Creational Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Singleton
Singleton,patterns-singleton,Singleton Design pattern example ,0,0,2022,2022,1,https://github.com/maksymyavorovych/patterns-singleton
Singleton,Pib_in_Pandas-Python,Design Pattern GoF: Singleton,0,0,2022,2022,1,https://github.com/Glrodrigo/Pib_in_Pandas-Python
Singleton,TemperatureConverter,using singleton design pattern,0,0,2024,2024,1,https://github.com/LayanAlfar0/TemperatureConverter
Singleton,Design-patterns,Singleton design pattern hk.,0,0,2021,2021,1,https://github.com/cihanKurban/Design-patterns
Singleton,dp-singleton,Singleton Design Pattern Sample,0,0,2023,2023,1,https://github.com/rodolfofajardo/dp-singleton
Singleton,DesignPatternSingleton,Implementação Design Pattern: Singleton,0,0,2023,2023,1,https://github.com/LuannaFSCamilo/DesignPatternSingleton
Singleton,vlspoljar_zadaca_1,"Design Patterns - SINGLETON, PROTOTYPE",0,0,2015,2015,1,https://github.com/vlspoljar/vlspoljar_zadaca_1
Singleton,ts_singleton,Singleton | Design Pattern | TypeScript,0,0,2018,2018,1,https://github.com/jalbertocoder/ts_singleton
Singleton,Singleton-in-JS,Practice design pattern singleton,0,0,2022,2022,0,https://github.com/domingo1021/Singleton-in-JS
Singleton,go-singleton-design-pattern,Singleton Design Pattern | Go,0,0,2023,2023,0,https://github.com/loxt/go-singleton-design-pattern
Singleton,Design-Patterns-Singleton,Singleton Design Pattern Example,0,1,2015,2015,1,https://github.com/canaslaner/Design-Patterns-Singleton
Singleton,design-patterns-singleton,C# Design Patterns: Singleton,0,0,2021,2023,1,https://github.com/jasarsoft/design-patterns-singleton
Singleton,csharp-signelton-pattern,csharp singleton design pattern,0,0,2022,2022,0,https://github.com/MarshalOfficial/csharp-signelton-pattern
Singleton,singleton-pattern,Design Pattern Sample - Singleton,0,0,2019,2021,1,https://github.com/u-bayram/singleton-pattern
Singleton,singleton-task,Tugas design pattern singleton,0,0,2024,2024,1,https://github.com/punkestu/singleton-task
Singleton,Singleton,Part 4 Creational Design Pattern ,0,0,2019,2019,1,https://github.com/AvinashKarada/Singleton
Singleton,singleton,Singleton Design Pattern with JAVA,0,0,2023,2023,1,https://github.com/Hll-ibrahim/singleton
Singleton,php-singleton,Implement singleton design pattern,0,0,2015,2015,2,https://github.com/petitchevalroux/php-singleton
Singleton,Java-Singleton-Design-Pattern,Java-Singleton-Design-Pattern,0,0,2021,2021,1,https://github.com/Docsconsole/Java-Singleton-Design-Pattern
Singleton,ScrabbleLetter,Singleton Design Pattern Example,0,0,2016,2016,1,https://github.com/xiuyiy/ScrabbleLetter
Singleton,DesignPattern,Singleton Design Pattern added,0,1,2014,2014,1,https://github.com/Inxroot/DesignPattern
Singleton,Singleton-Design-Patterns,singleton design pattern types,0,0,2021,2022,1,https://github.com/BekirGeris/Singleton-Design-Patterns
Singleton,java-singleton-design,Demonstrating singleton design pattern,0,0,2022,2022,1,https://github.com/maxwelbarno/java-singleton-design
Singleton,Unity-Singleton-Design-Pattern,Unity Singleton Design Pattern,0,0,2023,2024,1,https://github.com/adag21044/Unity-Singleton-Design-Pattern
Singleton,vlspoljar_zadaca_2,"Design Patterns - SINGLETON, COMPOSITE",0,0,2015,2015,1,https://github.com/vlspoljar/vlspoljar_zadaca_2
Singleton,typescript-singleton-pattern,Implement Singleton Design Pattern,0,0,2021,2021,1,https://github.com/wahyufeb/typescript-singleton-pattern
Singleton,Design_Patterns_Singleton_pattern,Design Patterns - Singleton pattern,0,0,2022,2022,1,https://github.com/prostatus123/Design_Patterns_Singleton_pattern
Singleton,Assignment-2-Singleton,Design patterns - Singleton - Assignment,0,0,2025,2025,1,https://github.com/CyberQueen11/Assignment-2-Singleton
Singleton,DesignPattern-SingletonUsingEnum,Singleton design pattern using Enum,0,0,2017,2017,1,https://github.com/RishikeshGIT/DesignPattern-SingletonUsingEnum
Singleton,singletonPattern,singleton design pattern example in java,0,0,2022,2022,1,https://github.com/eXquilla98/singletonPattern
Singleton,SingletonDemo,Singleton Design Pattern example - Tim Corey,0,0,2020,2020,1,https://github.com/IyadShobaki/SingletonDemo
Singleton,SingletonPattern,One of the Java design patterns,0,0,2016,2016,0,https://github.com/WY08271/SingletonPattern
Singleton,SingletonProject,Trying for first time design patterns,0,0,2018,2018,1,https://github.com/MarcBelmonte/SingletonProject
Singleton,SingletoneONE,Practicing the creational Design Pattern Singleton,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/SingletoneONE
Singleton,Singleton-Python,Atividade de Design Pattern,0,0,2022,2022,1,https://github.com/pedropeglow/Singleton-Python
Singleton,SingletonPattern,Patron de conception - Singleton - Design Pattern,0,0,2017,2017,0,https://github.com/BracketShow/SingletonPattern
Singleton,Singleton_metaclass,Design patterns exercise 1,0,0,2024,2024,1,https://github.com/arshi8294/Singleton_metaclass
Singleton,singleton_designpattern,my first design pattern,0,0,2019,2019,1,https://github.com/kapil4161/singleton_designpattern
Singleton,SingletonDesignPattern,Simple example of Singleton design pattern,0,0,2019,2019,1,https://github.com/theTaagung/SingletonDesignPattern
Singleton,SingletonDesignPattern,Explain Singleton Design Pattern in Android,0,0,2017,2017,1,https://github.com/shishirshivGitHub/SingletonDesignPattern
Singleton,SingletonDesignPattern,sample project for Singleton Design Pattern,0,0,2021,2021,0,https://github.com/camurahub/SingletonDesignPattern
Singleton,SingletonDesignPattern,Implementing Singleton Design Pattern in FileSystem,0,0,2015,2015,1,https://github.com/gdabli/SingletonDesignPattern
Singleton,SingletonDesignPattern,examples for single tone design patterns,0,0,2022,2022,1,https://github.com/AntoniusAtefGhaly/SingletonDesignPattern
Singleton,SingletonDesignPattern,Simple example of singleton design pattern,0,0,2019,2019,0,https://github.com/tubaM/SingletonDesignPattern
Singleton,DP_SingletonPattern,Small Project using Singleton Design Pattern.,0,0,2024,2024,1,https://github.com/iAmSidh108/DP_SingletonPattern
Singleton,singleton,Use of design pattern for studies,0,0,2023,2023,1,https://github.com/alvaro-veiga/singleton
Singleton,singleton-design-pattern,1. Creational design pattern,0,0,2021,2022,1,https://github.com/tashantukin/singleton-design-pattern
Singleton,Singleton,Guess Game (Singleton designed pattern practice),0,0,2020,2020,1,https://github.com/KorneliaJagodzinska/Singleton
Singleton,Singleton,Code to show Singleton design pattern,0,0,2020,2020,1,https://github.com/fermionboson101/Singleton
Singleton,singleton,Exemplo de padrão (Design Pattern) Singleton,0,0,2023,2023,1,https://github.com/proffernandotfernandes/singleton
Singleton,SingletonDesignPattern_QT, QT C++  Singleton Design Pattern Project,0,0,2025,2025,1,https://github.com/Oyku-hub/SingletonDesignPattern_QT
Singleton,SingletonAndVisitorPatterns,SSW 345 Homework 6 - Design Patterns,0,0,2023,2023,1,https://github.com/laureningy/SingletonAndVisitorPatterns
Singleton,Singletone-Design-Pattern,Java Singletone Design Pattern,0,0,2024,2024,1,https://github.com/Ajmayen27/Singletone-Design-Pattern
Singleton,Singleton-Design-Pattern,Design Patterns lecture materials,0,0,2023,2023,1,https://github.com/morawaliyadda/Singleton-Design-Pattern
Singleton,SingletonAbstaractDesignPattern,Singleton and Abstract Factory Design Pattern,0,0,2019,2019,0,https://github.com/nikhilpai007/SingletonAbstaractDesignPattern
Singleton,SingletonFactoryDesignPatterns,Singleton and the Factory Design Patterns,0,0,2020,2020,1,https://github.com/ong1995/SingletonFactoryDesignPatterns
Singleton,SingletonDesign,Implementation of Singleton Design Pattern in C++,0,0,2019,2019,1,https://github.com/bhupankarg/SingletonDesign
Singleton,SingletonPattern,Java implementation of the Singleton Design Pattern,0,0,2019,2019,1,https://github.com/dvcodetraining/SingletonPattern
Singleton,SingletonDesignPattern_Csharp_Example,simple singleton design pattern C# example,0,0,2023,2023,1,https://github.com/tofigf/SingletonDesignPattern_Csharp_Example
Singleton,SingletonEx,Singleton design pattern-Single and Multithread thread,0,0,2022,2022,0,https://github.com/SrivalliR/SingletonEx
Singleton,SingletonDP,Real world Sample of Singleton Design Pattern,0,0,2022,2022,0,https://github.com/ashens2000/SingletonDP
Singleton,Singleton-ptternDesign-Exercice,Entrzinement sur design pattern,0,0,2023,2023,1,https://github.com/akkramm00/Singleton-ptternDesign-Exercice
Singleton,DesignPatternsAssignment,Singleton,0,0,2022,2022,1,https://github.com/merttuncell/DesignPatternsAssignment
Singleton,SingletonConsoleApp,.NET Console app showing Singleton design pattern,0,0,2024,2024,1,https://github.com/edcsu/SingletonConsoleApp
Singleton,SingletonPattern_Demo,Simple example of a Singleton design pattern,0,0,2018,2018,1,https://github.com/RoninEngineer/SingletonPattern_Demo
Singleton,Observer-Singleton,First Use of Design Patterns,0,0,2024,2024,1,https://github.com/Claudel-D-Roy/Observer-Singleton
Singleton,singleton-pattern,design pattern: singleton pattern example,0,0,2023,2023,0,https://github.com/sephir80/singleton-pattern
Singleton,SingletonDesignPattern,A simple example using Singleton design pattern,0,0,2023,2023,1,https://github.com/yacinediaf/SingletonDesignPattern
Singleton,Singleton-Pattern,JAVA Singleton Pattern Design Pattern,0,0,2020,2020,1,https://github.com/Valthion/Singleton-Pattern
Singleton,ExercicioSingleton,Exemplos de Design Patterns - Singleton,0,0,2022,2022,1,https://github.com/MaxSouza88/ExercicioSingleton
Singleton,edp-singleton,Example of Design Patterns Singleton,0,0,2019,2019,1,https://github.com/RafaelAlmeidaDaSilva/edp-singleton
Singleton,patterns-singleton,Design patterns in C# (singleton),0,0,2019,2019,0,https://github.com/tiny-ghost/patterns-singleton
Singleton,ActSingleton,Unity C# - Singleton Design Pattern,0,0,2022,2022,1,https://github.com/AdilcanTopuz/ActSingleton
Singleton,SingletonDesignPattern,Example of singleton design pattern in Java.,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/SingletonDesignPattern
Singleton,cpp-singleton,c++ project : singleton design pattern,0,0,2019,2019,1,https://github.com/kevincwong6/cpp-singleton
Singleton,singleton-matlab,Singleton Design Pattern in MATLAB,0,0,2024,2024,1,https://github.com/mathworks/singleton-matlab
Singleton,SingletonDesignPattern,Simple Application to demonstrate Singletone design pattern,0,0,2020,2021,1,https://github.com/manjprabhu/SingletonDesignPattern
Singleton,DemoSingleton,Singleton Design Pattern in Java,0,0,2017,2017,1,https://github.com/anicetkeric/DemoSingleton
Singleton,hfdp-singleton,Head First Design Patterns : Singleton,0,0,2018,2020,1,https://github.com/fenwickjb/hfdp-singleton
Singleton,SingletonDesignPattern,Projeto simples implementando o Design Pattern Singleton,0,0,2018,2018,1,https://github.com/marcelloguimaraes/SingletonDesignPattern
Singleton,Singleton-Design-Pattern,Singleton Design Pattern in Java,0,0,2021,2021,1,https://github.com/Kensaigm/Singleton-Design-Pattern
Singleton,JavaDesignPatterns-Singleton,Singleton Design Pattern in Java,0,0,2016,2016,1,https://github.com/shailendra-singh-dev/JavaDesignPatterns-Singleton
Singleton,design-pattern-singleton,Example for singleton design pattern,0,0,2021,2021,1,https://github.com/skuppuraj/design-pattern-singleton
Singleton,Singleton-Design-Pattern,Example of Singleton Design Pattern.,0,0,2021,2021,1,https://github.com/kerimembel/Singleton-Design-Pattern
Singleton,acduman_SINGLETON_001,Singleton Design Pattern on ABAP,0,0,2023,2023,1,https://github.com/acduman/acduman_SINGLETON_001
Singleton,Singleton_SE_III,Design Patterns for creating singletons,0,0,2022,2022,1,https://github.com/Gotroenks/Singleton_SE_III
Singleton,ChocoBoiler,Design Patterns Workshop - Singleton Pattern,0,0,2022,2022,1,https://github.com/abitaaugustine/ChocoBoiler
Singleton,singleton-design-pattern,Singleton Design Pattern using Java,0,0,2023,2023,1,https://github.com/KathaSudharshan/singleton-design-pattern
Singleton,design-patterns,Design patterns in Java. Singleton,0,0,2023,2023,1,https://github.com/RuiJ72/design-patterns
Singleton,singleton,An example of a singleton design pattern,0,0,2023,2023,0,https://github.com/DenilsonNil/singleton
Singleton,StaticVsSingelton,Static vs Singleton Design Pattern,0,0,2019,2021,1,https://github.com/Punit002/StaticVsSingelton
Singleton,Singleton-Design-pattern,Implementation of Singleton Design Pattern,0,0,2022,2022,1,https://github.com/pasisham/Singleton-Design-pattern
Singleton,Simple-Calculator,Singleton Design Pattern in Java,0,0,2023,2023,1,https://github.com/AsadShafiq-MTO/Simple-Calculator
Singleton,Singleton-Design-Pattern,Singleton design pattern örneği tasarladım,0,0,2024,2024,1,https://github.com/yusufortacdeveloper/Singleton-Design-Pattern
Singleton,DesignPatterns01_Singleton,Design Patterns class one: Singleton,0,0,2014,2014,1,https://github.com/JavaSurface/DesignPatterns01_Singleton
Singleton,singleton,A simple Java Singleton design pattern example,0,0,2019,2019,1,https://github.com/kunupat/singleton
Singleton,ENSF480_LAB6,Example of Singleton Design Pattern,0,0,2018,2018,0,https://github.com/read247247/ENSF480_LAB6
Singleton,GaziOgrenci,"Katmanlı mimari, singleton design pattern",0,0,2024,2024,1,https://github.com/esradrk/GaziOgrenci
Singleton,Singleton_DesignPattern,Usage of singleton design pattern,0,0,2022,2022,0,https://github.com/hazeemcool/Singleton_DesignPattern
Singleton,Poa_TD1_Design-Patterns-Factory-Singleton,Design Patterns Factory et Singleton,0,0,2016,2016,0,https://github.com/benzait27/Poa_TD1_Design-Patterns-Factory-Singleton
Singleton,UG-singleton-java,Design Patterns homework: Singleton tasks,0,0,2021,2021,1,https://github.com/mrybarczyk/UG-singleton-java
Singleton,engComp.padroesDeProjeto.singleton,Singleton design pattern in java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.singleton
Singleton,Singleton-Design-Pattern,Creating a singleton design pattern.,0,0,2022,2022,1,https://github.com/RodolfoCorreiaNascimento/Singleton-Design-Pattern
Singleton,TD-Singleton-Factory,TD design pattern Factory Singleton,0,0,2017,2017,1,https://github.com/NaimBendjebbour/TD-Singleton-Factory
Singleton,FactoryMethod,Design Patterns Factory et Singleton,0,0,2016,2016,0,https://github.com/benzait27/FactoryMethod
Singleton,design-patterns,design patterns,0,0,2020,2020,1,https://github.com/alangiovannipolar-cloud/design-patterns
Singleton,ChocolateSingletonFactory,Singleton Design Pattern - implementation/practice,0,0,2018,2018,1,https://github.com/bwielk/ChocolateSingletonFactory
Singleton,laravel-sigleton-design-pattern,Laravel Singleton Design Pattern Tutorial,0,0,2023,2023,1,https://github.com/BabakNiknejad/laravel-sigleton-design-pattern
Singleton,singleton_rpl2a,Tugas DPL2 - Design Pattern Singleton,0,0,2024,2024,1,https://github.com/bedebangbang/singleton_rpl2a
Singleton,DesignPattern_Sigleton,Implementation of Singleton Design Pattern,0,0,2024,2024,1,https://github.com/MukeshSagarZkr/DesignPattern_Sigleton
Singleton,Singleton-In-Kotlin,example for singleton design pattern,0,0,2020,2020,1,https://github.com/AhmedMEl/Singleton-In-Kotlin
Singleton,OODdesign_Java,"Design Patterns: builder, factory, singleton ...",0,0,2020,2020,1,https://github.com/jingjingliao/OODdesign_Java
Singleton,singleton-design-pattern,Singleton design pattern for CSCE247,0,0,2021,2021,1,https://github.com/bjr0421/singleton-design-pattern
Singleton,Java-Singleton-Pattern,Java Design Pattern(Singleton Pattern),0,0,2022,2022,1,https://github.com/Tpsunshine/Java-Singleton-Pattern
Singleton,Singleton_Design_Pattern,Code for Singleton design pattern,0,0,2023,2023,1,https://github.com/uday8247/Singleton_Design_Pattern
Singleton,Singleton-Design-Pattern,Demonstration of singleton design pattern,0,0,2024,2024,1,https://github.com/vijayrao97/Singleton-Design-Pattern
Singleton,design-pattern_tp1,"Design-pattern: tp1, Composite & Singleton",0,0,2019,2019,0,https://github.com/RoscaS/design-pattern_tp1
Singleton,DesignPattern-Singleton,Test of Singleton Design Pattern,0,0,2020,2020,1,https://github.com/FerrazFerrara/DesignPattern-Singleton
Singleton,Java_Design_Pattern,Singleton under Creation Design Pattern,0,0,2021,2021,1,https://github.com/drStrange221B/Java_Design_Pattern
Singleton,TDE-Poo,Projeto utilizando design patterns singleton,0,0,2021,2021,1,https://github.com/DehDelfino/TDE-Poo
Singleton,IS-Lez-2,Esempi di design pattern Singleton,0,0,2023,2023,1,https://github.com/e-tramontana/IS-Lez-2
Singleton,singleton-design-pattern,singleton-design-pattern for LaraStack,0,0,2023,2023,1,https://github.com/LaraPlayGround/singleton-design-pattern
Singleton,sdp_1a,Singleton and Strategy design patterns,0,0,2023,2023,1,https://github.com/shajnimak/sdp_1a
Singleton,singleton,An introduction to the Singleton design pattern,0,0,2023,2023,1,https://github.com/fansforflorida/singleton
Singleton,Singleton,Some implementations of the Singleton design pattern,0,0,2012,2014,1,https://github.com/abrahamkoshy/Singleton
Singleton,Singleton-Design-Pattern,Usage of Singleton Design Pattern.,0,0,2017,2017,1,https://github.com/ebrgh12/Singleton-Design-Pattern
Singleton,copyOfConanTheCSharpian,C# Design patterns Singleton Pattern,0,0,2020,2020,1,https://github.com/HenLovelyBird/copyOfConanTheCSharpian
Singleton,Design-Patterns-Example,"Singleton, Factory, Facade Design Patterns",0,0,2021,2021,1,https://github.com/mlevanduski/Design-Patterns-Example
Singleton,Design-Pattern-Singleton-Configuration,Singleton Design Pattern with React,0,0,2024,2024,1,https://github.com/MylesJMoore/Design-Pattern-Singleton-Configuration
Singleton,singleton,Example implementation of the Singleton design pattern,0,0,2024,2024,1,https://github.com/DavidCabaniuk/singleton
Singleton,singleton,To learn singleton design pattern in Java,0,0,2025,2025,1,https://github.com/pumbatimon473/singleton
Singleton,SingletonJM,Aprendendo o design pattern Singleton no java :D,0,0,2023,2023,1,https://github.com/bem343/SingletonJM
Singleton,DesignPattern_Singleton,Exemplo de Design Pattern Sigleton,0,0,2020,2020,0,https://github.com/AndersonSilvaIt/DesignPattern_Singleton
Singleton,dpcreate-singletone_webformyself,Creational DESIGN PATTERNS: Singletone( Antipattern ),0,0,2021,2021,1,https://github.com/mslobodyanyuk/dpcreate-singletone_webformyself
Singleton,tdFactorySingleton,TD sur les Design Patterns,0,0,2016,2016,1,https://github.com/Jmedjid/tdFactorySingleton
Singleton,SingletonDP,Singleton Design Pattern Example in Dot Net Core,0,0,2020,2020,0,https://github.com/devudevesh/SingletonDP
Singleton,SingletonDemo,My representation of the GoF Singleton design pattern.,0,0,2018,2018,1,https://github.com/j-runser/SingletonDemo
Singleton,Threat-Safe-SingletonDesignPattern,Implemention of thread safe singleton design pattern . ,0,0,2022,2022,1,https://github.com/lilmahyar/Threat-Safe-SingletonDesignPattern
Singleton,SingletonCards,This repository covers the design pattern called Singleton.,0,0,2019,2019,1,https://github.com/terryjohnson901/SingletonCards
Singleton,SingletonByDesignPatternCpp,Singleton sample program (C++) by design pattern,0,0,2021,2021,1,https://github.com/kazumasa-kusaba/SingletonByDesignPatternCpp
Singleton,SingletonDesignPattern,Java Code displaying use of singleton design pattern.,0,0,2019,2019,1,https://github.com/divijshrivastava/SingletonDesignPattern
Singleton,SingletonPattern-Traversy,Practice project with the design pattern of Singleton,0,0,2021,2021,1,https://github.com/sonsolyom/SingletonPattern-Traversy
Singleton,SingletonDesignPattern,Singleton Design Pattern in C#. File Logger Example.,0,1,2014,2014,1,https://github.com/wcadap/SingletonDesignPattern
Singleton,SingletonDesignPattern,This is a singleton design pattern (lazy intialisation),0,0,2023,2023,1,https://github.com/prateekdahiya38/SingletonDesignPattern
Singleton,Java-SingletonDemo-,This repository describes the singleton design pattern demonstration and it also describes the recommended approach for the singleton design pattern.,0,0,2019,2019,1,https://github.com/praveenjayachandrappa/Java-SingletonDemo-
Singleton,Singleton-Pattern,Singleton Design Pattern Implementation by Java,0,0,2020,2020,1,https://github.com/Mamun-Al-Babu-Shikder/Singleton-Pattern
Singleton,SingleTone,Лекционная задача: реализация Design Pattern SingleTone,0,0,2022,2022,1,https://github.com/lananek/SingleTone
Singleton,Singletons-Unity,Learning singleton design pattern in unity,0,0,2023,2023,1,https://github.com/SanthushaMunasinghe/Singletons-Unity
Singleton,singleton-example,contoh implementasi singleton design pattern php,0,0,2022,2023,1,https://github.com/dhenfie/singleton-example
Singleton,JDBC-Singleton,JDBC connection using singleton design pattern,0,0,2024,2024,1,https://github.com/Mohamedhamed58/JDBC-Singleton
Singleton,SnakeSingleton,Snake Game Using Singleton Design Pattern,0,1,2025,2025,1,https://github.com/JessIsaac/SnakeSingleton
Singleton,designpatterns-singleton,C# Demo for Singleton Design Pattern,0,0,2023,2023,1,https://github.com/marcospauloz/designpatterns-singleton
Singleton,singleton,This included how to apply singleton design pattern,0,0,2022,2022,1,https://github.com/dilan-sachintha97/singleton
Singleton,Singleton_php,Singleton Design pattern With PHP OOP,0,0,2022,2022,1,https://github.com/Jabed2/Singleton_php
Singleton,singleton-pattern,A demo of Singleton Design Pattern,0,1,2014,2014,1,https://github.com/abhishek08aug/singleton-pattern
Singleton,SingletonDesignPattern,Discussed the implementation of Singleton Design Pattern using Java | Early Instantiation | Lazy Instantiation | Serialization and Synchronization in Singleton Design Pattern,0,0,2022,2022,1,https://github.com/classical-coding/SingletonDesignPattern
Singleton,Singleton-Pattern,Singleton Design Pattern written in Java,0,0,2015,2015,0,https://github.com/dconey646/Singleton-Pattern
Singleton,singleton-pattern,Implementation by Java script (Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/singleton-pattern
Singleton,cpp-singleton,CPP Object Oriented - Singleton Design Pattern,0,0,2014,2014,0,https://github.com/praswicaksono/cpp-singleton
Singleton,DesignPatterns,"Builder , factory , Singleton",0,0,2021,2021,1,https://github.com/sharmaashish54/DesignPatterns
Singleton,Singleton,Sample implementations of Singleton design pattern in C#,0,0,2022,2022,1,https://github.com/marcin-jurasz-sft/Singleton
Singleton,Singleton,Practical example of the software design pattern - Singleton,0,0,2019,2019,1,https://github.com/fernandohbrasil/Singleton
Singleton,JavaScript-Design-Patterns,"All Design Patterns with example code - ProtoType Design Pattern, Class design pattern, singleton design pattern, callbacks, factory design pattern, Abstract Factory Design pattern, mixin, modules, design pattern, Modules, Design Pattern",0,0,2019,2019,1,https://github.com/amirkhan064/JavaScript-Design-Patterns
Singleton,Singleton,Simple application that shows the singleton design pattern,0,0,2018,2018,1,https://github.com/kalathiln/Singleton
Singleton,Singleton,A custom logger demonstrating the Singleton Design Pattern.,0,0,2022,2022,0,https://github.com/sid-tiw/Singleton
Singleton,SingletonDesignPatternCSharp,The implementation of Singleton Design Pattern in C#,0,0,2024,2024,1,https://github.com/HassanQayyum1993/SingletonDesignPatternCSharp
Singleton,Singleton,An implementation of singleton design pattern via C#,0,0,2023,2023,1,https://github.com/handsomesnail/Singleton
Singleton,DesignPatterns,"Singleton, Factory Patter",0,0,2023,2023,1,https://github.com/aman-gill22/DesignPatterns
Singleton,SingletonExample,A few example uses for the singleton design pattern,0,0,2018,2018,0,https://github.com/vifs-vestige/SingletonExample
Singleton,SingletonPattern,Example for making Singleton Design Pattern with multiple ways,0,1,2019,2019,2,https://github.com/abhishekgem84/SingletonPattern
Singleton,SingletonPattern,This repo is an example of Singleton design pattern ,0,0,2017,2017,0,https://github.com/seaniemc/SingletonPattern
Singleton,DesignPatterns_chapter-5,Singleton pattern,0,0,2015,2015,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-5
Singleton,singletondesignpattern,This is a design pattern called singleton.,0,0,2022,2022,1,https://github.com/balensphillip/singletondesignpattern
Singleton,SingletonDP,Console App used to implement the Singleton Design Pattern,0,0,2024,2024,1,https://github.com/ShahdElhlwaney/SingletonDP
Singleton,SingletonDP,simple way to implement singleton design pattern in java,0,0,2018,2018,0,https://github.com/GharbiAyoub/SingletonDP
Singleton,SingletonExample,A simple example of using the Singleton Design Pattern.,0,0,2020,2020,0,https://github.com/elivesay2000/SingletonExample
Singleton,SingletonDemo,This is a demo for implement singleton design pattern,0,0,2022,2022,1,https://github.com/WalidMoheyEldin/SingletonDemo
Singleton,Singleton-Design-pattern,program with using singleton design pattern,0,0,2023,2023,0,https://github.com/TejaGudivada47/Singleton-Design-pattern
Singleton,Multi-Thread-Singleton,Multi Thread Design Pattern Singleton synchronized ,0,0,2023,2023,0,https://github.com/KhaledSARRAJ/Multi-Thread-Singleton
Singleton,Singleton-Design-pattern,"Singleton design pattern , Implementation with JavaScript ",0,0,2019,2019,0,https://github.com/Qasmi2/Singleton-Design-pattern
Singleton,DesignPatterns-Singleton,Singleton design pattern example in C#,0,0,2023,2023,0,https://github.com/MehranLabour/DesignPatterns-Singleton
Singleton,Singleton-Design-Pattern,Singleton Design Pattern using various methods,0,0,2018,2018,1,https://github.com/pritesh899/Singleton-Design-Pattern
Singleton,singleton-design-pattern,Singleton design pattern implementation in Java,0,0,2024,2024,1,https://github.com/williamfisher9/singleton-design-pattern
Singleton,singletondp,Various ways to implement Singleton Design Pattern,0,0,2015,2015,1,https://github.com/ananda-chintalapati/singletondp
Singleton,Design_Pattern_Singleton,Singleton Design Pattern Samples By Java,0,0,2021,2021,1,https://github.com/pedramkarevan/Design_Pattern_Singleton
Singleton,Singleton_Saturday-course,"Design Pattern ""Singleton"" For Saturday Course",0,0,2023,2023,1,https://github.com/kitakazex/Singleton_Saturday-course
Singleton,Singleton-and-Python,Using Design pattern - Singleton in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Singleton-and-Python
Singleton,DesignPatterns.SingletonPattern,,0,0,2024,2024,0,https://github.com/gelenyusuf/DesignPatterns.SingletonPattern
Singleton,SingletonDemoProject,It's about how to use singleton design pattern,0,0,2020,2020,1,https://github.com/lvbeauty/SingletonDemoProject
Singleton,SingletonDP-Repo,This repo contains how to create singleton design pattern,0,0,2021,2021,1,https://github.com/mndspc/SingletonDP-Repo
Singleton,SingletonDesignPattern,This is the demo of Singleton design pattern class,0,0,2020,2025,1,https://github.com/himanshuKhare30071992/SingletonDesignPattern
Singleton,Design-Patterns,Singleton design pattern implementation with C#,0,0,2021,2021,0,https://github.com/Mutshidzii/Design-Patterns
Singleton,CS-230_Portfolio,Backend prototype: using singleton design pattern,0,0,2021,2024,1,https://github.com/Formtrix/CS-230_Portfolio
Singleton,ses-patterns-singleton-template,Software Engineering Skills Design Patterns: Singleton,0,0,2019,2021,1,https://github.com/KULeuven-Diepenbeek/ses-patterns-singleton-template
Singleton,go-singleton-design-pattern,golang with singleton design pattern example,0,0,2025,2025,1,https://github.com/giofahreza/go-singleton-design-pattern
Singleton,SingletonDesignPattern,a sample implementation of Singleton Design Pattern in C#.,0,0,2020,2020,1,https://github.com/emrakin/SingletonDesignPattern
Singleton,Backend-Api-Main-Singleton,Backend Api Main Singleton Design Pattern,0,0,2023,2023,1,https://github.com/ekremcv/Backend-Api-Main-Singleton
Singleton,Singleton-design-pattern-exaple,How to implement singleton design pattern ,0,0,2024,2024,2,https://github.com/iamravimane/Singleton-design-pattern-exaple
Singleton,servlets-and-database,"singleton design pattern,servlets database connectivity",0,0,2016,2016,1,https://github.com/radhika84/servlets-and-database
Singleton,ProjectGlossary,Singleton and Multiton design pattern examples,0,0,2021,2021,1,https://github.com/fanimator12/ProjectGlossary
Singleton,Design-Patterns,"Singleton, Factory and MVC design patterns",0,0,2018,2018,1,https://github.com/Ghousiah/Design-Patterns
Singleton,Exercises_design_patterns_Deel_1_ABerns,"design patterns: decorator, factorydesign and singleton",0,0,2023,2023,1,https://github.com/AlinaBerns/Exercises_design_patterns_Deel_1_ABerns
Singleton,Observer-Pattern-mit-Singleton,Observer Design Pattern mit Singleton Pattern,0,0,2024,2024,1,https://github.com/norakertesz/Observer-Pattern-mit-Singleton
Singleton,tuto_pettern_singleton_prototype,Tutorial Design Pattern Singleton et Prototype,0,0,2023,2023,0,https://github.com/RachidSAOUDI/tuto_pettern_singleton_prototype
Singleton,UserDatabase,Test case for Singleton design pattern,0,0,2024,2024,1,https://github.com/Sbedoyab99/UserDatabase
Singleton,software-design-and-architectures,"Design patterns: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/oblakov0372/software-design-and-architectures
Singleton,php-design-patterns-singleton,PHP Design Patterns - Singleton Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-singleton
Singleton,design_patterns_1,"Creational design patterns: Singleton, Factory, Builder.",0,0,2021,2021,1,https://github.com/elvinvaliyev/design_patterns_1
Singleton,python-logger,python logger with singleton design pattern,0,0,2023,2023,1,https://github.com/prrathnayake/python-logger
Singleton,AP_HW4_A2,Singleton and Decorator Design pattern implementation,0,0,2024,2024,1,https://github.com/Kiarash-Sanei/AP_HW4_A2
Singleton,My-first-Singleton-at-GitHub,This is a Singleton design pattern,0,0,2019,2019,0,https://github.com/samuelvazcal/My-first-Singleton-at-GitHub
Singleton,cd_event_handler_singleton_pattern,#CodeDrops - Design Patterns - Singleton & Class Instance,0,0,2020,2020,1,https://github.com/eliabecardoso/cd_event_handler_singleton_pattern
Singleton,js-designPattern-singleton,an implementation of singleton design pattern,0,0,2021,2021,1,https://github.com/duruofei930704/js-designPattern-singleton
Singleton,designPatterns,"Adapter, Factory, Facade, Singleton",0,0,2020,2020,1,https://github.com/serozhkohannaa/designPatterns
Singleton,goSingletonDesignPattern,The Singleton design pattern in Go,0,0,2020,2020,1,https://github.com/irisida/goSingletonDesignPattern
Singleton,DesignPattern,Simple Singleton and Factory design patterns,0,0,2019,2019,1,https://github.com/hcarrillo001/DesignPattern
Singleton,CSharpDesignPatterns_Singleton,Singleton design pattern example in C#,0,0,2022,2023,1,https://github.com/ProjectPannonia/CSharpDesignPatterns_Singleton
Singleton,SuMa_3_Teh_Singleton,Suunnittelumallit 3. tehtävä Singleton design pattern,0,0,2023,2023,1,https://github.com/mohammja/SuMa_3_Teh_Singleton
Singleton,DesignPatterns,"Singleton, MVVM, Depencency Injection",0,0,2021,2021,0,https://github.com/pointh/DesignPatterns
Singleton,Matching-Engine,Matching Engine with Singleton design pattern,0,0,2022,2022,1,https://github.com/StanfordDC/Matching-Engine
Singleton,ABC_Spares,WPF app with Singleton design pattern,0,0,2021,2021,1,https://github.com/justintbailey/ABC_Spares
Singleton,app-singleton,JavaFX application example with design pattern Singleton,0,0,2020,2020,1,https://github.com/TheJamylle/app-singleton
Singleton,singleton-pattern,Atividade de estudo do Design Pattern Singleton,0,0,2023,2024,1,https://github.com/hgpdev013/singleton-pattern
Singleton,Singleton,Example of the Creational design pattern Singelton in Java.,0,0,2016,2016,1,https://github.com/levyoav/Singleton
Singleton,friendshouse-javasSwing-sql,I use MVC & singleton design pattern,0,0,2022,2022,1,https://github.com/tajul-islam-refath/friendshouse-javasSwing-sql
Singleton,AppSingleton,An example of the singleton design pattern,0,0,2023,2023,1,https://github.com/jramaral/AppSingleton
Singleton,golang_singleton,Example Singleton design pattern implement with Go,0,0,2023,2023,1,https://github.com/peternguyen287/golang_singleton
Singleton,singleton-pattern,Exeplo desenvolvido para estudo de design patterns.,0,0,2024,2024,1,https://github.com/LucasSalesMoreira/singleton-pattern
Singleton,MusicPlayer,Music player in Singleton design pattern,0,0,2019,2019,0,https://github.com/drnchrstn/MusicPlayer
Singleton,design-p-tterns,utilisation du design patterns et singleton,0,0,2023,2023,1,https://github.com/akkramm00/design-p-tterns
Singleton,singleton-pattern,This repository about implementing Singleton Design Pattern  ,0,0,2025,2025,1,https://github.com/MahmoudEL-Afandy/singleton-pattern
Singleton,Singleton,An implementation of the Singleton Design Pattern in C++,0,0,2017,2017,1,https://github.com/edkaresli/Singleton
Singleton,DesignPatterns,Singleton and Builder Pattern,0,0,2019,2019,0,https://github.com/thamlat-zz/DesignPatterns
Singleton,singleton-pattern,example of singleton design pattern in c#,0,0,2021,2021,1,https://github.com/sewwandikarunarathna/singleton-pattern
Singleton,learnSingleton,Singleton design pattern using C sharp .NET,0,0,2022,2022,1,https://github.com/suryanbs/learnSingleton
Singleton,Fila-Singleton,Atividade Design Patterns - Singleton (FATEC Rubens Lara),0,0,2023,2023,1,https://github.com/gustavocampelo/Fila-Singleton
Singleton,Singleton-Designpattern,A simple example of Singleton-Design Pattern,0,0,2019,2019,1,https://github.com/HassanOlfat/Singleton-Designpattern
Singleton,SingletonDP,This is an example codes implemented by Singleton Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/SingletonDP
Singleton,DatabaseSingleton,Challenge: Database Connection and Singleton Design Pattern,0,0,2024,2024,1,https://github.com/wild-code-school-projects/DatabaseSingleton
Singleton,singletonPattern,This is an example of Singleton Design Pattern in JAVA,0,0,2023,2024,1,https://github.com/ClarkBelen/singletonPattern
Singleton,mk-dp-singleton,This repository show how to implement singleton design pattern. This is a part of design pattern project. ,0,0,2019,2021,1,https://github.com/rmikaia/mk-dp-singleton
Singleton,Tic-Tac-Toe_With_SingletonDesignPattern,Tic-Tac-Toe game With Singleton Design Pattern,0,0,2024,2024,1,https://github.com/CplusplusAnkit/Tic-Tac-Toe_With_SingletonDesignPattern
Singleton,Singleton_DP,Experimental Singleton Design Pattern with Meyer's singleton implementation,0,0,2022,2022,1,https://github.com/dhaval491/Singleton_DP
Singleton,DesignPatterns-Java-SingletonPattern,,0,0,2024,2024,1,https://github.com/evazquezm/DesignPatterns-Java-SingletonPattern
Singleton,SingletonDesignPattern,This project demonstrate how to use design pattern while implementation,0,0,2021,2021,1,https://github.com/kohi-samy/SingletonDesignPattern
Singleton,django-singleton-example,Singleton design pattern implementation on Django project,0,0,2020,2020,1,https://github.com/bigusef/django-singleton-example
Singleton,Singletonpattern,This is my POC for Singleton Design pattern,0,0,2023,2023,0,https://github.com/NaveenKV494/Singletonpattern
Singleton,singleton-desing-pattern,Example implementation of the singleton design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/singleton-desing-pattern
Singleton,Singleton-Design-Pattern,Implementation of Singleton Design pattern in java,0,0,2015,2015,1,https://github.com/bkrockx/Singleton-Design-Pattern
Singleton,DataGen.Singleton,Generic template for implementing Singleton Design Pattern.,0,0,2016,2016,1,https://github.com/DataGenSoftware/DataGen.Singleton
Singleton,DesignPatternSingleton,An example of using design pattern Singleton,0,0,2020,2020,1,https://github.com/thiennguyenhieu/DesignPatternSingleton
Singleton,singleton-design-pattern,Singleton Design Pattern with 4 different ways,0,0,2024,2024,1,https://github.com/ketulpatel03/singleton-design-pattern
Singleton,Design_patterns,"Singleton, ",0,0,2018,2020,1,https://github.com/PiotrKowandy/Design_patterns
Singleton,JPA-Heritage-Singleton,Singleton design pattern and JPA with Heritage,0,0,2017,2017,1,https://github.com/JvitorNery/JPA-Heritage-Singleton
Singleton,Memento_Prototype_Singleton,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/Memento_Prototype_Singleton
Singleton,SingletonDesignPattern,Various implementations of Singleton Design Pattern along with use cases.,0,0,2025,2025,1,https://github.com/kriti-kmishra/SingletonDesignPattern
Singleton,ECCS_2411_Singleton_LoginManager_NHagerdorn,A demonstration of the GoF's Singleton design pattern for ECCS 2411 Software Design Patterns,0,0,2020,2020,1,https://github.com/N-Hagerdorn/ECCS_2411_Singleton_LoginManager_NHagerdorn
Singleton,Singleton-Design-Pattern,My Personal learning material on Design Patterns ,0,0,2017,2017,1,https://github.com/sujith597/Singleton-Design-Pattern
Singleton,Exercise45Rest,"Complete CRUD with Factory design pattern, DAO design pattern and Singleton pattern",0,0,2019,2019,1,https://github.com/OcarinGit/Exercise45Rest
Singleton,Singleton_synchronized_approach,An implementation Singleton design pattern synchronized approach.,0,0,2023,2023,1,https://github.com/vladdubceac/Singleton_synchronized_approach
Singleton,gat-singleton-starter,Code Repository for GAT Design Patterns Workshop,0,0,2017,2017,1,https://github.com/arjun-rao/gat-singleton-starter
Singleton,design-patterns,Recreating design patterns,0,0,2021,2022,1,https://github.com/zsomborjoel/design-patterns
Singleton,Design-patterns,Singleton,0,0,2021,2021,1,https://github.com/Amlet86/Design-patterns
Singleton,singletonPatternExample,This repository contains a basic example of singleton design pattern,0,0,2018,2018,0,https://github.com/GauravKumarQA/singletonPatternExample
Singleton,Humber-Design-Pattern-Lab2-C-Sharp,This lab activity is for Singleton Design Pattern and Prototype Design Pattern,0,0,2025,2025,1,https://github.com/Gurjit211/Humber-Design-Pattern-Lab2-C-Sharp
Singleton,Singleton-lazy-initialization,"A Singleton design pattern ""lazy initialization"" example",0,0,2023,2023,1,https://github.com/vladdubceac/Singleton-lazy-initialization
Singleton,Design-Pattern-Singleton,Implementation of singleton design pattern using C#,0,0,2020,2022,0,https://github.com/AntarikshVerma/Design-Pattern-Singleton
Singleton,DESIGN_PATTERN_Singleton, Source code demo cho Design Pattern Singleton,0,0,2020,2020,1,https://github.com/mirushi/DESIGN_PATTERN_Singleton
Singleton,singleton-card-game,Card game using the singleton design pattern.,0,0,2022,2022,2,https://github.com/umaryusuf11/singleton-card-game
Singleton,QT_SeleniumProject,"sample selenium project with selenium design pattern, helper method , singleton Design pattern ",0,0,2025,2025,1,https://github.com/SHIVAM7208/QT_SeleniumProject
Singleton,singleton,A simple design pattern for a singleton class in javascript,0,0,2019,2019,1,https://github.com/coryjamescrook/singleton
Singleton,DesignPatterns,"DP like Singleton,Factory,...... implemented",0,0,2024,2024,0,https://github.com/vismayrathore123/DesignPatterns
Singleton,DesignPatterns,"Singleton,Factory,Builder,Decorator,Strategy",0,0,2024,2024,1,https://github.com/Sruthilenka/DesignPatterns
Singleton,FactorySingleton,TD sur le design pattern Singleton et Factory.,0,0,2015,2015,1,https://github.com/aud04/FactorySingleton
Singleton,Singleton-Design,Simple Java Project to implement Singleton design pattern,0,0,2018,2018,1,https://github.com/TarunsGIT/Singleton-Design
Singleton,matlab-singleton,Example of the Singleton design pattern in MATLAB,0,0,2024,2024,1,https://github.com/rpurser47/matlab-singleton
Singleton,Singleton-example,Example Java code for Singleton design pattern example.,0,0,2021,2021,1,https://github.com/Professional-Miles/Singleton-example
Singleton,singletonDIO,Simple singleton design pattern for Digital Innovation One GFT Java bootcamp,0,0,2022,2022,1,https://github.com/jean2q/singletonDIO
Singleton,singleton-samples,Sample code to demonstrate the Singleton Design Pattern,0,0,2018,2018,2,https://github.com/techknowsurfer/singleton-samples
Singleton,Singleton_C-,example of a singleton design pattern in C#,0,0,2019,2019,1,https://github.com/AlexMairQA/Singleton_C-
Singleton,DesignPatternsWithJava,"Singleton, Observer, Decorator & Strategy",0,0,2024,2024,1,https://github.com/Georgina444/DesignPatternsWithJava
Singleton,UnitySingleton,Singleton design pattern for different purposes in Unity.,0,0,2025,2025,1,https://github.com/fsaltunyuva/UnitySingleton
Singleton,DesignPatternsAndOOT,SINGLETON PATTERN FOR LOGGER,0,0,2023,2023,1,https://github.com/XeUby/DesignPatternsAndOOT
Singleton,singleton-implementation,This is the implementation of singleton design pattern,0,0,2024,2024,1,https://github.com/lamachai/singleton-implementation
Singleton,Singleton_php,An example of Singleton design pattern with PHP,0,0,2016,2016,1,https://github.com/regorDam/Singleton_php
Singleton,JavaScript-Singleton-Pattern,This blog explain JavaScript Singleton Design Pattern,0,0,2016,2016,1,https://github.com/AmitThakkar/JavaScript-Singleton-Pattern
Singleton,DbConnection_singletonClass,Repository for java database connection using the singleton design pattern ,0,0,2024,2024,1,https://github.com/shivamkumar116/DbConnection_singletonClass
Singleton,Singleton-Example,Example of singleton design pattern for my ebook,0,0,2016,2016,1,https://github.com/peterdruska/Singleton-Example
Singleton,Singleton-Implementation-Java_Eclipse,Singleton Design pattern example using java eclipse .,0,0,2017,2017,0,https://github.com/SarasaGunawardhana/Singleton-Implementation-Java_Eclipse
Singleton,singleton-design-pattern-java,Singleton design pattern in Java with Examples.,0,0,2020,2023,1,https://github.com/balakoder/singleton-design-pattern-java
Singleton,dotnet-design-patterns-demo,.NET demo project for understanding design patterns,0,0,2018,2019,1,https://github.com/hamdicatal/dotnet-design-patterns-demo
Singleton,SoftwareDesignPatterns,Design Patterns,0,0,2016,2017,1,https://github.com/DavidBarth/SoftwareDesignPatterns
Singleton,Singleton-Design-Pattern," This project is an example implementation of the singleton design pattern, which is one of the creational design patterns.",0,0,2024,2024,1,https://github.com/AlperTurhann/Singleton-Design-Pattern
Singleton,DesignPatterns-JAVA,Singleton | MVC | Façade | Decorator | Adapter,0,0,2020,2020,1,https://github.com/ShashithAdithyaWijerathne/DesignPatterns-JAVA
Singleton,DesignPatternsDoc,"Singleton, Strategy and Observer patterns",0,0,2015,2015,1,https://github.com/brunodevesa/DesignPatternsDoc
Singleton,singletonAndFactory,"University project for the subject ""design patterns"" - realization singleton&factory patterns",0,0,2021,2021,1,https://github.com/Trofan-code/singletonAndFactory
Singleton,DesignPatterns,"use the desing patern Singleton, factory ...",0,0,2024,2024,1,https://github.com/sequeira1986/DesignPatterns
Singleton,DesignPatterns,,0,0,2017,2017,1,https://github.com/shankar-modi/DesignPatterns
Singleton,designPatterns,Exercise about Singleton and Factory Pattern,0,0,2020,2020,0,https://github.com/hectorfdezg16/designPatterns
Singleton,SingletonPatternSwift,An easy representation of how Singleton Design Pattern works in swift.,0,0,2021,2021,1,https://github.com/osamaazmat/SingletonPatternSwift
Singleton,DesignPatterns-Singleton,,0,0,2021,2022,1,https://github.com/GabrielBronte/DesignPatterns-Singleton
Singleton,Java-springBoot,"Trabalhando com Design Patterns -> Singleton, Strategy, Facade",0,0,2023,2023,1,https://github.com/Hugo83-tecnico/Java-springBoot
Singleton,Design_Pattern_JS,"singleton, factory , Observer, Prototype design pattern implemented",0,0,2020,2020,1,https://github.com/Pragati215/Design_Pattern_JS
Singleton,DesignPatterns4Examples,Design Patterns Singleton Factory Method Facade Observer ,0,0,2023,2023,1,https://github.com/AJPTechnology/DesignPatterns4Examples
Singleton,DesignPatterns_Singleton,,0,0,2024,2024,2,https://github.com/JamersonCarlos/DesignPatterns_Singleton
Singleton,singleton_d4rpl2a,PRAKTIKUM DESAIN PERANGKAT LUNAK - Singleton Design Pattern,0,0,2024,2024,1,https://github.com/tegar42/singleton_d4rpl2a
Singleton,CSharp,"OOP | SOLID | Singleton, Command & State Design Patterns",0,0,2024,2024,1,https://github.com/cucabel/CSharp
Singleton,singleton,singleton shows an example of the design pattern singleton in C++,0,0,2013,2014,1,https://github.com/mpeyrega/singleton
Singleton,Singleton-Design-Pattern,Singleton Design Pattern simulation example implemented in Java,0,0,2019,2019,1,https://github.com/ssrishabh96/Singleton-Design-Pattern
Singleton,DesignPatterns_Singleton,,0,0,2024,2024,0,https://github.com/SnizhanaKnysh/DesignPatterns_Singleton
Singleton,demo,"Demo App - Factory, Builder & Singleton Design Pattern",0,0,2016,2016,1,https://github.com/smruti05/demo
Singleton,nodejs-design-pattern,"Nodejs Design Patterns: Singleton, Factory and Middleware",0,0,2020,2020,1,https://github.com/lucastravagin/nodejs-design-pattern
Singleton,Random-Number-Generator,Random number generator using Singleton Design Pattern ,0,0,2023,2023,1,https://github.com/monicavaruicu/Random-Number-Generator
Singleton,DesignPatterns_singleton,Implementing a logger as an example for the Singleton Design Patterns ,0,0,2023,2023,0,https://github.com/KirollosNagi/DesignPatterns_singleton
Singleton,DesignPatterns.Singleton,,0,0,2024,2024,1,https://github.com/goteEND/DesignPatterns.Singleton
Singleton,DesignPattern,Thread-safe Singleton Design Pattern in C#,0,0,2020,2020,1,https://github.com/PriyankaSKulkarni/DesignPattern
Singleton,KnowEverything-DesignPattern,A complete overview of Singleton Design Pattern,0,0,2022,2022,1,https://github.com/ArijitNathGit/KnowEverything-DesignPattern
Singleton,Design-Patterns,"Factory, Builder, Adapter, Singleton, Observer Design Pattern",0,0,2024,2024,1,https://github.com/runitrupam/Design-Patterns
Singleton,SingletonPattern,"Simple study case of Singleton Pattern, related to Design Patterns in java",0,0,2016,2016,1,https://github.com/mvalho/SingletonPattern
Singleton,Singleton_in_python,Aplicação de Design Patterns em um pequeno projeto,0,0,2022,2022,1,https://github.com/Glrodrigo/Singleton_in_python
Singleton,GoF-Singleton,Studying the theory and implementation of Design Patterns,0,0,2023,2023,1,https://github.com/RuanK07/GoF-Singleton
Singleton,DesignPatterns_Singleton,,0,0,2019,2019,1,https://github.com/byLLIPyT/DesignPatterns_Singleton
Singleton,DesignPatterns-Singleton,,0,0,2023,2023,1,https://github.com/sharathkumar55/DesignPatterns-Singleton
Singleton,singleton-design-pattern,A sample code to understand singleton design pattern,0,0,2024,2024,1,https://github.com/CodeMice200/singleton-design-pattern
Singleton,Singleton-Design-Pattern, Simple Singleton Design Pattern for the ticket booking ,0,0,2025,2025,0,https://github.com/vanithaG6/Singleton-Design-Pattern
Singleton,pong-game-java,design pattern strategy builder abstract observer singleton,0,0,2021,2021,1,https://github.com/islamOTH/pong-game-java
Singleton,MVVMUIKit,MVVM design pattern with UIKit and singleton,0,0,2023,2023,1,https://github.com/rafiulhasanarb/MVVMUIKit
Singleton,SingleDesignPatternExample,Example of a Java Singleton Design Pattern,0,0,2024,2024,1,https://github.com/divpatel03/SingleDesignPatternExample
Singleton,phppdosingleton,PDO Connection Class with Singleton Design Pattern,0,0,2014,2014,1,https://github.com/ahmetunal/phppdosingleton
Singleton,Singleton-MVC-Design-Pattern-E-Commerce-Project,Singleton & MVC Design Pattern E-Commerce Project,0,0,2016,2016,1,https://github.com/magedmnb/Singleton-MVC-Design-Pattern-E-Commerce-Project
Singleton,postfix_calculator,Simple postfix calculator using singleton design pattern,0,0,2023,2023,1,https://github.com/EeroKokkonen/postfix_calculator
Singleton,DesignPattern,Use of Singleton Design Pattern in java,0,0,2019,2019,1,https://github.com/Harshit-Tomar/DesignPattern
Singleton,Anagram,Java Demo of a Singleton design pattern,0,0,2019,2019,1,https://github.com/vlad-v-melnikov/Anagram
Singleton,design_pattern,"design pattern: composite,singleton,observator,adapter,iterator",0,0,2019,2019,1,https://github.com/ayoubridouani/design_pattern
Singleton,DesignPatterns,"Estudos sobre Design Patterns: Singleton, Strategy, Facade",0,0,2023,2023,1,https://github.com/Vguilhen/DesignPatterns
Singleton,Example-singleton-pessoa,Aplicando o Singleton (Arquitetura de Software: Design Patterns),0,0,2020,2024,1,https://github.com/Geovane33/Example-singleton-pessoa
Singleton,DesignPatterns-Singleton,Example implementation of the Gang of 4 Singleton Pattern in Java,0,0,2016,2016,1,https://github.com/rxp8385/DesignPatterns-Singleton
Singleton,Singleton_DesignPatterns,,0,0,2019,2019,1,https://github.com/ahmedco82/Singleton_DesignPatterns
Singleton,DesignPatterns-Singleton,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-Singleton
Singleton,DesignPatterns-Singleton,,0,0,2021,2021,1,https://github.com/DanielMachado29/DesignPatterns-Singleton
Singleton,SingletonDemo,A simple illustration of the Singleton Design Pattern in Kotlin and Java,0,0,2022,2022,1,https://github.com/ericdiazcodes/SingletonDemo
Singleton,DesignPatterns-Singleton,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Singleton
Singleton,DesignPatterns-Singleton,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Singleton
Singleton,DesignPatterns.Singleton,,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.Singleton
Singleton,SingletonDemo,"This is a short Demo for the ""Singleton Design Pattern"" in C#",0,0,2022,2022,1,https://github.com/TarekInoubli/SingletonDemo
Singleton,singleton,Design pattern criacional (gof) Singleton para instâncias únicas de uma classe,0,0,2020,2021,1,https://github.com/Jhow-R/singleton
Singleton,ColorRotate,Rotate color with using Singleton Design Pattern,0,0,2019,2019,1,https://github.com/arimevlut/ColorRotate
Singleton,Patterns,"Java design Patterns : Singleton, Factory, Builder,Observer",0,0,2020,2020,1,https://github.com/MartinBugar/Patterns
Singleton,object-oriented-design02,Design Patterns: an example of the Singleton,0,0,2023,2024,1,https://github.com/softwareDesign24/object-oriented-design02
Singleton,practice-java-singleton,documentation of practice java with singleton design pattern,0,0,2023,2023,1,https://github.com/ibassetyowibowo/practice-java-singleton
Singleton,DesignPatternsSingleton,,0,0,2020,2020,0,https://github.com/ueredeveloper/DesignPatternsSingleton
Singleton,DesignPatterns_Singleton,Singleton is one of the creational patterns. This repository contains only one example for it. Please read the ReadMe file. It can help a lot to understand I did.,0,0,2020,2020,1,https://github.com/Kvintasz/DesignPatterns_Singleton
Singleton,3D-garbage-Collecter,3d unity project used singleton design pattern ,0,0,2021,2021,1,https://github.com/karthikSuraj/3D-garbage-Collecter
Singleton,DesignPatternsProject,Implementation of two design patterns-Builder+Singleton,0,0,2022,2022,0,https://github.com/LarisaBardita/DesignPatternsProject
Singleton,Movie-Selling-and-Renting-Application,"Implementation of Design Patterns, i.e : Singleton, Strategy, Composite, Decorator,State design patterns.",0,0,2017,2017,1,https://github.com/ShailJhaveri/Movie-Selling-and-Renting-Application
Singleton,Design-Pattern-Singleton-Task-Manager,Singleton Design Pattern with a task manager,0,0,2024,2024,1,https://github.com/MylesJMoore/Design-Pattern-Singleton-Task-Manager
Singleton,design_patterns_2,design_patterns_2,0,0,2019,2023,1,https://github.com/stefanmiletic-pmf/design_patterns_2
Singleton,Singleton-Design-Pattern,iOS implementation of a threadsafe singleton design pattern,0,0,2015,2015,1,https://github.com/rumi1359/Singleton-Design-Pattern
Singleton,PubSub,"PubSub toy app using observer design pattern, singleton design pattern, and Java threads.",0,0,2021,2021,1,https://github.com/OM234/PubSub
Singleton,DesignPatterns-Singletons,,0,0,2016,2016,1,https://github.com/hathawayjess/DesignPatterns-Singletons
Singleton,DesignPatterns_Singleton,,0,0,2021,2021,0,https://github.com/glucaas/DesignPatterns_Singleton
Singleton,DesignPatterns.Singleton,,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.Singleton
Singleton,DesignPatternsSingleton,,0,0,2023,2023,0,https://github.com/IsaacFatec/DesignPatternsSingleton
Singleton,SingletonObserver,Implementation of the observer design pattern using a singleton instance for updates,0,0,2022,2022,1,https://github.com/kirisuna1/SingletonObserver
Singleton,Singleton-design-Pattern,Singleton design pattern and using it in selenium,0,0,2020,2020,1,https://github.com/Prabhakaran2209/Singleton-design-Pattern
Singleton,Creational-Design-Patterns,"Design Patterns series covering Factory, AbstractFactory, Singleton, Builder, Prototype, Singleton",0,0,2024,2024,0,https://github.com/Rocket387/Creational-Design-Patterns
Singleton,SodaFactory,Simple Implementation of Singleton & Factory design patterns.,0,0,2016,2016,1,https://github.com/HonzoBonzo/SodaFactory
Singleton,singleton,A trait to implement the singleton design pattern without any dependencies.,0,0,2017,2018,1,https://github.com/michaelspiss/singleton
Singleton,Design-Pattern-Java,Factory Design Pattern and Singleton Design Pattern create with realworld example by Java,0,0,2024,2024,1,https://github.com/GANIDU2413/Design-Pattern-Java
Singleton,flow-singleton,Simple Flow class for simplifying the Singleton design pattern,0,0,2018,2018,1,https://github.com/elmines/flow-singleton
Singleton,DesignPatterns-Java,"Singleton, Factory Abstract & Builder in (Java)",0,0,2020,2021,1,https://github.com/anas11cs/DesignPatterns-Java
Singleton,Singleton-Example,This repo demonstrates the use of singleton design pattern,0,0,2024,2024,0,https://github.com/Charolli/Singleton-Example
Singleton,PhpDesignPatterns-Singleton,Singleton,0,0,2018,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Singleton
Singleton,ProjetoSingleton,"projeto simples para aprender um design pattern, o sinleton",0,0,2020,2024,1,https://github.com/Skipperhc/ProjetoSingleton
Singleton,Singleton-Pattern,A small example that demonstrates the Singleton design pattern.,0,0,2024,2024,2,https://github.com/tanis36/Singleton-Pattern
Singleton,singleton_typescript,An implementation of the Singleton design pattern in TypeScript ,0,0,2020,2020,1,https://github.com/edkaresli/singleton_typescript
Singleton,singleton-design-pattern-pachay,singleton-design-pattern-pachay created by GitHub Classroom,0,0,2020,2020,2,https://github.com/cs2901-2020-1/singleton-design-pattern-pachay
Singleton,singleton-explanation,Explanation of a Singleton Creational Design Pattern in TypeScript,0,0,2024,2024,1,https://github.com/vlbras/singleton-explanation
Singleton,designPatterns,"Exercise: Abstract Factory, Builder, Singleton, Decorator, Facade",0,0,2019,2019,1,https://github.com/alexandrakurek/designPatterns
Singleton,INF5153-Singleton-Observer,Singlet and Observer design pattern demonstration for INF5153,0,0,2016,2016,1,https://github.com/Morriar/INF5153-Singleton-Observer
Singleton,Singleton-Pattern-Library-Application,A library application using the singleton design pattern.,0,0,2021,2021,1,https://github.com/Omkar-Mokashi/Singleton-Pattern-Library-Application
Singleton,Spring-boot-with-Singleton,Application of Singleton design pattern in Spring Boot,0,0,2024,2024,1,https://github.com/Ahasanov2021/Spring-boot-with-Singleton
Singleton,singleton-design-pattern-educhay,singleton-design-pattern-educhay created by GitHub Classroom,0,0,2020,2020,3,https://github.com/cs2901-2020-1/singleton-design-pattern-educhay
Singleton,singleton-design-pattern-eduksingletondp,singleton-design-pattern-eduksingletondp created by GitHub Classroom,0,0,2020,2020,6,https://github.com/cs2901-2020-1/singleton-design-pattern-eduksingletondp
Singleton,python-design-pattern-singleton,python exercise on implementing the singleton design pattern,0,0,2022,2022,1,https://github.com/pbmiguel/python-design-pattern-singleton
Singleton,singleton-design-pattern,"This repository is dedicated to exploring and analyzing the Singleton design pattern, a creational design pattern widely used in software engineering.",0,0,2024,2024,1,https://github.com/BrunoCiprianoDev/singleton-design-pattern
Singleton,Super-Singletone-App--SSA-,This app shows a singletone activity design pattern,0,0,2023,2023,1,https://github.com/Laxr24/Super-Singletone-App--SSA-
Singleton,try-singleton-design_pattern,Trying out the Singleton design pattern in java,0,0,2020,2021,1,https://github.com/alabenyahia/try-singleton-design_pattern
Singleton,singletonjava,Example of a java implementation of the singleton design pattern,0,0,2022,2022,0,https://github.com/omargomez2/singletonjava
Singleton,design-patterns-singleton-pattern,Source for the “Design Patterns: Singleton Pattern” course,0,0,2023,2023,1,https://github.com/codecourse/design-patterns-singleton-pattern
Singleton,SingletonStudy,Creational design patterns in depth & their implementation in Modern C++ from Umar Lone,0,0,2022,2022,1,https://github.com/rodrigofmp/SingletonStudy
Singleton,SingletonWithThreadSafe,It is a normal example of Singleton Design Pattern with Thread Safe,0,0,2019,2019,1,https://github.com/prince0349/SingletonWithThreadSafe
Singleton,SingletonDesignPatterns,,0,0,2020,2020,1,https://github.com/anireut/SingletonDesignPatterns
Singleton,SingletonDesignPatterns,,0,0,2022,2022,1,https://github.com/atul-sirsode/SingletonDesignPatterns
Singleton,SingletonDesignPatterns,Prototype Tasarım Kalıbı Kullanımı ve örnek,0,0,2022,2022,1,https://github.com/UmutBilgen/SingletonDesignPatterns
Singleton,SingletonDesignPatterns,,0,0,2023,2023,1,https://github.com/mayurmehar003/SingletonDesignPatterns
Singleton,Javascript-Design-Patterns,Singleton Pattern,0,0,2017,2017,2,https://github.com/farhanomer/Javascript-Design-Patterns
Singleton,Singleton,Singleton creational method of design patterns with solution in different programming languages.,0,0,2023,2023,1,https://github.com/Joao-Victor1/Singleton
Singleton,Singleton-Design-Pattern,This covers a brief introduction to Singleton Design Pattern,0,0,2024,2024,1,https://github.com/AprajitaChhawi/Singleton-Design-Pattern
Singleton,ex4_singleton,in class follow-along to learn singleton design pattern.,0,0,2022,2022,1,https://github.com/achidester/ex4_singleton
Singleton,Singleton-Design-Pattern,Simple project that implements a lazy singleton design pattern,0,0,2025,2025,1,https://github.com/Romina-dll/Singleton-Design-Pattern
Singleton,design-pattern-java,Exploring design patterns with Java,0,1,2024,2024,1,https://github.com/dc-root/design-pattern-java
Singleton,singletonDPStudy,sample code to implement singleton design pattern for web driver initialization on framework,0,0,2020,2020,1,https://github.com/AbhishekSharmaAutomation/singletonDPStudy
Singleton,Singleton-Design-Pattern,Code For Implementing The Software Engineering SINGLETON design pattern,0,0,2019,2019,1,https://github.com/Omarkh98/Singleton-Design-Pattern
Singleton,singleton-proxy-pattern,Project showcasing the SIngleton and the Proxy Design Patterns,0,0,2023,2023,1,https://github.com/franciscoioconnect/singleton-proxy-pattern
Singleton,Singleton_Pattern_Unity,Practicing the Singleton Design Pattern using Unity Game Engine,0,0,2021,2021,1,https://github.com/CelilErenKalkan/Singleton_Pattern_Unity
Singleton,singleton-design-pattern,It includes the various implementations of Singleton Design Pattern.,0,0,2022,2022,1,https://github.com/burakkbalta/singleton-design-pattern
Singleton,Singleton,Using GCD to create an ARC-based demo for Singleton design pattern,0,1,2014,2014,1,https://github.com/Sophia09/Singleton
Singleton,Singleton,"Singleton example taken from ""Design Patterns in Modern C++"" by Dmitri Nesteruk",0,0,2023,2023,1,https://github.com/r-tarnowski/Singleton
Singleton,singleton-alt-2,This is an assessment activity on Design Patterns| @UniversidadePositivo,0,0,2024,2024,1,https://github.com/gustavo-szesz/singleton-alt-2
Singleton,csc325-design-pattern-singleton,Simple program to demonstrate the singleton design pattern.,0,0,2022,2022,2,https://github.com/rafaelSandovalR/csc325-design-pattern-singleton
Singleton,DesignPatterns-Creational-Singleton,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Creational-Singleton
Singleton,DesignPatterns-Cre-Singleton,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Cre-Singleton
Singleton,DesignPatternsSingletonStatic,,0,0,2024,2024,1,https://github.com/AntoninoPagana/DesignPatternsSingletonStatic
Singleton,Design-Patterns,Singleton Adapter Iterator ,0,0,2021,2021,0,https://github.com/ahmedkhalid5050/Design-Patterns
Singleton,designPatterns-builderSingleton,College activity about builder and singleton patterns.,0,0,2021,2021,1,https://github.com/euaaron/designPatterns-builderSingleton
Singleton,Singleton-Design-Pattern,Implementation of Singleton Design Pattern in Java using Eclipse.,0,0,2019,2019,2,https://github.com/noor-binte-amir/Singleton-Design-Pattern
Singleton,Singleton_Python_Logger,Building a python logger using the Singleton design pattern,0,0,2023,2023,1,https://github.com/psycode99/Singleton_Python_Logger
Singleton,Singleton-Design-Pattern,Implementing the Singleton creational software design pattern in Java,0,0,2015,2015,0,https://github.com/Doaa-Ahmed/Singleton-Design-Pattern
Singleton,.NET.DesignPatterns.Singleton,,0,0,2019,2020,1,https://github.com/dmitry-zhbankov/.NET.DesignPatterns.Singleton
Singleton,design-patterns-builder-singleton-prototype,"Example of design patterns builder , singleton et prototype",0,0,2023,2023,1,https://github.com/Bouzidhadjer/design-patterns-builder-singleton-prototype
Singleton,CPP_DesignPatterns_Singleton,,0,0,2016,2016,1,https://github.com/szalmaf/CPP_DesignPatterns_Singleton
Singleton,DesignPatternsSingletonLogger,,0,0,2024,2024,0,https://github.com/AndreyMileshko/DesignPatternsSingletonLogger
Singleton,DesignPatternsSingletonLogger,,0,0,2024,2024,1,https://github.com/Kaulina/DesignPatternsSingletonLogger
Singleton,DesignPatterns,"Singleton, Composite and Strategy implementation for business case",0,0,2023,2023,1,https://github.com/Chelariu-Cosmin/DesignPatterns
Singleton,design_patterns,"SOLID, Singleton, Factory",0,0,2023,2023,1,https://github.com/mahdiyarz/design_patterns
Singleton,DesignPatterns.3.Singleton,,0,0,2024,2024,1,https://github.com/SimoCu3/DesignPatterns.3.Singleton
Singleton,DesignPatterns_Singleton_1,,0,0,2023,2023,0,https://github.com/marcelomusza/DesignPatterns_Singleton_1
Singleton,Singleton-DesignPatternsSeries,"This repository is part of the Design Pattern Series, orchestrated by Professor Alexandre Bittencourt. Our goal is to develop a mini-project based on each design pattern covered in our curriculum.",0,0,2024,2024,1,https://github.com/NicoleCarvalh/Singleton-DesignPatternsSeries
Singleton,DesignPatterns_Singleton_2,,0,0,2023,2023,1,https://github.com/marcelomusza/DesignPatterns_Singleton_2
Singleton,fila-designPatterns-Singleton,,0,0,2023,2023,0,https://github.com/ccristhianr/fila-designPatterns-Singleton
Singleton,DesignPatterns_Singleton_3,,0,0,2023,2023,1,https://github.com/marcelomusza/DesignPatterns_Singleton_3
Singleton,DesignPatterns-Creational-Singleton,"Ensures a class has only one instance, and provides a global point of access to it. ",0,0,2021,2021,1,https://github.com/bethovenacha/DesignPatterns-Creational-Singleton
Singleton,Fila-designPatterns-Singleton,,0,0,2023,2023,0,https://github.com/LucsRafa/Fila-designPatterns-Singleton
Singleton,DesignPatterns,Singleton Factory Builder Facade Observer Design patterns examples,0,0,2019,2019,1,https://github.com/Sandaka/DesignPatterns
Singleton,patterns-singleton,An example console app demonstrating the Singleton software design pattern,0,0,2023,2023,1,https://github.com/michaellucasnzl/patterns-singleton
Singleton,deployment-singleton,Bài thực hành SOLID và Design Pattern: Triển khai singleton,0,0,2018,2018,1,https://github.com/WBD-Java/deployment-singleton
Singleton,design_patterns,"singleton, factory, observer",0,0,2014,2014,1,https://github.com/nightahul/design_patterns
Singleton,singleton-example,Padrão Singleton Usando React e Typescript (diciplina de Design Patterns),0,0,2022,2022,1,https://github.com/israel-bruno/singleton-example
Singleton,temperature-measuring-device,"temperature measuring device with single responsibility, open closed,singleton design patterns,observer design pattern.",0,0,2020,2020,1,https://github.com/kutayyaman/temperature-measuring-device
Singleton,design-patterns,"Tests different design patterns such as Singleton, Factory, Adapter,Decorator and Observer design pattern.",0,0,2021,2021,1,https://github.com/Rasi98/design-patterns
Singleton,ConnectionSystem-SingletonDesignPattern,Using Singleton Design Pattern to create only one object from Connection class.,0,0,2021,2022,1,https://github.com/dinaalwaneh/ConnectionSystem-SingletonDesignPattern
Singleton,go-design-pattern,design pattern for golang,0,0,2019,2019,1,https://github.com/enix223/go-design-pattern
Singleton,Singleton_API,This respository contains the API code with singleton design pattern,0,0,2024,2024,1,https://github.com/It-001/Singleton_API
Singleton,Singleton-Calendar,This project is made to test the singleton Design Pattern,0,0,2019,2019,1,https://github.com/laylahammoury/Singleton-Calendar
Singleton,Singleton,Repositório criado para a aula de Design Pattern da matéria Engenharia de Dados,0,0,2024,2024,1,https://github.com/MarcusMatias/Singleton
Singleton,dp-assignment-singleton-pattern,Design Patterns Assignment 2: Singleton Pattern (with synchronized getInstance() ),0,0,2015,2015,1,https://github.com/saif0524/dp-assignment-singleton-pattern
Singleton,GOFDesignPatterns-Creation-Singleton,"Gang of Four Design Patterns, Creation Design - The Singleton!",0,0,2017,2017,1,https://github.com/adam-reid/GOFDesignPatterns-Creation-Singleton
Singleton,Singleton-Java-NetBeans,This is Singleton design pattern Implementation using java netbeans ,0,0,2017,2017,0,https://github.com/SarasaGunawardhana/Singleton-Java-NetBeans
Singleton,BuildSingletonLab14,Practice building code that implements the Singleton Design pattern,0,0,2017,2017,1,https://github.com/thesuz88/BuildSingletonLab14
Singleton,SingletonDemo,This is about one of the Creational Design pattern which is Singleton - Basic Architecture.,0,0,2018,2018,1,https://github.com/vizetar/SingletonDemo
Singleton,Singleton-pattern-Exception-logging,Singleton design pattern to implement Exception logging with C#,0,0,2021,2021,0,https://github.com/Mutshidzii/Singleton-pattern-Exception-logging
Singleton,DesignPatterns_Java,"Design Patterns with Java: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/DzhanSali/DesignPatterns_Java
Factory Method,Software-Design-Patterns,"🎨 A comprehensive exploration of object-oriented design patterns, featuring fully implemented examples like inheritance, composition, observers, decorators, and factory methods. Built with Java to demonstrate their real-world applications in scalable and maintainable software design.",18,15,2024,2025,1,https://github.com/hoangsonww/Software-Design-Patterns
Factory Method,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Factory Method,FactoryMethodInSwift,Design pattern in Swift: Factory Method,13,2,2018,2022,1,https://github.com/appcoda/FactoryMethodInSwift
Factory Method,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Factory Method,AbstractFactoryExample,An example of the Factory Method design pattern,6,20,2014,2024,1,https://github.com/csc301-fall2014/AbstractFactoryExample
Factory Method,DesignPatterns.FactoryMethod,,5,0,2022,2022,1,https://github.com/dFarkhod/DesignPatterns.FactoryMethod
Factory Method,CreationalDesignPatternsSample,"Including Builder, Factory method, Abstract Factory, Prototype and Singleton",5,0,2020,2023,1,https://github.com/ZahraHeydari/CreationalDesignPatternsSample
Factory Method,Creational-Design-Pattern-In-Programming,"Tell you about 5 sample in creational design pattern: Factory Method, Abstract Method, Singleton, Builder & Prototype",4,0,2022,2023,1,https://github.com/Phong-Kaster/Creational-Design-Pattern-In-Programming
Factory Method,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Factory Method,typescript-design-pattern-factory-method,Design Pattern - Factory Method,3,0,2022,2022,0,https://github.com/williamkoller/typescript-design-pattern-factory-method
Factory Method,DesignPatterns,"Design patterns learning course for C#. Creational Patterns. Singleton, Prototype, Builder, Factory Method, Abstract Factory.",3,0,2019,2024,1,https://github.com/arsentd/DesignPatterns
Factory Method,FactoryMethod,"This is a design pattern used for situations in which it is necessary to create an instance of an object at runtime because we cannot predict, in this case, the choice of a character from a game called Mortal Kombat.",3,0,2023,2024,1,https://github.com/Medeiroshenrique/FactoryMethod
Factory Method,design-patterns,"Creational design patterns in C#: Abstract Factory, Builder, Factory, Factory Method, Object-Pool, Prototype, Singleton.",3,1,2023,2024,1,https://github.com/cenkerkumlucali/design-patterns
Factory Method,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Factory Method,GameSimulator-Advanced-OOP-CPP,Project using Design Patterns. Model View and Controller objects (architectural pattern) for running the Simulator. The Model is a Singleton. Creating the vehicles with a Factory method Object.,3,1,2022,2024,2,https://github.com/ilanRothman/GameSimulator-Advanced-OOP-CPP
Factory Method,dp-creational-factorymethod,Factory method is a creational design pattern which solves the problem of creating product objects without specifying their concrete classes.,2,5,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-creational-factorymethod
Factory Method,Connect-FactoryMethod,☕ Java Design Patterns,2,0,2020,2023,2,https://github.com/bran-deb/Connect-FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,FactoryMethod design pattern example,2,0,2022,2023,1,https://github.com/vinicius-colutti/DesignPatterns-FactoryMethod
Factory Method,factory-method-pattern,Factory Design Pattern in Java with implementation,2,0,2021,2024,1,https://github.com/gulbalasalamov/factory-method-pattern
Factory Method,DESIGN-PATTERNS-IN-JAVA,"I have implemented Factory method Design pattern, Strategy Design pattern and Adapter Design pattern in Java",2,0,2024,2024,1,https://github.com/KavinduRanawaka/DESIGN-PATTERNS-IN-JAVA
Factory Method,python-design-patterns-strategy-factory-method-impl,Python 3 Design Patterns Strategy and Factory Method (Impl),2,0,2024,2024,0,https://github.com/andrelsf/python-design-patterns-strategy-factory-method-impl
Factory Method,abstract-factory-pattern,Abstract Factory and Factory Method Design Patterns in C#,2,0,2022,2024,1,https://github.com/jebarcha/abstract-factory-pattern
Factory Method,Aladdin-2D-Game,"Developed a 2D game in Greenfoot using JAVA which involved implementing Gang of Four design patterns and using Agile Scrum Methodology. Design patterns include Observer pattern, Command Pattern, State Pattern, Template Method Pattern and Factory Method Pattern.",2,2,2017,2024,6,https://github.com/pavankothawade/Aladdin-2D-Game
Factory Method,poc-java-factory-pattern,"Prove of Concept, using Java and the design pattern Factory method",2,0,2021,2023,1,https://github.com/AlexandreSouzaRocha/poc-java-factory-pattern
Factory Method,design-patterns-examples,"Simple examples of the builder, factory method, singleton and iterator design patterns.",2,0,2022,2024,1,https://github.com/jmj0502/design-patterns-examples
Factory Method,simple-factory-python,A simple example of how to implement the Factory method design pattern in Python,2,0,2023,2025,1,https://github.com/sean-campbelltech/simple-factory-python
Factory Method,BankUserManagement,This project demonstrates the use of the Strategy and Factory Method design patterns in a banking system.,2,0,2025,2025,1,https://github.com/Stojanovic94/BankUserManagement
Factory Method,Factory_Design_Pattern_JAVA,A study case of how work the design pattern factory method in java. Software engineering subject of UNIVAS.,2,0,2020,2024,1,https://github.com/MisaelKelviny/Factory_Design_Pattern_JAVA
Factory Method,Parking-Lot-OOP,"Parking lot management system demonstrating SOLID principles, Object-Oriented-Programming and Design Patterns (Strategy, Iterator, Static Factory Method, Facade etc.)",2,1,2021,2023,2,https://github.com/israelElad/Parking-Lot-OOP
Factory Method,PCloud-client,"Uses provided API from pCloud storage to upload, download and modify files on pCloud servers. Independent session provided by factory method design pattern.",2,0,2016,2023,1,https://github.com/tymoteuszcyran/PCloud-client
Factory Method,factory-pattern,"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.",2,0,2021,2024,1,https://github.com/danil-sergeev/factory-pattern
Factory Method,FactoryGame,"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.",2,0,2021,2021,1,https://github.com/RuslanPr0g/FactoryGame
Factory Method,fynapp_backend,"Python Flask backend for FynApp. It can use DynamoDb or MongoDB. The DynamoDb interaction is made by mongoDb like calls. Software design patterns used: factory method, facade, iterator, template method, decorator.",2,0,2022,2023,1,https://github.com/tomkat-cr/fynapp_backend
Factory Method,CoronaHotel,"Java project: a system that management Corona Hotel. The system is based on several guidelines and implements design patterns such as Singleton, Strategy, Factory Method and MVC. Additional use of Multithreading, Serialization.",2,0,2020,2023,1,https://github.com/ArielleMizrahi/CoronaHotel
Factory Method,DunkContest,"An interactive Dunk Contest simulation developed in Java, implementing various design patterns (Strategy, Factory Method, Singleton) to model player interactions, judge evaluations, and scoring logic. This project showcases object-oriented programming skills, intricate algorithms for dunk evaluation, and comprehensive user interaction.",2,0,2024,2024,1,https://github.com/davidxosei/DunkContest
Factory Method,api_sample_connection_app,"This is a sample reporo API connection app, leveraging principles such as Asynchronous server polling, Factory Method design pattern and Dependency Injection design paterns. You need your own key and shared secret for it to work and replace the constants in StatisticsFactory.php file under StatisticsFactory class.",2,0,2015,2015,1,https://github.com/lupelius/api_sample_connection_app
Factory Method,Factory-Method,One of the most used creational design pattern - The Factory Method for complete explanation visit https://youtu.be/tdMOdeewTnc,1,2,2021,2021,1,https://github.com/raigenics/Factory-Method
Factory Method,FactoryMethod,Design Pattern,1,0,2020,2024,1,https://github.com/wojciechligeza/FactoryMethod
Factory Method,FactoryMethod,design pattern factory with factorymethod,1,0,2021,2021,1,https://github.com/KKMalysa/FactoryMethod
Factory Method,FactoryMethod,Implementing the Factory Method design pattern,1,0,2022,2022,1,https://github.com/BrunoSouzza/FactoryMethod
Factory Method,Factory-Method-Design-Pattern,Factory Method Design Pattern,1,0,2017,2017,0,https://github.com/Emrek-stack/Factory-Method-Design-Pattern
Factory Method,factory-method,Examples of the Factory Method design pattern,1,0,2024,2024,1,https://github.com/daniel-azevedo-maia/factory-method
Factory Method,factory-method,Projects for teaching or review Design Patterns,1,0,2022,2023,1,https://github.com/alexandrehsantos/factory-method
Factory Method,FactoryMethodPattern,This Repository hosts how a Factory Method Design Pattern could be used.,1,0,2019,2020,1,https://github.com/DonkeyKongJr/FactoryMethodPattern
Factory Method,DesignPattern-Factory-Method,Example implementation of Factory Method design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Factory-Method
Factory Method,Factory-Method-Pizza,Example of factory method design pattern regarding pizzas,1,0,2021,2021,1,https://github.com/InesBorgesCore/Factory-Method-Pizza
Factory Method,php-design-patterns-factory-method,PHP Design Patterns - Factory Method Pattern Sample,1,0,2018,2020,1,https://github.com/rito328/php-design-patterns-factory-method
Factory Method,DESIGN_PATTERN_Factory_Method,Source code demo cho Design Pattern Factory Method,1,0,2020,2021,1,https://github.com/mirushi/DESIGN_PATTERN_Factory_Method
Factory Method,Factory_Design_Pattern,Factory Method (Design Pattern) for Java Course,1,0,2022,2023,1,https://github.com/rakhymova/Factory_Design_Pattern
Factory Method,FactoryMethodDesignPattern,This is a sample C# console application project to demonstrate the Factory method design pattern,1,0,2019,2023,1,https://github.com/jjeffrin/FactoryMethodDesignPattern
Factory Method,Implementation_FactoryMethod_Builder_And_Singleton_Design_Patterns,"This is the small example on Implementation of Design Patterns (Singleton, Builder, Factory Method)",1,0,2018,2020,1,https://github.com/rafaewaqarqazi/Implementation_FactoryMethod_Builder_And_Singleton_Design_Patterns
Factory Method,Homework-11-JSMX,Homework #11. Design Patterns Singleton and Factory Method.,1,0,2023,2024,2,https://github.com/iWaraxe/Homework-11-JSMX
Factory Method,design-patterns,"factory method, adapter e observer",1,0,2021,2021,1,https://github.com/Greiciane93x/design-patterns
Factory Method,Factory_Method-Design_Pattern,It is a simple application written using the Factory Method design pattern.,1,0,2023,2023,1,https://github.com/yaseminuslu/Factory_Method-Design_Pattern
Factory Method,DesignPatterns,"Singleton, Factory Method and Abstract Factory Design Patterns in C#",1,0,2022,2022,1,https://github.com/bilgeyillmaz/DesignPatterns
Factory Method,FactoryMethodExample,Simple example of the factory method pattern. Credits to https://www.c-sharpcorner.com/article/factory-method-design-pattern-in-c-sharp/,1,0,2021,2023,0,https://github.com/AdrianoIta/FactoryMethodExample
Factory Method,DesignPattern-AbstractFactoryMethod,Adult and kid menu with the design pattern of abstract factory method,1,0,2020,2020,0,https://github.com/ThanosChristidis/DesignPattern-AbstractFactoryMethod
Factory Method,TutorialDesignPatterns,"Tutorial design patterns in java : Singleton, factory-method, Decorator, ...",1,0,2019,2019,1,https://github.com/ilaghrissi/TutorialDesignPatterns
Factory Method,design-patterns-factory-method,Educational source code to explain creational pattern design: Factory Method,1,0,2021,2021,1,https://github.com/bcarranza/design-patterns-factory-method
Factory Method,design-patterns-factory-method,,1,0,2021,2021,1,https://github.com/VictorDuart/design-patterns-factory-method
Factory Method,Design-Patterns,Ejemplo de los patrones Factory Method y Composite.,1,0,2019,2023,1,https://github.com/seblaz/Design-Patterns
Factory Method,DesignPatternFactoryMethod,The seller chooses the suitable printer for the customer with the design pattern of factory method,1,0,2020,2020,0,https://github.com/ThanosChristidis/DesignPatternFactoryMethod
Factory Method,Factory_Method_Python,This is an example of the implementation of a design pattern Factory Method on the programing language Python. 🐍,1,0,2019,2022,1,https://github.com/victorolave/Factory_Method_Python
Factory Method,design_patterns,"Abstract Factory, Factory Method, Decorator and Strategy patterns Ruby implementation.",1,0,2018,2019,1,https://github.com/OscarMichelH/design_patterns
Factory Method,FactoryDesignPattern,"A short Demo for the ""Factory Method Design Pattern"" in C#",1,0,2022,2022,1,https://github.com/TarekInoubli/FactoryDesignPattern
Factory Method,zmprog2,"kod do laboratorium 2 z zmprog , design patterns singleton & factory method",1,0,2024,2024,1,https://github.com/V2gkr/zmprog2
Factory Method,Facebook-App-using-Design-Patterns,"Facebook app using 3 design patterns (cache Proxy, Factory Method, Builder)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-using-Design-Patterns
Factory Method,patterns,"Design Patterns Sample (Creational[Builder, Factory Method,Singleton], Structural[Adapter, Facade, Proxy] )",1,0,2016,2023,1,https://github.com/asanchezyu/patterns
Factory Method,patterns2,"Abstract Factory, Adapter, Builder, Façade, and Factory Method Design Patterns sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns2
Factory Method,DesignPattern-Factory-method-and-simple,Devoir N°1 de l'unité de l'enseignement UML et Design Pattern MASTER 1 université de Yaoundé 1,1,0,2023,2023,1,https://github.com/sudo-001/DesignPattern-Factory-method-and-simple
Factory Method,Factory_Method_Pattern_HRAdmin,The factory method design pattern abstract the process of object creation and allows the object to be created at run-time when it is required.,1,0,2021,2021,1,https://github.com/samuelhurtado20/Factory_Method_Pattern_HRAdmin
Factory Method,FactoryDesignPattern,Using InstagramStory feature as an example to understand the Factory Method Design Pattern,1,0,2018,2018,1,https://github.com/sangeetagupta2068/FactoryDesignPattern
Factory Method,Java-Design-Patterns,This project demonstrates the Strategy and Factory Method design patterns through a practical example.,1,0,2025,2025,1,https://github.com/Stojanovic94/Java-Design-Patterns
Factory Method,Facebook-App-DP,"Facebook app using 6 design patterns (cache Proxy, Factory Method, Builder, Strategy, Observer, Decorator)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-DP
Factory Method,design-patterns,"Disponíveis exemplos de padrões de projetos em Java, como SOLID, Factory Method, Abstract Factory, Builder, Bridge, entre outros.",1,0,2023,2024,1,https://github.com/ThaliaLevy/design-patterns
Factory Method,design-patterns-library2,"Sistema bibliotecário com padrões de projetos: Composite, Chain of responsibility, Decorator, Proxy, Static factory method e Singleton",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library2
Factory Method,Abstract-Furniture-Factory,Abstract-Factory is an Factory Method in Design-Pattern using Concepts of OOP in Java.,1,0,2023,2023,1,https://github.com/karan030204/Abstract-Furniture-Factory
Factory Method,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Factory Method,DHBWSanPatrick,An example application to show the Factory Method design pattern (DHBW - 5. Semester - Advanced Software Engineering),1,0,2016,2016,1,https://github.com/StefanFW/DHBWSanPatrick
Factory Method,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Factory Method,Swift-Factory-Design-Pattern,"An Xcode 9 project, written in Swift 4, demonstrating how to implement the factory method design pattern.",1,0,2018,2020,1,https://github.com/iosbrain/Swift-Factory-Design-Pattern
Factory Method,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Factory Method,Abstract-factory-pattern,implementation of simple website that provides E-shopping service using both Factory and abstract Factory method design pattern.,1,0,2023,2025,1,https://github.com/samanody2001/Abstract-factory-pattern
Factory Method,TwitterClone-ReactNative,"Um redesign do antigo Twitter, desenvolvido utilizando Factory Method design pattern, com Expo SDK 50, React Native Stylesheet & TypeScript.",1,0,2024,2024,1,https://github.com/Thiagoow/TwitterClone-ReactNative
Factory Method,EsiMealApp,"a flutter mobile app for restaurant management  implementig design patterns (chain of responsibility, decorator, factory method, singleton, strategy and facade).",1,1,2020,2020,2,https://github.com/Sihamtahi/EsiMealApp
Factory Method,Doacaofacil,"Application with a social purpose for food donation using design patterns such as: Factory Method, Composite, Adapter, Decorator, and Abstract",1,0,2024,2024,1,https://github.com/rafaelhendges/Doacaofacil
Factory Method,DotNet,"System development for driving students, testers and driving tests. Using MVVM architecture, Design Patterns (Observer ,Contract ,Factory Method ,Singleton), and XML DOM.",1,0,2018,2021,1,https://github.com/DvoraRit/DotNet
Factory Method,BonanzaGame,Simple Card Game implemented in Java for educational Purposes | Design patterns | Project structures | Strategy pattern |State Patterns |Factory method pattern | Plugin mechanismus | Uni Marburg,1,0,2018,2020,3,https://github.com/moustafarhat/BonanzaGame
Factory Method,cities-wheather-currency-api,"API build on flask, with factory design pattern the factory method pattern creates a pattern that use factory methods to solve the problem of producing objects without specifying the precise class of the object to be generated. This is accomplished using a factory method to generate objects.",1,0,2022,2022,1,https://github.com/gustavo-varollo/cities-wheather-currency-api
Factory Method,VehicleAgency,"This project is a vehicle agency graphical user interface (GUI) implemented in Java. It incorporates various design patterns to enhance code organization and functionality. The design patterns utilized include the thread pool, memento, observer, singleton, abstract factory method, and decorator patterns.",1,0,2023,2025,1,https://github.com/RonyBubnovsky/VehicleAgency
Factory Method,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Factory Method,Simple_Pool_game,"This is a simple pool game which only implements the function for hitting balls with a cue. The implementation used 3 design patterns: Factory method, Builder and Singleton.",1,0,2018,2019,1,https://github.com/EuniceMadya/Simple_Pool_game
Factory Method,asp.net-northwind,"ASP.NET MVC application leveraging design patterns, including singleton, strategy pattern and factory method. This application connects the user with a Microsoft Access Database (.mdb) via OleDb and Odbc.",1,0,2016,2016,1,https://github.com/mshutter/asp.net-northwind
Factory Method,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Factory Method,quality-control,"This repository hosts a Laravel application named ""Quality Control,"" designed for managing product quality assurance using HMVC architecture and various design patterns such as Repository, Builder, Data Mapper, Strategy, and Factory Method for scalability and maintainability.",1,0,2024,2024,1,https://github.com/ijeyg/quality-control
Factory Method,simple-bank,"A practice project of a simple bank ATM application written in Java to explore creating a GUI with Java's Swing library and practice using design patterns such as the factory method, dao pattern, template patterns",1,0,2021,2025,1,https://github.com/allanaranzaso/simple-bank
Factory Method,factory,The factory method pattern is an object-oriented creational design pattern to implement the concept of factories and deals with the problem of creating objects (products) without specifying the exact class of object that will be created.,1,0,2012,2014,1,https://github.com/lengzijian/factory
Factory Method,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Factory Method,Conference_Interface_Application,"An Application that acts as an interface for users in a Conference Event. Developed using Java Swing and design techniques like Abstract Factory Method, Dependency Injection and Iterator Design Pattern. There are 3 different user levels and each have different tasks. ",1,0,2021,2021,1,https://github.com/Dhruv359/Conference_Interface_Application
Factory Method,dotNet5782_3723_8408,"Creating a management system of Drones, customer and charging stations while using three-layer architecture. The project includes: creating GUI while using WPF library, multithreading, working with XML files and design patterns such as: observer, contract, factory method and singleton.",1,0,2021,2024,2,https://github.com/pinskishira/dotNet5782_3723_8408
Factory Method,Document-Factory,"Java code for a system that applies the Factory Method Design Pattern to enable the user to create Document objects within the context of the program as well as actual files saved on the user's computer of type TXT, CSV, or XML.",1,0,2016,2019,1,https://github.com/robynsilber/Document-Factory
Factory Method,SocialNetwork,"Class project: Java Swing desktop application that mimics a fundamental social network. Utilized object-oriented principles, including inheritance and polymorphism, alongside Observer and Factory Method design patterns within an MVC architecture. Handled data input/output with JSON files and maintained application integrity through JUnit testing.",1,0,2024,2024,2,https://github.com/justin-pyne/SocialNetwork
Factory Method,Design-Pattern-Abstract-Factory,"It is an implementation of Abstract Factory and Factory Method design patterns. It fetches data through JSON and XML file and provides output in HTML ,TXT and XML file format based on user request. The data generates restaurant menu based on country and timing.  ",1,0,2015,2021,1,https://github.com/keyuls/Design-Pattern-Abstract-Factory
Factory Method,World-Data-UI,"A user-interactive model which utilizes multiple design patterns, API generated data, and data-visual display through charts, graphs, and viewers. The UI includes a proxy-design login system and the main UI is designed with a Factory Method design pattern. For the data, our team streamed API-generated data into the UI with whitelisted data for error-tracking, creating a functioning World Data UI which displays user-specified data through user selected viewers.",1,0,2021,2022,1,https://github.com/oelsaye/World-Data-UI
Factory Method,Sales-Data-Analysis-of-Apple-Products,"This repository contains Data Engineering solution using ETL (Extract, Transform, Load) implementation for the sales data analysis of Apple products. The solution is designed to handle diverse data formats and is implemented on Databricks using PySpark, Python, and Databricks utilities.Factory Method Design Pattern has been implemented for reading.",1,0,2024,2024,1,https://github.com/sachin413/Sales-Data-Analysis-of-Apple-Products
Factory Method,StudentTimetableSystem,"MSc Assignment in Enterprise Software Engineering. Web application using JSP with entity persistence. 3 projects: EJB has the entity classes with factory methods and facades. Library has DTO classes and remotes for facades. Client is 'StudentTimetablingSystem' project. Focus of project is to demonstrate JSP with MVC, some design patterns and entity persistence in Java. The theme is a student timetabling system.",1,0,2019,2020,1,https://github.com/markbennison/StudentTimetableSystem
Factory Method,GenericEA,"This EA tires to find the solution of a mathematical system that I invented at random. The important stuff is the design pattern organization. The EA tries to be very generic, allowing many different operators for crossover, mutation, selection and stop criteria to be implement using the Strategy Pattern. A factory method helps initializing the EA. And a singleton fixes the random for consistent tests. Also, the ScottPlot package helps us to create an image with the line plot of the evolution.",1,0,2021,2021,1,https://github.com/LeonardoTPereira/GenericEA
Factory Method,FactoryMethod,this repo contains Factory Method design pattern implementation using C#,0,44,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/FactoryMethod
Factory Method,lab-04,Lab 4: The builder and factory method design patterns,0,10,2023,2024,1,https://github.com/cpit252/lab-04
Factory Method,FactoryMethod,design pattern,0,0,2014,2014,0,https://github.com/magiclud/FactoryMethod
Factory Method,FactoryMethod,Creational Design Pattern in C# | Factory Method Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/FactoryMethod
Factory Method,DP_factoryMethod2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_factoryMethod2
Factory Method,DP_factoryMethod1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_factoryMethod1
Factory Method,DP_factoryMethod3,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_factoryMethod3
Factory Method,FactoryMethod,GOF Design Pattern,0,0,2022,2022,1,https://github.com/hiroshiimaizumi0611/FactoryMethod
Factory Method,FactoryMethod,Design Patterns Project,0,0,2018,2024,1,https://github.com/WayneMuirECE/FactoryMethod
Factory Method,FactoryMethod,Factory Design Pattern,0,0,2019,2019,0,https://github.com/Hard-system/FactoryMethod
Factory Method,FactoryMethod,1. Design pattern,0,0,2020,2020,1,https://github.com/sebastiangilpatino/FactoryMethod
Factory Method,FactoryMethod,Design patterns exercise - FactoryMethod,0,0,2020,2020,0,https://github.com/milicaklaric/FactoryMethod
Factory Method,FactoryMethod,Factory method design pattern,0,0,2016,2016,0,https://github.com/Masyanas/FactoryMethod
Factory Method,FactoryMethod,Object-Oriented Design Patterns,0,0,2025,2025,1,https://github.com/umashankarp/FactoryMethod
Factory Method,FactoryMethod,Design Pattern Factory Method,0,0,2021,2021,1,https://github.com/aliounemane2/FactoryMethod
Factory Method,FactoryMethod,Design Patterns - FactoryMethod C#,0,0,2023,2023,1,https://github.com/guilherme294/FactoryMethod
Factory Method,factoryMethod,Factory Method design pattern,0,0,2018,2018,0,https://github.com/scyzeq/factoryMethod
Factory Method,FactoryMethod,Design Patterns - Factory Method,0,0,2020,2020,1,https://github.com/euygor/FactoryMethod
Factory Method,FactoryMethod,Estudo sobre Design Pattern,0,0,2024,2024,0,https://github.com/ricgavira/FactoryMethod
Factory Method,FactoryMethodDP,Factory Method Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/FactoryMethodDP
Factory Method,FactoryMethodPattern,Aprendendo sobre Design Pattern,0,0,2021,2021,1,https://github.com/byPombo/FactoryMethodPattern
Factory Method,FactoryMethodDesignPattern,Factory Method Design Pattern,0,0,2020,2020,1,https://github.com/mkumar02/FactoryMethodDesignPattern
Factory Method,DesignPatterns_FactoryMethod,Design Patterns Factory Method,0,0,2022,2022,0,https://github.com/geanlima/DesignPatterns_FactoryMethod
Factory Method,FactoryMethodDesignPattern,Factory Method Design Pattern,0,0,2019,2019,1,https://github.com/AlparslanPamuk/FactoryMethodDesignPattern
Factory Method,FactoryMethod,GoF factory method design pattern,0,0,2024,2024,1,https://github.com/loaidieu/FactoryMethod
Factory Method,FactoryMethod,This is Creational Design Pattern,0,0,2021,2021,1,https://github.com/pranavvichare/FactoryMethod
Factory Method,FactoryMethod,Design Patterns Factory et Singleton,0,0,2016,2016,0,https://github.com/benzait27/FactoryMethod
Factory Method,factoryMethod,Document FactoryMetho a design pattern,0,0,2023,2023,1,https://github.com/Maksuedson/factoryMethod
Factory Method,FactoryMethod,factory method design pattern example,0,0,2020,2020,1,https://github.com/fatihkarahan/FactoryMethod
Factory Method,DP_02_01_FactoryMethod,Design Pattern - Factory Method,0,0,2022,2022,1,https://github.com/RaphaelAndradeDev/DP_02_01_FactoryMethod
Factory Method,factoryMethodCSharp,Factory Method Design Pattern Example ,0,0,2020,2020,1,https://github.com/blackmamba85/factoryMethodCSharp
Factory Method,FactoryMethodTest,Design pattern de factory method,0,0,2024,2024,1,https://github.com/GustavoTBett/FactoryMethodTest
Factory Method,Factory-Method,Design Pattern Example,0,0,2021,2021,1,https://github.com/mahmutenesaydin/Factory-Method
Factory Method,FactoryMethodDesignPattern,Factory Method Design Pattern usage,0,0,2024,2024,1,https://github.com/futuretraineracademy/FactoryMethodDesignPattern
Factory Method,FactoryMethodPattern01,Exemplo C# Design Patterns Factory,0,0,2023,2023,1,https://github.com/igoPinheiro/FactoryMethodPattern01
Factory Method,Factory-Method,Design pattern :: Factory,0,0,2019,2019,1,https://github.com/onsaurav/Factory-Method
Factory Method,Factory-Method,Creational Design Patterns,0,0,2020,2020,1,https://github.com/rjiosum/Factory-Method
Factory Method,FactoryMethod,Factory Method Software Design Pattern demo,0,0,2013,2019,1,https://github.com/leroyvaughan/FactoryMethod
Factory Method,factoryMethod,Testing design pattern in factory method,0,0,2023,2023,0,https://github.com/JhonPrevitera/factoryMethod
Factory Method,design-patterns-factory-method,design patterns,0,0,2022,2022,1,https://github.com/Sutheres/design-patterns-factory-method
Factory Method,FactoryMethod,Factory Method Creational Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/FactoryMethod
Factory Method,FactoryMethodDemo,Demo aplikasi menggunakan design pattern factory,0,0,2020,2020,1,https://github.com/rasyidridha547/FactoryMethodDemo
Factory Method,FactoryMethod-01,"Design Pattern, Factory Pattern, example 01.",0,0,2016,2024,1,https://github.com/hr-ireh/FactoryMethod-01
Factory Method,FactoryMethodExamples,I made FactoryMethod design pattern samples ,0,0,2023,2023,0,https://github.com/Hakan-Ozcan/FactoryMethodExamples
Factory Method,FactoryMethodDesignPatternInCSharp,Factory method design pattern practice,0,0,2023,2023,1,https://github.com/KazuBurrows/FactoryMethodDesignPatternInCSharp
Factory Method,FactoryMethod,Implementation of the Design pattern Factory Method.,0,0,2022,2022,1,https://github.com/DeboraZandonai/FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,"Estudos sobre design patterns, factory method.",0,0,2021,2021,1,https://github.com/reinaldohneto/DesignPatterns-FactoryMethod
Factory Method,FactoryMethod,Example program for factory method design pattern,0,0,2021,2021,1,https://github.com/Vindi96/FactoryMethod
Factory Method,Factory_Method,Design pattern Factory Method,0,0,2017,2017,1,https://github.com/mihirsandeepinfo/Factory_Method
Factory Method,factory-method,Design Pattern: Factory Method,0,0,2022,2022,0,https://github.com/DeVinhoOne/factory-method
Factory Method,Factory-Method,Design Patterns: Factory Method,0,0,2025,2025,1,https://github.com/cjoshii/Factory-Method
Factory Method,Factory-Method,Design Pattern: Factory Method,0,0,2015,2015,1,https://github.com/jinguiwu/Factory-Method
Factory Method,Factory-Method,Factory design pattern presentation,0,0,2022,2022,1,https://github.com/olgaSimankova/Factory-Method
Factory Method,factory-method,Design patterns - Factory method.,0,0,2022,2022,1,https://github.com/m4t3u2/factory-method
Factory Method,FactoryMethodPHP,design pattern for Factory Method using PHP ,0,0,2018,2018,0,https://github.com/WuMingHsueh/FactoryMethodPHP
Factory Method,GameSalesApp_FDP,Factory Method Design Pattern,0,0,2022,2022,2,https://github.com/tevyuksel/GameSalesApp_FDP
Factory Method,DesignPatternFactoryMethod,Design Pattern Factory Method,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternFactoryMethod
Factory Method,Design-Patterns-Factory-Method,Design Patterns – Factory Method,0,0,2020,2020,1,https://github.com/lt1379/Design-Patterns-Factory-Method
Factory Method,factorymethod,Factory Method Design Pattern,0,0,2020,2020,1,https://github.com/SaliBatman/factorymethod
Factory Method,comp-2522-design-patterns-Blakezik,Factory Method Design Pattern,0,0,2020,2020,1,https://github.com/Blakerunner/comp-2522-design-patterns-Blakezik
Factory Method,Design-Pattern---Factory-Method,Design Pattern - Factory Method,0,0,2021,2021,0,https://github.com/michaelangelo2288/Design-Pattern---Factory-Method
Factory Method,factory-method-design-pattern,Factory Method Design Pattern,0,0,2013,2013,1,https://github.com/prithvid/factory-method-design-pattern
Factory Method,FactoryPattern,Factory Method Design Pattern,0,0,2024,2024,0,https://github.com/mahi04399/FactoryPattern
Factory Method,FactoryMethodDesignPattern_CSharp,Factory Method Design Pattern in C#,0,0,2018,2020,1,https://github.com/sudipta-chaudhari/FactoryMethodDesignPattern_CSharp
Factory Method,factory_method-pattern,Design pattern: Factory method,0,0,2021,2021,1,https://github.com/TomSawyer404/factory_method-pattern
Factory Method,FactoryPattern,Factory Method Design Pattern,0,0,2016,2016,1,https://github.com/Jacek135/FactoryPattern
Factory Method,factory-method-design-pattern,factory-method-design-pattern,0,0,2019,2019,0,https://github.com/drefir/factory-method-design-pattern
Factory Method,design-pattern-factory-method,Design Pattern - Factory Method,0,0,2023,2024,1,https://github.com/rubenfgr/design-pattern-factory-method
Factory Method,FactoryMethodPattern,Simple example of Factory Method Design Pattern,0,0,2020,2020,1,https://github.com/seryafarma/FactoryMethodPattern
Factory Method,typeScript_DesingPatternFactoryMethode,design pattern factory method,0,0,2021,2021,1,https://github.com/Iangolana/typeScript_DesingPatternFactoryMethode
Factory Method,DPWeek2FDP,Factory Method Design Pattern,0,0,2022,2022,1,https://github.com/ALinaNahidi/DPWeek2FDP
Factory Method,ECCS_2411_FactoryMethod_NHagerdorn,A demonstration of the GoF's Factory Method design pattern for ECCS 2411 Software Design Patterns,0,0,2020,2020,0,https://github.com/N-Hagerdorn/ECCS_2411_FactoryMethod_NHagerdorn
Factory Method,FactoryMethod,Java Implementation Example Book: Head First Design Patterns,0,0,2017,2017,1,https://github.com/joangerard/FactoryMethod
Factory Method,FactoryMethod,Projeto para estudo do Design Patterns Factory Method,0,0,2022,2022,1,https://github.com/patrickbtimoteo/FactoryMethod
Factory Method,FactoryMethod,design pattern factory method for spring boot project,0,0,2024,2024,1,https://github.com/eneszdmr/FactoryMethod
Factory Method,FactoryMethod,Factory method of design patterns by Specialist course,0,0,2023,2023,1,https://github.com/radiotech205/FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,Factory Method Design Pattern implementation in C#,0,0,2020,2020,1,https://github.com/AndreLars/DesignPatterns-FactoryMethod
Factory Method,FactoryMethodDesignPattern,A Factory Method Design Pattern Flutter Project,0,0,2023,2023,1,https://github.com/erkripa/FactoryMethodDesignPattern
Factory Method,factory_method,factory method of design patterns,0,0,2013,2018,1,https://github.com/wenfu/factory_method
Factory Method,FactoryMethodDP,Simple project that implements factory method design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/FactoryMethodDP
Factory Method,factory-method,Learn design-pattern: Factory-method,0,0,2021,2021,1,https://github.com/khatrn/factory-method
Factory Method,factory-method,Factory Method Creational Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/factory-method
Factory Method,FactoryMethodDesignPatternDemo,Factory method design pattern implementation in c#,0,0,2021,2021,1,https://github.com/ersaumya/FactoryMethodDesignPatternDemo
Factory Method,FactoryMethod_DesignPattern_Problem,Design Pattern Practice for Factory Method DP,0,0,2022,2022,1,https://github.com/rcpanda15594/FactoryMethod_DesignPattern_Problem
Factory Method,FactoryMethodONE,Practical exercise about the Factory Method design pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/FactoryMethodONE
Factory Method,factory-method,implements factory method design pattern,0,0,2024,2024,1,https://github.com/simin-motamedi/factory-method
Factory Method,FactoryMethodPattern,Factory Method Design Pattern with Generic Base Factory,0,0,2024,2024,1,https://github.com/Pankaj4Quest/FactoryMethodPattern
Factory Method,FactoryMethod,Repository for my Presentation about Factory Method Design Pattern,0,0,2019,2019,1,https://github.com/mhinterdorfer/FactoryMethod
Factory Method,FactoryMethod,Exemplo de Design Pattern (Factory Method) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/FactoryMethod
Factory Method,FactoryMethod,Project about the application of Factory Method design pattern.,0,0,2024,2024,1,https://github.com/MarianCypher/FactoryMethod
Factory Method,DesignPattern.FactoryMethod,Exemplo de implementação do design pattern factory method,0,0,2020,2020,1,https://github.com/LexGalante/DesignPattern.FactoryMethod
Factory Method,FactoryMethod-Design-Pattern,simple way to understand factory method design pattern,0,0,2017,2017,1,https://github.com/manikandan103222/FactoryMethod-Design-Pattern
Factory Method,Design-Patterns-FactoryMethod,Exercício 1 do livro Design Patterns em Java,0,0,2017,2017,0,https://github.com/GiovanniHessel/Design-Patterns-FactoryMethod
Factory Method,Factory-Method-1,Factory Method Design Pattern Using ,0,0,2020,2020,0,https://github.com/AsiburAkash/Factory-Method-1
Factory Method,example-factory-method,Design Pattern - Factory Method Example,0,0,2022,2022,1,https://github.com/raufmazzidan/example-factory-method
Factory Method,factory-method-pattern,C# - Factory method design pattern,0,0,2023,2023,1,https://github.com/flcristian/factory-method-pattern
Factory Method,ts_factory-method,Factory Method | Design Pattern | TypeScript,0,0,2018,2018,1,https://github.com/jalbertocoder/ts_factory-method
Factory Method,FactoryMethodApp,Sample application using the Factory Method Creational design pattern,0,0,2023,2023,2,https://github.com/20203tn128/FactoryMethodApp
Factory Method,FactoryMethodApp,Sample application using the Factory Method creational design pattern,0,0,2023,2023,1,https://github.com/RubenLD/FactoryMethodApp
Factory Method,DesignPatterns-FactoryMethod,,0,0,2024,2024,1,https://github.com/wep1980/DesignPatterns-FactoryMethod
Factory Method,DesignPatterns_FactoryMethod,,0,0,2021,2021,1,https://github.com/glucaas/DesignPatterns_FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,,0,0,2021,2021,1,https://github.com/DanielMachado29/DesignPatterns-FactoryMethod
Factory Method,DesignPatterns-FactoryMethods,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-FactoryMethods
Factory Method,DesignPatterns_FactoryMethod,Factory method is one of the creational design patterns. My solution contains two examples for it. Please read the readme files. It can help a lot to understand I did.,0,0,2020,2020,1,https://github.com/Kvintasz/DesignPatterns_FactoryMethod
Factory Method,DesignPatterns_FactoryMethod,,0,0,2024,2024,1,https://github.com/Freedom-Coding/DesignPatterns_FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,Factory Method implementation exemple.,0,0,2022,2022,0,https://github.com/Mavsousa30/DesignPatterns-FactoryMethod
Factory Method,DesignPatterns_FactoryMethod,,0,0,2019,2019,1,https://github.com/byLLIPyT/DesignPatterns_FactoryMethod
Factory Method,FactoryMethod,An illustration of the Factory Method Design Pattern in C++,0,0,2012,2014,1,https://github.com/abrahamkoshy/FactoryMethod
Factory Method,FactoryMethod,This is the implementation for the factory method design pattern,0,0,2021,2021,0,https://github.com/ValentinaMo/FactoryMethod
Factory Method,Factory-Method,Aplicando o design pattern - Factory Method ,0,0,2023,2023,1,https://github.com/diegomaustem/Factory-Method
Factory Method,FactoryMethod,This is an Example of using Factory method design patterns ,0,0,2021,2021,0,https://github.com/zeyadBadawy/FactoryMethod
Factory Method,factory-method,Design Pattern Factory method in java,0,0,2023,2023,1,https://github.com/GauravShripad989/factory-method
Factory Method,FactoryMethod,https://refactoring.guru/ko/design-patterns/factory-method/cpp/example,0,0,2023,2023,1,https://github.com/gnidoclaro/FactoryMethod
Factory Method,design-pattern-factory,Design pattern practice: factory method,0,0,2020,2020,0,https://github.com/wenchin77/design-pattern-factory
Factory Method,DesignPatterns-FactoryMethod,,0,0,2014,2014,1,https://github.com/renatoch/DesignPatterns-FactoryMethod
Factory Method,DesignPatterns-FactoryMethod,,0,0,2021,2021,0,https://github.com/GabrielBronte/DesignPatterns-FactoryMethod
Factory Method,Java-Factory-Method-Design-Pattern,Java-Factory-Method-Design-Pattern,0,0,2021,2021,1,https://github.com/Docsconsole/Java-Factory-Method-Design-Pattern
Factory Method,Factory-Method-Design-Pattern,Factory Method Design Pattern Example,0,0,2022,2022,1,https://github.com/wwarunoda/Factory-Method-Design-Pattern
Factory Method,Design_Pattern_Factory_Method,Implement Design_Pattern_Factory_Method,0,0,2022,2022,1,https://github.com/Mithu0229/Design_Pattern_Factory_Method
Factory Method,dp-creational-factory-method,Design Pattern: Creational - Factory Method,0,1,2020,2020,1,https://github.com/una-eif204-progra2-master/dp-creational-factory-method
Factory Method,design-patterns-static-factory-method,Design Patterns - Static Factory Method,0,0,2024,2024,1,https://github.com/NelsonBN/design-patterns-static-factory-method
Factory Method,factory-method-design-pattern,learn factory method design pattern,0,0,2019,2019,1,https://github.com/arunc700/factory-method-design-pattern
Factory Method,csharp-factory-method-pattern,csharp factory method design pattern,0,0,2022,2022,0,https://github.com/MarshalOfficial/csharp-factory-method-pattern
Factory Method,CSharpDP_Creational_Factory,Creational Factory Method Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_Factory
Factory Method,Factory-Method-Design-Pattern-Demo,Factory-Method-Design-Pattern-Demo,0,0,2020,2020,1,https://github.com/vishwaskapte/Factory-Method-Design-Pattern-Demo
Factory Method,example_DesignPattern,Factory Method Design Pattern Example,0,0,2023,2023,1,https://github.com/Jatinder303/example_DesignPattern
Factory Method,AP_HW4_A3,Factory Method Design pattern implementation,0,0,2024,2024,1,https://github.com/Kiarash-Sanei/AP_HW4_A3
Factory Method,IFT232_labo6,Factory Method design pattern practice,0,0,2020,2020,1,https://github.com/zacdezgeo/IFT232_labo6
Factory Method,real-estate,Factory Method & Builder Design Pattern,0,0,2023,2023,1,https://github.com/ayahosnii/real-estate
Factory Method,typescript-factory-method-pattern,Implement Factory Method Design Pattern,0,0,2021,2021,1,https://github.com/wahyufeb/typescript-factory-method-pattern
Factory Method,factoryMethod,This repository is intended for practice  of Design Patterns methods,0,0,2024,2024,1,https://github.com/Araldi42/factoryMethod
Factory Method,FactoryMethodDesignPattern,Factory Method Design Pattern for net 6.0 console,0,0,2022,2022,1,https://github.com/sensationalkunlex/FactoryMethodDesignPattern
Factory Method,FactoryMethodDesignPattern,Applying the abstract factory design pattern on Car famillies ,0,0,2023,2023,1,https://github.com/yacinediaf/FactoryMethodDesignPattern
Factory Method,FactoryMethodApp,Sample .NET application using the Factory Method  creational design pattern.,0,0,2023,2023,2,https://github.com/alrxrn2002/FactoryMethodApp
Factory Method,FactoryMethodApp,Sample .NET application using the Factory Method creational design pattern.,0,0,2023,2023,1,https://github.com/HectorMarquina/FactoryMethodApp
Factory Method,FactoryMethodPattern,This project tells about Factory Method Design Pattern in C#,0,0,2020,2020,1,https://github.com/dnomesh/FactoryMethodPattern
Factory Method,FactoryMethodApp,Sample .NET application using the Factory Method creational design pattern.,0,0,2023,2023,2,https://github.com/Gidggidonni98/FactoryMethodApp
Factory Method,FactoryMethodApp,Sample .NET application using the Factory Method creational design pattern.,0,0,2023,2023,2,https://github.com/UlisesStamatio/FactoryMethodApp
Factory Method,Creational-FactoryMethod,This is a short implementation of the FactoryMethod design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Creational-FactoryMethod
Factory Method,FactoryMethodApp,Sample Application .NET using the Factory Method creational design pattern,0,0,2023,2023,2,https://github.com/ApartCrane/FactoryMethodApp
Factory Method,FactoryMethodApp,Sample .NET application using the Factory Method creational design pattern.,0,0,2023,2023,2,https://github.com/20203tn082/FactoryMethodApp
Factory Method,FactoryMethodDP,A demo project to explain the abstract factory design pattern,0,0,2023,2023,1,https://github.com/pjacquemin/FactoryMethodDP
Factory Method,FactoryMethodTemplate,API para exemplificação do funcionamento utilizando design pattern factory method,0,0,2023,2023,1,https://github.com/AlanEdward19/FactoryMethodTemplate
Factory Method,FactoryMethodApp,Sample .NET application using the Factory Method creational design pattern.,0,0,2023,2023,1,https://github.com/SamuellCano/FactoryMethodApp
Factory Method,FactoryMethod,This repository is basic explanation of the Factory Method Design pattern,0,0,2022,2022,1,https://github.com/sasikamiyuran/FactoryMethod
Factory Method,Factory_Method_Typescript,Design Patterns in Typescript - Factory_Method,0,0,2021,2021,1,https://github.com/GauravThakkar01/Factory_Method_Typescript
Factory Method,FactoryMethod,Simple Application demonstrating the implementation of the factory method design pattern,0,0,2024,2024,1,https://github.com/MarioCMD/FactoryMethod
Factory Method,Abstract-Factory-Method,One of the Creational Design Patterns,0,0,2019,2019,1,https://github.com/mukeshkrr/Abstract-Factory-Method
Factory Method,DesignPatterns-Cre-FactoryMethod,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Cre-FactoryMethod
Factory Method,FactoryMethod,Ini adalah contoh aplikasi sederhana Creational Design Pattern menggunakan Factory Method,0,0,2020,2020,1,https://github.com/rahadiandwiputra/FactoryMethod
Factory Method,DesignPatterns_FactoryMethod_2,,0,0,2021,2021,1,https://github.com/glucaas/DesignPatterns_FactoryMethod_2
Factory Method,factory-method-java,One of the Creational Design Patterns,0,0,2019,2019,1,https://github.com/mukeshkrr/factory-method-java
Factory Method,Factory-Method,Sample code for factory method design pattern.,0,0,2020,2020,1,https://github.com/f-kh/Factory-Method
Factory Method,factory-method,Try Design Patterns / Creational Patterns / Factory Method,0,0,2022,2022,1,https://github.com/AldiRvn/factory-method
Factory Method,factory-method,Example of the design pattern factory method,0,0,2023,2023,1,https://github.com/DenilsonNil/factory-method
Factory Method,factory-method,Project to learn about software design patterns,0,0,2020,2020,1,https://github.com/rafamagalhas/factory-method
Factory Method,FactoryMethodAppDos,Sample Application .NET using the Factory Method creational design pattern,0,0,2023,2023,0,https://github.com/ApartCrane/FactoryMethodAppDos
Factory Method,FactoryMethodDesignPattern,Example of factory method design pattern and OOP in Java. ,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/FactoryMethodDesignPattern
Factory Method,FactoryMethodTHREE,The third practical exercise about the creational design pattern Factory Method,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/FactoryMethodTHREE
Factory Method,FactoryMethodTWO,Practical exercise about the creational design pattern named the Factory Method,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/FactoryMethodTWO
Factory Method,FactoryMethod,Using factory method (design pattern) to add items on the shopping cart,0,0,2019,2020,1,https://github.com/SeniorFlacko/FactoryMethod
Factory Method,FactoryMethod,This repository contains the implementation of the Creational Design Pattern: Factory Method.,0,0,2025,2025,1,https://github.com/KillerZeus666/FactoryMethod
Factory Method,design-pattern-factory-method,Design Patterns: The Factory Method Pattern,0,0,2021,2021,0,https://github.com/vitalex975/design-pattern-factory-method
Factory Method,Design-Pattern---Factory-Method,Estudo do design pattern factory method,0,0,2016,2016,1,https://github.com/vitorfelipep/Design-Pattern---Factory-Method
Factory Method,design_pattern_factory_method,Exemplo de Design Pattern Factory Method.,0,0,2020,2022,1,https://github.com/D-E-F-E-A-T/design_pattern_factory_method
Factory Method,FactoryMethodApp9B,Sample .NET application using the Factory Method creational design pattern.,0,0,2023,2023,2,https://github.com/omarmoralesutez/FactoryMethodApp9B
Factory Method,java_gof_factory_method,Design pattern factory method in java,0,0,2015,2015,1,https://github.com/osbominix/java_gof_factory_method
Factory Method,FactoryMethodApp9B,Sample .NET application using the Factory Method creational design pattern.,0,0,2023,2023,2,https://github.com/LuisManuelPozoDLT6/FactoryMethodApp9B
Factory Method,DesignPatterns_Adaptee_FactoryMethod_State,,0,0,2022,2022,1,https://github.com/yairavital/DesignPatterns_Adaptee_FactoryMethod_State
Factory Method,factory-method-1,factory method design pattern. (just an exercise),0,0,2023,2023,1,https://github.com/codedcauliflower/factory-method-1
Factory Method,factory-method-pattern,Explanation of the factory method design pattern,0,0,2023,2023,1,https://github.com/rdayok/factory-method-pattern
Factory Method,abstract-factory-method,A project to implement Java Design Pattern,0,0,2022,2022,1,https://github.com/hamza21-code/abstract-factory-method
Factory Method,Factory-Method-Demo,Demo code for Factory Method Design Pattern,0,0,2024,2024,1,https://github.com/LeThanhPhongWork/Factory-Method-Demo
Factory Method,CSharpFactoryMethod-,.NET C# Factory Method Design Pattern Example,0,0,2019,2019,1,https://github.com/pr-dev-repo/CSharpFactoryMethod-
Factory Method,patterns-factory-method,Treinamento aplicado para DEVs sobre design Patterns,0,0,2022,2022,1,https://github.com/Daniel-tdl/patterns-factory-method
Factory Method,DesignPattern_FactoryMethod,This sample of java springboot show factory method of design patterns,0,0,2024,2024,1,https://github.com/majid1394/DesignPattern_FactoryMethod
Factory Method,AbstractFactoryMethod,"An implementation of ""Abstract factory"" design pattern",0,0,2023,2023,1,https://github.com/vladdubceac/AbstractFactoryMethod
Factory Method,factory-method,minimal example factory method design pattern using php,0,0,2019,2019,1,https://github.com/isahlabbo/factory-method
Factory Method,Factory-Method,Pizza ordering system using factory method design pattern,0,0,2024,2024,3,https://github.com/Seyza0508/Factory-Method
Factory Method,FactoryMethodExample,"This is an example of ""Factory method"" design pattern implementation in Java",0,0,2023,2023,1,https://github.com/vladdubceac/FactoryMethodExample
Factory Method,DesignPatternsInCSharp,"Design Patterns in C#, Factory Method",0,1,2016,2016,1,https://github.com/mwasim/DesignPatternsInCSharp
Factory Method,ElectricityBillCalculation,Implementation of Factory Method Design Pattern,0,0,2024,2024,1,https://github.com/klam-12/ElectricityBillCalculation
Factory Method,FactoryDemo,Esemplificativo per Design Pattern Factory Method,0,0,2019,2019,1,https://github.com/Informatica-5-anno/FactoryDemo
Factory Method,abstract-factory,implements abstract factory method design pattern,0,0,2024,2024,1,https://github.com/simin-motamedi/abstract-factory
Factory Method,factorymethoddesginpatter,Factory method design pattern in Java,0,0,2022,2022,1,https://github.com/akarshbarar/factorymethoddesginpatter
Factory Method,factory_method_design_pattern_ruby,factory method design pattern in ruby,0,0,2020,2020,1,https://github.com/Winy81/factory_method_design_pattern_ruby
Factory Method,Jungle-animal-sound,"Design patterns, Abstract factory, factory method",0,0,2022,2022,1,https://github.com/gupta1dinesh/Jungle-animal-sound
Factory Method,exporter,Factory method design pattern simple example,0,0,2017,2017,0,https://github.com/aokicassio/exporter
Factory Method,tic-tac-toe,"design pattern practice (IIFEs, factory methods)",0,0,2024,2024,1,https://github.com/Gary-Qin/tic-tac-toe
Factory Method,FactoryPattern,Implementing the factory method design pattern,0,0,2021,2021,1,https://github.com/afpratt/FactoryPattern
Factory Method,cake-shops,builder and factory-method design pattern.,0,0,2020,2023,1,https://github.com/CristinaRacovita/cake-shops
Factory Method,laravel-factory-method-design-pattern,Laravel Factory Method Design Pattern Tutorial,0,0,2023,2023,1,https://github.com/BabakNiknejad/laravel-factory-method-design-pattern
Factory Method,Homework1DesignPattern,Homework 1 Design Pattern: Factory Method,0,1,2022,2022,1,https://github.com/aishahjoe/Homework1DesignPattern
Factory Method,Design_Pattern_Factory_Method,Factory Method Design Pattern Sample By Java,0,0,2021,2021,1,https://github.com/pedramkarevan/Design_Pattern_Factory_Method
Factory Method,Factory-Method-In-Typescript,Implement Factory method Design pattern in typescript,0,0,2022,2022,1,https://github.com/medezzitouni/Factory-Method-In-Typescript
Factory Method,Simon8029.DesignPatterns.FactoryMethodPattern,,0,0,2017,2017,1,https://github.com/PlumpMath/Simon8029.DesignPatterns.FactoryMethodPattern
Factory Method,study_csharp_architecture_designPatterns_factoryMethods,,0,0,2022,2022,1,https://github.com/rsg-roberth/study_csharp_architecture_designPatterns_factoryMethods
Factory Method,Module2-DesignPatterns-TH-factoryMethods,,0,0,2022,2022,1,https://github.com/TruongMai98/Module2-DesignPatterns-TH-factoryMethods
Factory Method,FactoryMethod,Envio de mensagens que faz uso do padrão de projeto (design patterns) Factory Method.,0,0,2020,2023,1,https://github.com/Gwolner/FactoryMethod
Factory Method,FactoryMethod,Apresentação do Padrão de Projeto FactoryMethod em Python (Design Patterns) - Programação Orientada a Objeto,0,1,2023,2023,1,https://github.com/Joao-Victor1/FactoryMethod
Factory Method,TE_Batch10_FactoryMethod_DesignPatterns,,0,0,2021,2021,1,https://github.com/SACHINHR456/TE_Batch10_FactoryMethod_DesignPatterns
Factory Method,CSharp.DesignPatterns.3.Creational.FactoryMethod,,0,0,2021,2021,1,https://github.com/oscarcortez/CSharp.DesignPatterns.3.Creational.FactoryMethod
Factory Method,FactoryMethod,Implementation of well-known factory creational design pattern in form of class in C++,0,0,2024,2024,1,https://github.com/bartekk3007/FactoryMethod
Factory Method,factory-method-pattern,example of factory method design pattern in c#,0,0,2021,2021,1,https://github.com/sewwandikarunarathna/factory-method-pattern
Factory Method,BankingSystemFactoryMethod,Banking System using Factory Method Design Pattern,0,0,2024,2024,1,https://github.com/hebaskhail/BankingSystemFactoryMethod
Factory Method,factory_method_pattern,Implementation of Factory method design pattern in Java.,0,0,2024,2024,1,https://github.com/SarvarVanoo/factory_method_pattern
Factory Method,Factory-method-,Projeto voltado em implementar o design patterns Factory method,0,0,2024,2024,1,https://github.com/matheusmartinsInsper/Factory-method-
Factory Method,patterns-factory-method,A demonstration of the Factory Method design pattern,0,0,2023,2023,1,https://github.com/michaellucasnzl/patterns-factory-method
Factory Method,Pizzeria-Factory-Method,"Simple program to implement ""Factory Method"" Design Pattern!",0,0,2020,2020,1,https://github.com/multible/Pizzeria-Factory-Method
Factory Method,CarFactoryMethod,Design Patterns (project created for Java programming classes),0,0,2017,2018,1,https://github.com/Izzzu/CarFactoryMethod
Factory Method,Factory-Method,Exemplo simples do Design Pattern Factory Method em java.,0,0,2018,2018,1,https://github.com/brunonlima/Factory-Method
Factory Method,FACTORY_METHOD,Example connection in database use design pattern Factory Method ,0,0,2020,2020,1,https://github.com/valdirsillva/FACTORY_METHOD
Factory Method,Factory-Method-Pattern-Team-4,Factory method design pattern implemented in Java.,0,0,2023,2023,3,https://github.com/UnusG/Factory-Method-Pattern-Team-4
Factory Method,book-factory-method-pattern-example,C# - Factory method design pattern book example,0,0,2023,2023,1,https://github.com/flcristian/book-factory-method-pattern-example
Factory Method,Design_Patterns_Project,Factory Method/Abstract Factory Method -> E-Shopping system,0,0,2023,2023,1,https://github.com/MohamedBassem576/Design_Patterns_Project
Factory Method,Design-Patterns-FactoryMethod,,0,0,2019,2019,1,https://github.com/IamMartinPeek/Design-Patterns-FactoryMethod
Factory Method,DesignPatternFactoryMethod,Estudo prático sobre Design Patterns - leia o readme ,0,0,2021,2021,1,https://github.com/sgtWalker/DesignPatternFactoryMethod
Factory Method,factory-method-typescript-example, Code example using design patterns factory with typescript,0,0,2021,2021,0,https://github.com/AllanScala1991/factory-method-typescript-example
Factory Method,factory-method-design-pattern,Example implementation of the factory method design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/factory-method-design-pattern
Factory Method,dp-factory-method,Java code sample for Creational Design Pattern: Factory Method ,0,0,2024,2024,1,https://github.com/sserpilozdemir/dp-factory-method
Factory Method,pattern-factory-method,Projeto em Java utilizando o Design Pattern Factory Method,0,0,2021,2021,1,https://github.com/vanessacardoso/pattern-factory-method
Factory Method,Factory_Method,Example of the Creational design pattern Factory Method in Java.,0,0,2016,2016,1,https://github.com/levyoav/Factory_Method
Factory Method,Factory_Method,This repository is a practice of the design patterns exercises.,0,0,2021,2021,1,https://github.com/Anier-98/Factory_Method
Factory Method,DesignPatterns_Factory-method,,0,0,2024,2024,1,https://github.com/claudiovdev/DesignPatterns_Factory-method
Factory Method,dpcreate-factorym_dafanasyev,Creational DESIGN PATTERNS: Factory Method( Virtual Constructor ),0,0,2022,2022,1,https://github.com/mslobodyanyuk/dpcreate-factorym_dafanasyev
Factory Method,FileGenerator,Factory method and composite design patterns implementation,0,0,2023,2023,1,https://github.com/mihaela111/FileGenerator
Factory Method,FactoryDPConsoleApp,Practicing Factory method design pattern for shapes ,0,0,2025,2025,0,https://github.com/MahnoorIqbal-6565/FactoryDPConsoleApp
Factory Method,FitnessClub,C# Factory Method Фабричный Метод | Design Patterns,0,0,2022,2022,1,https://github.com/Erykalin1986/FitnessClub
Factory Method,fabrica,Project to study Factory Method Design Pattern,0,0,2018,2018,1,https://github.com/sidneynakatani/fabrica
Factory Method,AutomationDesignPattern,Builder pattern and Factory Method design pattern ,0,0,2022,2022,1,https://github.com/karthikpalameri/AutomationDesignPattern
Factory Method,goit-pythonweb-hw-01,Design patterns. Factory method. SOLID design principles.,0,0,2024,2024,1,https://github.com/LesyaTkachuk/goit-pythonweb-hw-01
Factory Method,DesignPatterns4Examples,Design Patterns Singleton Factory Method Facade Observer ,0,0,2023,2023,1,https://github.com/AJPTechnology/DesignPatterns4Examples
Factory Method,Encryption-Decryption,An introduction to Factory Method Design Pattern,0,0,2020,2020,1,https://github.com/dstolis/Encryption-Decryption
Factory Method,factorymethod,Factory Method design pattern example in java,0,0,2025,2025,1,https://github.com/nahidibrahimov/factorymethod
Factory Method,CSharpDP_Creational_Factory2,Creational Factory Method Design Pattern 2nd example,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Creational_Factory2
Factory Method,3-2-DesignPatterns-CustomerMailFactory,"Design Patterns in Object-Oriented Programming Fourth Tasks ""Factory [Method] Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-CustomerMailFactory
Factory Method,ProjetoGoF-FactoryMethod,"Atividade de Design Patterns (GoF), usando Factory Method (Padrão de Criação / Construção) em Java",0,0,2023,2025,1,https://github.com/MathLopes29/ProjetoGoF-FactoryMethod
Factory Method,FactoryMethodStaticMethodCreator,"An example of ""static method creator"" for Factory Method design pattern realized in Java",0,0,2023,2023,1,https://github.com/vladdubceac/FactoryMethodStaticMethodCreator
Factory Method,FactoryMethodConcreteCreator,"An example of the Factory Method design pattern implementation with concrete creator, written in Java",0,0,2023,2023,1,https://github.com/vladdubceac/FactoryMethodConcreteCreator
Factory Method,factory_method_design_pattern,A simple factory method for implementation of design pattern,0,0,2021,2021,1,https://github.com/gyan9427/factory_method_design_pattern
Factory Method,swiftFactoryMethodDP,"🏭 Factory Method Design Pattern, in Swift 3.0",0,1,2017,2017,1,https://github.com/adagio/swiftFactoryMethodDP
Factory Method,factory-method-java,Example how to implement factory method design pattern with java,0,0,2024,2024,1,https://github.com/aguileraDev/factory-method-java
Factory Method,demo_Factory_Method,Exemplo de uso do Design Pattern Factory Method em java,0,0,2024,2024,1,https://github.com/Vamarall/demo_Factory_Method
Factory Method,StaticFactoryMethodProject,Uma aplicação utilizando o Design Pattern Static Factory Method,0,0,2018,2018,1,https://github.com/rafaelraah/StaticFactoryMethodProject
Factory Method,factory-method-php,Example implementing the design pattern factory method in simple php,0,0,2021,2021,1,https://github.com/elkyndiosa/factory-method-php
Factory Method,PhpDesignPatterns-FactoryMethod,FactoryMethod,0,0,2018,2023,1,https://github.com/Jagepard/PhpDesignPatterns-FactoryMethod
Factory Method,JavaDesignPatterns-FactoryMethod,FactoryMethod,0,0,2018,2020,1,https://github.com/Jagepard/JavaDesignPatterns-FactoryMethod
Factory Method,CsDesignPatterns-FactoryMethod,FactoryMethod,0,0,2018,2018,1,https://github.com/Jagepard/CsDesignPatterns-FactoryMethod
Factory Method,JavaDesignPatterns.FactoryMethod,,0,0,2021,2021,1,https://github.com/Shaposhnikov-Nick/JavaDesignPatterns.FactoryMethod
Factory Method,FactoryMethodPracticeMy,토비스프링의 책과 https://refactoring.guru/design-patterns/factory-method 여기를 참조하여 저만의 방식대로 팩토리메소드를 구현 해봤습니다.,0,0,2023,2023,1,https://github.com/LEECHUNGHEONS/FactoryMethodPracticeMy
Factory Method,Pizza_FactoryMethod,"Progrma en java que describe el patron Factory Method , se basa en el libro Head Design Patterns ",0,0,2023,2023,1,https://github.com/ArzateOscar33/Pizza_FactoryMethod
Factory Method,design-patterns,Abstract Factory & Factory method,0,0,2023,2024,1,https://github.com/adfcf/design-patterns
Factory Method,factory-method,The Factory Method is a creational design pattern that provides an interface,0,0,2023,2023,1,https://github.com/alvaro-veiga/factory-method
Factory Method,php-factory-method-pattern,simple ticketing system - using PHP oop & Factorty method design pattern,0,0,2023,2023,1,https://github.com/OpadaAlzaiede/php-factory-method-pattern
Factory Method,factory-method-design-pattern-sample,A Java project that illustrates the Factory Design Pattern,0,0,2023,2023,1,https://github.com/NdiranguMuchai/factory-method-design-pattern-sample
Factory Method,TypescriptDesignPatterns01-FactoryMethod,,0,0,2019,2022,1,https://github.com/rafakil/TypescriptDesignPatterns01-FactoryMethod
Factory Method,factory-method,Projeto desenvolvido para exemplificar a implementação do Design Pattern Factory Method em Java.,0,0,2023,2023,1,https://github.com/gabsgc/factory-method
Factory Method,design-patterns-factorymethod,Studies for Factory Method,0,0,2019,2019,1,https://github.com/diedona/design-patterns-factorymethod
Factory Method,WinForms_Facebook_App_2,"Design patterns implementation C# - Factory method, visitor, command",0,0,2018,2019,2,https://github.com/Uri-Shapira/WinForms_Facebook_App_2
Factory Method,FactoryWidget,An implementation of the Factory Method design pattern,0,0,2015,2015,0,https://github.com/sassi67/FactoryWidget
Factory Method,FactoriesPatterns,Abstract Factory and Factory Method Creational Design Patterns,0,0,2018,2019,1,https://github.com/KarimM7mad/FactoriesPatterns
Factory Method,Creative-Assignment,Design Patterns Creative Assignment On Abstract Factory Method,0,0,2022,2022,1,https://github.com/SwatiShekokar/Creative-Assignment
Factory Method,dp-creational-factory-method-params,Design Pattern: Creational - Factory Method with params in the constructor,0,1,2020,2020,1,https://github.com/una-eif204-progra2-master/dp-creational-factory-method-params
Factory Method,Factory-Method-Design-Pattern-Example,Little example and learning project for factory method design pattern,0,0,2024,2024,1,https://github.com/furkanBilici/Factory-Method-Design-Pattern-Example
Factory Method,AppFactoryMethod,Estudos relacionados a C# - Design Patterns: (Pattern Factory Method). Projeto Console Application ,0,0,2021,2021,1,https://github.com/JTBCode86/AppFactoryMethod
Factory Method,Factory-Method-Design-Pattern,This repo contains pseudocode of Factory method design pattern in JAVA,0,0,2023,2023,1,https://github.com/samarth36483/Factory-Method-Design-Pattern
Factory Method,FactoryPatternAppLogistica,https://refactoring.guru/es/design-patterns/factory-method,0,0,2021,2021,1,https://github.com/rominamenacho/FactoryPatternAppLogistica
Factory Method,AbstractFactoryMethodExample,"An example of ""Abstract Factory method"" design pattern implemented in Java",0,0,2023,2023,1,https://github.com/vladdubceac/AbstractFactoryMethodExample
Factory Method,Factory-Method-Pattern-Java,Design Pattern  implemented in Java programming language and Eclispe IDE used,0,0,2020,2020,1,https://github.com/arbainrahat/Factory-Method-Pattern-Java
Factory Method,DesignPatterns,"Builder, Singleton and Factory Method Design Patterns + Test Cases",0,0,2014,2014,0,https://github.com/210016299/DesignPatterns
Factory Method,Ejemplo-FactoryMethod,Ejemplo de factory Method... Ejemplo de código abierto tomado de: https://refactoring.guru/es/design-patterns/factory-method/python/example,0,0,2022,2022,1,https://github.com/dragon-014/Ejemplo-FactoryMethod
Factory Method,designPatterns-prototypeFactory,College activity about prototype and Factory Method patterns.,0,0,2021,2021,1,https://github.com/euaaron/designPatterns-prototypeFactory
Factory Method,FactoryMethod,"Um exemplo da implementação do Design Pattern Factory Method em .net Core 3.1, simulando uma implementação com múltiplos bancos de dados",0,0,2021,2021,1,https://github.com/rafaelraah/FactoryMethod
Factory Method,designer-patterns-factory-method,Designer Pattern - Factory Method,0,0,2024,2024,1,https://github.com/christian-jb/designer-patterns-factory-method
Factory Method,apply-factory-method,Bài tập phần Nguyên lý SOLID và Design Pattern: Áp dụng Factory Method ,0,0,2018,2018,1,https://github.com/WBD-Java/apply-factory-method
Factory Method,factory-method-in-kotlin,An example written with kotlin of the Factory Method Design Pattern implementation,0,0,2024,2024,1,https://github.com/VictorTurraF/factory-method-in-kotlin
Factory Method,DesignPatterns,"Project with design patterns: Iterator, Singleton, Observator, Decorator, Factory Method",0,0,2021,2021,1,https://github.com/MateuszKozik/DesignPatterns
Factory Method,DesignPatterns,"Singleton, Factory method, Adapter, Facade, Command, Mediator, Observer, Repository, Builder",0,0,2022,2022,1,https://github.com/Xakimov1610/DesignPatterns
Factory Method,FactoryMethodDesignPattern,This is a sample C# implementation of a Factory Method design pattern used to implement a user interactive svg canvas,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/FactoryMethodDesignPattern
Factory Method,DesignPatternsImplementation,Implementation of Factory and Factory Method Design Patterns in Python,0,0,2018,2018,1,https://github.com/vintrojan/DesignPatternsImplementation
Factory Method,Factory-method-design-pattern,I provided is an example of the Factory Method design pattern in Java,0,0,2023,2023,1,https://github.com/ashutoshbhoyar/Factory-method-design-pattern
Factory Method,2018-03-13-factory-method,Sample code for the Melbourne C++ Meetup's Software Design Patterns talks,0,0,2018,2018,1,https://github.com/melbourne-cpp/2018-03-13-factory-method
Factory Method,EPAMFactoryMethod,Get random figures using the factory method design pattern.,0,0,2019,2019,0,https://github.com/SergeiOkon/EPAMFactoryMethod
Factory Method,Design-Patterns-Practice-01,"Factory method, bridge and singleton",0,0,2024,2024,1,https://github.com/PedroHFSO/Design-Patterns-Practice-01
Factory Method,PAO-Homework-2,Implementation of design patterns in java: factory method & strategy.,0,0,2022,2023,1,https://github.com/BogdanPopel/PAO-Homework-2
Factory Method,design-patterns,https://refactoring.guru/design-patterns/factory-method/go/example,0,0,2024,2024,1,https://github.com/PeppyDays/design-patterns
Factory Method,supermarket,supermarket checkout system implemented using factory method design pattern,0,0,2024,2024,2,https://github.com/ilcande/supermarket
Factory Method,factory_dp_typescript,Factory method and Abstract Factory Design Patterns in TypeScript,0,0,2020,2020,1,https://github.com/edkaresli/factory_dp_typescript
Factory Method,CarWashing,Example of use of the Factory Method Design Pattern,0,0,2022,2022,1,https://github.com/inesinesitaines/CarWashing
Factory Method,BL_WCF_WS_Factory,"Factory Method Design pattern, OOP Polymorphism, SQLServer and MSAccess",0,0,2017,2017,1,https://github.com/choonkeun/BL_WCF_WS_Factory
Factory Method,design-patterns-factory-method,Application using factory method pattern,0,0,2020,2020,0,https://github.com/guilhermerm-dev/design-patterns-factory-method
Factory Method,UG-factories-cs,"Design Patterns homework: Simple factory, Factory method, Abstract factory",0,0,2021,2021,1,https://github.com/mrybarczyk/UG-factories-cs
Factory Method,Design-Patterns,"Testing design patterns, Singleton, Facade, Simple Factory, Factory Method",0,0,2022,2022,1,https://github.com/ThanosMa/Design-Patterns
Factory Method,design-patterns-factory-method,Padrão de projeto - Factory Method,0,0,2019,2019,1,https://github.com/kevinPugliese/design-patterns-factory-method
Factory Method,FactoryMethodDesignPattern,"This repository demonstrates the Factory Design Pattern for managing JDBC connections to various databases such as MySQL, PostgreSQL, and Oracle in Java.",0,0,2025,2025,1,https://github.com/pavanpadamata26/FactoryMethodDesignPattern
Factory Method,FactoryPattern,How to implement factory method design pattern in .Net,0,0,2021,2021,1,https://github.com/ssukhpinder/FactoryPattern
Factory Method,PizzaStore,"An Introduction to the Factory Method Design pattern based on the ""Head First Design Patterns""",0,0,2020,2020,1,https://github.com/demery12/PizzaStore
Factory Method,go-design-patterns-creational-factory-method,Implementation of Factory method,0,0,2024,2024,1,https://github.com/rionhalili/go-design-patterns-creational-factory-method
Factory Method,factory-method-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/factory-method-design-patterns
Factory Method,design-patterns-factory-method,,0,0,2023,2023,1,https://github.com/Henderson-da-rocha-porfirio/design-patterns-factory-method
Factory Method,design-patterns-factory-method,,0,0,2021,2021,1,https://github.com/Machadofabio/design-patterns-factory-method
Factory Method,Design_Patterns_Factory_method,"O Factory Method define um método, que deve ser usado para criar objetos em vez da chamada direta ao construtor (operador new). As subclasses podem substituir esse método para alterar a classe de objetos que serão criados.(Fonte: https://refactoring.guru/pt-br/design-patterns/factory-method/csharp/example)",0,0,2023,2023,1,https://github.com/lucasDSBR/Design_Patterns_Factory_method
Factory Method,Design_Patterns_Factory_Method,Creates an instance of several derived classes,0,0,2017,2017,1,https://github.com/TaharLOUKIL/Design_Patterns_Factory_Method
Factory Method,design-patterns-factory-method,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-factory-method
Factory Method,design-patterns-factory-method,,0,0,2017,2017,1,https://github.com/sandy3ind/design-patterns-factory-method
Factory Method,Design_Patterns_Factory_Method,,0,0,2017,2017,1,https://github.com/wesley17/Design_Patterns_Factory_Method
Factory Method,Design-Patterns-Factory-Method,,0,0,2022,2022,1,https://github.com/juntyme/Design-Patterns-Factory-Method
Factory Method,Design-Patterns--Factory-Method,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--Factory-Method
Factory Method,Factory-Method-Design-Patterns,This project was made using C# to represent a design pattern: factory method. The problem chosen was: Clothes.,0,0,2024,2024,2,https://github.com/AdrielCosta420/Factory-Method-Design-Patterns
Factory Method,designer-patterns-factory-method,,0,0,2024,2024,1,https://github.com/Christiangsn/designer-patterns-factory-method
Factory Method,Design-Patterns-Factory-Method,,0,0,2024,2024,1,https://github.com/LucasLopes777/Design-Patterns-Factory-Method
Factory Method,Design-Patterns,"Decorator, adapter, prototype, factory method, abstract factory",0,0,2017,2017,1,https://github.com/omarushchak/Design-Patterns
Factory Method,Design-Patterns,Factory Method and Builder Example with food,0,0,2024,2024,1,https://github.com/KKDinev20/Design-Patterns
Factory Method,design_patterns-factory_method,,0,0,2022,2022,1,https://github.com/wonsz1/design_patterns-factory_method
Factory Method,design_pattern_factory_method,"Develop a system that uses the pattern given in class. ""Factory Method"" design pattern. ",0,0,2021,2024,1,https://github.com/sc0v0ne/design_pattern_factory_method
Factory Method,factory-method-pattern-application,Aplicação em console colocando em pratica o Design Pattern de Factory Method em C#,0,0,2021,2021,0,https://github.com/VictorMarri/factory-method-pattern-application
Factory Method,Factory_Method_Design_Pattern,It is a creational design pattern which talks about the creation of an object.,0,0,2022,2022,1,https://github.com/atulrmsingh/Factory_Method_Design_Pattern
Factory Method,cos214-assignment1, implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Prototype design pattern; • implement the Memento pattern;,0,0,2019,2022,2,https://github.com/giovannijoubert/cos214-assignment1
Factory Method,Qt-factory-method,Usage of factory method design pattern in C++. Some Qt widgets were added to display information.,0,1,2023,2023,1,https://github.com/daniel-rincon-garcia/Qt-factory-method
Factory Method,factory-method-design-pattern,This is a repo to explain the factory method design pattern with example in PHP,0,0,2024,2024,1,https://github.com/yaman-shahbander-dev/factory-method-design-pattern
Factory Method,DifferenceDesignPatterns,"Abstract factory, Factory Method and Template Method",0,0,2025,2025,1,https://github.com/m-granback/DifferenceDesignPatterns
Factory Method,factory-method-design-pattern,A Qt console application showcasing the implementation of the Factory Method design pattern using C++,0,0,2024,2024,1,https://github.com/ntuthuko-dlamini/factory-method-design-pattern
Factory Method,creational-design-patterns,Singleton - Prototype - Builder - Abstract Factory - Factory Method,0,0,2024,2024,1,https://github.com/mainProgram/creational-design-patterns
Factory Method,Factory-Method-and-Abstract-Factory,Factory Method & Abstract Factory design patterns on java in mailer and code generator example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Factory-Method-and-Abstract-Factory
Factory Method,FactoryMethod,"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.",0,0,2022,2022,1,https://github.com/quynhchi1009/FactoryMethod
Factory Method,FactoryMethod,"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.",0,0,2020,2021,0,https://github.com/Dynotum/FactoryMethod
Factory Method,Factory-Design-Pattern,Sample project demonstrating a Factory Method Design Pattern In C#.,0,0,2019,2022,0,https://github.com/tanbirhossain/Factory-Design-Pattern
Factory Method,DesignPatternJDBCMySQL,"Projeto desenvolvido para aula sobre design pattern, especificamente factory method",0,0,2022,2022,0,https://github.com/jcda2020/DesignPatternJDBCMySQL
Factory Method,FactoryDPPractice,Creating a console app for practicing factory method design pattern,0,0,2025,2025,0,https://github.com/MahnoorIqbal-6565/FactoryDPPractice
Factory Method,Cafe,"Used Design patterns -> Factory Method, Null Object, Decorator and Builder",0,0,2020,2020,1,https://github.com/Diiiya/Cafe
Factory Method,Pushdown-Automaton,Application of  Pushdown Automatons using the Design Pattern Factory Method,0,0,2016,2017,1,https://github.com/coppolaop/Pushdown-Automaton
Factory Method,ExercicioFactory,Exercicio da faculdade sobre o Design Pattern chamado Factory Method,0,0,2020,2020,1,https://github.com/bernardo2512/ExercicioFactory
Factory Method,FactoryDesignPatternExample,Example code of a Factory Method Design Pattern in C#.,0,0,2019,2019,1,https://github.com/Freelancer-it/FactoryDesignPatternExample
Factory Method,GeometricCalculator,A simple Geometric Calculator using the Factory Method design pattern,0,0,2024,2024,1,https://github.com/mibrahimfm/GeometricCalculator
Factory Method,FactoryAbstractCreator,An example of abstract creator for Factory Method design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/FactoryAbstractCreator
Factory Method,DesignPatterns," Se aplicó los principios de los patrones de diseño Singleton, Builder y Factory Method ",0,0,2023,2023,2,https://github.com/MenMor/DesignPatterns
Factory Method,Factory-Method-Pattern---Design-Patterns,,0,0,2024,2024,0,https://github.com/NesrineAG/Factory-Method-Pattern---Design-Patterns
Factory Method,Design-patterns---POC---Factory-method,,0,0,2018,2018,1,https://github.com/rafaelhfreitas/Design-patterns---POC---Factory-method
Factory Method,Design-Patterns--Factory-Method-Pattern,Factory Method Pattern to Calculate Electricity Bill,0,0,2022,2022,1,https://github.com/Tpsunshine/Design-Patterns--Factory-Method-Pattern
Factory Method,-Creational-design-patterns-Factory-Method,"These design patterns are all about class instantiation. This pattern can be further divided into class-creation patterns and object-creational patterns. While class-creation patterns use inheritance effectively in the instantiation process, object-creation patterns use delegation effectively to get the job done.",0,0,2021,2021,1,https://github.com/sakeeljawfer/-Creational-design-patterns-Factory-Method
Factory Method,multi-platform-technologies-5,"JDBC API. Usage of design patterns (Factory Method, Adapter, State).",0,0,2020,2021,0,https://github.com/v-rublova/multi-platform-technologies-5
Factory Method,DartDesignPatternsFactoryMethod,サンプル：Dart(Flutter)のデザインパターン「ファクトリメソッド」,0,0,2021,2021,1,https://github.com/rascal9622/DartDesignPatternsFactoryMethod
Factory Method,design-patterns-devpedrohrd,Exemplo sobre o padrão de projeto Factory Method,0,0,2024,2024,2,https://github.com/ifpi-picos/design-patterns-devpedrohrd
Factory Method,Factory_Method_Typescript,This is an example of the implementation of a design pattern Factory Method on the programing language Typescript. 🔵,0,0,2019,2019,1,https://github.com/victorolave/Factory_Method_Typescript
Factory Method,Factory_Method_Java,This is an example of the implementation of a design pattern Factory Method on the programing language Java.☕,0,0,2019,2019,1,https://github.com/victorolave/Factory_Method_Java
Factory Method,Factory_Method_Javascript,This is an example of the implementation of a design pattern Factory Method on the programing language Javascript. 🟡,0,0,2019,2019,1,https://github.com/victorolave/Factory_Method_Javascript
Factory Method,abstract-factory-method,"Abstract Factory Design Pattern in PHP An implementation of the Abstract Factory Design Pattern in a Laravel-based application. This project demonstrates creating and presenting different product types (downloadable, physical, and service-based) using abstract factories, ensuring clean separation of concerns and extensibility.",0,0,2024,2024,0,https://github.com/sara-motamedi/abstract-factory-method
Factory Method,DesignPatternsAndComparatorInterface,"A demonstration of common patterns (builder ,strategy), factory methods, and the Comparator interface",0,0,2018,2018,1,https://github.com/Mike-415/DesignPatternsAndComparatorInterface
Factory Method,java_design_patterns,Simple application demonstrating the factory method and observer patterns,0,0,2015,2016,1,https://github.com/dave-kav/java_design_patterns
Factory Method,graph_generator_factory_method,This is a simple project that implements the Factory Method design pattern to generate two types of graphs.,0,0,2021,2021,1,https://github.com/Roger-Aguiar/graph_generator_factory_method
Factory Method,factory-design-pattern,Factory Design Pattern in Python - an implementation of the factory method,0,0,2019,2019,1,https://github.com/theookoye/factory-design-pattern
Factory Method,creationalDesignPatterns,"Creational Design Patterns(Simple Factory, Factory Method, Factory Abstraction, Builder, Prototype)",0,0,2024,2024,1,https://github.com/ghajarehsan/creationalDesignPatterns
Factory Method,java_design_patterns_factory_method_pattern,java设计模式_工厂方法模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_factory_method_pattern
Factory Method,AdvancedMazeGame,"CS 350 Lab 3 - Advance Maze Game, Factory Method design pattern",0,1,2017,2017,1,https://github.com/Jayx239/AdvancedMazeGame
Factory Method,logistic-PHP,This application demonstrates the use of the factory method design pattern,0,0,2022,2022,0,https://github.com/AdaLimana/logistic-PHP
Factory Method,Design-Patterns,Design Patterns - Decorator Pattern - Factory Method - Abstract Factory - 2-tier architecture,0,0,2014,2014,1,https://github.com/LorenzoVanLeeuwaarden/Design-Patterns
Factory Method,KTTsoft-test,"test task KTTsoft ( Laravel framework, Design Patterns: Composite, Iterator, Factory Method ).",0,0,2016,2020,1,https://github.com/mslobodyanyuk/KTTsoft-test
Factory Method,oonv,"C# work with Postgres, Redis and MongoDB - design pattern factory method",0,0,2022,2022,1,https://github.com/pparachin/oonv
Factory Method,simple_factory,To learn Factory Method or Simple Factory design pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/simple_factory
Factory Method,FactoryDesignPattern,an implementation of Factory method design pattern with .NET Core 6,0,0,2023,2023,1,https://github.com/balangi/FactoryDesignPattern
Factory Method,factorymethod,Exemplo didático para o padrão de projeto (Design Pattern) Factory Method,0,2,2023,2023,1,https://github.com/proffernandotfernandes/factorymethod
Factory Method,Design-Patterns-java,"Java implementations of Template Method, Factory Method, and Adapter design patterns.",0,0,2024,2024,1,https://github.com/PethumSandaruwan/Design-Patterns-java
Factory Method,FactoryDP,An implementation of the Factory Method and Abstract Factory design patterns,0,0,2017,2017,1,https://github.com/edkaresli/FactoryDP
Factory Method,Website-Design-Patterns,"Website built using Front Controller, Factory Method and MVC design patterns. ",0,0,2020,2020,2,https://github.com/BAlleyneDev/Website-Design-Patterns
Factory Method,design-patterns-examples,Demo on Structural Design Patterns in Java (Singleton and Factory methods) ,0,0,2020,2020,1,https://github.com/yashodharanawaka/design-patterns-examples
Factory Method,factory-method,"Simple project demonstrating the factory method design pattern. For this one, I made a application which consists in opening and exiting multiple games.",0,0,2021,2022,1,https://github.com/Piazzi/factory-method
Factory Method,design-patterns-exercise,"Exercise for uni. Used patterns: Singleton, Command, Observer & Factory method",0,0,2022,2022,1,https://github.com/greta1087/design-patterns-exercise
Factory Method,factory-method,Factory Method in Java. Factory method is a creational design pattern which solves the problem of creating product objects without specifying their concrete classes.,0,0,2020,2021,1,https://github.com/isilbolatbas/factory-method
Factory Method,Etapa2Atividade1FactoryMethod,"Implementação dos conhecimentos em Design Patterns adquiridos na cadeira de Padrões de Software, ministrada pelo professor João Carlos.",0,0,2021,2021,1,https://github.com/VitorMaverick/Etapa2Atividade1FactoryMethod
Factory Method,Design-Patterns-Abstract-Factory-and-Factory-Method-,,0,0,2024,2024,1,https://github.com/pedromatos2806/Design-Patterns-Abstract-Factory-and-Factory-Method-
Factory Method,java-4h-5h-design-patterns-1,"SOLID, GoF (Abstrac Factory, Factory Method, Builder)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-1
Factory Method,471ICookFinal,"Finished project. Contains Factory Method, Command, Memento, Builder and Singleton Design patterns.",0,0,2021,2021,1,https://github.com/bryanmiller7sixty/471ICookFinal
Factory Method,sofe3650-assign1,"Factory Method and Abstract Factory design pattern exploration and implementation, using Java",0,0,2021,2021,2,https://github.com/jesscleish/sofe3650-assign1
Factory Method,FactoryOOP,"Simple Factory, Factory Method And Abstract Factory Design Patterns Head First Book",0,0,2017,2017,1,https://github.com/TomerBu/FactoryOOP
Factory Method,TrabalhoJavaP2,"Utilizando os design patterns Bridge, Decorator, Abstract Factory, Adapter, Composite, Factory Method",0,0,2013,2013,1,https://github.com/bknupp/TrabalhoJavaP2
Factory Method,AppMontadora,Estudos relacionados a C# - Design Patterns: (Factory Method Pattern). Projeto Console Application ,0,0,2021,2021,1,https://github.com/JTBCode86/AppMontadora
Factory Method,mvp-in-cpp,Easy Model-View-Presenter implementation in C++ using Factory Method Design Pattern,0,0,2023,2023,1,https://github.com/fx-biocoder/mvp-in-cpp
Factory Method,Design-Patterns,Made some design patterns in c++. • implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Abstract Factory design pattern • implement the Prototype design pattern; • implement the Memento pattern; and • integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/Design-Patterns
Factory Method,n-design-patterns-creational,"Примеры по порождающим шаблонам. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2021,2021,1,https://github.com/humgate/n-design-patterns-creational
Factory Method,design-patterns,"The Singleton, Factory Method, Adapter, Composite, and Observer design patterns are all demonstrated together.",0,0,2023,2023,1,https://github.com/khaledsawan/design-patterns
Factory Method,FactoryMethodDesignPatternExample,This project demonstrates the Factory Method design pattern in C# for creating different database connections. The Factory Method pattern defines an interface for creating objects but lets subclasses decide which class to instantiate.  This allows you to defer instantiation to subclasses.,0,0,2025,2025,1,https://github.com/MohammedBaasheem/FactoryMethodDesignPatternExample
Factory Method,Factory-Method,"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.",0,0,2020,2020,1,https://github.com/zuyatna/Factory-Method
Factory Method,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Factory Method,patterns,"design patterns class final project. used patterns: singleton, factory method, strategy and decorator.",0,0,2022,2022,1,https://github.com/diasnrg/patterns
Factory Method,Repository-Factory-Method-Pattern,"The Repository-Factory-Method Pattern combines the Repository and Factory Method design patterns to manage object creation and data persistence in a clean, scalable way.",0,0,2024,2024,1,https://github.com/smraju115/Repository-Factory-Method-Pattern
Factory Method,designpatterns,"Code example for Adapter, Abstract Factory, Factory Method, Iterator and Decorator design patterns.",0,0,2019,2022,2,https://github.com/thekgk/designpatterns
Factory Method,Creational-Design-Pattern,"Abstract Factory, Builder, Factory Method, Prototype and SIngleton creational design pattern in swift",0,0,2018,2018,2,https://github.com/LH17/Creational-Design-Pattern
Factory Method,ModeraTest,"test task - ModeraTest( - MVC WITHOUT PHP framework, Design Patterns: Composite, Iterator, Factory Method  ).",0,0,2015,2020,1,https://github.com/mslobodyanyuk/ModeraTest
Factory Method,ModeraTest1,"test task Modera( - MVC WITHOUT PHP framework, Design Patterns: Composite, Iterator, Factory Method  ).",0,0,2018,2020,1,https://github.com/mslobodyanyuk/ModeraTest1
Factory Method,SWE,"Software engineering project learning singleton, factory method, and prototype design patterns in java",0,0,2020,2020,3,https://github.com/RamanHliabovich/SWE
Factory Method,factory,"This repository demonstrates design patterns involving simple factory, factory method and abstract factory",0,0,2021,2021,1,https://github.com/mobir/factory
Factory Method,ATMApp,"A simple ATM App to demonstrate 3 design patterns - Singelton, Factory Method & Strategy",0,0,2024,2024,1,https://github.com/roxzlir/ATMApp
Factory Method,LearningFactories,"Neste repositório, aplico os design patterns simple factory, factory method e abstract factory",0,0,2022,2022,1,https://github.com/Leonardo-Lima-Pontes/LearningFactories
Factory Method,TennisPlayerManagement,"Tennis players management implemented with three design patterns: Factory Method, Facade and Strategy",0,0,2021,2021,1,https://github.com/Martin142214/TennisPlayerManagement
Factory Method,GUI-Factory,GUI-Factory is a Design-Pattern Example using Factory-Method in JAVA OOPS.,0,0,2023,2023,1,https://github.com/karan030204/GUI-Factory
Factory Method,GoF_Project,JAVA_design_patterns_GoF_project:includes Factory method and observer and adapter patterns,0,0,2023,2024,1,https://github.com/baziz-meriem/GoF_Project
Factory Method,LibraryManagementSystem,"Library Management System using Factory Method, Singleton, and other design patterns in Java.",0,0,2024,2024,1,https://github.com/haileylian/LibraryManagementSystem
Factory Method,FactoryDesignPattern,Journey from without factoryPattern to implement factoryPattern to implement factory method design pattern,0,0,2022,2022,0,https://github.com/imtiajahammad/FactoryDesignPattern
Factory Method,AnimalRace,"Designed and developed a Java Swing application following GOF Design Patterns. Implementation involves Creational Design Patterns - Singleton, Factory method and Abstract Factory; Structural Design Patterns - Decorator; and Behavioral Design Patterns - Strategy and Observer patterns.",0,0,2017,2017,1,https://github.com/pavithravinay/AnimalRace
Factory Method,Design-Patterns-Workshop,"Taller de aplicación de patrones de diseño, se utilizó Singleton, Builder y Factory Method.",0,0,2023,2023,1,https://github.com/AlanPachecoCueva/Design-Patterns-Workshop
Factory Method,DesignPatterns,"A collection of examples and use cases of best design patterns and principles (such as the abstract factory method, observer pattern, adapter pattern, dependency injection, etc.)",0,0,2020,2022,2,https://github.com/mrchristensen/DesignPatterns
Factory Method,design-patterns,"Padrão criacional: Factory method, Abstract factory e Builder.  Padrão estrutural: Brigde.  Padrão comportamental: Chain Of Responsibility.",0,0,2024,2024,1,https://github.com/rafaelzanella27/design-patterns
Factory Method,patterns,Factory method example from C-sharpcorner.com https://www.c-sharpcorner.com/article/factory-method-design-pattern-in-c-sharp/,0,0,2020,2020,1,https://github.com/cavalcantegb/patterns
Factory Method,Design_Patterns_Dio,"Desafio de projeto sobre design patterns em java da DIO, neste caso o Factory Method",0,0,2024,2024,1,https://github.com/mtybruno/Design_Patterns_Dio
Factory Method,Creational-Design-Patterns,Creational Design Patterns  1.  Factory Method  2.  Abstract Factory  3.  Builder  4.  Prototype  5.  Singleton,0,0,2024,2024,1,https://github.com/Menna-Medhat/Creational-Design-Patterns
Factory Method,design-patterns---builder,"Домашнее задание к занятию 1.1: Порождающие шаблоны. Builder, Singleton, Factory Method, Abstract Factory, Prototype",0,0,2022,2022,1,https://github.com/TimurDushanov/design-patterns---builder
Factory Method,factory-method,"This repository demonstrates the implementation of the Factory Method design pattern in a Laravel application. It provides a flexible and extensible way to dynamically create delivery service providers such as Post, Snapp, and Tipax.",0,0,2024,2024,0,https://github.com/sara-motamedi/factory-method
Factory Method,factorypattern,Java example that implements the factory method design pattern (from the book Head First Design Patterns: A Brain-Friendly Guide 1st Ed.),0,0,2022,2022,0,https://github.com/omargomez2/factorypattern
Factory Method,design-patterns,"Repositório com exemplos práticos em C++ dos padrões Factory Method, Decorator e Observer, baseados no Refactoring Guru.",0,0,2024,2024,1,https://github.com/AlexandreMarchi/design-patterns
Factory Method,Factory_Method_Design_Pattern,"This is an example of factory method design pattern. We have an abstract class: Animal, AnimalFactory will return an subclass of Animal. Animal has an abstract class: makeSound().",0,0,2019,2019,1,https://github.com/kennylam91/Factory_Method_Design_Pattern
Factory Method,gof-creational-design-patterns,"Typescript implementation of gang-of-four creational design patterns (factory method, abstract factory, builder)",0,0,2022,2022,1,https://github.com/samlaf/gof-creational-design-patterns
Factory Method,Simple-Factory-CSharp,A simple example on how to implement the factory method design pattern in C#.,0,1,2023,2023,1,https://github.com/sean-campbelltech/Simple-Factory-CSharp
Factory Method,Factory-Pattern-Examples,"Simple C/C++ implementations for Simple Factory, Factory Method and Abstract Factory design patterns.",0,0,2023,2024,1,https://github.com/git03-Nguyen/Factory-Pattern-Examples
Factory Method,my_small_bookstore_cpp,C++/C/ASM cli with a Factory Method Design Pattern following the RAII principle,0,0,2024,2024,1,https://github.com/Lbelus/my_small_bookstore_cpp
Factory Method,design-patterns-exemplos,"Exemplos de padrões de projeto (Factory Method, Adapter, Observer) com base no catálogo do Refactoring Guru.",0,0,2025,2025,1,https://github.com/kalilnege/design-patterns-exemplos
Factory Method,simple-factory-java,A simple example on how to implement the factory method design pattern in Java. ,0,0,2023,2023,1,https://github.com/sean-campbelltech/simple-factory-java
Factory Method,tdd-mars-rover-kata,"A TDD Exercise with  .NET8, xUnit, FluentAssertion.🛰️Design Patterns: Factory Method, State, Command",0,0,2023,2023,1,https://github.com/nicolasrouge/tdd-mars-rover-kata
Factory Method,VehicleManufacturing_DesignPattern,This is a learning project that implements vehicle manufacturing using factory method design pattern,0,0,2023,2023,1,https://github.com/mayankshekharit/VehicleManufacturing_DesignPattern
Factory Method,factorymethod,Example of mysql and mongodb database dual configuration using the factory method design pattern.,0,0,2019,2019,1,https://github.com/sancardenasv/factorymethod
Factory Method,JavaPasswordCrackerApp,"This project is a password-cracking program that implements the ""Factory Method"" design pattern.",0,0,2023,2024,3,https://github.com/Sogo28/JavaPasswordCrackerApp
Factory Method,jdbc-basico-java-dao-factory,Exemplo de persistência de dados utilizando JDBC com Design Pattern DAO e Factory Method,0,0,2023,2023,1,https://github.com/RobsonLSilva/jdbc-basico-java-dao-factory
Factory Method,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Factory Method,CoffeeDemo,Demo of Coffee Store menu using Simple Factory Method design pattern with Spring Web,0,0,2024,2024,1,https://github.com/Ahasanov2021/CoffeeDemo
Factory Method,Factory-Method-Pattern-in-PHP,"The Factory Method is a design pattern that provides an interface for creating objects in a superclass, allowing subclasses to define the type of object to create.",0,0,2024,2024,1,https://github.com/softadastra/Factory-Method-Pattern-in-PHP
Factory Method,Abstract-Factory-Method-Design,Abstract Factory design pattern is one of the Creational pattern. Abstract Factory pattern is almost similar to Factory Pattern and is considered as another layer of abstraction over factory pattern.,0,0,2024,2024,0,https://github.com/KAVINDAPIYUMAL/Abstract-Factory-Method-Design
Factory Method,MarbleWheels,"Design patterns. Creating a game in C# using different types of design patterns: adapter pattern, bridge pattern, factory method pattern, decorator and facade.",0,0,2015,2017,2,https://github.com/mrgunior/MarbleWheels
Factory Method,design-patterns,"A project to demonstrate the use of various Design Patterns, including Adapter, Abstract Factory Method, Singleton, Composite and more.",0,0,2020,2020,1,https://github.com/karlaugust1/design-patterns
Factory Method,Creational-design-patterns-TemplatePattern,"The Abstract Factory defines a Factory Method per product. Each Factory Method encapsulates the new operator and the concrete, platform-specific, product classes. Each ""platform"" is then modeled with a Factory derived class.",0,0,2021,2021,1,https://github.com/sakeeljawfer/Creational-design-patterns-TemplatePattern
Factory Method,ICA-7-Design-Patterns-1225545633,"Implemented five design patterns into the Product Trading and Bidding System (PTBS). The five design patterns are Façade, Bridge, Factory Method, Iterator, and Visitor.",0,0,2022,2022,1,https://github.com/Deven-Prajapati-2/ICA-7-Design-Patterns-1225545633
Factory Method,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Factory Method,Electric-Toothbrush-Manufacturing-Quip,"CS 665 software design pattern term project - An enterprise resource planning application. Design pattern used: factory method pattern, singleton pattern, and abstract factory pattern.",0,0,2018,2018,1,https://github.com/henry226/Electric-Toothbrush-Manufacturing-Quip
Factory Method,factoryclass,example of a factory class from: https://sourcemaking.com/design_patterns/factory_method/cpp/1,0,0,2018,2018,0,https://github.com/chrislupp/factoryclass
Factory Method,abstract-factory-pattern-application,Aplicação em console colocando em pratica o Design Pattern de Abstract Factory Method em C#,0,0,2021,2021,0,https://github.com/VictorMarri/abstract-factory-pattern-application
Factory Method,Persistent-Framework,"Design of Persistent framework using Controller, Bridge, Command, Template method and Factory method design patterns.",0,0,2016,2017,0,https://github.com/abhishekdhotre/Persistent-Framework
Factory Method,Design-Paterns,"Small project illustrating use of Design Patterns such as Visitor, Decorator, Factory Method and Enumerator",0,1,2021,2021,1,https://github.com/dkozykowski/Design-Paterns
Factory Method,Factory-Pattern,Repository for GameCraft's November 8th '24 engineering workshops on the Factory Method design pattern.,0,0,2024,2024,1,https://github.com/University-of-Utah-Gamecraft/Factory-Pattern
Factory Method,java-singleton-builder-factory-patterns,"Practice on the topic ""Using the DAO pattern and design patterns: Singleton, Builder, Factory Method""",0,0,2023,2024,1,https://github.com/vykhryst/java-singleton-builder-factory-patterns
Factory Method,Implementacoes_Design_Patterns_Java,"implementações do Creational Design Patterns em java no caso Factory Method,Abstract Factory,Builder,Prototype é Singleton",0,0,2024,2024,1,https://github.com/willianpireslima/Implementacoes_Design_Patterns_Java
Factory Method,Design-Patterns---JAVA,"Botando em prática os Design Patterns no JAVA (MVC, Abstract Factory, Builder, Factory Method, Singleton, Decorator, Strategy e State)",0,0,2020,2020,0,https://github.com/phbritoo/Design-Patterns---JAVA
Factory Method,design_patterns,"Shell for DAW application which includes multiple design petterns, such as: abstract factory, singleton, factory method, adapter, decorator, facade, iterator, observer, strategy.",0,0,2023,2024,1,https://github.com/ruslan1us/design_patterns
Factory Method,Developersstack-Java-factory_method_dp,"Explore the Factory Method design pattern with practical examples in Java through the Developersstack course repository. Learn to create objects dynamically, decoupling their instantiation from client code for enhanced flexibility and maintainability.",0,0,2024,2024,0,https://github.com/ayesh156/Developersstack-Java-factory_method_dp
Factory Method,dio-design-patterns,Exemplo de aplicação que utiliza o padrão Factory Method para permitir ao usuário selecionar diferentes tipos de formas de pagamento.,0,0,2024,2024,1,https://github.com/jovicruz/dio-design-patterns
Factory Method,Intro-To-Factory-Method-Design-Pattern,"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.",0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Factory-Method-Design-Pattern
Factory Method,Design_Patterns,"Practical laboratory class focused on the implementation and testing of software using design patterns, covering solutions such as Command, Factory Method, and Observer.",0,0,2023,2024,1,https://github.com/LuisMeloArruda/Design_Patterns
Factory Method,Design-Patterns---Teachers,"Final student project for my university course “Design Patterns”. Used technologies: Java, Swing. Used patterns: Singleton, Factory Method, Adapter, Proxy, Decorator ",0,0,2016,2016,1,https://github.com/itplamen/Design-Patterns---Teachers
Factory Method,exercicio-designer-patterns,"Atividade Avaliativa sobre padrões de projeto, usando a linguagem de programção Java. Foram utilizado os seguintes padrões: Strategy e Factory Method.",0,0,2016,2016,1,https://github.com/DiovaniMotta/exercicio-designer-patterns
Factory Method,SIMPLE-JDBC-CRUD,"Just learning JDBC with a minimal project. MVC Architecture + Factory Method, DAO & Object Pooling design patterns.",0,0,2023,2023,1,https://github.com/pybalt/SIMPLE-JDBC-CRUD
Factory Method,PeerFinder,"Design pattern example. factory method, observer, visitor, singleton. java console based application for finding professional peer.",0,0,2021,2021,1,https://github.com/GalataGirmaye/PeerFinder
Factory Method,KataBunStore,"The Kata for practicing the factory design patterns including Simple Factory, Factory Method and Abstract Factory.",0,0,2013,2013,1,https://github.com/wubin28/KataBunStore
Factory Method,Ski-competition,"Java game using the following design patterns: Prototype, Factory Method, Builder, Thread Pool, Decorator, Observer, State",0,0,2021,2021,1,https://github.com/vladich11/Ski-competition
Factory Method,AbstractFactory,An implementation of the Abstract Factory Design Pattern in C++ (includes both Factory Method & Prototype implementations),0,0,2012,2014,1,https://github.com/abrahamkoshy/AbstractFactory
Factory Method,Design-Pattern-Project,Singleton-Factory Method-Decorator Pattern term project that I prepared for Akdeniz University Design Pattern course.,0,0,2022,2022,1,https://github.com/furkan-can/Design-Pattern-Project
Factory Method,Design-Patterns,"A demonstration of how the design patterns work in C#. Here you can find the three design patterns: Factory Method, Abstract Factory, and Singlton. For more information about design patterns have a look at ",0,0,2021,2022,0,https://github.com/Nathnael12/Design-Patterns
Factory Method,Design_Patterns_Implementation,"""Design Patterns Implementation"" is a project showcasing the implementation of various design patterns.  The project includes the implementation of popular design patterns such as Factory Method, Facade, and Structure, demonstrating their usage and benefits.",0,0,2023,2023,1,https://github.com/B0neS69/Design_Patterns_Implementation
Factory Method,Java-Multi-threads-race-game,"JAVA Game Using Design Patterns  An interactive racing game implemented in Java, showcasing various design patterns and multi-threading.Implemented design patterns: Singleton, Builder, Thread Pool, Factory Method, Prototype, State, Observer-Observable, Decorator, and Delegator",0,0,2024,2025,1,https://github.com/IlanShtilman/Java-Multi-threads-race-game
Factory Method,awesomeshop_api-restful_dpc-factory-method_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPC (Design Pattern Creational) Factory Method, utilizando a linguagem de programação C#.",0,0,2023,2023,0,https://github.com/danieldantasdev/awesomeshop_api-restful_dpc-factory-method_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Factory Method,greentfoot-splash-game,"A hit target game developed using Greentfoot tool. Implemented GoF design patterns: Factory method, Strategy, Observer, Facade.",0,0,2014,2014,0,https://github.com/logicgraphy/greentfoot-splash-game
Factory Method,warehouseMS,"A warehouse management system developed in Java applying 4 software design patterns - Factory method, Strategy, Composite, Builder",0,0,2019,2019,1,https://github.com/NikolayKanchev/warehouseMS
Factory Method,DBProfiler,create profile and switch between them using factory method design pattern with CRUD operation on Employee table,0,0,2018,2018,1,https://github.com/fathyelshemy/DBProfiler
Factory Method,Revis-o-Prova1-LPIII,"Exercícios de revisão para primeira prova de LPIII (Design Patterns, Factory Method, Abstract Factory, Sigleton, Strategy, SOLID).",0,0,2019,2019,1,https://github.com/tlndevelopment/Revis-o-Prova1-LPIII
Factory Method,CaloteiroWeb,"Banco: MySQL  , Servidor : Tomcat 7.0, Design Patterns usados (Factory Method) , (MVC) , (Command Controller). Segurança usando Filtros. ",0,0,2016,2016,1,https://github.com/isaiaslima2016/CaloteiroWeb
Factory Method,libapp,"Project developed for the Design Patterns course. The implementation demonstrates the use of various design patterns and principles, including:  Factory Method, MVC, Command Pattern and Single Responsibility Principle. ",0,0,2024,2024,0,https://github.com/JuicySzejek/libapp
Factory Method,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Factory Method,CreationalDesignPatterns,"Exploring different design patterns related to the creation of objects in OOP. Specifically, implementing an Abstract Factory, a Builder, a Factory Method, a Prototype and a Singleton",0,0,2022,2022,0,https://github.com/Dutesier/CreationalDesignPatterns
Factory Method,DesignPatternsInModernCPP,"This repository demonstrates Creational, Structural, and Behavioral Design Patterns using traditional and modern C++ features in various examples for learning purposes. Common patterns (Singleton, Factory Method, Abstract Factory, Adapter, Decorator, Composite, Observer, Strategy, Command) are implemented with assistance from the AI tool.",0,0,2024,2024,1,https://github.com/denkhzol/DesignPatternsInModernCPP
Factory Method,2D-Jumper-Game-with-JavaAWT,"2D Jumper game and Game engine classes (Renderer2D and Behavior) with design patterns. This project is done for Design Pattern course and includes 6 different design pattern implemented for the game to work. Design patterns include: Template Method, Adapter, Factory Method, Singleton, State and Behavior Patterns.",0,0,2021,2021,1,https://github.com/fGencturk/2D-Jumper-Game-with-JavaAWT
Factory Method,Factory-Design-Pattern," The Factory Method design pattern is used by first defining a separate operation, a factory method, for creating an object, and then using this factory method by calling it to create the object",0,0,2021,2021,1,https://github.com/mahmoud3030arafat/Factory-Design-Pattern
Factory Method,padroes-de-projeto-1-EBAC,aprendo mais do mundo do design patterns aqui neste projeto foi consolidado o conhecimento do abastrac factory method,0,0,2022,2022,1,https://github.com/riverson98/padroes-de-projeto-1-EBAC
Factory Method,Pizza,"Uses singleton, multiton, and factory method design patterns to control instantiation of some classes to simulate a pizza",0,0,2023,2023,2,https://github.com/ethanbyrd03/Pizza
Factory Method,SimpleRPG,"This is a small project to apply OOP concepts and object creation design patterns, Singleton and Factory method.",0,0,2023,2023,1,https://github.com/detectivemerry/SimpleRPG
Factory Method,OnlineStore_OOP_Concepts,"A basic online store with concepts from OOP and design pattern implementations like Authorization, Factory Method, Template Pattern.",0,0,2024,2024,1,https://github.com/AaryaD/OnlineStore_OOP_Concepts
Factory Method,Design-Patterns-Practice,"A simple program to practice OOP SOLID principles and design patterns like the factory method pattern, singleton pattern, strategy pattern, etc. as well as dependency injection in C# .NET",0,0,2023,2023,1,https://github.com/sabrahahmed/Design-Patterns-Practice
Factory Method,Design-Patterns,"This repository contains clear and practical examples of several design patterns implemented in TypeScript, using a Vite application. The design patterns included are: Adapter, Abstract Factory, Builder, Factory Method, Prototype, Singleton, among others.",0,0,2024,2024,1,https://github.com/cristianManco/Design-Patterns
Factory Method,Customization-of-Design-Patterns,"This research paper delves into the realm of software design patterns, focusing specifically on the customization of three fundamental patterns: the Adapter, Observer, and Factory Method patterns.",0,0,2024,2024,1,https://github.com/ShaheerAshraf/Customization-of-Design-Patterns
Factory Method,Test-Factory-Design-Patterns,The Factory Method pattern defines an interface or abstract class for creating objects in a superclass but allows subclasses to alter the type of objects to be created.,0,0,2024,2024,1,https://github.com/joycebrofar/Test-Factory-Design-Patterns
Factory Method,OOP_CourseWork,"Course work on the design pattern topics. I've made a graphic redactor using wpf and design pattern, such as: Factory Method, Prototype, Chain of Command, Command, Memento,  Strategy, State",0,0,2023,2023,1,https://github.com/allmallino/OOP_CourseWork
Factory Method,member-markings,"isTrav: ""a line, figure, or symbol made as an indication or record of something"" ... factory method creational design pattern",0,0,2022,2022,1,https://github.com/c-u-l8er/member-markings
Factory Method,ProjectOOD,"A simple milk tea ordering application using Java Swing. Combine design patterns like MVC, Singleton, Observer, Decorator, Factory Method",0,0,2023,2024,1,https://github.com/Gilgamesh-hoang/ProjectOOD
Factory Method,DesignPattern,"SER515 - Implementation of Product Trading and Bidding System using the following Design Patterns:  Facade, Bridge, Factory Method, Iterator, Visitor",0,0,2022,2024,1,https://github.com/snerall1/DesignPattern
Factory Method,Creational-Design-Patterns,"This provides an overview of a number of creational design patterns including, but not limited to, the Singleton, Factory Method, Abstract Factory, Prototype, and Builder patterns with their approaches  used on my article",0,0,2024,2024,1,https://github.com/cartel360/Creational-Design-Patterns
Factory Method,three-generative-patterns-Factory-method-Abstract-factory-Builder,"This project showcases the implementation of design patterns: Abstract Factory, Builder, and Prototype.  Features Abstract Factory: Creates different types of furniture (Classic and Modern). Builder: Constructs various computers (Gaming and Office) step by step. Prototype: Enables cloning of car objects.",0,0,2024,2024,1,https://github.com/Mattheuszu/three-generative-patterns-Factory-method-Abstract-factory-Builder
Factory Method,Design-Patterns," Design patterns are established solutions for recurring software design issues. They improve code flexibility, reusability, and maintainability. Creational Patterns: Handle object creation (e.g., Singleton, Factory Method). Structural Patterns: Focus on object composition (e.g., Adapter, Decorator). Behavioral Patterns: Deal w",0,0,2024,2024,1,https://github.com/SE-MahmoudAbdelaal/Design-Patterns
Factory Method,factory,"Example code that accompanies the Manufacturing Java Objects with the Factory Method Design Pattern article published on August 14, 2006.",0,0,2021,2024,1,https://github.com/mpredli01/factory
Factory Method,API.NetCore,"Code Refactor using SOLID principles, Design Patterns (CQRS, Mediator, Factory Method, Repository -implemented two data sources-, etc), REST principles, Security.",0,0,2023,2023,3,https://github.com/kopelmannnico/API.NetCore
Factory Method,Factory-Design-Pattern,This is a simple restaurant app for order food using factory design pattern source => Simple Factory => Factory Method => Abstract Factory,0,0,2024,2024,1,https://github.com/dragonblue327/Factory-Design-Pattern
Factory Method,GangOfFourDesignPatterns,"C# learning about design patterns, in this example the factory methods and interfaces used to allow different objects to be created in the factory class depending on the parameters fed in.",0,0,2017,2018,1,https://github.com/eddiePower/GangOfFourDesignPatterns
Factory Method,ErrorCocoapodsWithPython,A python script based on the Factory Method design pattern to solve a bug when installing cocoapods on mac os catalina,0,0,2022,2022,1,https://github.com/patrick3s/ErrorCocoapodsWithPython
Factory Method,ECommerece,"An e-commerce API that utilizes nine design patterns: FACTORY METHOD, PROTOTYPE, BUILDER, PROXY, FACADE, ADAPTER, CHAIN OF RESPONSABILITY, MEDIATOR, COMMAND",0,0,2024,2024,1,https://github.com/MunMihai/ECommerece
Factory Method,creational-design-patterns-blog,"This repository contains code examples for a blog post that explores five fundamental creational design patterns: Factory Method, Abstract Factory, Builder, Prototype, and Singleton. Each pattern is demonstrated with real-world examples in Java, showcasing their practical applications and benefits.",0,0,2024,2024,1,https://github.com/tharindu1998/creational-design-patterns-blog
Factory Method,Testers-System,"System development for driving students, testers and driving tests. Using MVVM architecture, Design Patterns (Observer ,Contract ,Factory Method ,Singleton), and XML DOM.",0,0,2021,2021,1,https://github.com/mschaalm/Testers-System
Factory Method,GroceryStoreAbstractFactory,"This code implements a system for managing grocery products, specifically bananas and oranges, using the Abstract Factory and Factory Method design patterns",0,0,2024,2024,1,https://github.com/sufiyaarab/GroceryStoreAbstractFactory
Factory Method,Chatroom-Simulator,"Chatroom is a Java application that simulates a chatroom platform by using four design patterns: Factory Method, Singleton, Builder, and Observer Patterns.",0,0,2021,2021,1,https://github.com/jtz/Chatroom-Simulator
Factory Method,encoder,Factory method creational design pattern allows creating objects without having to specify the exact type of the object that will be created.,0,0,2017,2017,1,https://github.com/andyfighting/encoder
Factory Method,ser-515-fall-22-private-repo,"A console-based Product Trading and Bidding System (PTBS) implemented using the 5 design patterns: Facade, Bridge, Iterator, Factory Method and Visitor",0,0,2022,2024,1,https://github.com/amitnoelasu/ser-515-fall-22-private-repo
Factory Method,Design-Pattern-Factory,"POC do Design Pattern Factory implementado em TypeScript. Exemplo prático de criação de veículos usando Factory Method, com testes unitários em Vitest.",0,0,2025,2025,1,https://github.com/Khaledy30/Design-Pattern-Factory
Factory Method,Facebook-desktop-app,"A Facebook desktop application using Facebook Graph API implementing 6 different design patterns such as Template Method, Observer, Strategy, Factory Method, Proxy, Facade.",0,0,2022,2022,2,https://github.com/yuvalbader/Facebook-desktop-app
Factory Method,HealthCareSystem,"A healthcare management system built using object-oriented principles and the Factory Method design pattern to efficiently manage roles, appointments, and healthcare operations.",0,0,2024,2024,1,https://github.com/PhatBUii9/HealthCareSystem
Factory Method,EmloyeeSystemDesignPatterns,"This is a .NET MVC Core project built to track employee records in the database using LINQ/EF Core to query and perform operations in the SQL database. The architecture of this project utilizes the different design patterns such as Simple Factory, Factory Method Design Pattern etc. and also the concept of Object-Oriented Principles.",0,0,2021,2021,0,https://github.com/AtolagbeMuiz/EmloyeeSystemDesignPatterns
Factory Method,VarmDrinkStation,In this school assignment I was asked to expand the program with more drinks using the design pattern that was already used (Factory Method),0,0,2024,2024,1,https://github.com/roxzlir/VarmDrinkStation
Factory Method,factory-pattern,"example of a factory design pattern in java, containing an interface, an abstract class, a singleton class, a factory method and a junit test",0,0,2020,2020,1,https://github.com/chischte/factory-pattern
Factory Method,Fawry-System,"In this project I worked on building something similar to Fawry system and applied solid principles and decorator ,factory method and strategy design patterns.",0,0,2023,2023,1,https://github.com/M7mdTarek/Fawry-System
Factory Method,Car_Rental_Management,"Exercise for design patterns (Singleton, Builder, Factory Method, Abstract Factory; Adapter, Decorator, Facade, Proxy; Iterator, Observer, State, Strategy), clean code, SOLID, DRY, KISS, YAGNI",0,0,2024,2024,2,https://github.com/19pawel970415/Car_Rental_Management
Factory Method,Cafe_JDBC,Factory Method Design Pattern Project connected to MySQL Database using Java and SQL - Choose your beverage out of the menu at Nour's Cafe!,0,0,2024,2024,1,https://github.com/nourmag/Cafe_JDBC
Factory Method,labwork6,Java implementation of the aggregate and its iterator with ability to change the iterating algorithm during program execution using Iterator and Factory Method Design Patterns,0,0,2024,2024,1,https://github.com/7910528/labwork6
Factory Method,Assignment-1-Design-Patterns,We would like to use an Abstract Factory to create products for inventory and at the same time set the price of the product. The price of the product is set after the product is created and is read from a database (in this assignment that database can be file of product names and prices.). For setting the price of the product one can use a Factory Method pattern. ,0,0,2021,2021,3,https://github.com/MalaikaS-24/Assignment-1-Design-Patterns
Factory Method,ContextFM,Demo for the Factory Method Design Pattern for a simple shape perimeter and area calculation as well as real world example of managing multiple DB contexts,0,0,2022,2022,1,https://github.com/ChrisOakes/ContextFM
Factory Method,FacebookDesktopApp,"C# .Net Applicative Programming using Design Patterns - Course Project. We were asked to use Facebook API to implement 2 new features using 6 different design patterns, Threads, and Data Binding, accompanied by diagrams and an emphasis on clean, readability, and reusability code. We have chosen Singleton, Factory Method, Facade, Iterator, Observer, and Strategy design patterns in our solution.",0,0,2020,2021,1,https://github.com/sagiselag/FacebookDesktopApp
Factory Method,Brainfuck-Compiler,A compiler of the Brainfuck language made in object-oriented style for more flexibility. Used the Command and Factory Method design patterns. Made the proper unit tests.,0,0,2019,2019,1,https://github.com/TheMasterVlad/Brainfuck-Compiler
Factory Method,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Factory Method,ppp-project-akhir,"Project akhir dari matakuliah Pola-pola Perancangan. Sistem POS sederhana menggunakan JavaFX yang dibuat dengan 3 GoF design patterns yaitu, Strategy Pattern, Observer Pattern, dan Factory Method Pattern",0,0,2024,2024,1,https://github.com/aliefdany/ppp-project-akhir
Factory Method,Animal-Quiz-Game,This is a simple and fun interactive quiz game for children implemented using JavaFX. Designed using an MVC design pattern and implemented factory method to produce game objects.,0,0,2020,2021,1,https://github.com/StephenMcCallion/Animal-Quiz-Game
Factory Method,DynamicProgramming,"Demonstrated how to use dynamic programming techniques to solve problems. The project also incorporates dependency injection, design patterns such as strategy, decorator, factory methods, and the SOLID principles.",0,0,2024,2024,1,https://github.com/raytsangGitHub/DynamicProgramming
Factory Method,MazeGame,"In this Project, I created a simple maze game. There are three folders. MazeLab is a simple game. The other two folders contains maze game but has more features and I used factory method and abstract factory method design pattern using Java. ",0,0,2017,2017,1,https://github.com/pratikshekhar/MazeGame
Factory Method,software_design,"Large Java project developed over the course of a term. Used to learn various software design patterns including but not limited to the bridge, factory method, singleton, and more",0,0,2020,2020,1,https://github.com/BobbyRoche/software_design
Factory Method,Gradebook-App,"An electronic gradebook for an object-oriented programming course, featuring classes like Catalog and Course, and design patterns such as Observer, focusing on singleton, factory methods, and thorough testing.",0,0,2024,2024,1,https://github.com/cgradu/Gradebook-App
Factory Method,Facebook-features-app-using-Facebook-API,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.  ",0,1,2019,2019,1,https://github.com/AndrewSergeev/Facebook-features-app-using-Facebook-API
Factory Method,FactoryPattern,"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.",0,0,2020,2021,1,https://github.com/Mahoney0101/FactoryPattern
Factory Method,CoronaHotel,"Java project: a system that management Corona Hotel. The system is based on several guidelines and implements design patterns such as Singleton, Strategy, Factory Method and MVC. Additional use of Multithreading, Serialization.",0,0,2022,2022,1,https://github.com/bat-chen/CoronaHotel
Factory Method,FacebookExtensionApp,"A desktop app that simulates a Facebook account which the account can see it travel diary, find his ""soul mate"" and more features. Implemented using design patterns: Singleton, Factory Method, Builder, etc.",0,0,2022,2022,1,https://github.com/liat92/FacebookExtensionApp
Factory Method,CrackPass,"Le premier projet nommé ""Hack"" consiste à craquer un mot de passe ou un hash en utilisant le design pattern factory method. Le 2e ""HttpRequest"" consiste  à hacker en lançant des requêtes http.",0,1,2023,2023,2,https://github.com/Aw2001/CrackPass
Factory Method,ChainAbuse,"A modular software solution that uses the ChainAbuse API to identify fraudulent Crpyto addresses. Implements design patterns like Mediator, Observer, Singleton, and Factory Method for scalability and maintainability. Features automated JSON parsing and report generation.",0,0,2025,2025,1,https://github.com/emanueldavidov/ChainAbuse
Factory Method,RestaurantMenuBuilder,"**Restaurant Menu Builder Project**: A Java application that utilizes design patterns (Abstract Factory, Builder, and Factory Method) to dynamically generate and display seasonal restaurant menus, including entrees, main courses, desserts, and drinks, organized by season.",0,0,2024,2024,1,https://github.com/GurnoorKaur1/RestaurantMenuBuilder
Factory Method,GAME_PacmanGamePhase2,"This Pac-Man game improves upon the previous version by implementing additional design patterns: State, Decorator, Strategy, and Prototype. Existing patterns: Singleton, Factory Method, Command, and Observer, have also been upgraded for enhanced functionality and performance.",0,0,2024,2024,1,https://github.com/PierceLe/GAME_PacmanGamePhase2
Factory Method,Selenium4-UI-API,"This is a Sample UI & API testing automation framework with Selenium using OOP concepts and various creational design patterns like the Factory method pattern, Singleton pattern, Abstract factory pattern, Page object model pattern,Service object model pattern.",0,0,2024,2024,1,https://github.com/charithananayakkara7/Selenium4-UI-API
Factory Method,TicTacToe,"I've created a simple Tic Tac Toe game in Java, using text-based interface. The implementation leverages four key design patterns - Singleton, Factory Method, Observer, and Strategy - to achieve a clean architecture and enable easy expansion.",0,0,2024,2024,1,https://github.com/Issamelkaamouse/TicTacToe
Factory Method,EmployeePortal-MVC,"An Employee management portal based on ASP.NET MVC with many features like Issue management, Notice management, User management etc. Some salient features used were Unity Framework, Layered Architecture, Factory Methods, Reflection, Facade Design Pattern, LINQ, Collection Framework etc.",0,0,2018,2018,1,https://github.com/pulkitent/EmployeePortal-MVC
Factory Method,DesignPattern,"This C# repository demonstrates various design patterns with practical examples. It covers Creational (Singleton, Factory Method), Structural (Adapter, Decorator), and Behavioral (Observer, Strategy) patterns. Each pattern is illustrated with a simple example to highlight its use and benefits. To use, clone the repository.",0,1,2024,2024,2,https://github.com/Dharma-DX/DesignPattern
Factory Method,Software-Design-MenuGenerator,"This is a menu generator program that showcases the Abstaract Factory and Factory Method Design Patterns. In this program a XML or JSON file is parsed to generate a menu according to the user input in a HTML, TXT or XML file",0,0,2015,2015,1,https://github.com/Arch11/Software-Design-MenuGenerator
Factory Method,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Factory Method,Mastermind,"Cette application Mastermind a démontré ma maîtrise des algorithmes et ma capacité à résoudre des casse-têtes logiques. Ce travail a intégré des design patterns tels que MVC, Factory Method, et Strategy, améliorant ainsi l'architecture, la flexibilité, et la maintenance du logiciel.",0,0,2024,2024,4,https://github.com/karimelkaid/Mastermind
Factory Method,Requirements-Extraction-Tool,"A Java Swing based tool for generating software requirement specification from project description. The tool uses Stanford natural language processing API to auto-detect verbs and nouns in the description. Implemented using 8 different design patterns like controller, expert, factory method, singleton, iterator, etc. ",0,1,2016,2016,0,https://github.com/tushargarud/Requirements-Extraction-Tool
Factory Method,Matrix-Calculator,"This Matrix Calculator includes: (Addition, Subtraction, Multiplication and Transpose). This Matrix calculator is designed using a design pattern (Factory Method) and library (Math.net Numeric). Moreover, it is designed to follow some GUI design principles to make it easy to understand and perform well.",0,0,2021,2021,1,https://github.com/Na-David/Matrix-Calculator
Factory Method,DesignPattern,"This is a small design pattern code that I wrote as an assignment. Builder class, factory method, observer pattern, etc. Basically it has many things in it. It's really cool.. you can fork it and play around with it if you feel like it. Happy hacking!",0,0,2020,2022,1,https://github.com/ProgrammingMuffin/DesignPattern
Factory Method,Weather-Monitoring-System,"The Weather Application is a Java-based project designed to provide users with real-time weather updates and alerts based on their location. The application utilizes various design patterns, including Singleton, Factory Method, Strategy, Command, and Template Method, to ensure a clean, maintainable, and extensible codebase.",0,0,2024,2024,1,https://github.com/OmarKhaled3125/Weather-Monitoring-System
Factory Method,JavaThreadsCompetition,"A Java project with a GUI visualizing a competitive event using multithreading. Each thread represents a participant, with real-time GUI updates. The project demonstrates concurrent programming and uses design patterns like Prototype, State, Decorator, Observer, and Factory Method for object-oriented design and GUI development.",0,0,2024,2024,1,https://github.com/arielperstin10/JavaThreadsCompetition
Factory Method,ElectronicShopWebAPI,"This is a WebAPI design pattern and object-oriented programming project using c#. The design Patterns used are: The chain of responsability pattern to check if the product is acceptable or not depending if it is a laptop or a phone,  The Factory method pattern to create new products and the Adapter pattern to convert the product into Excell, JSON and XML files. The dependancy injection is also used in the project as well as the code first approach. The database used is the PostgreSQL database.",0,0,2022,2022,1,https://github.com/Joebsn/ElectronicShopWebAPI
Factory Method,Factory-Pattern,"Factory design pattern is used when we have a super class with multiple sub-classes and based on input, we need to return one of the sub-class. This pattern take out the responsibility of instantiation of a class from client program to the factory class. We can apply Singleton pattern on Factory class or make the factory method static",0,0,2018,2018,1,https://github.com/Design-pattrns/Factory-Pattern
Factory Method,Django-Webapp,"This is a scalable web application which supports an online booking and payment system and uses Django, SQLite, Stripe & Google Analytics. The purpose of this project is to showcase the use of the listed software design patterns. 1. Observer 2. Decorator 3. State Design 4. MVT 5. Factory Method 6. Template Method 7. Iterator Method 8 Adapter Method 9. Chain of Responsibility",0,0,2020,2020,1,https://github.com/David-Bromell/Django-Webapp
Factory Method,FactoryDesignPattren,"Factory design pattern is used when we have a super class with multiple sub-classes and based on input, we need to return one of the sub-class. This pattern take out the responsibility of instantiation of a class from client program to the factory class. We can apply Singleton pattern on Factory class or make the factory method static",0,0,2024,2024,0,https://github.com/bhargav0007/FactoryDesignPattren
Factory Method,PersistentDatabaseFramework,"A persistence framework for accessing MySQL database using controller, bridge, command, template method, and factory method design patterns. The framework has been designed in such a way that changing underlying database will have minimal impact on other parts of the application. This design supports undo and redo functionality buy encapsulating user operations together into command objects which are scheduled for execution dynamically using execution stack and undone stack.",0,0,2016,2016,1,https://github.com/tushargarud/PersistentDatabaseFramework
Factory Method,Ski-game---finished-product," The game simulates a ski game, in which you can choose a number of players, gender and player type, and run them in different competitions. The game combines the technologies: Multithreading, synchronization, locks. compesition and inheritance. The game is written in java and is displayed in java eclipse gui. In addition, the game is designed according to 6 design patterns: 1. prototype 2. factory method 3.Builder 4. decorator 5. observer 6. state   enjoy (:",0,0,2019,2019,1,https://github.com/SapirOhava/Ski-game---finished-product
Factory Method,Tema2-PAO," Please choose 2 of the following design patterns to implement in java: 1. factory method 2. strategy  3. proxy 4. adapter 5. facade  You can choose whichever objects you like to implement it.(Cats, Dogs, Cars, Employers, A, B, C,...) Create a command line interface to showcase the usage of the implementation.  Google is your friend and will explain each of the patterns(we did builder in class). However, please try to understand how they work.   Deadline: April 6th",0,0,2022,2022,1,https://github.com/alexion2001/Tema2-PAO
Factory Method,MyRogueGame,"MyChamberCrawler is a simplified rogue-like video game (https://en.wikipedia.org/wiki/Rogue_(video_game)). A game of MyChamberCrawler consists of a randomly generated board (where 5 rows are reserved for displaying information). Game play is as follows: the player character moves through a dungeon and slays enemies and collects treasure until reaching the end of the dungeon (where the end of the dungeon is the 5th floor). A dungeon consists of diﬀerent floors that consist of chambers connected with passages. Each floor consists of different chambers which are generated at random. MyChamberCrawler diﬀers from other rogue-likes in a significant way: it does not update the terminal/window in real-time but rather redraws all elements every turn (e.g. after every command).   I did this project as a group with Chris Garratt, who is a classmate of mine! We used the Linux environment for simulating this game and implemented different object oriented design patterns like strategy pattern, decorator pattern and factory method pattern to achieve our purpose. The entire project was coded using C++. You can download the files into a Linux environment and compile it using C++14. Enjoy the game!",0,0,2017,2017,0,https://github.com/azad108/MyRogueGame
Adapter,design_patterns_in_typescript,:triangular_ruler: Design pattern implementations in TypeScript,5272,763,2013,2025,8,https://github.com/torokmark/design_patterns_in_typescript
Adapter,DesignPatterns,"Come learn about all the Gang of Four patterns (e.g. Adapter, Facade, Strategy, Mediator, Command and more) with C# and food examples!",643,251,2016,2025,2,https://github.com/exceptionnotfound/DesignPatterns
Adapter,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Adapter,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Adapter,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Adapter,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Adapter,ports_and_adapters_ca_design_patterns_frontend,,53,29,2022,2025,1,https://github.com/rodrigobranas/ports_and_adapters_ca_design_patterns_frontend
Adapter,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Adapter,design-patterns-in-angular,Deprecated | new project: https://github.com/Itchimonji/design-patterns-in-typescript,40,15,2020,2025,0,https://github.com/Itchimonji/design-patterns-in-angular
Adapter,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Adapter,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Adapter,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Adapter,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Adapter,Adapter-Design-Pattern,Adapter Design Pattern,14,0,2018,2024,1,https://github.com/akshayblevel/Adapter-Design-Pattern
Adapter,real-world-design-patterns,"Since there are a lot of misconceptions and some controversy about real-world use cases and the benefits of Design Patterns, I've decided to create this repository where I'll develop and share some implementations of them. Each pattern will have a README file with a components relationship diagram and explanations about it.",13,1,2021,2023,1,https://github.com/j-didi/real-world-design-patterns
Adapter,Getting-Jiggy-With-Adapters,"An adapter is one of the easier design patterns to learn. The reason why is because you use them in the real world all the time! In this lesson, let's review a handful of examples to figure out how it all works.",12,8,2014,2023,1,https://github.com/laracasts/Getting-Jiggy-With-Adapters
Adapter,Swift-Adapter,Design Patterns in Swift: Adapter,12,0,2016,2021,1,https://github.com/kingreza/Swift-Adapter
Adapter,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Adapter,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Adapter,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Adapter,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Adapter,Adapter-Pattern,Adapter design pattern is one of the structural design pattern and it’s used so that two unrelated interfaces can work together. The object that joins these unrelated interface is called an Adapter. ,9,0,2018,2024,1,https://github.com/Design-pattrns/Adapter-Pattern
Adapter,DesignPatternsToJS,💥JavaScript设计模式的学习，同时会自己封装一些如adapter request classes、time classes 等,8,5,2019,2024,1,https://github.com/PDKSophia/DesignPatternsToJS
Adapter,php-design-pattern,PHP Design Pattern definition with example.,8,2,2020,2025,1,https://github.com/hbrawnak/php-design-pattern
Adapter,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Adapter,php-design-patterns,"The Decorator Pattern, Adapter Pattern, Template Method Pattern, Strategy Pattern, Observer Pattern",7,0,2021,2024,1,https://github.com/manjeetk/php-design-patterns
Adapter,design_patterns,C++ 设计模式  Common design pattern examples:(Factory AbstractFactory Adapter Bridge Command Visistor Observer....etc),7,1,2018,2024,1,https://github.com/cf-zhang/design_patterns
Adapter,AdapterDesignPattern,Adapter Design Pattern,6,0,2018,2023,1,https://github.com/mtnaln/AdapterDesignPattern
Adapter,AdapterAndFactoryDesignPatternCsharp,Adapter And Factory Design Pattern Csharp,6,0,2022,2023,1,https://github.com/aliyasindogan/AdapterAndFactoryDesignPatternCsharp
Adapter,Software-Architecture-Assignment," Software Architecture and Design 1st assignment, Builder Design Pattern and Adapter Design pattern.",6,0,2020,2020,1,https://github.com/aatakanakman/Software-Architecture-Assignment
Adapter,Design-Patterns,"Patrones de diseño / Clase Template C++ / Parciales / Exámenes de Programación 4 de Facultad de Ingeniería UdelaR - Uruguay. Análisis, Diseño e implementación en C++ usando programación orientada a objetos. UML. Design Patterns, Template C++, exercises...",6,2,2018,2024,2,https://github.com/mathiasuy/Design-Patterns
Adapter,golang-design-patterns,This repository provides a comprehensive collection of design patterns implemented in Go (Golang). It serves as a practical guide to understanding and applying common software design patterns in real-world Golang projects. ,6,0,2024,2024,1,https://github.com/Beretta350/golang-design-patterns
Adapter,typescript_design_patterns,Implementations of design patterns (GOF) in Typescript,5,0,2018,2022,1,https://github.com/Uncleseneca/typescript_design_patterns
Adapter,Design-Patterns---PMS---Patient-Information-System-Simple,"Simple Project For Singleton, Abstract Factory, Command, Iterator, Decarator Observer and Adapter Design Patterns, All in One",4,0,2020,2021,0,https://github.com/muammersahin/Design-Patterns---PMS---Patient-Information-System-Simple
Adapter,Adapter-Pattern-Java,Adapter pattern works as a bridge between two incompatible interfaces. This type of design pattern comes under structural pattern as this pattern combines the capability of two independent interfaces.,4,0,2021,2022,1,https://github.com/iresh-rajitha/Adapter-Pattern-Java
Adapter,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Adapter,Adapter_Design2.0,The Adapter design pattern allows incompatible interfaces to work together seamlessly. It acts as a bridge between two incompatible interfaces by converting the interface of one class into another interface that a client expects.,4,0,2024,2024,1,https://github.com/samyam81/Adapter_Design2.0
Adapter,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Adapter,Virtual-Stock-Portfolio-Bank-Account-Management-System,"Created an Account Management System which manages a stock portfolio account and a bank account using C++ and STL *Created the capability to dynamically manage portfolios by allowing users to view price, buy shares, sell shares *Developed features to simulate bank account transactions like deposit/withdraw money and view history *Plotted variation in the value of portfolio over a period of time using MATLAB *Developed a Graphic User Interface using QT to make the whole system more User-friendly *Used Design Patterns like Bridge and Adapter to enhance the experience to ensure reusability of software",4,2,2017,2024,1,https://github.com/ramyaa412/Virtual-Stock-Portfolio-Bank-Account-Management-System
Adapter,ranch-management,"Our team developed the drone enhanced ranch management software. The software was able to track livestock vitality and location, monitor feeding and watering systems, and monitor property status with the help of the drone(s).  Our team used Java 8 and Scenebuilder to develop the software. We created the Class diagrams, Sequence diagrams, Rapid prototypes, and other diagrams to assist us in developing the software. Also, different design patterns like Composite, Visitor, Adapter were used to develop the project.",4,0,2021,2025,1,https://github.com/prajun7/ranch-management
Adapter,dp-structural-adapter,Design Pattern: structural - adapter,3,4,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-structural-adapter
Adapter,adapter-pattern-example,Adapter design pattern example in java - java9s.com,3,4,2016,2023,1,https://github.com/java9s/adapter-pattern-example
Adapter,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Adapter,DesignPattern-Adapter,Analysis and implementation of the Adapter Design Pattern,3,0,2023,2024,1,https://github.com/aminehsan/DesignPattern-Adapter
Adapter,adapter_design_pattern,Implementation of the adapter design pattern with golang,3,0,2023,2024,1,https://github.com/Creatorjason/adapter_design_pattern
Adapter,Design-Patterns,Bu repoda Yazılım Tasarımı ve Mimarisi dersi ile paralel yürüttüğüm Desing Patterns ile ilgili çalışmalarım ve patternslar ile ilgili notlarım bulunmaktadır.,3,0,2021,2023,1,https://github.com/emirhandogandemir/Design-Patterns
Adapter,Adapter_design, Adapter design pattern allows incompatible interfaces to work together by providing a wrapper that translates the interface of a class into another interface that a client expect.,3,1,2024,2024,2,https://github.com/samyam81/Adapter_design
Adapter,AR-Design-Patterns-In-Swift,用Swift来实现设计模式,3,1,2018,2020,1,https://github.com/andyRon/AR-Design-Patterns-In-Swift
Adapter,Clinick-Appointment-System,"  A console program that aims to digitize the process of making appointment. Applies object-oriented programming concept, uses entity boundary control, adapter design pattern, and uses MYSQL database with JDBC.",3,0,2022,2024,5,https://github.com/yy-cc-20/Clinick-Appointment-System
Adapter,BlogApi,"This is project, use ASP .Net Core, Web api and N tier architecture.I use nine layer architecture so layers name are Business,DAL,Entities,Dto,Repository,Tools,UI and Web Api.Also ı used Entity Framework Code first,Repository Pattern,Builder Design Pattern and Adapter Design Pattern. Self reference comment, search, Json Web Token,Nlog logs, Fluent Validations and Auto Mapper operations.",3,0,2020,2023,1,https://github.com/YasinKalender/BlogApi
Adapter,bsx-file-storage,Este microserviço de storage de arquivos segue SOLID e design patterns. Armazena e gerencia arquivos de forma eficiente. Aplica SOLID para código flexível e de fácil manutenção. Utiliza padrões como Factory e Ports and Adapters. Solução escalável e poderosa para armazenamento de arquivos.,3,0,2023,2023,1,https://github.com/gabrielbsx/bsx-file-storage
Adapter,Design-Pattern-Java,"This repo provides key Java Design Patterns 🎯 for writing clean, scalable, and maintainable code! 💻 It includes Creational 🏗️ (e.g., Singleton), Structural 🏢 (e.g., Adapter), and Behavioral 🤖 (e.g., Strategy) patterns to improve your Java development process. 🚀",3,0,2024,2024,1,https://github.com/jathurT/Design-Pattern-Java
Adapter,ObserverAndAdapterExample,Example of the observer and adapter design patterns,2,3,2014,2022,1,https://github.com/csc301-fall2014/ObserverAndAdapterExample
Adapter,Design-Pattern-Adapter,Design-Pattern-Adapter,2,0,2022,2023,1,https://github.com/Jacky0624/Design-Pattern-Adapter
Adapter,dp-adapter,Design patterns workshop: Adapter pattern example.,2,0,2023,2023,0,https://github.com/SystematicSDC/dp-adapter
Adapter,DESIGN-PATTERNS-IN-JAVA,"I have implemented Factory method Design pattern, Strategy Design pattern and Adapter Design pattern in Java",2,0,2024,2024,1,https://github.com/KavinduRanawaka/DESIGN-PATTERNS-IN-JAVA
Adapter,User-Management-System,Using Adapter And Mediator Design Patterns,2,0,2019,2022,1,https://github.com/shashwatkathuria/User-Management-System
Adapter,ports_and_adapters_ca_design_patterns_frontend,ports_and_adapters_design_patterns_frontend,2,0,2023,2023,1,https://github.com/viniciusbls9/ports_and_adapters_ca_design_patterns_frontend
Adapter,Adapter-Design-Pattern-Example,Example of Adapter Design Pattern: Using Multiple Payment Gateways,2,1,2024,2025,1,https://github.com/rezajafarnezhad/Adapter-Design-Pattern-Example
Adapter,Adapter-Design-Pattern-Low-level-Design-,This respository includes complete implementation of Adapter Design Pattern with explanation .,2,0,2023,2023,1,https://github.com/akshatsh0610/Adapter-Design-Pattern-Low-level-Design-
Adapter,Iki-Tarih-Arasi,Adapter Design Pattern ve Facade Pattern ile hazırlanmış C# Uygulanması,2,0,2020,2021,1,https://github.com/AhmetSaitCalisir/Iki-Tarih-Arasi
Adapter,DesignPatterns,"Some design patterns (Singleton, Simple and Abstract Factory, Builder, Facade, Adapter, Chain of Responsibility, Mediator) examples written in C#",2,0,2018,2024,1,https://github.com/alexandra-valkova/DesignPatterns
Adapter,MobRAVE,An Interface Layer between Hardware and Software Layer involving Adapter design Patterns,2,0,2012,2014,1,https://github.com/Praveen-Ramanujam/MobRAVE
Adapter,design-patterns,"PHP implementations of various design patterns, including Singleton, Factory, Adapter, and more, to demonstrate key software design principles",2,0,2020,2025,1,https://github.com/maliknaik16/design-patterns
Adapter,DesignPattern,"Design pattern ""Gang of Four"" : Proxy, Composite, Decorator, Strategy, Observer, Adapter, Builder, Factory, FactoryAbstract.",2,0,2021,2021,1,https://github.com/belaid1993/DesignPattern
Adapter,Adapter-Pattern-Design-WPF-Microsoft-Sample-,It is a structural design pattern that allows objects with incompatible interfaces to work together. WPF-Samples/Elements/WidthProperties,2,0,2022,2024,1,https://github.com/YusufsKaygusuz/Adapter-Pattern-Design-WPF-Microsoft-Sample-
Adapter,Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF,"In this project; command, factory, singleton, adapter and facade design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2021,2022,1,https://github.com/kamilhan-karaismailoglu/Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF
Adapter,xenolith,"A modular, flexible blockchain written in GO; following the philosophy of the Adapter/Plugin design pattern",2,1,2024,2024,1,https://github.com/EggsyOnCode/xenolith
Adapter,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Adapter,Lumiere-server,"Node.js backend server for a Kotlin mobile app, using an MVC architecture. Implements design patterns like Adapter, Singleton, and Factory to enhance system flexibility and scalability.",2,1,2024,2024,2,https://github.com/oscarvasquez28/Lumiere-server
Adapter,medical_clinic_system_SW,"A Java-based desktop application designed to manage patient records, doctor schedules, and appointments. This system utilizes multiple design patterns, including Singleton, Factory, Builder, Adapter, Proxy, and Prototype, ensuring scalability, maintainability, and code reusability.",2,0,2024,2025,1,https://github.com/mohamedmagdy2301/medical_clinic_system_SW
Adapter,Pharmacy-Management-System,"I've developed a Spring Boot application with Thymeleaf, incorporating all the SOLID Principles alongside four key Design Patterns: Factory, Singleton, Builder, and Adapter. This project boasts several standout features, such as dual ports dedicated to administration and customer interactions, among other functionalities.",2,0,2024,2025,1,https://github.com/mohammed-taha-roshan/Pharmacy-Management-System
Adapter,movieapp,MVI + Coroutines + Flow + ViewModel + Room + Jetpack Navigation + App Bundle + Gitlab CI/CD + Material Components + Clean Architecture + Retrofit + Modular Architecture + Unit/UI Test + Build Flavors + DiffUtil + Motion Layout + StateFlow + SharedFlow + Design Patterns + Kotlin DSL + Detekt(QA) + Moshi + Dynamic Features + Offline Cache + Firebase Messaging + Jetpack DataSource + SavedStateModule + Binding Adapter + Transition Animation + ViewBinding + Vector Animation + Hilt + Gradle Custom Task + Swipe to Delete with Undo Action + RecyclerView Animation + Firebase Analytics + Crashlytics + Multi Language + Dark/Light Theme + Custom Layout for Tablet + Swipe to Dismiss Image Gallery + Advanced Logger,2,0,2021,2024,0,https://github.com/janbarari/movieapp
Adapter,observer-and-adapter-example,An example of the observer and adapter design patterns,1,15,2015,2021,1,https://github.com/csc301-fall-2015/observer-and-adapter-example
Adapter,design-pattern-adapter,"Want to learn more about using the adapter design pattern in Java? Check out this tutorial to learn how to use the object, class, and two ways adapter patterns.",1,3,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-adapter
Adapter,Adapter,Design Pattern implemendted in C#,1,0,2020,2024,1,https://github.com/wojciechligeza/Adapter
Adapter,AdapterDesignPattern,Adapter design pattern,1,0,2023,2023,1,https://github.com/Surender1987/AdapterDesignPattern
Adapter,adapter-design-pattern,Adapter Design Pattern,1,0,2018,2018,0,https://github.com/shabazy/adapter-design-pattern
Adapter,designpatterns.adapter,adapter design pattern,1,0,2022,2022,1,https://github.com/dFarkhod/designpatterns.adapter
Adapter,Design-Pattern,Adapter Design pattern,1,0,2018,2018,1,https://github.com/wangchit/Design-Pattern
Adapter,AdapterDesignPattern,Sample for adapter design pattern,1,0,2024,2024,1,https://github.com/MBakhtiari97/AdapterDesignPattern
Adapter,Adapter-Pattern,Java Adapter Design Pattern ,1,0,2017,2017,1,https://github.com/Sennat/Adapter-Pattern
Adapter,adapter-professor,Design pattern adapter example,1,0,2023,2023,1,https://github.com/igorsmasc/adapter-professor
Adapter,DesignPattern-Adapter,Adapter design pattern example,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Adapter
Adapter,Adapter-Pattern,Adapter Design Pattern with JAVA,1,0,2015,2015,1,https://github.com/ricardomachadosb/Adapter-Pattern
Adapter,AdapterPython,Exemplo do Design Pattern Adapter em Python,1,0,2024,2024,1,https://github.com/julianabaicar/AdapterPython
Adapter,AdapterDesignPatternInSpringBoot,adapter design pattern using spring boot,1,1,2019,2020,1,https://github.com/Suman21/AdapterDesignPatternInSpringBoot
Adapter,Adapter,This is a sample for implementing Adapter Design Pattern using C#,1,0,2023,2024,1,https://github.com/bluescreen1999/Adapter
Adapter,AdapterDesignPattern-,This C# code implements Adapter Design Pattern,1,0,2020,2020,1,https://github.com/anand-mcs/AdapterDesignPattern-
Adapter,tp-designpatterns,"design pattern > Adapter, Composite, Prototype",1,0,2024,2024,1,https://github.com/hayatvyhr/tp-designpatterns
Adapter,dp_adapter,Java example of Adapter design pattern.,1,0,2016,2022,1,https://github.com/nick79/dp_adapter
Adapter,jsAdapter,The Adapter Design Pattern in JavaScript,1,0,2016,2016,1,https://github.com/gergob/jsAdapter
Adapter,AdapterExampleApplication,SSE 662 Project 4 Adapter Design Pattern Example,1,0,2017,2018,1,https://github.com/GMP-SSE-662/AdapterExampleApplication
Adapter,Adapter-DesignPattern,Adapter Design Pattern Implementation in C#,1,0,2020,2023,1,https://github.com/KJayanthKumar/Adapter-DesignPattern
Adapter,adapter-pattern-practice,Design pattern 練習：adapter pattern,1,0,2020,2023,1,https://github.com/LarryCChien/adapter-pattern-practice
Adapter,php-design-patterns-adapter,PHP Design Patterns - Adapter Pattern Sample,1,0,2018,2020,1,https://github.com/rito328/php-design-patterns-adapter
Adapter,django-adapters,Introduction to Adapters Design Pattern in python,1,1,2021,2022,1,https://github.com/PedroDDiez/django-adapters
Adapter,pattern-adapter,Adapter software design pattern implementation in Java,1,0,2015,2018,0,https://github.com/homeski/pattern-adapter
Adapter,Design-pattern,"Design pattern Cos, bridge, and adapter",1,0,2023,2023,1,https://github.com/ivananassar/Design-pattern
Adapter,Consulta-CEP-Adapter-Design-Pattern,IMPLEMENTAÇÃO DO DESIGN PATTERN ADAPTER COM PYHTON,1,0,2024,2024,1,https://github.com/Jaum0730/Consulta-CEP-Adapter-Design-Pattern
Adapter,adapter-design-pattern,See example of adapter design pattern in go,1,0,2024,2024,1,https://github.com/bujosa/adapter-design-pattern
Adapter,adapter-design-pattern-php,Simple implementation of adapter design pattern in PHP,1,1,2019,2022,0,https://github.com/bdaler/adapter-design-pattern-php
Adapter,Ex6-Adapter-Decorator-Facade-Design-Pattern,05506230-Design Patterns In Object-Oriented Programming ,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex6-Adapter-Decorator-Facade-Design-Pattern
Adapter,Design_Patterns-Tasarim_Desenleri,Tasarım Desenleri / Design Patterns,1,1,2020,2023,1,https://github.com/cantugba/Design_Patterns-Tasarim_Desenleri
Adapter,Flask-Design-Patterns,"Design Patterns(Singleton,Adapter,Mediator) with flask framework",1,0,2020,2022,2,https://github.com/mzuvin/Flask-Design-Patterns
Adapter,Design-Patterns-Java,Java design patterns to learn,1,0,2021,2021,1,https://github.com/Nekit-vp/Design-Patterns-Java
Adapter,AdapterNeededExampleApplication,This repo shows an instance where the Adapter Design Pattern would be better suited.,1,0,2017,2018,1,https://github.com/GMP-SSE-662/AdapterNeededExampleApplication
Adapter,go-adapter,Projeto criado para aprendizagem da metodologia de design patterns Adapter em Go.,1,0,2024,2024,1,https://github.com/pietroBragaAquinoJunior/go-adapter
Adapter,MusicAlbums,"use design patterns ,Abstract Factory , MVC ,Decorator,Adapter,Facade",1,0,2016,2016,1,https://github.com/jobsyu/MusicAlbums
Adapter,Design-Patterns-C-,Design Patterns C# - Aprendendo Adapter Pattern em .Net Core,1,0,2022,2023,0,https://github.com/WashingtonBDS/Design-Patterns-C-
Adapter,design-patterns,"factory method, adapter e observer",1,0,2021,2021,1,https://github.com/Greiciane93x/design-patterns
Adapter,design-patterns-software-engineering,Studies on design patterns and software engineering.,1,0,2024,2025,1,https://github.com/kastorcode/design-patterns-software-engineering
Adapter,simple-adapter-java,A simple example of how to implement the Adapter design pattern in Java,1,0,2023,2024,1,https://github.com/sean-campbelltech/simple-adapter-java
Adapter,software-quality-and-testing,"Design patterns: Factory, Builder, Adapter, Decorator, Strategy, Memento, and others.",1,0,2021,2022,1,https://github.com/sabrinalupsan/software-quality-and-testing
Adapter,BlueLibrary,"Design pattern illustration: Singleton, MVC, Decorator, Adapter, Facade, Observer, Memento.",1,0,2017,2020,1,https://github.com/ngominhtrint/BlueLibrary
Adapter,java-design-patterns,java设计模式回顾,1,0,2018,2018,0,https://github.com/liu1084/java-design-patterns
Adapter,Design_Patterns,"Estudo em JAVA sobre DesignPatterns ( Builder, Singleton, Adapter).",1,0,2023,2023,1,https://github.com/SenaFernando/Design_Patterns
Adapter,Facade-Adapter-Design-Patterns,,1,0,2021,2023,1,https://github.com/eliangermosen/Facade-Adapter-Design-Patterns
Adapter,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
Adapter,flutter_adapter_design_pattern,Flutter package to convert JSON data to XML format using the Adapter Design Pattern.,1,0,2025,2025,1,https://github.com/ytolgaarda/flutter_adapter_design_pattern
Adapter,go-design-patterns,"Learning Behavioural, Creational, and Adapter patterns with golang",1,0,2022,2023,1,https://github.com/onenfelix/go-design-patterns
Adapter,Design-Patterns-Csharp,Estudo de Design Patterns com C#,1,1,2020,2024,1,https://github.com/thiago-roock/Design-Patterns-Csharp
Adapter,ShopiFly-App,"Native android application to practice on ""RecyclerView""  and ""Adapter design pattern""",1,1,2021,2021,1,https://github.com/MahmoudKhalid-eng/ShopiFly-App
Adapter,Intro-To-Adapter-Design-Pattern,Adapter is a structural design pattern that allows objects with incompatible interfaces to collaborate.,1,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Adapter-Design-Pattern
Adapter,design-patterns,"Disponíveis exemplos de padrões de projetos em Java, como SOLID, Factory Method, Abstract Factory, Builder, Bridge, entre outros.",1,0,2023,2024,1,https://github.com/ThaliaLevy/design-patterns
Adapter,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Adapter,Mastering-Design-Patterns-in-Java,"real world examples for singleton, factory, builder, adapter, decorator, observer design patterns",1,0,2024,2024,1,https://github.com/DharshiBalasubramaniyam/Mastering-Design-Patterns-in-Java
Adapter,patterns,"Design Patterns Sample (Creational[Builder, Factory Method,Singleton], Structural[Adapter, Facade, Proxy] )",1,0,2016,2023,1,https://github.com/asanchezyu/patterns
Adapter,patterns2,"Abstract Factory, Adapter, Builder, Façade, and Factory Method Design Patterns sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns2
Adapter,design-patterns,"Mise en oeuvre des design patterns Adapter, Observer, State, Decorator, Proxy, Command et Factory",1,0,2017,2023,3,https://github.com/cdevy/design-patterns
Adapter,Software-Design-Patterns-The-Adapter-Pattern,,1,0,2024,2024,1,https://github.com/bertrandrusa/Software-Design-Patterns-The-Adapter-Pattern
Adapter,AspNetCoreDesignPatterns,"Adapter, ChainResponsibility, Command, Composite, Decorator, Observer, Strategy, Template Patterns",1,0,2022,2023,0,https://github.com/MertGuney/AspNetCoreDesignPatterns
Adapter,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Adapter,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Adapter,World-Cup,"This app uses listView , to display elements horizontally . Uses adapter-design pattern . 1. adapterview 2. data storage 3. adapter ",1,0,2024,2025,1,https://github.com/sumitbhuia/World-Cup
Adapter,Java-Design-Patterns,"Java project program to demonstrate design pattern implementation in Java code, such as observer, decorator, and adapter patterns of software design.",1,0,2021,2022,1,https://github.com/drew-m7/Java-Design-Patterns
Adapter,nodejs-api,"Basic Node JS with clean architecture and good scafolding, use design patterns like Adapters, Repositories.",1,0,2022,2023,1,https://github.com/sduquev/nodejs-api
Adapter,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Adapter,ports-and-adapters-clean-arch-and-design-patterns-frontend,,1,0,2022,2023,0,https://github.com/vavellar/ports-and-adapters-clean-arch-and-design-patterns-frontend
Adapter,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Adapter,design-patterns,:alien: A list of design patterns implementeds in JAVA that I worked during my graduation,1,0,2017,2019,1,https://github.com/MarceloBritoWD/design-patterns
Adapter,logger-with-design-patterns,"Example of a logger with design patterns: strategy, composite, adapter and factory. Based on this video: https://www.youtube.com/watch?v=lqYm2V6J7Gk",1,0,2021,2021,1,https://github.com/rayque/logger-with-design-patterns
Adapter,Design-Patterns,"Explore a collection of commonly used design patterns implemented in Java. This repository showcases examples of Singleton, Factory, Abstract Factory, Adapter, Strategy, and Builder patterns. Each pattern is implemented in its own package, providing clear demonstrations and usage guidelines.",1,0,2023,2023,1,https://github.com/Meriyemelhajoui/Design-Patterns
Adapter,Design-Patterns,"🛠️ Explore key software design patterns with Java demos! This repository features the Adapter, Observer, and Singleton patterns with practical examples to boost your understanding of reusable and scalable code structures. Perfect for developers diving into design principles! 🚀 #DesignPatterns #Java #Coding",1,0,2024,2024,1,https://github.com/Sassri24/Design-Patterns
Adapter,Store_Final_Project_Design_Patterns," Streaming Binary I/O, Collections, Design Patterns: Comparator, Iterator (For file), List Iterator, Observer, MVC, Singleton, Command, Adapter, Decorator, Memento and Multi Treading Systems",1,0,2021,2022,1,https://github.com/RonShmaya/Store_Final_Project_Design_Patterns
Adapter,Design-pattern-Adapter-laravel,"Design Pattern Adapter is a design pattern that provides developers with the possibility to access the interface of their desired class through the interface of another class and thus use its attributes and methods in the said class. In other words, this pattern is used to use the capabilities of one class inside another class without changing its source code.",1,0,2022,2022,1,https://github.com/mohsenmojadam2019/Design-pattern-Adapter-laravel
Adapter,design-patterns,A GitHub repository providing simple explanations and code snippets for various design patterns in JavaScript and Python.,1,0,2023,2023,1,https://github.com/simon-das/design-patterns
Adapter,software-design-patterns-java,"Explore Java code examples for software design patterns—creational (Singleton, Factory), structural (Adapter, Decorator), and behavioral (Observer, Strategy). Master best practices for writing maintainable, flexible, and scalable Java code in this comprehensive repository.",1,0,2023,2023,1,https://github.com/kodiidok/software-design-patterns-java
Adapter,Spring-Adapter-Integration-Design,"Implementing the Adapter Design Pattern in Spring Boot: A practical guide to integrating multiple payment gateways like Stripe, PayPal, Razorpay, and Google Pay in a streamlined and maintainable way.",1,1,2024,2024,1,https://github.com/18-RAJAT/Spring-Adapter-Integration-Design
Adapter,PharmaPlus,"CSE-3120 | Software Engineering and Information Systems Laboratory Android studio project with Factory , SingleTon , adapter , Observer Design pattern",1,1,2024,2024,3,https://github.com/Mofazzal874/PharmaPlus
Adapter,JavaDesignPatternsWorld,"JavaDesignPatternsWorld 🌟: Master Java Design Patterns and SOLID Principles with real-world examples, code snippets, and quizzes. Learn Creational, Structural, and Behavioral patterns, including Singleton, Factory, Adapter, Observer, and more. Perfect for beginners, developers, and architects to create scalable, maintainable software! 🚀",1,0,2024,2024,1,https://github.com/rohitbhardwaj/JavaDesignPatternsWorld
Adapter,neoflex_patterns,"Assignment from the lecturer of the Neoflex training center on the topic of Design patterns (singleton, factory, proxy, adapter).",1,0,2021,2021,1,https://github.com/stasbaglaev/neoflex_patterns
Adapter,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Adapter,Doacaofacil,"Application with a social purpose for food donation using design patterns such as: Factory Method, Composite, Adapter, Decorator, and Abstract",1,0,2024,2024,1,https://github.com/rafaelhendges/Doacaofacil
Adapter,RESTAURANT-MENU-APP,"A restuarant menu java application implementing Object Oriented Design patterns: Observer, Adapter and Facade and implementing SOLID and GRASP principles  ",1,0,2017,2017,1,https://github.com/Maitri-13/RESTAURANT-MENU-APP
Adapter,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Adapter,next-store,"Adapter Design Pattern showcase - Next.js app built using adapters, services & internal API routes in order to achieve a scaleable, heavy network usage oriented front-end codebase",1,0,2024,2024,1,https://github.com/augustynglowacki/next-store
Adapter,IndianCensusAnalyser,"Census Analyser Emphasis on   - Libraries: OpenCSV, Json  - Jar Library  - Generic, Sort and Search  - Design Principles  - Design Patterns: Adapter Pattern, DAO Pattern, Factory Pattern",1,0,2020,2022,1,https://github.com/harshi0806/IndianCensusAnalyser
Adapter,Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns,"This is an Application Implementing 5 design Patterns like Strategy, Singleton, Builder, Observer and Adapter. It is a Basic Job Posting and Hiring Application implementing login and Register Functionality with Job Posting and Job Hiring , it also sends out SMS Messages to Subscribed Phone Numbers.",1,0,2024,2024,1,https://github.com/SpecteR926/Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns
Adapter,MusicAlbums,"This app shows a Music Album collection and allows you edit the list. It uses different design patterns like Singleton, MVC, Decorator, Adapter, Facade, Observer.",1,0,2017,2018,0,https://github.com/josman185/MusicAlbums
Adapter,Patterns,"This repository showcases implementations of fundamental design patterns in C#, covering creational, structural, and behavioral patterns. Each pattern is demonstrated through easy-to-understand, practical examples, illustrating how to solve common software design challenges.",1,0,2024,2024,1,https://github.com/pome1lo/Patterns
Adapter,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Adapter,Food-App-,Android Food App for meals based on free API for meals . Able to use Material Design principles and components . ( MVP pattern - Retrofit2 – Butter Knife - ViewPager Adapters Fragment - Menu – Dialog - Recycler view adapter - Picasso Material Design – Intents – Singleton design pattern ),1,0,2019,2020,1,https://github.com/AhmedKhozam/Food-App-
Adapter,Elegant_API,"Elegant API has been developed with the objective of have  most design patterns posible, using Singleton, Dependencies Injection, Facade, Currying, an adapter in hipothetic case and trying to has clean code.",1,0,2021,2023,1,https://github.com/yuNNNu/Elegant_API
Adapter,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Adapter,Bookstore,"Proficient in full-stack web app development, including RESTful APIs with Spring Boot, PostgreSQL database management, dynamic interfaces using Thymeleaf, secure authentication, session handling, and applying Factory and Adapter design patterns for modular architecture, delivering a scalable textbook inventory management system in Java.",1,0,2024,2024,1,https://github.com/AnkitHProfile/Bookstore
Adapter,SimpleNoteApp,"This is a simple note app that you can swipe to delete notes and undo them, SQLite used in this project In addition Adapter pattern and singleton design pattern used in this project. This is a simple app and definitely is under maintenance.Goodluck",1,0,2020,2022,0,https://github.com/aliemamalinezhad/SimpleNoteApp
Adapter,cs342-hw-4,"You will chose one of the following design patterns: Template Method, Proxy, Adapter or Abstract Factory. Using the Maven JavaFX Project template in the sample code section of our BB course page, you will write a JavaFX program that highlights the functionality of the design pattern you chose. This does not need to be a lot of code and the GUI does not need to be extensive. You can not simply copy and paste an example from the web. You must also include a single page describing how the design pattern works in your program and what the benefits and/or drawbacks of using it are. Format this page as a PDF.",1,0,2022,2023,1,https://github.com/GGsource/cs342-hw-4
Adapter,BlogReader,"The Blog Reader app will teach me 
one of the most common and 
important uses of an Android app: 
downloading data from the Internet 
and displaying it in a list. I will 
investigate the Model-View-Controller 
design pattern that is essential for all Android apps, 
learn how to request data from the web, 
parse and use information in JSON 
format, and utilize the built-in 
Android ListActivity and adapter. 
I also see how to display a webpage 
inside an app.",1,1,2014,2016,1,https://github.com/TimB0/BlogReader
Adapter,Adapter,this repo contains Adapter design pattern implementation using C#,0,46,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/Adapter
Adapter,lab-05,Lab 5: The adapter design pattern,0,7,2023,2023,1,https://github.com/cpit252/lab-05
Adapter,design-patterns-adapter,,0,6,2020,2020,3,https://github.com/Otimkev/design-patterns-adapter
Adapter,Adapter-Pattern,Adapter design pattern example for C#,0,2,2017,2019,1,https://github.com/mehmetkoca/Adapter-Pattern
Adapter,Lgroup.DesignPatterns.Adapter,,0,2,2016,2016,1,https://github.com/ErickWendel/Lgroup.DesignPatterns.Adapter
Adapter,Adapter,Structural Design Pattern in C# | Adapter Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Adapter
Adapter,python-design-patterns,"A project built in Python and some patterns like Adapter, Factory and Observer",0,2,2020,2020,1,https://github.com/guilhermegarcia86/python-design-patterns
Adapter,Adapter,Adapter design pattern,0,0,2018,2018,1,https://github.com/TulshiDas39/Adapter
Adapter,Adapter,C# Design Pattern,0,0,2022,2022,1,https://github.com/jayraj701/Adapter
Adapter,Adapter,Adapter Design Pattern,0,0,2020,2020,1,https://github.com/KorneliaJagodzinska/Adapter
Adapter,adapter,Adapter Design Pattern,0,0,2022,2022,1,https://github.com/adaskhan/adapter
Adapter,Adapter,Design Patterns - Adapter,0,0,2020,2020,1,https://github.com/euygor/Adapter
Adapter,Adapter,Adapter design pattern,0,0,2024,2024,1,https://github.com/OctavioCastillo/Adapter
Adapter,Adapter,Structural design pattern,0,0,2020,2020,1,https://github.com/rjiosum/Adapter
Adapter,adapter,Design Pattern Adapter,0,0,2020,2020,1,https://github.com/mydesignpatters/adapter
Adapter,Adapter,Design Pattern :: Adapter,0,0,2019,2019,1,https://github.com/onsaurav/Adapter
Adapter,Adapter,Design Pattern Adapter,0,0,2022,2022,1,https://github.com/aliounemane2/Adapter
Adapter,adapter,Adapter Structural Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/adapter
Adapter,Adapter,Adapter design pattern example,0,0,2017,2017,1,https://github.com/jordan-seneca/Adapter
Adapter,Adapter,Adapter design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Adapter
Adapter,AdapterPattern,Design Pattern,0,0,2024,2024,0,https://github.com/kshitiztimsina/AdapterPattern
Adapter,AdapterPattern,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/AdapterPattern
Adapter,Design-Pattern-AdapterPattern,Design Pattern,0,0,2016,2016,1,https://github.com/aakash140/Design-Pattern-AdapterPattern
Adapter,adapter,introduction to adapter design pattern,0,0,2024,2024,1,https://github.com/IbrahimEllouze/adapter
Adapter,Adapter,Adapter Structural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Adapter
Adapter,Adapter-Design-Pattern, Structural Design Patterns: Adapter Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Adapter-Design-Pattern
Adapter,Adapter,Type of Structural Design Pattern,0,0,2025,2025,1,https://github.com/kashiiitech/Adapter
Adapter,Adapter,example implementation adapter design pattern,0,0,2021,2021,1,https://github.com/mars8256/Adapter
Adapter,Adapterpattern,Design pattern,0,0,2022,2022,1,https://github.com/kumarij701/Adapterpattern
Adapter,AdapterPattern,Adapter Design Pattern,0,0,2024,2024,1,https://github.com/devsquad554/AdapterPattern
Adapter,AdapterPatern,Java Design Patterns,0,0,2018,2018,1,https://github.com/balamanova/AdapterPatern
Adapter,AdapterPattern,Adapter Design Pattern,0,0,2024,2024,1,https://github.com/Pankaj4Quest/AdapterPattern
Adapter,AdapterSolution,Design Pattern Testing,0,0,2016,2016,1,https://github.com/Veckodag/AdapterSolution
Adapter,AdapterUdeA,Adapter Design Pattern,0,0,2018,2018,1,https://github.com/breakermoob/AdapterUdeA
Adapter,AdapterDesignPattern,Adapter Design Pattern,0,0,2022,2022,1,https://github.com/kucharm2/AdapterDesignPattern
Adapter,AdapterDesignPattern,Adapter Design Pattern,0,0,2020,2020,0,https://github.com/inishantmishra/AdapterDesignPattern
Adapter,AdapterDesignPatten,adapter design pattern,0,0,2024,2024,1,https://github.com/ChandimalPriyamantha/AdapterDesignPatten
Adapter,AdapterDesignPattern,Adapter Design Pattern ,0,0,2018,2018,1,https://github.com/pierDipi/AdapterDesignPattern
Adapter,AdapterDesignPattern,Design Pattern(Adapter),0,0,2020,2020,0,https://github.com/Sagar2493/AdapterDesignPattern
Adapter,AdapterDesignPattern,Adapter Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/AdapterDesignPattern
Adapter,Adapter,Adapter Design Pattern presentation code examples,0,0,2020,2020,1,https://github.com/slatan1983/Adapter
Adapter,Adapter-Pattern,Design Pattern,0,0,2024,2024,1,https://github.com/Kani722/Adapter-Pattern
Adapter,Adapter-2,Structural Design Pattern in C# | Adapter Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Adapter-2
Adapter,Design_pattern-ADAPTER,Design Pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-ADAPTER
Adapter,AdapterDP,Structural Design Pattern (Adapter),0,0,2022,2022,1,https://github.com/kapal-Dev/AdapterDP
Adapter,Adapter,Java implementation of the adapter design pattern,0,0,2021,2021,1,https://github.com/renanrfranca/Adapter
Adapter,java-adapter,Adapter Design Pattern,0,0,2021,2021,1,https://github.com/wescleycaldeira/java-adapter
Adapter,COS214_Prac4_Task2,Adapter Design Pattern,0,0,2023,2023,0,https://github.com/mish-n/COS214_Prac4_Task2
Adapter,adapter_pattern,adapter design pattern,0,0,2018,2018,1,https://github.com/Zukky55/adapter_pattern
Adapter,DesignPatternAdapter,Design Pattern Adapter,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternAdapter
Adapter,DP-Adapter,Design pattern Adapter,0,0,2024,2024,1,https://github.com/shaimi-hamza/DP-Adapter
Adapter,Adapter_Pattern,Adapter Design Pattern,0,0,2019,2019,0,https://github.com/smartprogrammer0014/Adapter_Pattern
Adapter,Design-Pattern,Adapter Design Pattern ,0,0,2023,2023,1,https://github.com/Mushfiq-99/Design-Pattern
Adapter,adapter-pattern-example,Adapter Design Pattern,0,0,2019,2019,1,https://github.com/anilpatro83/adapter-pattern-example
Adapter,Adapter-Design-Pattern,Adapter Design Pattern,0,0,2019,2019,1,https://github.com/ibavli/Adapter-Design-Pattern
Adapter,My_Project,Adapter Design Pattern,0,0,2023,2023,1,https://github.com/ahmedhafezz111/My_Project
Adapter,AnalyticsTool--Adapter-Design-Pattern,Adapter Design Pattern,0,0,2023,2023,1,https://github.com/abdoali204/AnalyticsTool--Adapter-Design-Pattern
Adapter,Curso_Adapter,Design Patterns Adapter,0,0,2022,2022,2,https://github.com/PauloBorges21/Curso_Adapter
Adapter,Adapter-Design-Pattern,Adapter Design Pattern,0,0,2023,2023,1,https://github.com/suraj-0657/Adapter-Design-Pattern
Adapter,adapterdesignpattern,Adapter Design Pattern,0,0,2024,2024,1,https://github.com/nareshkankti/adapterdesignpattern
Adapter,Codigo-031---Quem-n-o-tem-c-o,Design Pattern Adapter,0,0,2022,2023,1,https://github.com/cidandrade/Codigo-031---Quem-n-o-tem-c-o
Adapter,Adapter-Design-Pattern,Adapter Design Pattern,0,0,2019,2019,1,https://github.com/HaisucRobert/Adapter-Design-Pattern
Adapter,CECS-277-Lab-11,Adapter design pattern,0,0,2020,2020,0,https://github.com/Pengyuuu/CECS-277-Lab-11
Adapter,DP_Adapter,Design Pattern Adapter ,0,0,2021,2021,0,https://github.com/harpreet9ja/DP_Adapter
Adapter,dp-adapter,design pattern adapter,0,0,2022,2022,1,https://github.com/Nzonbi/dp-adapter
Adapter,Adapter,https://refactoring.guru/pl/design-patterns/adapter,0,0,2023,2023,0,https://github.com/SKP-JAVA-lato-2022/Adapter
Adapter,adapterDesignPattern,adapter design pattern anlama,0,0,2018,2018,1,https://github.com/atakanylmz/adapterDesignPattern
Adapter,Adapter,Exemplo de Design Pattern (Adapter) em Java,0,0,2018,2018,1,https://github.com/Renan4783/Adapter
Adapter,Adapter-Pattern,Design Pattern : Adatper,0,0,2013,2013,0,https://github.com/zhenghaishu/Adapter-Pattern
Adapter,EmployeeManagement_AdapterDesignPattern,Adapter Design Pattern Example,0,0,2021,2021,1,https://github.com/VaibhavBhapkar/EmployeeManagement_AdapterDesignPattern
Adapter,PatternsAdapter-Example,Structural design patterns,0,0,2017,2017,1,https://github.com/amarqueze/PatternsAdapter-Example
Adapter,AdapterExample,Example for Adapter Design Pattern,0,0,2015,2015,1,https://github.com/Jorissen9/AdapterExample
Adapter,PadroesDeProjeto-Adapter,aprendendo Design Patterns,0,0,2023,2023,1,https://github.com/Cesarribe/PadroesDeProjeto-Adapter
Adapter,AdapterDesignPattern,Adapter Design Pattern for Beginners,0,0,2019,2019,1,https://github.com/theTaagung/AdapterDesignPattern
Adapter,AdapterDesignPattern,CSCE 247 Adapter Design Pattern,0,0,2020,2021,1,https://github.com/katiekopper/AdapterDesignPattern
Adapter,AdapterDesignPattern,"Adapter, Design Pattern vis C#",0,0,2021,2021,1,https://github.com/mjmdellpython/AdapterDesignPattern
Adapter,AdapterPatternDemo,example of design pattern adapter,0,0,2022,2022,1,https://github.com/akoua/AdapterPatternDemo
Adapter,AdapterPatternDemo,Demo for Adapter Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/AdapterPatternDemo
Adapter,AdapterDesignPattern,LLD for Adapter Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/AdapterDesignPattern
Adapter,AdapterDesignPattern,Implementation of Adapter Design Pattern,0,0,2016,2016,1,https://github.com/jSaidamin/AdapterDesignPattern
Adapter,AdapterPatternDemo,Practice for Adapter design pattern.,0,0,2018,2018,0,https://github.com/rockrock0850/AdapterPatternDemo
Adapter,AdapterDesignPattern,Implementation of Adapter Design Pattern,0,0,2022,2022,2,https://github.com/Ruth1e55/AdapterDesignPattern
Adapter,adapter-factory-api,API (Product) design using Adapter design pattern and factory design pattern,0,0,2017,2017,1,https://github.com/Hdonge/adapter-factory-api
Adapter,TestAdapter,design pattern Adapter TP1,0,0,2024,2024,1,https://github.com/6284909/TestAdapter
Adapter,TP_adapter,TP de design pattern,0,0,2020,2020,1,https://github.com/naigldo/TP_adapter
Adapter,Pattern-Adapter,Design Pattern Adapter démo,0,0,2023,2023,1,https://github.com/BoubacarSIDDY/Pattern-Adapter
Adapter,dp-adapter,Adapter Design Pattern Sample,0,0,2023,2023,1,https://github.com/rodolfofajardo/dp-adapter
Adapter,STRUCTURAL-DESIGN-PATTERN-Adapter-,STRUCTURAL DESIGN PATTERN (Adapter),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-Adapter-
Adapter,adapter,A simple application to train the adapter design pattern.,0,0,2021,2021,1,https://github.com/antek16x/adapter
Adapter,adapter-pattern,Design Pattern: Adapter pattern,0,0,2021,2021,1,https://github.com/TomSawyer404/adapter-pattern
Adapter,adapter-pattern-typescript,Design Patterns - Adapter Pattern,0,0,2019,2019,1,https://github.com/sagiomc/adapter-pattern-typescript
Adapter,csharp-adapter-pattern,csharp adapter design pattern,0,0,2022,2022,0,https://github.com/MarshalOfficial/csharp-adapter-pattern
Adapter,adapter-pattern,Implemented adapter design pattern,0,0,2023,2023,1,https://github.com/sgadkar2/adapter-pattern
Adapter,javaadapterpattern,Adapter design pattern example,0,0,2013,2014,0,https://github.com/parkhomenko/javaadapterpattern
Adapter,Adapter_Design_Pattern,Adapter Design Pattern examples,0,0,2024,2024,1,https://github.com/adi501/Adapter_Design_Pattern
Adapter,Adapter-Design-Pattern,Graph Adapter Design Pattern ,0,0,2021,2025,1,https://github.com/thinkphp/Adapter-Design-Pattern
Adapter,typescript-adapter-pattern,Implement Adapter Design Pattern,0,0,2021,2021,1,https://github.com/wahyufeb/typescript-adapter-pattern
Adapter,Adapter-Design-Pattern,Samples Adapter Design Patterns.,0,0,2024,2024,1,https://github.com/victory8/Adapter-Design-Pattern
Adapter,DPAdapter,Design Pattern Adapter Implementation,0,0,2022,2022,1,https://github.com/Medkaffouh/DPAdapter
Adapter,learningDesignPatternAdapter,learning design pattern adapter,0,0,2023,2023,1,https://github.com/ohRobertoCarlos/learningDesignPatternAdapter
Adapter,Adapte,C# Design Pattern - Adapter,0,0,2018,2018,1,https://github.com/KNaka88/Adapte
Adapter,php-adapter-pattern,PHP Design Pattern: Adapters,0,0,2019,2019,1,https://github.com/myself379/php-adapter-pattern
Adapter,design-patterns-adapter,C# Design Patterns: Adapter,0,0,2021,2023,1,https://github.com/jasarsoft/design-patterns-adapter
Adapter,CSC325Module11,Adapter Design Pattern Demo,0,0,2023,2023,1,https://github.com/catamv3/CSC325Module11
Adapter,UrunTakip,Adapter Design Pattern Ödevi,0,0,2019,2019,1,https://github.com/ozdemirzeynep/UrunTakip
Adapter,Medical_staff,Adapter design pattern implementation,0,0,2022,2022,1,https://github.com/suzanastojkovic88/Medical_staff
Adapter,CS410-Assignment2,Adapter Design Pattern Example,0,0,2019,2019,1,https://github.com/sean-sands-bc/CS410-Assignment2
Adapter,dp-adapter-pattern-sample,Adapter Design Pattern Sample,0,0,2024,2024,0,https://github.com/inusedname/dp-adapter-pattern-sample
Adapter,school-management,Uses adapter design pattern,0,0,2024,2024,1,https://github.com/KuroXI/school-management
Adapter,CSharpDP_Structural_Adapter,Structural Adapter Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Adapter
Adapter,Adapter,An implementation of the Adapter design pattern in C++.,0,0,2012,2014,1,https://github.com/abrahamkoshy/Adapter
Adapter,AdapterPattern_SpringBoot_Example,Playground for Design Pattern study,0,0,2019,2021,1,https://github.com/DavidJMartinProjects/AdapterPattern_SpringBoot_Example
Adapter,AdapterPattern,One of the Java design patterns,0,0,2016,2016,0,https://github.com/WY08271/AdapterPattern
Adapter,Adapter-Design-Pattern,Design Patterns lecture materials,0,0,2023,2023,1,https://github.com/morawaliyadda/Adapter-Design-Pattern
Adapter,3-2-DesignPatterns-Adapter,"Design Patterns in Object-Oriented Programming Sixth Tasks ""Adapter Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Adapter
Adapter,AdapterFacadePatterns,Head First Design Patterns Chapter 7,0,0,2023,2023,2,https://github.com/DNate9427/AdapterFacadePatterns
Adapter,AdapterFacadePatterns,Head First Design Patterns Chapter 7,0,0,2023,2023,1,https://github.com/DustinNation/AdapterFacadePatterns
Adapter,adapterpattern,demo of adapter design pattern,0,0,2020,2020,1,https://github.com/wblevinsapivista/adapterpattern
Adapter,Adapter-Design-Pattern-CSharp,Implementation of design pattern,0,0,2020,2020,1,https://github.com/arbainrahat/Adapter-Design-Pattern-CSharp
Adapter,Adapter,This is example code to demo the Adapter Design Pattern,0,0,2020,2020,1,https://github.com/vgould191/Adapter
Adapter,Lents-Adapter,Aplicando o design pattern Adapter,0,0,2023,2023,1,https://github.com/diegomaustem/Lents-Adapter
Adapter,Adapter-01,"Design Pattern, Adapter, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/Adapter-01
Adapter,sample-adapter,"lang:Python, Adapter design-pattern",0,0,2020,2020,1,https://github.com/Amazingengine-yoshitaka/sample-adapter
Adapter,sde_adapter,Add an adapter design pattern,0,1,2019,2019,0,https://github.com/HZ-HBO-ICT/sde_adapter
Adapter,Adapter-Project,Assignment with adapter design pattern,0,0,2020,2020,3,https://github.com/IdanHalf/Adapter-Project
Adapter,247-Adapter,Adapter Design Pattern with Team,0,0,2019,2019,3,https://github.com/NickYglesias64/247-Adapter
Adapter,AdapterPattern,Example for Adapter design pattern using java.,0,0,2017,2017,0,https://github.com/LearnShareKnowledge/AdapterPattern
Adapter,AdapterPattern,Adapter OO design pattern implemented in Java,0,0,2014,2014,1,https://github.com/iconza98/AdapterPattern
Adapter,Adapter,"Final project of Software Engineering course, implementation of Adapter design pattern",0,0,2020,2022,1,https://github.com/riccardoforzan/Adapter
Adapter,DesignPatternAdapter,Design Pattern for Java - Adapter,0,0,2015,2015,1,https://github.com/dgonzalez7/DesignPatternAdapter
Adapter,adapter-design-pattern,Adapter design pattern for CSCE247,0,0,2021,2021,1,https://github.com/bjr0421/adapter-design-pattern
Adapter,design-patterns,Recreating design patterns,0,0,2021,2022,1,https://github.com/zsomborjoel/design-patterns
Adapter,Adapter-Design-Pattern,Example for Adapter design pattern,0,0,2017,2017,1,https://github.com/charumalik80/Adapter-Design-Pattern
Adapter,java_gof_adapter,"design pattern ""adapter"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_adapter
Adapter,adapter_pattern_rails,Rails app - Adapter Design Pattern,0,0,2020,2020,0,https://github.com/nhatnkv/adapter_pattern_rails
Adapter,Adapter_pattern_new,Design Pattern for duck example,0,0,2024,2024,1,https://github.com/Kani722/Adapter_pattern_new
Adapter,Adapter-Design-pattern,Demonstration of Adapter design pattern.,0,0,2024,2024,1,https://github.com/vijayrao97/Adapter-Design-pattern
Adapter,AdapterDesignPattern,An example of the Adapter Design Pattern,0,0,2022,2022,1,https://github.com/Paulchch/AdapterDesignPattern
Adapter,designPatternAdapter,Présentation du design pattern Adapter,0,0,2020,2021,1,https://github.com/mcagnon/designPatternAdapter
Adapter,adapterPatternDemo,Une petite démonstration du design pattern 'adaptateur',0,0,2021,2021,1,https://github.com/tokiarimiora/adapterPatternDemo
Adapter,engComp.padroesDeProjeto.adapter,Adapter design pattern in Java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.adapter
Adapter,canards,Strategy and Adapter design pattern,0,0,2017,2017,2,https://github.com/mschultz-epsi-oss/canards
Adapter,mail-adaptar,Adapter Design Pattern (Mail Service),0,0,2021,2021,1,https://github.com/gabigutu/mail-adaptar
Adapter,MediaPlayer,Exemple for design pattern adapter,0,0,2024,2024,1,https://github.com/JingFERMENT/MediaPlayer
Adapter,Design-Pattern--Media-Player,Adapter Design Pattern- Media Player,0,0,2020,2020,1,https://github.com/talkgunish/Design-Pattern--Media-Player
Adapter,Design-Pattern-Adapter-Profile-Manager,Adapter Design Pattern with React,0,0,2024,2024,1,https://github.com/MylesJMoore/Design-Pattern-Adapter-Profile-Manager
Adapter,php-adapter-design-pattern-examples,Php adapter design pattern examples,0,0,2022,2022,1,https://github.com/ahmetvuruskan/php-adapter-design-pattern-examples
Adapter,AdapterDesignPatternTester,Esercizi di utilizzo dell' Adapter Design Pattern,0,0,2016,2016,1,https://github.com/falcopellegrino/AdapterDesignPatternTester
Adapter,Adapter-Pattern-Enumeration-Iterator,Entwurfsmuster/Design-Pattern S 250 ,0,0,2023,2023,1,https://github.com/Bigbob9/Adapter-Pattern-Enumeration-Iterator
Adapter,AdapterDesignPatternExample-Kotlin,A simple adapter design pattern in Kotlin,0,0,2019,2019,0,https://github.com/rommansabbir/AdapterDesignPatternExample-Kotlin
Adapter,Adapter-CSharp,Adapter Design Pattern - Adapting a String,0,0,2015,2015,1,https://github.com/wcTGgeek/Adapter-CSharp
Adapter,adapter_pattern,Adapter Design Pattern implemented in Java. ,0,0,2024,2024,1,https://github.com/SarvarVanoo/adapter_pattern
Adapter,pattern-adapter,Design Pattern adapter Implemented With Java,0,0,2022,2022,1,https://github.com/Java-Design-Pattern/pattern-adapter
Adapter,DuckAdapter,Adapter Design Pattern - implementation and practice,0,0,2018,2018,1,https://github.com/bwielk/DuckAdapter
Adapter,AdapterPattern,This project explains about Adapter Design Pattern(C#),0,0,2019,2019,1,https://github.com/abiramisenthil/AdapterPattern
Adapter,adapter-pattern,A demo of Adapter Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/adapter-pattern
Adapter,AdapterTWO,Another practical exercise about the Adapter design pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/AdapterTWO
Adapter,AdapterPattern,My representation of the GoF Adapter design pattern.,0,0,2018,2018,1,https://github.com/j-runser/AdapterPattern
Adapter,AdapterONE,Practical exercise about the Adapter structural design pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/AdapterONE
Adapter,AdapterPattern,small projects for practics with Adapter design pattern,0,0,2024,2024,1,https://github.com/Roman-Svyshch/AdapterPattern
Adapter,adapter-php,Implementando Design Pattern Adapter usando PHP.,0,0,2021,2021,1,https://github.com/lucasemanuel/adapter-php
Adapter,Adapter_implementation,An implementation of design pattern 'Adapter',0,0,2023,2023,1,https://github.com/vladdubceac/Adapter_implementation
Adapter,DesignPatterns-Adapter,Adapter,0,0,2024,2024,1,https://github.com/toqaezzatly/DesignPatterns-Adapter
Adapter,adapter_sample1_for_kotlin,design pattern for kotlin sample,0,0,2021,2021,1,https://github.com/Githubtesi/adapter_sample1_for_kotlin
Adapter,AdapterPatter,basic implementation of Adapter design pattern in C#,0,0,2020,2020,1,https://github.com/GhlijyanVahagn/AdapterPatter
Adapter,adapterPattern,Basic Example of the Adapter Software Design Pattern,0,0,2021,2021,2,https://github.com/syost57/adapterPattern
Adapter,AdapterPractice,Practice with the Adapter Design Pattern. About bears.,0,0,2020,2020,1,https://github.com/DLillard10UTM/AdapterPractice
Adapter,SB_Adapter71,Homework 7.1 - Demonstrating the Adapter Design pattern,0,0,2020,2020,1,https://github.com/scottbing/SB_Adapter71
Adapter,AdapterPatternDemo,a very simple demo of Adapter Design pattern,0,0,2020,2020,1,https://github.com/amareshkumar/AdapterPatternDemo
Adapter,adapter-design-pattern,Adapter Design Pattern example in PHP,0,0,2024,2024,1,https://github.com/thiagoluna/adapter-design-pattern
Adapter,adapter-card-game,Doubling using the Adapter Design Pattern.,0,0,2022,2022,2,https://github.com/umaryusuf11/adapter-card-game
Adapter,Adapter-D.P,C# Adapter Design Pattern konsol uygulaması,0,0,2018,2018,1,https://github.com/HarunYetgindag/Adapter-D.P
Adapter,DesignPatternAdapter,Code for design pattern using adapter,0,0,2024,2025,1,https://github.com/claudia-duda/DesignPatternAdapter
Adapter,reto09Adapter,Use of The Adapter Design Pattern,0,0,2025,2025,1,https://github.com/Danfloca02/reto09Adapter
Adapter,Adapter-design-pattern,Implement Adapter design pattern in swift,0,0,2021,2021,1,https://github.com/azzaHosny/Adapter-design-pattern
Adapter,adapter-design-pattern,Adapter design pattern implementation in Java,0,0,2024,2024,1,https://github.com/williamfisher9/adapter-design-pattern
Adapter,adapterpattern,Implementation of the adapter structural design pattern,0,0,2020,2020,1,https://github.com/HamedKaramoko/adapterpattern
Adapter,Adapter-Pattern-Using-Java,Adapter Design Pattern implented using JAVA,0,0,2021,2021,1,https://github.com/mainulBUBT/Adapter-Pattern-Using-Java
Adapter,Adapter_Pattern,Apply an example for Adapter Design Pattern ,0,0,2023,2023,1,https://github.com/eng-oday/Adapter_Pattern
Adapter,adapter_pattern,Sample adapter pattern design pattern using java,0,0,2024,2024,1,https://github.com/redgsenal/adapter_pattern
Adapter,Adapter-Pattern,Implementation of Adapter Design Pattern using Java,0,0,2024,2024,1,https://github.com/ks-official-Sahan/Adapter-Pattern
Adapter,learn-adapter,Learn the adapter design-pattern by action.,0,0,2016,2016,0,https://github.com/kanatamon/learn-adapter
Adapter,ratchet,Project to show Adapter design pattern,0,0,2017,2017,1,https://github.com/sidneynakatani/ratchet
Adapter,Identity-Management-IDM-project,Strategy and Adapter design patterns applied,0,0,2023,2023,1,https://github.com/jingjingyang0803/Identity-Management-IDM-project
Adapter,Vectors,Learning adapter and decorator design pattern,0,0,2022,2022,1,https://github.com/dolooo/Vectors
Adapter,3rd-Semester---HW3,"Threds on JavaFX, Adapter design pattern",0,0,2019,2019,1,https://github.com/itayzemah/3rd-Semester---HW3
Adapter,feedadapter,A demo of design pattern adapters,0,0,2024,2024,1,https://github.com/Visharad18/feedadapter
Adapter,design_lab2,School work_design patterns_ Adapter dp,0,0,2015,2015,1,https://github.com/DavidNr2/design_lab2
Adapter,AdapterDesignPattern,A project for explain and apply adapter design pattern,0,0,2021,2021,1,https://github.com/Fatihprlg/AdapterDesignPattern
Adapter,AdapterDesignPatern,Example of adapter design pattern and OOP in Java. ,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/AdapterDesignPatern
Adapter,adapterDesignPattern,this is a demo example for adapter design pattern,0,0,2020,2020,1,https://github.com/Jennychen66/adapterDesignPattern
Adapter,AdapterPatternExample,This is just an example of Adapter Design Pattern,0,0,2023,2023,1,https://github.com/nachoferiv/AdapterPatternExample
Adapter,design-patterns-kotlin,Design patterns Kotlin,0,0,2023,2023,1,https://github.com/yagorv/design-patterns-kotlin
Adapter,javaAdapterDP,"object Adapter Design Pattern, coded in Java",0,0,2017,2017,1,https://github.com/adagio/javaAdapterDP
Adapter,adapter_design_pattern,Sample project for Structural Design Pattern (Adapter),0,0,2023,2023,1,https://github.com/fst-gerald/adapter_design_pattern
Adapter,adapter-design-pattern,Add example code for adapter design pattern,0,0,2022,2022,1,https://github.com/bit-sahti/adapter-design-pattern
Adapter,cotacaoBolsaAdapter,Task about Design Pattern Adapter with Java,0,0,2021,2021,1,https://github.com/sankassio99/cotacaoBolsaAdapter
Adapter,DesignPatterns.Adapter,Simple adapter exercise,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.Adapter
Adapter,design-pattern-adapter,GOF adapter structural design pattern simple example,0,0,2014,2015,1,https://github.com/a-cordier/design-pattern-adapter
Adapter,adapter-design-pattern,Demo for the Adapter Software Design Pattern,0,0,2023,2023,1,https://github.com/mn1k/adapter-design-pattern
Adapter,adapter-design-pattern,Example implementation of the adapter design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/adapter-design-pattern
Adapter,AdapterPatternAssignment5,It's assignment 5 that includes Adapter Design Pattern,0,0,2021,2021,1,https://github.com/1asset/AdapterPatternAssignment5
Adapter,adapter-design-pattern,Example of implementing the Adapter Design Pattern,0,0,2019,2019,1,https://github.com/mr-ramirez/adapter-design-pattern
Adapter,Adapterdesignmethod,This is the design pattern to solve problem.,0,0,2023,2024,1,https://github.com/vibhorbhatt777/Adapterdesignmethod
Adapter,adapter-design-pattern-samples-in-php,adepter design pattern samples in php,0,0,2023,2023,1,https://github.com/levend18/adapter-design-pattern-samples-in-php
Adapter,designPatterns,"Adapter, Factory, Facade, Singleton",0,0,2020,2020,1,https://github.com/serozhkohannaa/designPatterns
Adapter,adapterPattern,This is an example of Adapter Design Pattern in JAVA,0,0,2024,2024,1,https://github.com/ClarkBelen/adapterPattern
Adapter,AdapterDP,This is an example codes implemented by Adapter Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/AdapterDP
Adapter,DesignPatterns-Str-AdapterObject,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Str-AdapterObject
Adapter,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Adapter,ZTP_4_Adapter_Proxy,Design Pattern - Structural patterns: Adapter and Proxy,0,0,2016,2016,0,https://github.com/Radekov/ZTP_4_Adapter_Proxy
Adapter,Adapter,Aplicabilidade do design patterns Adapter para solucionar problema com migração do bd Oracle para MySQL. ,0,0,2020,2023,1,https://github.com/Gwolner/Adapter
Adapter,adapter,Adapter pattern described on https://cararuseugeniu.blogspot.co.uk/p/design-patterns-in-images.html,0,0,2016,2018,1,https://github.com/ecararus/adapter
Adapter,APIpatternAdapter,write simple http request with Adapter Design Pattern,0,0,2024,2024,1,https://github.com/Aspandiyar933/APIpatternAdapter
Adapter,AdapterDesignPattern,Sample for real application for Adapter Design Pattern in C#,0,0,2021,2021,1,https://github.com/AyaAbdelSlam/AdapterDesignPattern
Adapter,WizardAdapter,Design Patterns (project created for Java programming classes),0,0,2018,2018,1,https://github.com/Izzzu/WizardAdapter
Adapter,AdapterPattern-Medium,The repository for my Adapter Design Pattern story on Medium.,0,0,2022,2022,1,https://github.com/basarozogut/AdapterPattern-Medium
Adapter,AdapterDesignPattern,This is a Java implementation of the Adapter design pattern,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/AdapterDesignPattern
Adapter,frightMachine,A spooky machine with an observer design pattern and an adapter design pattern.,0,0,2017,2017,1,https://github.com/ScottMikul/frightMachine
Adapter,hfdp-adapter,Head First Design Patterns : Adapter : Headstone Pizza Acquisition,0,0,2018,2018,1,https://github.com/fenwickjb/hfdp-adapter
Adapter,adapter-dp,sample implementation of adapter design pattern in Java,0,0,2021,2021,1,https://github.com/rwedzony/adapter-dp
Adapter,Adapter-Pattern,The Adapter design pattern sample for Objective-C,0,0,2015,2015,1,https://github.com/yuxiaopeng/Adapter-Pattern
Adapter,C-Sharp-Design-Pattern-Lab1,This Lab activity is for C#  Adapter Design Pattern and Facade Design Pattern ,0,0,2025,2025,1,https://github.com/Gurjit211/C-Sharp-Design-Pattern-Lab1
Adapter,DesignPatterns,Factory and adapter pattern samples,0,0,2016,2016,1,https://github.com/ajadczak/DesignPatterns
Adapter,DesignPatterns,"Active Object, Class Adapter, Command Pattern, Creator Pattern, Decorator, Object Adapter, Strategy Pattern, Singleton.",0,0,2019,2022,1,https://github.com/iluzzamit/DesignPatterns
Adapter,DesignPatternsAdapterToDecorator,Structural Design Patterns excercises: Adapter to Decorator,0,0,2023,2023,1,https://github.com/OhadEsp/DesignPatternsAdapterToDecorator
Adapter,SimpleAdapterPatternInCSharp,Simple example of the adapter design pattern,0,0,2021,2021,0,https://github.com/altamirdiascassiano/SimpleAdapterPatternInCSharp
Adapter,DesignPatterns_Adapter,,0,0,2022,2022,1,https://github.com/Prod4Oz/DesignPatterns_Adapter
Adapter,adapter-design-pattern,Showing how use apter design pattern with JavaScript.,0,0,2020,2020,2,https://github.com/VictorAlmeidaFonseca/adapter-design-pattern
Adapter,design-pattern-adapter,A review on design pattern Adapter in Java,0,0,2021,2021,1,https://github.com/marciodegan/design-pattern-adapter
Adapter,DesignPattern-Adapter,Adapter pattern from the HeadFirst book Design Patterns,0,0,2022,2022,1,https://github.com/GuidoDSalem/DesignPattern-Adapter
Adapter,DesignPatternsAdapter,,0,0,2022,2022,1,https://github.com/SergyProg/DesignPatternsAdapter
Adapter,DesignPatternsAdapter,Tarefa ES III - Reposição 3 Fatec ZL - Professor Leandro Colevati,0,0,2022,2022,0,https://github.com/RodrigoRocha03/DesignPatternsAdapter
Adapter,adapter_pattern_example,A simplified example of the Adapter design pattern.,0,0,2021,2021,1,https://github.com/tlaughlan/adapter_pattern_example
Adapter,DesignPatterns-Adapter,,0,0,2022,2022,1,https://github.com/lsilvaHenrique/DesignPatterns-Adapter
Adapter,DesignPatterns-Adapter,,0,0,2021,2021,1,https://github.com/DanielMachado29/DesignPatterns-Adapter
Adapter,DesignPatterns-adapter,Hello this is my exercise about design patterns,0,0,2016,2016,1,https://github.com/pdawiduk/DesignPatterns-adapter
Adapter,DesignPatterns-Adapter,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Adapter
Adapter,DesignPatterns-Adapter,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Adapter
Adapter,DesignPatterns-Adapter,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Adapter
Adapter,Adapter-Design-Pattern,This is an adapter design pattern in java,0,0,2018,2018,1,https://github.com/jamaliasultanajisha/Adapter-Design-Pattern
Adapter,adapter-designPattern,Implementação em Type script do Design Pattern Adapter,0,0,2019,2019,0,https://github.com/LuizGMiranda/adapter-designPattern
Adapter,BaseAdapterDemo,BaseAdapter done rightly using the ViewHolder design pattern.,0,0,2017,2017,0,https://github.com/ParagKadam101/BaseAdapterDemo
Adapter,DesignPattern_Adapter,Example of the Adapter design pattern in C#,0,1,2016,2016,0,https://github.com/NicoleAlves/DesignPattern_Adapter
Adapter,ConnectionSystem-AdapterDesignPattern,Use design pattern to add TFTP protocol to the system,0,0,2021,2022,1,https://github.com/dinaalwaneh/ConnectionSystem-AdapterDesignPattern
Adapter,DesignPatterns_chapter-7,Facade and Adapter patterns,0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-7
Adapter,AdapterPattern-MediaPlayerRemote,Class project demonstrating the use of the Adapter design pattern.,0,0,2021,2021,1,https://github.com/R-Pagliarulo/AdapterPattern-MediaPlayerRemote
Adapter,RobotsAdaptados,An example of the Adapter design pattern.,0,0,2023,2023,1,https://github.com/emacabrera/RobotsAdaptados
Adapter,Design-Patterns,"Factory, Builder, Adapter, Singleton, Observer Design Pattern",0,0,2024,2024,1,https://github.com/runitrupam/Design-Patterns
Adapter,integral-hamster,Example of Adapter and Proxy design patterns,0,0,2020,2020,1,https://github.com/dcc-cc3002/integral-hamster
Adapter,DesignPatterns-JAVA,Singleton | MVC | Façade | Decorator | Adapter,0,0,2020,2020,1,https://github.com/ShashithAdithyaWijerathne/DesignPatterns-JAVA
Adapter,AJP_ICA1,An example of the Adapter design pattern,0,0,2017,2019,1,https://github.com/IWMTom/AJP_ICA1
Adapter,adaptor,To learn Adapter design pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/adaptor
Adapter,design_pattern,"design pattern: composite,singleton,observator,adapter,iterator",0,0,2019,2019,1,https://github.com/ayoubridouani/design_pattern
Adapter,design-patterns,Learning Design Patterns.,0,0,2022,2022,1,https://github.com/tnusraddinov/design-patterns
Adapter,DesignPatternJava,"Design patterns for Java (Builder, Factory, Adapter )",0,0,2022,2022,0,https://github.com/pokhrelricha/DesignPatternJava
Adapter,AdapterDesignPattern,Practicing the implementation of Adapter Design Pattern in C# console application,0,0,2022,2022,0,https://github.com/imtiajahammad/AdapterDesignPattern
Adapter,Demo.DesignPattern.Adapter,Example of adapter design pattern using Java & C#,0,0,2015,2023,1,https://github.com/LiteObject/Demo.DesignPattern.Adapter
Adapter,design-patterns-adapter-pattern,Source for the “Design Patterns: Adapter Pattern” course,0,0,2023,2023,1,https://github.com/codecourse/design-patterns-adapter-pattern
Adapter,AdapterDesignPattern,an implementation of Adapter method design pattern with .NET Core 6,0,0,2023,2023,1,https://github.com/balangi/AdapterDesignPattern
Adapter,CW5_Adapter_Practice,CSCI 352 practice for the adapter design pattern,0,0,2023,2023,0,https://github.com/Daniel-Cunningham02/CW5_Adapter_Practice
Adapter,apply-adapter,Bài tập phần Structural Design Pattern: Áp dụng adapter.,0,0,2018,2018,1,https://github.com/WBD-Java/apply-adapter
Adapter,deployment-adapter,Bài thực hành Structural Design Pattern: Triển khai adapter ,0,0,2018,2018,1,https://github.com/WBD-Java/deployment-adapter
Adapter,adapter-design,A minimal example solution solve using adapter design pattern,0,0,2019,2019,1,https://github.com/isahlabbo/adapter-design
Adapter,Blank-Adapter,"A simple laboratory work with the ""Adapter"" design pattern",0,0,2023,2023,1,https://github.com/progneo/Blank-Adapter
Adapter,practice-adapter-design-pattern,Learning and understanding Adapter Design Pattern in NodeJs,0,0,2020,2020,1,https://github.com/10xtarun/practice-adapter-design-pattern
Adapter,Adapter,Implementation of Adapter Design Pattern in a system of 2 and 3 Pin Plugs and a Adapter.,0,0,2017,2017,1,https://github.com/fsprusokowski/Adapter
Adapter,design-patterns,"Tests different design patterns such as Singleton, Factory, Adapter,Decorator and Observer design pattern.",0,0,2021,2021,1,https://github.com/Rasi98/design-patterns
Adapter,Adapter-Pattern,Quick example of the Java design pattern : Adapter Pattern,0,0,2015,2015,0,https://github.com/dconey646/Adapter-Pattern
Adapter,AdapterAndFacadePatterns,Head First Design Patterns - Chapter 7 - The Adapter and Facade Patterns,0,0,2019,2019,0,https://github.com/Ruoyu111/AdapterAndFacadePatterns
Adapter,DesignPatterns_Task3,DesignPatterns - Task With Adapter Pattern,0,0,2022,2024,1,https://github.com/aykhan019/DesignPatterns_Task3
Adapter,DesignPatterns,"Implementation of Adapter, Factory and Observer methods.",0,0,2024,2024,1,https://github.com/aycaayldrn/DesignPatterns
Adapter,adapter,Design pattern estrutural (gof) Adapter para atuar como ponte entre dois sistemas independentes ou incompatíveis (XML to JSON),0,0,2021,2021,1,https://github.com/Jhow-R/adapter
Adapter,AdapterPattern,Adapter Pattern . in c++ according to Head First - Design Patterns book example,0,0,2014,2014,1,https://github.com/Olivianeacsu/AdapterPattern
Adapter,AdapterPattern,"Simple study case of Adapter Pattern, related to Design Patterns in java",0,0,2016,2016,1,https://github.com/mvalho/AdapterPattern
Adapter,AdapterPattern,"Adapter is a structural design pattern, which allows incompatible objects to collaborate.  ",0,0,2019,2019,1,https://github.com/amandalsaboia/AdapterPattern
Adapter,Design-Patterns-2---Adapter-Pattern,The 2nd assignment for the Design Patterns course,0,0,2018,2018,1,https://github.com/sakarisson/Design-Patterns-2---Adapter-Pattern
Adapter,Adapter-and-Decorator-in-Python,Using Design patterns - Adapter and Decorator in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Adapter-and-Decorator-in-Python
Adapter,Adapter_Design_Pattern,This lab uses the adapter design pattern in Java.,0,0,2020,2020,1,https://github.com/justingirgis/Adapter_Design_Pattern
Adapter,DesignPatterns_Adapter_Example,,0,0,2021,2021,1,https://github.com/morzhik02/DesignPatterns_Adapter_Example
Adapter,Adapter-DesignPatterns-Cats,The project is implemented on the training video: https://www.youtube.com/watch?v=9BPBRinsOsE&list=PLtjuvkyFrt5Wjd-973N117XS7xuuoD6XM&index=6,0,0,2019,2019,1,https://github.com/spyshura/Adapter-DesignPatterns-Cats
Adapter,DesignPatterns-Structural-Adapter,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Structural-Adapter
Adapter,CSharp-Adapter-DesignPatterns,,0,0,2023,2023,1,https://github.com/germanodrp/CSharp-Adapter-DesignPatterns
Adapter,swiftAdapterDP,"🔌 object Adapter Design Pattern, in Swift 3.0",0,1,2017,2017,1,https://github.com/adagio/swiftAdapterDP
Adapter,DesignPatternAdapter,Working with Structural design pattern :: Adapter in Objective c,0,0,2014,2014,1,https://github.com/yeshbourne/DesignPatternAdapter
Adapter,DesignPatternsAdapterCalculator,,0,0,2024,2024,1,https://github.com/Kaulina/DesignPatternsAdapterCalculator
Adapter,Xperiments.DesignPatterns.Adapter,A litttle implementation of Adapter pattern,0,0,2017,2017,0,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Adapter
Adapter,Adapter-Patern-Example,Pequeno exemplo do uso do Design Pattern chamado Adapter,0,0,2025,2025,1,https://github.com/luizhenrique3651/Adapter-Patern-Example
Adapter,.NET.DesignPatterns.Adapter,,0,0,2019,2020,1,https://github.com/dmitry-zhbankov/.NET.DesignPatterns.Adapter
Adapter,DesignPatterns_Adapter_Calculator,,0,0,2021,2021,1,https://github.com/RVSN451/DesignPatterns_Adapter_Calculator
Adapter,ECommerceAdapterPattern,This is Adapter Design Pattern implementation e-commerce website. ,0,0,2023,2023,1,https://github.com/techflow21/ECommerceAdapterPattern
Adapter,AdapterDesignPatternDemo,Adapter Design Pattern in ASP.NET Core - Demo Project for a blog post available at https://www.ezzylearning.net/tutorial/adapter-design-pattern-in-asp-net-core,0,0,2021,2021,1,https://github.com/ezzylearning/AdapterDesignPatternDemo
Adapter,design-patterns-adapter,Adapter,0,0,2022,2022,1,https://github.com/Mendaccium/design-patterns-adapter
Adapter,Strategy-Adapter-SwiftUI,SwiftUI example which covers Strategy and Adapter Design Patterns,0,0,2024,2024,1,https://github.com/KiranSarella/Strategy-Adapter-SwiftUI
Adapter,adapter-pattern-cs330,Adapter pattern assignment for CS330 Design Patterns at UNR.,0,1,2023,2023,1,https://github.com/brown-lyssie/adapter-pattern-cs330
Adapter,Processor-Adapter-Pattern-EX,This exercise implements the Adapter design pattern in TypeScript.,0,0,2022,2022,1,https://github.com/Maayanalt/Processor-Adapter-Pattern-EX
Adapter,sample-adapter-design-pattern,This project is a sample of adapter design pattern,0,0,2020,2020,1,https://github.com/masoudjahromi/sample-adapter-design-pattern
Adapter,AdapterDesignPatterns,,0,0,2019,2019,1,https://github.com/ahmedco82/AdapterDesignPatterns
Adapter,CSC-325-Week-10-Assignment-Shape-Adapter,"Week 10 Assignment, contains shape adapter design pattern",0,0,2022,2022,1,https://github.com/nka2001/CSC-325-Week-10-Assignment-Shape-Adapter
Adapter,DesignPatterns,"Singleton, Decorator, Memento, Adapter, Observer, Delegate, Facade, and MVC",0,0,2017,2017,0,https://github.com/baubrey91/DesignPatterns
Adapter,DesignPatterns,"review of memento, observer, adapter (protocol), decorator, facade patterns.",0,0,2016,2016,1,https://github.com/ksatia/DesignPatterns
Adapter,DesignPatterns,"Adapter, Builder, Decorator, Chain of Responsibility, Factory, Observer, Singleton",0,0,2022,2022,0,https://github.com/KarynaAliushkevich14/DesignPatterns
Adapter,DesignPatterns,"My templates for Abstract Factory, Adapter, Composite, Command, State",0,0,2018,2018,1,https://github.com/Kropisha/DesignPatterns
Adapter,SensorTracker,Sensor tracker application using the Adapter design pattern,0,0,2019,2019,1,https://github.com/sim1ray/SensorTracker
Adapter,design-pattern,"5 design pattern: Singleton, Factory, Adapter, Strategy, Observer",0,0,2018,2018,0,https://github.com/hapro955/design-pattern
Adapter,Design-patterns,"Realization of design patterns Singleton, Factory, Adapter, Proxy",0,0,2022,2022,0,https://github.com/BNBStudy/Design-patterns
Adapter,tutorial-3,Behavioral Design Pattern: Facade Pattern and Adapter Pattern.,0,0,2023,2024,2,https://github.com/CSUI-Adpro/tutorial-3
Adapter,Ports-And-Adapter-Pattern-Example,Example showing the usage of the Adapter design pattern.,0,0,2023,2023,1,https://github.com/FerdinandStapenhorst/Ports-And-Adapter-Pattern-Example
Adapter,TeoVincent.ObjectAdapterPattern,Explanation of the Object Adapter Design Pattern using TDD,0,0,2018,2018,1,https://github.com/ArturWincenciak/TeoVincent.ObjectAdapterPattern
Adapter,5402_Structural_Patterns_1,"Structural Design Patterns Bridge, Proxy, Adapter and Facade",0,0,2021,2021,1,https://github.com/ferdhell/5402_Structural_Patterns_1
Adapter,Design-Pattern,23 Design Patterns in C++,0,0,2022,2022,1,https://github.com/giang-nguyentbk/Design-Pattern
Adapter,Use-case-Adapter-design-Pattern,It describes an usecase which implements adapter design pattern,0,0,2024,2024,0,https://github.com/N-andish/Use-case-Adapter-design-Pattern
Adapter,Adapter-Pattern-Project,Unversity assignment with usage and implementation of adapter design pattern,0,0,2023,2023,1,https://github.com/asqar0AI/Adapter-Pattern-Project
Adapter,DesignPatterns19-Adapter-Pattern,,0,0,2019,2019,1,https://github.com/j4sysiak/DesignPatterns19-Adapter-Pattern
Adapter,DesignPatterns_2_Adapter_Calculator,,0,0,2023,2023,1,https://github.com/VioK0709/DesignPatterns_2_Adapter_Calculator
Adapter,DesignPatterns_HW2Adapter,,0,0,2023,2023,1,https://github.com/semyonsavenkov/DesignPatterns_HW2Adapter
Adapter,DesignPatterns-Adapter-DifferentCables,"System has only support to connect with devices have USB-A type cable I create adapter(wrapper) to connect multiple devices having different cables like Ethernet, cType etc",0,0,2022,2022,1,https://github.com/yousufanwer99/DesignPatterns-Adapter-DifferentCables
Adapter,JavaHomework_designPatterns_Adapter,Решение задачи с использованием паттерна проектирования - Adapter,0,0,2023,2023,1,https://github.com/RVR0MAN/JavaHomework_designPatterns_Adapter
Adapter,adapter-design-hearts,The Hearts card game programmed using the adapter design pattern,0,0,2021,2022,1,https://github.com/RaptureAwaits/adapter-design-hearts
Adapter,DesignPatterns,"Singleton, Factory method, Adapter, Facade, Command, Mediator, Observer, Repository, Builder",0,0,2022,2022,1,https://github.com/Xakimov1610/DesignPatterns
Adapter,PhpDesignPatterns-Adapter,Adapter,0,0,2018,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Adapter
Adapter,Design-Patterns,Singleton Adapter Iterator ,0,0,2021,2021,0,https://github.com/ahmedkhalid5050/Design-Patterns
Adapter,Design_Patterns,Strategy / Observer / Decorator / Factory / Singleton / Command / Adapter / Adapter and others .,0,0,2022,2022,1,https://github.com/WiemBelhadj/Design_Patterns
Adapter,Java-AdapterDesignPattern,This repository consists of simple java code that demonstrates the Adapter Design Pattern,0,0,2017,2017,1,https://github.com/Divyankitha/Java-AdapterDesignPattern
Adapter,k8s-adapter-container-pattern,Multi-Container Pod Design Patterns in Kubernetes - adapter pattern,0,0,2022,2022,1,https://github.com/NYARAS/k8s-adapter-container-pattern
Adapter,Design-pattern-Adapter-Factory-Command-Memento,Design pattern with Adapter&Factory&Command&Memento in Java,0,0,2015,2015,1,https://github.com/peterlau0010/Design-pattern-Adapter-Factory-Command-Memento
Adapter,AdapterPattern,Adapter is a structural design pattern that allows objects with incompatible interfaces to collaborate.,0,0,2020,2021,1,https://github.com/Mahoney0101/AdapterPattern
Adapter,AppAdapter,Estudos relacionados a C# - Design Patterns: (Pattern Adapter). Projeto Console Application ,0,0,2021,2021,1,https://github.com/JTBCode86/AppAdapter
Adapter,DesignPatterns,Some examples of design patterns,0,0,2021,2021,1,https://github.com/EdgarPozas/DesignPatterns
Adapter,ClassAdapterPattern-Java,Java code that uses the design patterns with an interface.,0,0,2019,2019,1,https://github.com/KunjSPatel/ClassAdapterPattern-Java
Adapter,saudacao-entre-estrangeiros-adapter,"Exemplo de implementação do design pattern Adapter, simulando saudal entre ",0,0,2023,2023,0,https://github.com/equaglia/saudacao-entre-estrangeiros-adapter
Adapter,Singleton-and-Adapter-pattern,Singleton & Adapter design patterns on java in mobile chargers example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Singleton-and-Adapter-pattern
Adapter,DesignPatternsExamples,"Demo Betting App with Singelton, Builder, Adapter and ChainOfResponsibility Pattern",0,0,2020,2020,1,https://github.com/donstany/DesignPatternsExamples
Adapter,DesignPattern,A project with examples of design patterns,0,0,2020,2021,1,https://github.com/aliyildizoz/DesignPattern
Adapter,Design_Patterns,Patterns Adapter and Strategy ,0,0,2022,2022,1,https://github.com/brenovambaster/Design_Patterns
Adapter,Design-Patterns,"Adapter, Decorator, Observer, Strategy ",0,0,2019,2019,0,https://github.com/deniskutnar/Design-Patterns
Adapter,CSharp.DesignPatterns.1.Structural.Adapter,,0,0,2021,2021,1,https://github.com/oscarcortez/CSharp.DesignPatterns.1.Structural.Adapter
Adapter,Design_patterns,"Observer, builder, adapter, decorator",0,0,2023,2023,2,https://github.com/timofeev-vadim-96/Design_patterns
Adapter,Adapter,1. Study the Adapter Design Pattern URL 2. Checkout (clone) the following JAVA code URL  3. Understand the problem by reading the TODO-instruction in the code.  4. Use the Adapter design pattern to solve the issue.  5 Commit your repo with the issue solved in the deliverables section,0,0,2021,2021,2,https://github.com/mariedabee/Adapter
Adapter,Adapter_DP-Sample-,A simple sample of Adapter design pattern in OOP by C++,0,0,2023,2023,1,https://github.com/Mustartoo124/Adapter_DP-Sample-
Adapter,adapter-object-composition-example-1,"An implementation of the design pattern 'Adapter', using object composition",0,0,2023,2023,1,https://github.com/vladdubceac/adapter-object-composition-example-1
Adapter,DesignPatternsCourse-TP3-Adapter,,0,0,2025,2025,1,https://github.com/aimaad/DesignPatternsCourse-TP3-Adapter
Adapter,Adapter-App,A Project of a second year Object Oriented Design Patterns I module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Adapter-App
Adapter,DesignPatterns,"Design Patterns implemented as examples of using adapter, decarator, factory, singleton, observer, strategy",0,0,2023,2024,1,https://github.com/esQueues/DesignPatterns
Adapter,adapter-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Adapter em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/adapter-java
Adapter,structural-adapter,Example structural design pattern that allows objects with incompatible interfaces to collaborate.,0,0,2022,2022,1,https://github.com/anopszetex/structural-adapter
Adapter,Cars,JAVA project in which I highlight Adapter Design Pattern.,0,0,2016,2016,1,https://github.com/anapintilie/Cars
Adapter,SensorApplication,Used Adapter design pattern to implement required Sensor interface,0,0,2019,2019,1,https://github.com/jerryzhu94/SensorApplication
Adapter,DeviceBuilder,Implementation of builder and adapter object oriented design patterns,0,0,2024,2024,1,https://github.com/ManuRodriguez10/DeviceBuilder
Adapter,Weather-Forecast,Weather Forecast Application using Adapter Design Pattern in c#,0,0,2023,2023,1,https://github.com/kajal1106/Weather-Forecast
Adapter,Design-Patterns,"Testing of Singleton,Prototype,Command and Adapter design patterns.",0,0,2020,2020,1,https://github.com/madhurima12/Design-Patterns
Adapter,Design_Patterns,Software Design Patterns in Python,0,0,2023,2023,1,https://github.com/50Fifty/Design_Patterns
Adapter,SE310-Seminar-Example-Code,"Code example of design pattern: Circuit breaker, Adapter, Proxy",0,0,2024,2024,1,https://github.com/ThanhDong00/SE310-Seminar-Example-Code
Adapter,Adapter-Design-Pattern-EX,This EX is a Typescript EX that practices Adapter-design-pattern.,0,0,2022,2022,1,https://github.com/LiatHanunu/Adapter-Design-Pattern-EX
Adapter,NotificationSystem,"Used various design pattern such as  Observer,factory,adapter, singleton,factory  design pattern to create notifiication system",0,0,2024,2024,1,https://github.com/ashish246kumar/NotificationSystem
Adapter,Design-Patterns-Tutorial-Adapter,This project is taken from Derek Banas' Design Patterns Tutorial series.,0,0,2019,2019,1,https://github.com/olosinno/Design-Patterns-Tutorial-Adapter
Adapter,adapter-object-composition-example,It show an example with animals classes the adapter design pattern.,0,0,2023,2023,1,https://github.com/calebeds/adapter-object-composition-example
Adapter,Adapter_object_inheritance_example,"An implementation of the software design pattern 'Adapter', using object inheritance",0,0,2023,2023,1,https://github.com/vladdubceac/Adapter_object_inheritance_example
Adapter,SensorApplicationWithCodeReview,Used Adapter design pattern to implement required Sensor interface,0,0,2019,2019,2,https://github.com/jerryzhu94/SensorApplicationWithCodeReview
Adapter,Proxy-Trinity,"Training exercise on Design Patterns: Adapter, Proxy, and Decorator",0,0,2024,2024,0,https://github.com/SergiiKravchuk/Proxy-Trinity
Adapter,DesignPatternsJava,"Some of Common Design Patterns like  Observer,Singleton, Prototype,FactoryDesignPattern,and Adapter",0,0,2021,2021,2,https://github.com/manishv963/DesignPatternsJava
Adapter,AdapterExample,An example of an adapter design pattern and how it would work for a Media Player,0,0,2020,2020,1,https://github.com/bk-wrattler/AdapterExample
Adapter,AdapterPattern,adapterPatter for Objective c.This example has been created by examining headfirst design pattern for java.,0,0,2014,2014,1,https://github.com/alpersenyurt/AdapterPattern
Adapter,ports_and_adapters_ca_design_patterns_frontend,"Ports and Adapters, Clean Architecture e Design Patterns no Frontend",0,0,2022,2022,0,https://github.com/andersonsaraiva/ports_and_adapters_ca_design_patterns_frontend
Adapter,Design-Patterns-Python,Singleton Template Adapter Observer,0,0,2021,2021,1,https://github.com/sys123-data/Design-Patterns-Python
Adapter,design-patterns,Provides basic examples for mostly common design patterns. ,0,0,2024,2025,1,https://github.com/erayvaryeter/design-patterns
Adapter,AdapterRepositoryJavaDesignPatterns,AdapterRepostiory,0,0,2020,2020,1,https://github.com/AlexSkarlatov/AdapterRepositoryJavaDesignPatterns
Adapter,designPatterns1,"Netbeans project for a coffee vending machine using decorator, memento, and adapter design patterns",0,0,2024,2024,0,https://github.com/InduUpadhya/designPatterns1
Adapter,DesignPatterns,"Meerdere design patterns zoals: Adapter Pattern, Decorator Pattern, Observer Pattern, Template Method, Facade Pattern en meer.",0,0,2019,2020,1,https://github.com/TTvdO/DesignPatterns
Adapter,design-patterns-adapter,,0,0,2022,2023,1,https://github.com/Henderson-da-rocha-porfirio/design-patterns-adapter
Adapter,Design-Patterns-Adapter,Created with StackBlitz ⚡️,0,0,2022,2022,1,https://github.com/KleonTsimperis/Design-Patterns-Adapter
Adapter,design-patterns-adapter,,0,0,2021,2021,1,https://github.com/patrickAbarbosa/design-patterns-adapter
Adapter,design__patterns_adapter,,0,0,2022,2022,1,https://github.com/catalunha/design__patterns_adapter
Adapter,Design_patterns_adapter,,0,0,2022,2022,1,https://github.com/AnnaGawrysiak/Design_patterns_adapter
Adapter,Design_Patterns_Adapter,Convert the interface of a class into another interface clients expect. Adapter lets classes work together that couldn't otherwise because of incompatible interfaces.,0,0,2017,2017,1,https://github.com/TaharLOUKIL/Design_Patterns_Adapter
Adapter,design-patterns-adapter,,0,0,2021,2021,1,https://github.com/minibuildsio/design-patterns-adapter
Adapter,Design-Patterns-Adapter,,0,0,2023,2023,1,https://github.com/Nazarov-Dmitriy/Design-Patterns-Adapter
Adapter,Design-Patterns---Adapter,,0,0,2017,2017,1,https://github.com/babilon2k/Design-Patterns---Adapter
Adapter,design-patterns-adapter,A example implementation of the Adapter pattern in c# and python,0,0,2016,2016,1,https://github.com/michaelkrisper/design-patterns-adapter
Adapter,design-patterns-adapter,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-adapter
Adapter,adapter-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/adapter-design-patterns
Adapter,design-patterns-adapter,,0,0,2021,2021,1,https://github.com/Machadofabio/design-patterns-adapter
Adapter,The_Adapter_and_COR_Design_Patterns,This repository contains implementations of two commonly used design patterns: Chain of Responsibility and Adapter. Each design pattern is implemented in separate folders within the repository.,0,0,2023,2023,1,https://github.com/TebogoYungMercykay/The_Adapter_and_COR_Design_Patterns
Adapter,DesignPatterns,"Solution in C# including most common used design patterns such as: Factory, Adapter, Strategy, Facade and Builder",0,0,2022,2022,1,https://github.com/johann67880/DesignPatterns
Adapter,DesignPatternsRust,"Algunos patrones de diseño en Rust, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,1,https://github.com/Jonathana1106/DesignPatternsRust
Adapter,DesignPatterns_Course,"Facebook WPF application implementing various design patterns such as Factory, Adapter, Proxy, Singleton, and more.",0,0,2018,2019,2,https://github.com/TheDechev/DesignPatterns_Course
Adapter,design_pattern_adapter,"Develop a system that uses the pattern given in class. ""Adapter"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_adapter
Adapter,TableViewAdapter,Tableview Class based on adapter design pattern to be reused throughout the app,0,0,2019,2019,1,https://github.com/musamaj/TableViewAdapter
Adapter,Use-4-design-patterns,"MVC,Factory,Adapter,Proxy",0,0,2016,2016,1,https://github.com/traviszhong/Use-4-design-patterns
Adapter,Design_patterns_2.1,Калькулятор - реализация шаблона Adapter,0,0,2023,2023,1,https://github.com/alexeylh/Design_patterns_2.1
Adapter,SimpleAdapterCSharp,A simple example of how to implement the Adapter design pattern in C#,0,0,2023,2023,1,https://github.com/sean-campbelltech/SimpleAdapterCSharp
Adapter,SoftwareDevelopment_DesignPatterns,"Creating the Customize Development Framework like Spring framework and Spring Boot by applying the design patterns like.....Singleton,Command,Observer,Facade,Factory,Composit,COR,Strategy,State,Iterator,Adapter,Decorator,Builder,Adapter",0,0,2024,2024,1,https://github.com/HsuMinHtet/SoftwareDevelopment_DesignPatterns
Adapter,DesignPatterns,"Algunos ejemplos de algunos patrones de diseño en C++, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,2,https://github.com/Jonathana1106/DesignPatterns
Adapter,Design-Patterns,"Decorator, adapter, prototype, factory method, abstract factory",0,0,2017,2017,1,https://github.com/omarushchak/Design-Patterns
Adapter,adapter-object-composition-example-2,An example for the software design pattern 'Adapter' implementation using object composition,0,0,2023,2023,1,https://github.com/vladdubceac/adapter-object-composition-example-2
Adapter,Design_Patterns,"implement singleton , Adapter, Factory, Facade , Chain of Responsibility Design pattern",0,0,2022,2022,1,https://github.com/Shreeabcd/Design_Patterns
Adapter,clockwidget,"clock widget implemented using Factory, Adapter and Template Design Patterns",0,0,2022,2022,1,https://github.com/e-programmer/clockwidget
Adapter,design-patterns,"Implementations for factory, singleton, iterator, adapter and visitor design patterns.",0,0,2017,2017,0,https://github.com/kenananilakisik/design-patterns
Adapter,CSC-325-Week-10-Assignment-power-plug-,"week 10 assignment, contains American to European adapter design pattern",0,0,2022,2022,1,https://github.com/nka2001/CSC-325-Week-10-Assignment-power-plug-
Adapter,design-patterns-in-php,"Implementing design patterns (Adapter, Decorator, Template, Strategy, etc.) using PHP",0,0,2022,2022,1,https://github.com/tee-code/design-patterns-in-php
Adapter,adpeter_design_pattern,This project implements a use case of Adapter Design Pattern.,0,0,2024,2024,1,https://github.com/GabrielBortolote/adpeter_design_pattern
Adapter,assignment3,The demostration of Adapter Design Pattern to the topic KittenDorm,0,0,2023,2023,1,https://github.com/Ryuuukin/assignment3
Adapter,Adapter-Pattern,This project is about developing Adapter Design Pattern in php (example is about Book),0,0,2017,2017,1,https://github.com/PhpDesignPattern/Adapter-Pattern
Adapter,cos214-Prac-4,Task of a design pattern pattern practical for the Adapter,0,0,2023,2023,1,https://github.com/kabeloChuene/cos214-Prac-4
Adapter,basicDP,"4 of basic design patterns: bridge, builder, adapter and proxy.",0,0,2018,2018,1,https://github.com/gevorgsukias/basicDP
Adapter,design-patterns,"Samples of design patterns: Adapter, Command, FactoryMethod, Observable, Prototype, Singleton.",0,0,2019,2024,1,https://github.com/PauloBusch/design-patterns
Adapter,DesignPatternExamples,"Good examples of Strategy, Adapter, Bridge and Observer Design Patterns",0,0,2020,2020,1,https://github.com/waqarbabar/DesignPatternExamples
Adapter,Design-Patterns-Uppgift-2,"Inlämningsuppgift 2 av Design Patterns (Abstract Factory, Adapter, Facade, StateCommandMemento)",0,0,2022,2022,1,https://github.com/marcusnilss0n/Design-Patterns-Uppgift-2
Adapter,multi-platform-technologies-5,"JDBC API. Usage of design patterns (Factory Method, Adapter, State).",0,0,2020,2021,0,https://github.com/v-rublova/multi-platform-technologies-5
Adapter,DesignPatternSpringboot,"It contains design patterns for spring boot (Factory, Builder, Adapter)",0,0,2022,2022,0,https://github.com/pokhrelricha/DesignPatternSpringboot
Adapter,Design-Patterns3,Atividade Etapa 03 - Adapter - Comand - Composite,0,0,2023,2023,1,https://github.com/TadeuViegas/Design-Patterns3
Adapter,test-design-pattern-adapter,"A test project in java to test ""Adapter"" design pattern from GoF patterns.",0,0,2018,2018,1,https://github.com/naveenvemulapalli/test-design-pattern-adapter
Adapter,multi-item-list-adapter,A recycler view adapter package that supports multiple items using visitable design pattern.,0,0,2018,2018,1,https://github.com/amanshuraikwar/multi-item-list-adapter
Adapter,CSharp-Adapter-Design-Pattern,The Adapter design pattern converts the interface of a class into another interface clients expect. This design pattern lets classes work together that couldn‘t otherwise because of incompatible interfaces.,0,0,2022,2022,0,https://github.com/melak-cmd/CSharp-Adapter-Design-Pattern
Adapter,Designer-Patterns,"Los Patrones utilizados fueron Adapter, Decorator y Singleton.",0,0,2022,2022,1,https://github.com/elinmontero/Designer-Patterns
Adapter,adapter-in-ts,Simple example of adapter design pattern written in Type Script (generated JS also included),0,0,2018,2018,1,https://github.com/mateuszmilewski/adapter-in-ts
Adapter,dp.observer.adapter,Example of the Structural design pattern Adapter in Java (derived form project: dp.observer).,0,0,2016,2016,1,https://github.com/levyoav/dp.observer.adapter
Adapter,TheAdapterPattern,Adapter is a structural design pattern that allows objects with incompatible interfaces to collaborate.,0,0,2024,2024,1,https://github.com/QuinnContaldi/TheAdapterPattern
Adapter,design_pattern_adapter_jikanAPI,Um exemplo didático do Design Pattern Adapter no Laravel utilizando RESTful Web Services .,0,0,2023,2023,1,https://github.com/matheusmoc/design_pattern_adapter_jikanAPI
Adapter,design-patterns-exemplo-adapter,":notebook: Este é um exemplo do padrão adapter utilizado para desacoplamento de clientesHttp (axios, got, etc)  :notebook:",0,1,2021,2022,1,https://github.com/lucsimao/design-patterns-exemplo-adapter
Adapter,Adapter-Method-Design-Patterns,,0,0,2024,2024,1,https://github.com/KAVINDAPIYUMAL/Adapter-Method-Design-Patterns
Adapter,adapter-design-patterns-exemple,,0,0,2018,2018,0,https://github.com/ighorpi/adapter-design-patterns-exemple
Adapter,Design-Patterns-Adapter-CSHARP,,0,0,2023,2023,1,https://github.com/ivnvalxndr/Design-Patterns-Adapter-CSHARP
Adapter,adapter-design-patterns-example,Exemplo de Implementação do Design Pattern Adapter feito na Cadeira de Análise e Projeto de Sistemas II da UNI7,0,0,2024,2024,1,https://github.com/mathewvieira/adapter-design-patterns-example
Adapter,design-patterns-adapter-exemple,,0,0,2024,2024,1,https://github.com/dhia-eddine/design-patterns-adapter-exemple
Adapter,DesignPatterns,"A program for scheduling appointments to take the car to the mechanic with different design patterns, including adapter, DAO, MVC and facade",0,0,2024,2024,4,https://github.com/flormc/DesignPatterns
Adapter,CalculadoraDesignPatternsAdapter,"Resultados ainda não é dinamico, é apenas estatico em 100",0,0,2022,2022,1,https://github.com/AnderSpidy/CalculadoraDesignPatternsAdapter
Adapter,design-patterns-adapter-typescript,,0,0,2023,2023,0,https://github.com/leonardopottmayer/design-patterns-adapter-typescript
Adapter,Adapter-Pattern,Small project to show off the adapter design pattern. Developed as a C# console project.,0,0,2020,2020,1,https://github.com/JakJon/Adapter-Pattern
Adapter,SoftwareDesignPatterns,"SoftwareDesignPatterns include singleton, factory, adapter or others.",0,0,2021,2021,1,https://github.com/EliotXu/SoftwareDesignPatterns
Adapter,design-patterns-java,"Fasade, Decorator, Observer, Adapter + Aspect Programming Basics",0,0,2020,2020,1,https://github.com/Wetfingerzz/design-patterns-java
Adapter,design-patterns-java,"Padrões Abstract Method, Adapter, Composite e Observer!",0,0,2023,2023,1,https://github.com/saraferreira10/design-patterns-java
Adapter,Design-Patterns,"Singleton, Adapter, Factory in C++ & Decorator, Facade in Python.",0,0,2023,2023,1,https://github.com/firatkorkmaz/Design-Patterns
Adapter,Dart-DesignPatterns,Dart design patterns simplified with real life case studies,0,0,2023,2024,1,https://github.com/venkatesh-db/Dart-DesignPatterns
Adapter,Design-Patterns,"Java program for Fascade Pattern, Proxy Pattern, Adapter Pattern",0,0,2024,2024,1,https://github.com/Prabhulakshman/Design-Patterns
Adapter,adapter,"Simple project demonstrating the adapter design pattern. For this one I created a """"Database"""" Class which receives data from a html file that needs to be converted to xml.",0,0,2021,2022,1,https://github.com/Piazzi/adapter
Adapter,AdapterDesignPattern,"Implementação do Design Pattern Estrutural Adapter em .net Core 3.1, simulando um Log padrão para um Log customizado",0,0,2021,2021,1,https://github.com/rafaelraah/AdapterDesignPattern
Adapter,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Adapter,AdapterPattern,"this is an Example for Adapter Design Pattern : yo can make an adapter for 3 v , 12v and 120 volt ",0,0,2017,2017,1,https://github.com/aliOsm3n/AdapterPattern
Adapter,AdapterExample,This is an example of the adapter pattern design taken from https://refactoring.guru/es/design-patterns/adapter/java/example,0,0,2023,2023,2,https://github.com/yei5/AdapterExample
Adapter,Design-Patterns-TicTacToe-Game,"Memento, Decorator, Adapter, Singleton and Command Design Patterns in one System",0,0,2019,2019,1,https://github.com/ShalevL/Design-Patterns-TicTacToe-Game
Adapter,temperature-gauge-adapter,basic GUI application which uses the 'adapter' design pattern to interface with existing 'sensor' classes,0,0,2019,2019,1,https://github.com/averydl/temperature-gauge-adapter
Adapter,adapter-pattern-workshop,This mini Laravel application helps you to practice the usage of the Adaptern Design Pattern.,0,0,2019,2019,0,https://github.com/peterhaluska/adapter-pattern-workshop
Adapter,cotacao-bolsa-valores,Projeto Java de fim acadêmico para demonstração do design pattern Adapter,0,0,2021,2021,1,https://github.com/TheJamylle/cotacao-bolsa-valores
Adapter,Design_Pattern_Task,"Assignment of Abstract Factory, Adapter, Builder Design Patterns and Solid Principles",0,0,2023,2024,1,https://github.com/jerin-priya/Design_Pattern_Task
Adapter,Android_Music_App,"Basic Android app, utilizes the Intent class and Adapter design pattern",0,0,2016,2016,1,https://github.com/rhayhurst/Android_Music_App
Adapter,Fibonacci,"Fibonacci php classes implementation as singleton, strategy and adapter design patterns",0,0,2016,2017,1,https://github.com/Sharkzt/Fibonacci
Adapter,EntwurfsmusterBasis,"Testat für Software Engineering ||, Anwendung der Design Patterns State und Adapter. ",0,0,2022,2022,1,https://github.com/CocoJasmin/EntwurfsmusterBasis
Adapter,Design-Patterns-java,"Java implementations of Template Method, Factory Method, and Adapter design patterns.",0,0,2024,2024,1,https://github.com/PethumSandaruwan/Design-Patterns-java
Adapter,cacheSystem,Cache system for different type of caching with Adapter Design Pattern,0,0,2019,2019,1,https://github.com/shubham0503/cacheSystem
Adapter,DesignPatterns,"A collection of examples and use cases of best design patterns and principles (such as the abstract factory method, observer pattern, adapter pattern, dependency injection, etc.)",0,0,2020,2022,2,https://github.com/mrchristensen/DesignPatterns
Adapter,Adapter-Design-Pattern,This is complete Tutorial of Adapter Design Pattern . Feel Free to add something useful to it .,0,0,2023,2023,1,https://github.com/Neha611/Adapter-Design-Pattern
Adapter,java_design_patterns_adapter_mode,java设计模式_适配器模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_adapter_mode
Adapter,Electric-car-rent-prototyp_1,Creating a console app using some of the  creational design patterns and Structural design patterns(only bridge and adapter if needed)),0,0,2020,2020,1,https://github.com/lukkristi/Electric-car-rent-prototyp_1
Adapter,Adapters-validation,"👋 Aplicação no formato API REST para verificar treinos de academia, implementando alguns ✨ design patterns ✨",0,0,2021,2021,1,https://github.com/JoseMurilloc/Adapters-validation
Adapter,design-patterns-v2,"Adapter Pattern, Command Pattern, Factory Pattern, Memento Pattern",0,0,2014,2020,0,https://github.com/life-is-curiosity/design-patterns-v2
Adapter,design-patterns,"Java implementation of singleton, abstract factory, adapter, decorator and observer design patterns.",0,0,2025,2025,1,https://github.com/bskracic/design-patterns
Adapter,design-patterns-and-algorithms,"Implementation of abstract factory, adapter, façade with TypeScript",0,0,2021,2021,0,https://github.com/Pr1sm0/design-patterns-and-algorithms
Adapter,oop-design-patterns,"Understanding Singleton, Factory (+Abstract), Strategy, State, Builder (CPS), Observer, Adapter",0,0,2023,2023,1,https://github.com/xThirteenIII/oop-design-patterns
Adapter,DesignPatterns,This project demonstrates the implementation of various design patterns in Java.,0,0,2022,2022,1,https://github.com/jchoker/DesignPatterns
Adapter,adapter-xml-to-json,This project is an application for Adapter Design pattern which adapt XML files to JSON files,0,0,2019,2019,1,https://github.com/AmirAltakroori/adapter-xml-to-json
Adapter,design_patterns,"Simple demos for Adapter, Composite, Facade, Factory, Observer, Strategy, Template Mehod and Visitor.",0,0,2018,2018,1,https://github.com/j-o-e-d-o-e/design_patterns
Adapter,cloud-adapter,Abstracts Microsoft Azure and design patterns so that you can focus on your cloud service's business logic,0,0,2017,2017,1,https://github.com/rapai/cloud-adapter
Adapter,COM-Module,C# Inter-operation Module for Progress Openedge 4GL using Adapter design pattern.,0,0,2017,2017,1,https://github.com/amittyyy/COM-Module
Adapter,DesignPattern,"All about design pattern : Adapter, strategy, builder, factory et chaine de responsabilité",0,0,2023,2023,1,https://github.com/JeremRkt/DesignPattern
Adapter,Pitagon_Project_01_FE,"Design pattern ""Adapter"" and convert data by ASP.NET core with Angular ",0,0,2022,2022,1,https://github.com/Thiem1234/Pitagon_Project_01_FE
Adapter,Parent-Social-Media,Used: Kotlin - Firebase - Eventbus Library - Adapter/Model Design Pattern - Algolia Search Api,0,0,2021,2021,1,https://github.com/omer-faruk-ermis/Parent-Social-Media
Adapter,Gang-of-Four-Design-Patterns,"Implementation of Design Patterns such as Adapter, Bridge, Builder etc in C#",0,0,2017,2017,1,https://github.com/AbubakarSarwar/Gang-of-Four-Design-Patterns
Adapter,TrabalhoJavaP2,"Utilizando os design patterns Bridge, Decorator, Abstract Factory, Adapter, Composite, Factory Method",0,0,2013,2013,1,https://github.com/bknupp/TrabalhoJavaP2
Adapter,adapter-pattern,This repository showcases an application built using the Adapter design pattern to manage and control various electronic devices.,0,0,2024,2024,1,https://github.com/Arvicss/adapter-pattern
Adapter,pos_system,"pos system using design patterns ( composite, observer, factory, strategy, adapter, singleton , etc)",0,0,2019,2019,0,https://github.com/goyurim/pos_system
Adapter,hexagon_and_account,POC to study Ports and Adapters (Hexagonal) Architecture and Account Design Pattern,0,0,2019,2019,0,https://github.com/renanpelicari/hexagon_and_account
Adapter,TicketTracker,A sample of work that implements the Adapter and Façade design patterns.,0,0,2016,2016,1,https://github.com/JacksonHamner/TicketTracker
Adapter,FacebookWindowsApp,"A Facebook Application using Design patterns (Singleton, Strategy, Facade, Command, Adapter, etc..)",0,0,2017,2017,0,https://github.com/eizzo77/FacebookWindowsApp
Adapter,designPatterns,A repo with a collection of design patterns,0,1,2020,2021,1,https://github.com/daniel199410/designPatterns
Adapter,DesignPatternsGoF,"Solucionar situações utilizando alguns dos Design Patterns mais conhecidos do Gang of Four (GoF), sendo eles: Abstract Factory, Factory, Builder, Bridge, Adapter e Chains of Responsibility",0,0,2024,2024,1,https://github.com/CaueCG/DesignPatternsGoF
Adapter,DesignPatterns,"In our iOS application, we utilized the Adapter pattern to integrate incompatible interfaces, the Factory pattern to streamline object creation, and the Repository pattern to abstract data access and operations for better modularity and maintainability.",0,0,2024,2024,1,https://github.com/ZakiBai/DesignPatterns
Adapter,Movies-And-TV-Series-Purchase-C-Desktop-App,"Movies and TV Series Purchase C# desktop application was developed with Mssql ,Microsoft Visual Studio and design patterns in accordance with object oriented programming.Singleton and Factory from Creational design patterns, adapter from structural design patterns and Strategy design pattern from behavioral design patterns were used in the project.",0,0,2020,2020,1,https://github.com/bsraydgn/Movies-And-TV-Series-Purchase-C-Desktop-App
Adapter,design-patterns,"The Singleton, Factory Method, Adapter, Composite, and Observer design patterns are all demonstrated together.",0,0,2023,2023,1,https://github.com/khaledsawan/design-patterns
Adapter,Adapter-DP-XML-to-JSON,This project is an application for Adapter Design pattern which adapt XML files to JSON files,0,0,2019,2019,1,https://github.com/AmirAltakroori/Adapter-DP-XML-to-JSON
Adapter,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Adapter,examples-design-patterns,Just some code demonstrating a few of the ways in which Microsoft have kindly provided some out-of-the-box implementations of some well known and well used Design Patterns,0,0,2023,2023,1,https://github.com/bill-richards/examples-design-patterns
Adapter,AdapterDesignPattern,This is an example of an adapter design pattern following this tutorial: https://www.youtube.com/watch?v=qG286LQM6BU&list=PLF206E906175C7E07&index=13,0,0,2019,2019,1,https://github.com/dmurtagh14/AdapterDesignPattern
Adapter,desing-patterns-kitchen,A project including sample implementations of software  design patterns,0,0,2022,2022,1,https://github.com/acdirican/desing-patterns-kitchen
Adapter,C_sharp_pluralsight_design_patterns_Adapter,Apply Adapter Pattern with C# by follow Pluralsight course,0,0,2020,2020,1,https://github.com/ahmed-hamdy90/C_sharp_pluralsight_design_patterns_Adapter
Adapter,MarbleWheels,"Design patterns. Creating a game in C# using different types of design patterns: adapter pattern, bridge pattern, factory method pattern, decorator and facade.",0,0,2015,2017,2,https://github.com/mrgunior/MarbleWheels
Adapter,Design-Patterns,"Simple analogy in C# in Adapter, Decorator and Façade to understand how it can be used",0,0,2023,2023,1,https://github.com/NandaChaves/Design-Patterns
Adapter,design-patterns,"This repository provides practical implementations of common design patterns in Go. Each pattern is accompanied by clear explanations, code examples, and usage scenarios. ",0,0,2024,2024,1,https://github.com/iarsham/design-patterns
Adapter,adapter_pattern_dart,The adapter design pattern is a structural pattern in software design that allows incompatible interfaces to work together seamlessly.,0,0,2024,2024,1,https://github.com/kursat-ozturk/adapter_pattern_dart
Adapter,design-patterns,"Single responsibility, open closed principle, Liskov substitution, Interface segregation, Dependency Inversion, Adapter and  Factory & Abstract Factory patterns",0,0,2023,2023,2,https://github.com/Antonyfrtz/design-patterns
Adapter,MI-JonasTeam,Realiziuoti „Adapter“ design pattern + Php OOP + MySQL DB + Git SCM (GitHub) + PhpStorm IDE,0,0,2014,2014,3,https://github.com/Hakatonas/MI-JonasTeam
Adapter,Chukwukaodinaka-Burger-Shack-Design_Patterns_In_Use,"Java Project making use of design patterns such as FlyWeight, Proxy and Adapter",0,0,2020,2020,1,https://github.com/Chukwukaodinaka/Chukwukaodinaka-Burger-Shack-Design_Patterns_In_Use
Adapter,Gezhaydi-Android-E-Commerce,Android Java - Firebase - Ecommerce Mobile App. Used: Adapter Design Pattern and Java OOP.,0,0,2021,2021,1,https://github.com/omer-faruk-ermis/Gezhaydi-Android-E-Commerce
Adapter,JavaDesignPatterns,an implementation of some of the java design patterns. including iterator observer and adapter,0,0,2018,2018,1,https://github.com/wencharles/JavaDesignPatterns
Adapter,Bytezaria,"C# console project with the usage of design patterns like adapter, iterator, command",0,0,2023,2023,1,https://github.com/barsew/Bytezaria
Adapter,structural-design-patterns,"Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост (Bridge), Легковес (Flyweight), Фасад (Facade)",0,0,2020,2020,1,https://github.com/ann-vicheva/structural-design-patterns
Adapter,Design-Patterns-PHP,"A activity from Kodigo showing some design patters examples (Factory, Adapter, Decorator and Strategy)",0,0,2024,2024,1,https://github.com/AbrahamVasquez/Design-Patterns-PHP
Adapter,designpatterns,"Code example for Adapter, Abstract Factory, Factory Method, Iterator and Decorator design patterns.",0,0,2019,2022,2,https://github.com/thekgk/designpatterns
Adapter,IVector2D3D,Creating 2D and 3D Vector using Adapter and Decorator design patterns in Java,0,0,2023,2023,1,https://github.com/Kasy00/IVector2D3D
Adapter,Burger-Shack_design_patterns_in_use,"Simple Java Project for multi-threading and design patterns like flyweight, proxy, adapter",0,0,2020,2020,1,https://github.com/rafall404/Burger-Shack_design_patterns_in_use
Adapter,JavascriptDesignPattern,"It contains Popular design pattern code in Javascript.Like Singleton , Adapter ,  Factory , Visitor.",0,0,2023,2023,1,https://github.com/rockingnishant/JavascriptDesignPattern
Adapter,GoF_Project,JAVA_design_patterns_GoF_project:includes Factory method and observer and adapter patterns,0,0,2023,2024,1,https://github.com/baziz-meriem/GoF_Project
Adapter,DesignPatternsJava,"Explore essential design patterns in Java, enhancing your coding skills. From creational (e.g., Singleton) to structural (e.g., Adapter) and behavioral (e.g., Observer), master proven solutions for software design challenges. Elevate your Java development expertise with this comprehensive repository.",0,0,2024,2024,1,https://github.com/luv1327/DesignPatternsJava
Adapter,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Adapter,Design_Patterns,"This repository contains various low level design patterns such as Strategy, Observer, Factory, Builder, Singleton, Adapter, Facade etc",0,0,2022,2024,1,https://github.com/praveenchiliveri6/Design_Patterns
Adapter,Design_Patterns,"This includes most essential design patterns including singleton, factory, abstract factory, observer, builder, prototype, strategy, template method, adapter, facade, decorator design patterns in java",0,0,2023,2023,1,https://github.com/Ansu-s/Design_Patterns
Adapter,Android-Design-Patterns,"6 Design pattern every android developer must know Singleton, Factory, Builder, Facade, Dependency Injection, Adapter",0,0,2024,2024,1,https://github.com/abdulappengineer/Android-Design-Patterns
Adapter,Swift-Adapter-Design-Pattern,This Xcode 9 Swift 4 playground demonstrates the adapter design pattern as originally defined by the Gang of Four.,0,0,2018,2018,1,https://github.com/iosbrain/Swift-Adapter-Design-Pattern
Adapter,Design-patterns-1.2.1-adapter-calculator,,0,0,2022,2022,1,https://github.com/petr200700/Design-patterns-1.2.1-adapter-calculator
Adapter,design-patterns,"A project to demonstrate the use of various Design Patterns, including Adapter, Abstract Factory Method, Singleton, Composite and more.",0,0,2020,2020,1,https://github.com/karlaugust1/design-patterns
Adapter,ports_and_adapters_ca_design_patterns_frontend,,0,0,2024,2024,1,https://github.com/gilmarandrade/ports_and_adapters_ca_design_patterns_frontend
Adapter,Process-modelling-with-using-5-design-patterns,It includes :  Observer-Adapter-Singleton-Factory-Command  patterns,0,0,2023,2023,1,https://github.com/merco1/Process-modelling-with-using-5-design-patterns
Adapter,design-patterns-exemplos,"Exemplos de padrões de projeto (Factory Method, Adapter, Observer) com base no catálogo do Refactoring Guru.",0,0,2025,2025,1,https://github.com/kalilnege/design-patterns-exemplos
Adapter,Developersstack-Java-adapter_dp,"Developersstack Course on Adapter Design Pattern: This repository offers a detailed guide on the Adapter design pattern, including practical examples and real-world use cases. It covers the implementation and benefits of the pattern, helping developers understand how to integrate incompatible interfaces seamlessly.",0,0,2024,2024,0,https://github.com/ayesh156/Developersstack-Java-adapter_dp
Adapter,adapter,"The Adapter Design Pattern bridges two incompatible interfaces. It involves an ""Adapter"" class that melds the functionality of distinct interfaces. Think of it like electrical plug converters: without changing the device or socket, they allow compatibility. It's a solution for interfacing mismatched systems.",0,0,2023,2023,1,https://github.com/IsmaInfiniteCloud/adapter
Adapter,IT-PHP-Sprint3-Tema1-Design_Patterns,singleton - dependency injection - adapter - facade - strategy - observer,0,0,2024,2024,1,https://github.com/frankpulido/IT-PHP-Sprint3-Tema1-Design_Patterns
Adapter,Design-Patterns,"This project involves implementing various design patterns such as Adapter, Factory, Builder and so on commonly used in software development.",0,0,2024,2024,1,https://github.com/KanwalB7/Design-Patterns
Adapter,Design_Patterns-inPython,"Some examples of Singleton, Observer & Adapter pattern from Creational, Structural and Behavioral Design Pattern ",0,0,2024,2024,1,https://github.com/ShovonEX86/Design_Patterns-inPython
Adapter,Design_Patterns-inJava,"Some examples of Singleton, Observer & Adapter pattern from Creational, Structural and Behavioral Design Pattern",0,0,2024,2024,1,https://github.com/ShovonEX86/Design_Patterns-inJava
Adapter,Vaccine-App,"This app uses , RecyclerView , and the adapter-design-pattern  i.e 1.AdapterView 2.Data source 3. Adapter",0,0,2024,2024,1,https://github.com/sumitbhuia/Vaccine-App
Adapter,adapter-pattern-demo-webapp, The web application serves as a demonstration of the Adapter Pattern within the Software Design Pattern course at HCMUTE University.,0,0,2024,2024,1,https://github.com/cuonglexuan203/adapter-pattern-demo-webapp
Adapter,Tracker-GUI-App-SOFTWARE-ENGINEERING-,You are asked to implement a sensor tracker GUI application using Adapter design pattern,0,0,2018,2018,1,https://github.com/Ferdinho/Tracker-GUI-App-SOFTWARE-ENGINEERING-
Adapter,Space-Shape-2,Extend functions with the concept of design patterns like adapter to present as JTree ,0,0,2019,2019,1,https://github.com/RHua24/Space-Shape-2
Adapter,design-patterns-unit-tests,"Working with different design patterns like State, Composite, Visitor, Adapter and unit testing via Mockito.",0,0,2020,2020,2,https://github.com/yashj21/design-patterns-unit-tests
Adapter,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Adapter,design_patterns,"Shell for DAW application which includes multiple design petterns, such as: abstract factory, singleton, factory method, adapter, decorator, facade, iterator, observer, strategy.",0,0,2023,2024,1,https://github.com/ruslan1us/design_patterns
Adapter,java-structural-design-patterns,"Java implementations of various structural design patterns, including Adapter, Composite, Decorator, Facade, Flyweight, and Proxy.",0,0,2025,2025,1,https://github.com/HajiraGul/java-structural-design-patterns
Adapter,DevOps,"C# + .NET + Onion Architecture + Different design patterns (factory, state, strategy, observer, adapter, template, composite)",0,0,2024,2024,2,https://github.com/CKleijn/DevOps
Adapter,algebra,Simple java code using Decorator & Adapter Design Pattern. Code wrote on universit'ies classes,0,0,2018,2019,1,https://github.com/Bziomek97/algebra
Adapter,javapoz7designpatterns,"Introduction to design patterns - singleton, prototype, hexagonal, facade, factory, dependency injection, chain, builder, adapter",0,0,2018,2018,1,https://github.com/rafinho91/javapoz7designpatterns
Adapter,2D-Jumper-Game-with-JavaAWT,"2D Jumper game and Game engine classes (Renderer2D and Behavior) with design patterns. This project is done for Design Pattern course and includes 6 different design pattern implemented for the game to work. Design patterns include: Template Method, Adapter, Factory Method, Singleton, State and Behavior Patterns.",0,0,2021,2021,1,https://github.com/fGencturk/2D-Jumper-Game-with-JavaAWT
Adapter,Design-Patterns,"Introduction to design patterns: Strategy, Observer, Factory, Singleton, Command, Adapter, Faade, Template Method, Iterator, Composite, State, Proxy. Object Oriented design principles, Java/UML. ",0,0,2019,2021,1,https://github.com/YifengQ/Design-Patterns
Adapter,DesignPatternsInModernCPP,"This repository demonstrates Creational, Structural, and Behavioral Design Patterns using traditional and modern C++ features in various examples for learning purposes. Common patterns (Singleton, Factory Method, Abstract Factory, Adapter, Decorator, Composite, Observer, Strategy, Command) are implemented with assistance from the AI tool.",0,0,2024,2024,1,https://github.com/denkhzol/DesignPatternsInModernCPP
Adapter,JavaDesignPatterns,"Multiple examples of design patterns  : Adapter, Command, Composite, Decorator, State, Fabric, AbstractFabric, FlyWeigth, Mediator, Observer, Prototype, Singleton, Strategy, TemplateMethod",0,0,2022,2022,1,https://github.com/leo77777/JavaDesignPatterns
Adapter,Design-Patterns,A chronicle of various design patterns implemented under software engineering course,0,0,2023,2024,1,https://github.com/mrtaz77/Design-Patterns
Adapter,go_rest_grpc_adapter,Go Gateway Adapter Design Pattern to transform REST HTTP1 JSON req/res into gRPC HTTP2 protobuffer data seeking API performance improvement.,0,0,2024,2024,1,https://github.com/vegadelalyra/go_rest_grpc_adapter
Adapter,Design-Patterns," The GitHub repository consists of separate implementations of various design patterns, including Adapter, Command, Decorator, Facade, Observer, Prototype, Proxy, Singleton, and Strategy, in Java.",0,0,2021,2023,1,https://github.com/mozammalrahat/Design-Patterns
Adapter,SLAP_Assignment_7_1_PeerToPeer_Adapter,Smartlearning Advanced Programming Assignment 7.1 Peer to peer - Implementing and using the adapter design pattern in WPF.,0,0,2023,2023,1,https://github.com/jinxxed42/SLAP_Assignment_7_1_PeerToPeer_Adapter
Adapter,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Adapter,Design-Patterns-Java,"Detail implementation of all design patterns in java ( creational(builder , prototype, abstract factory, singleton), structural (decorator, composite, adapter, facade)  and behavioural )",0,0,2025,2025,1,https://github.com/CynthiaAbi03/Design-Patterns-Java
Adapter,Design-Patterns---Teachers,"Final student project for my university course “Design Patterns”. Used technologies: Java, Swing. Used patterns: Singleton, Factory Method, Adapter, Proxy, Decorator ",0,0,2016,2016,1,https://github.com/itplamen/Design-Patterns---Teachers
Adapter,design-patterns,"The repository covers fundamental design patterns such as the Factory Pattern, Singleton Pattern, Facade Pattern, Adapter Pattern, Strategy Pattern, Command Pattern, and Observer Pattern, among others.",0,0,2024,2024,1,https://github.com/Pathum-Vimukthi/design-patterns
Adapter,Java-Design-Patterns-Programs," This repository explores core patterns like Factory and Adapter, demonstrating how to create flexible and efficient code structures.",0,0,2024,2024,1,https://github.com/Nisanth2004/Java-Design-Patterns-Programs
Adapter,Helpify_v3,"Project utilizing SQL, LINQ, C#, MVC, Razor in Repository/Adapter design pattern. Includes Identity Login",0,0,2015,2015,1,https://github.com/rjoshuadever/Helpify_v3
Adapter,universal-data-processor,An universal data processor that's built using the Adapter design pattern for dynamic changes.,0,0,2024,2024,1,https://github.com/mnikolic91/universal-data-processor
Adapter,Dessign_Pattern,"This repository's branches each implement a specific design pattern: Adapter, Factory, Facade, and Observer.",0,0,2024,2024,1,https://github.com/MMuzykant00/Dessign_Pattern
Adapter,GoogleClassroom2,[GoogleClassroom2 and 3] 1_ Learn to use RecyclerViews with Adapter design pattern & 2_ NavHost + NavController,0,0,2022,2022,1,https://github.com/POManil/GoogleClassroom2
Adapter,Sensors,CS410: Software Engineering. Practice using the Adapter design pattern to implement a faux sensor system.,0,0,2019,2020,1,https://github.com/ebariquit/Sensors
Adapter,.github,"Implementation de 7 Design Pattern avec java :P.proxy,P.Decorator,P.Observer,P.Adapter...",0,0,2022,2022,1,https://github.com/Java-Design-Pattern/.github
Adapter,DataConvertion,chuyển đổi dữ liệu làm bằng spring-boot gradle và sử dụng design pattern adapter,0,0,2023,2023,1,https://github.com/chiennguyen30/DataConvertion
Adapter,LiveStock,"Java based project using design patterns like abstract factory pattern, observer pattern and adapter pattern.",0,0,2020,2020,3,https://github.com/batuhanuzumcu/LiveStock
Adapter,Design-Patterns-in-Java,"In this training, I reviewed somme design patterns such as strategy, adapter, decorator, composite, proxy, builder, singleton and prototype.",0,0,2023,2023,1,https://github.com/ClaudEbro/Design-Patterns-in-Java
Adapter,design-patterns-examples,"Small projects made to study the use of diferents design patterns.  Some patterns present are: Abstract factory, adapter, builder, decorator, proxy and others.",0,0,2021,2022,1,https://github.com/guihensn/design-patterns-examples
Adapter,Design-Patterns-and-Examples,"Project in which some Design Patterns (Singleton, Factory, Adapter, Facade, Observer and Strategy) are explained and illustrated with examples.",0,0,2024,2024,1,https://github.com/osmantunahanincirkus/Design-Patterns-and-Examples
Adapter,Design-Patterns,A. Structural  1. Adapter - correct  2. Facade - corrected  3. Proxy - correct    B. Creational  1. Singleton  2. Factory  3. Builder    C. Behavioural  1. Chain of responsibility  2. Memento 3. Observer,0,0,2024,2024,1,https://github.com/NehaAgrawal-git/Design-Patterns
Adapter,ts-vue-ports-and-adapters-project,"🎨 Building a task system using Vue.js, TypeScript, Node.js, TDD, Clean Architecture, Design Patterns and SOLID principles 🎯💅",0,0,2023,2024,1,https://github.com/silva4dev/ts-vue-ports-and-adapters-project
Adapter,adapter-design-pattern-sample,You can find how we can use adapter design pattern in php. Adapter allows objects with incompatible interfaces to collaborate with each other,0,1,2021,2021,1,https://github.com/majidkarimizadeh/adapter-design-pattern-sample
Adapter,usjt_20211_ads1am_mcb_design_patterns_adapter,,0,0,2021,2021,1,https://github.com/professorbossini/usjt_20211_ads1am_mcb_design_patterns_adapter
Adapter,Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento,,0,0,2022,2022,1,https://github.com/ZaraBaghdasaryan/Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento
Adapter,Design-Patterns,"Various design patterns I have implemented in Java include: structural patterns like adapter and decorator, creational patterns such as factory, abstract factory, and singleton, and behavioral patterns like template method.",0,0,2024,2024,1,https://github.com/JustMyriiam/Design-Patterns
Adapter,Design-patterns,"This repository contains Java implementations of design patterns such as Adapter, Bridge, Builder, and more. It serves as a concise reference for understanding and applying these patterns to improve software design.",0,0,2020,2024,1,https://github.com/Harshith-Reddy-Revoori/Design-patterns
Adapter,kodilla-design-patterns2_mod_20,"Facade (also in repo_mod_13), Decorator, Observer, Adapter AND about  AOP - aspect oriented programming ",0,0,2018,2018,1,https://github.com/paulina-bukowska/kodilla-design-patterns2_mod_20
Adapter,Typescript-Design-Patterns,"Object oriented design patterns in pure Typescript. Patterns: Decorator pattern, Observer pattern, Facade pattern, Adapter pattern, State pattern; 2020 Edition - SOLID and all the other patterns",0,0,2017,2020,1,https://github.com/stefantrajkovic7/Typescript-Design-Patterns
Adapter,Design-Patterns,"This repository contains clear and practical examples of several design patterns implemented in TypeScript, using a Vite application. The design patterns included are: Adapter, Abstract Factory, Builder, Factory Method, Prototype, Singleton, among others.",0,0,2024,2024,1,https://github.com/cristianManco/Design-Patterns
Adapter,java-4h-5h-design-patterns-2,"Creational (Singleton, Prototype, etc) and Structural (Proxy, Composite, Decorator, Adapter and Bridge)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-2
Adapter,awesomeshop_api-restful_dps-adapter_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPS (Design Pattern Strutuctural) Adapter, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dps-adapter_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Adapter,JavaDesignPattern,"This Project illustrates 4 important design patterns in java namely abstract factory ,visitor,iterator,and adapter",0,0,2017,2017,1,https://github.com/chandrimaghosh/JavaDesignPattern
Adapter,Design-Pattern,"Example design pattern 3 pattern and 6 design viz Singleton , Builder , Adapter , Decorator , Interpreter and Memento.",0,0,2024,2024,1,https://github.com/kulproffbrter/Design-Pattern
Adapter,Design-Patterns,"Explore key software design patterns including Inheritance, Singleton, Adapter, Composite, Observer, Command, State, Decorator, Strategy, Iterator, and MVC. These patterns offer blueprints to solve common design challenges, focusing on object and class communication, not just implementation. ",0,0,2022,2024,1,https://github.com/radubauzh/Design-Patterns
Adapter,Nobu-WebII-assignment,"This is WebII assignment using JSON and some design patterns, such as tablegateway, factory, adapter, etc...",0,0,2016,2016,1,https://github.com/Soulstice/Nobu-WebII-assignment
Adapter,Design_Patterns_in_Java,"Common software design patterns, including Creational patterns (singleton, abstract factory, builder), Behavioral patterns (strategy, template method), Structural patterns(adapter pattern, decorator pattern) and dependency injection",0,0,2022,2022,1,https://github.com/GuoCong1881/Design_Patterns_in_Java
Adapter,Design-Patterns,This repository contains example implementations of three core design patterns in Java:  Observer Pattern (Behavioral)- Demonstrates a publish-subscribe model  Factory Pattern (Creational)- Provides a simple way to create objects without specifying Adapter Pattern (Structural)- Bridges incompatible interfaces,0,0,2024,2024,1,https://github.com/Ishara-Aththanagoda/Design-Patterns
Adapter,px-filesystem-design-patterns,"Repository showcasing software design patterns, part of a university course on software development methodologies. Includes implementations of Factory, Adapter, Composite, Observer, and more, with comprehensive examples and tests.",0,0,2024,2024,1,https://github.com/ngljcb/px-filesystem-design-patterns
Adapter,Design-Patterns," Design patterns are established solutions for recurring software design issues. They improve code flexibility, reusability, and maintainability. Creational Patterns: Handle object creation (e.g., Singleton, Factory Method). Structural Patterns: Focus on object composition (e.g., Adapter, Decorator). Behavioral Patterns: Deal w",0,0,2024,2024,1,https://github.com/SE-MahmoudAbdelaal/Design-Patterns
Adapter,Adapter_Pattern,This application has been build to showcase my understanding of the Adapter design pattern. This pattern allows the interface of an existing class to be used as another interface.,0,0,2019,2019,0,https://github.com/philll11/Adapter_Pattern
Adapter,PlugAdapter,The American power plug is incompatible with the European power sockets. This is a Java application to simulate the use of the Adapter Design Pattern for the above problem.,0,0,2023,2023,1,https://github.com/chrisMasoud/PlugAdapter
Adapter,java-adapter-pattern,Design pattern adapter dùng để chuyển đổi 2 đối tượng có các tính chất khác nhau về cùng một loại thông qua các interface và tính đa hình,0,0,2020,2020,1,https://github.com/LongHuu100/java-adapter-pattern
Adapter,Customization-of-Design-Patterns,"This research paper delves into the realm of software design patterns, focusing specifically on the customization of three fundamental patterns: the Adapter, Observer, and Factory Method patterns.",0,0,2024,2024,1,https://github.com/ShaheerAshraf/Customization-of-Design-Patterns
Adapter,AdapterPattern,"AdapterPattern Project: A Windows Forms application demonstrating the Adapter Design Pattern. It provides a new interface (INewMath) for an existing class (ExistingMathAdaptee) without modifying it. Features include average and minimum computations using arrays, with added functionality for rounded averages.",0,0,2024,2024,1,https://github.com/tunkashwinraj/AdapterPattern
Adapter,OnlineShoppingDemo,"An Android app that shows the usage of adapters, design patterns and some common features in Kotlin.",0,0,2019,2019,1,https://github.com/leonsoh/OnlineShoppingDemo
Adapter,Adopting-TDD,A basic app using TDD approach with Adapter and Decorator Design Patterns for testing decoupled threading logic.,0,0,2021,2021,1,https://github.com/Omair31/Adopting-TDD
Adapter,Structural-DesignPattern-Swift,"This Repository includes structural design pattern in swift which includes Adapter , Bridge , Composite , Decorator , Facade , Flyweight & Proxy .",0,0,2020,2023,2,https://github.com/dvvaliya369/Structural-DesignPattern-Swift
Adapter,simple-gui-builder,"A simple GUI builder application implemented to showcase Adapter, Singleton and Abstract Factory Design Pattern in action.",0,0,2022,2025,0,https://github.com/smmehrab/simple-gui-builder
Adapter,hexagonal-arch-lerrning,"Api onde aplico conceitos de DDD, Clean Architecture, Hexagonal Architecture (Ports and Adapters), Design Patterns e Solid.",0,0,2024,2024,1,https://github.com/jovijovi-john/hexagonal-arch-lerrning
Adapter,Design-Patterns,"Design Patterns in JavaScript are reusable solutions to common coding problems. They help structure code for better readability and maintainability. Common patterns include Creational (e.g., Singleton), Structural (e.g., Adapter), and Behavioral (e.g., Observer). Using these patterns improves scalability and efficiency in software design.",0,0,2024,2024,1,https://github.com/Den4ik150/Design-Patterns
Adapter,clean-code-clean-architecture-course,"Tudo sobre Clean Code, Refactoring, TDD, OO, Ports and Adapters, Clean Architecture, DDD, SOLID e Design Patterns",0,1,2022,2022,1,https://github.com/victorreinor/clean-code-clean-architecture-course
Adapter,SDP_Final,"A Pizza ordering application with usage of 6 Software design patterns. [ Adapter, Strategy, Observer, Singleton, Factory, Decorator] .",0,0,2023,2023,1,https://github.com/YasarMushtaq1/SDP_Final
Adapter,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Adapter,logging_adapter_example,"This repo gives an example of adapter design pattern with a spring boot app, an adapter written in python and promtail-loki-grafana to capture the logs with docker compose.",0,0,2023,2023,1,https://github.com/f0rkb0mbZ/logging_adapter_example
Adapter,port_and_adpaters_ca_design_patterns_frontend,"Todo List (frontend) para estudo de aplicação de conceitos como Clean Code, Clean Architecture, Ports and Adapters e design patterns",0,0,2022,2022,1,https://github.com/alemaocastro1986/port_and_adpaters_ca_design_patterns_frontend
Adapter,ParkingGarageApplication-Project,Software Projects with design pattern and using OOP design principles and care about SOLID principles using Java,0,0,2022,2024,1,https://github.com/Abdallah-Helal/ParkingGarageApplication-Project
Adapter,Nodejs-Design-Patterns-Virtual-File-System,This Repo Related to Creating A Virtual File System Using Adapter Design Pattern As Wrapper and caching Values in Memory Using Map Data Structure,0,0,2021,2021,1,https://github.com/eslamelkholy/Nodejs-Design-Patterns-Virtual-File-System
Adapter,Encoder_Decoder_Qt,"A Qt desktop application that encodes and decodes text input using the strategy, adapter, and singleton design patterns.",0,0,2021,2021,1,https://github.com/dsamt/Encoder_Decoder_Qt
Adapter,java_paint_clean_code,"Java Swing paint application demonstrating principles of Clean Code and Design Patterns (MVC, Adapter, Command, Observer, Strategy, Prototype))",0,0,2022,2023,2,https://github.com/NatalijaGajic/java_paint_clean_code
Adapter,Reengineering,"Paint application. Design patterns used in the project - MVC, Adapter, Command. Functionality: Undo/Redo, Java Logging and Serialization.",0,0,2018,2018,1,https://github.com/DaniloBojovic/Reengineering
Adapter,ModelisationStarcraft,"UML modeling exercise with a starcraft like game, with implementation of design patterns (strategy, bridge, singleton, adapter, etc.)",0,0,2015,2017,1,https://github.com/rbello/ModelisationStarcraft
Adapter,payments-api,"API Rest para pagamentos utilizando os Design Patterns Strategy, Adapter e Singleton para maior organização, manutenção e legibilidade.",0,0,2025,2025,1,https://github.com/1devsantos/payments-api
Adapter,designpatterns,"Design Patterns in Java This repository contains implementations of various Object-Oriented Design Patterns in Java. These patterns provide reusable solutions to common software design problems and are essential for writing scalable, maintainable, and flexible code.  Included Design Patterns: Adapter Pattern Enables incompatible interfaces to work ",0,0,2019,2025,1,https://github.com/helloravisha/designpatterns
Adapter,CW5AdapterPractice,This is classwork 5(CW5) for CSCI 352 at UTM. This is a C# program showing the use of the Adapter design pattern including a UML diagram via a Dia file.,0,0,2023,2023,1,https://github.com/EdwardCoom/CW5AdapterPractice
Adapter,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Adapter,MultipleService,"This is an example how to collect data from multiple services. It is implemented using TDD, Adapter design pattern.",0,0,2021,2022,1,https://github.com/hoang2109/MultipleService
Adapter,Calculator-flutter," A simple Flutter project (Calculator) with the usage of six Software Design Patterns [ Adapter, Strategy, Observer, Singleton, Factory, Decorator] . ",0,0,2023,2023,1,https://github.com/YasarMushtaq1/Calculator-flutter
Adapter,CasaDasDelicias,"Uso dos Design Patterns Facade, Singleton, Template Method, Adapter e Decorator em projeto que representa a produção de salgados.",0,0,2020,2023,1,https://github.com/Gwolner/CasaDasDelicias
Adapter,Abstracter-eCommerce,Using the design patterns Abstract Factory and Adapter I made one console eCommerce on Java This is one practice ,0,0,2016,2016,0,https://github.com/R0bb0tx/Abstracter-eCommerce
Adapter,Software-Design-Pattern,"Drawing tool by applying composite, state, command, observer, adapter, expert, controller, and iterator software design patterns using Java AWT.",0,0,2020,2020,1,https://github.com/khushboo520/Software-Design-Pattern
Adapter,hexagonal-architecture,POC to demonstrate the implementation and efficiency of the Ports and Adapter (Hexagonal) design pattern in large Enterprise Applications,0,0,2023,2023,1,https://github.com/Altaris33/hexagonal-architecture
Adapter,movies,"This is demo appication for movie listing. made in MVVM design pattern, Android data binding, RxJava and Generic Adapter",0,1,2019,2019,1,https://github.com/Sharad9405/movies
Adapter,MVVM-Movie-App,"A sample app making network call to external json using MVVM architectural design pattern, Retrofit, Recyclerview, Adapter, view binding",0,0,2022,2022,1,https://github.com/aghos4306/MVVM-Movie-App
Adapter,Design-Patterns-In-Java,This shows 10 types of Design patterns with some projects to execute them. They are as follows: 1. Singleton Pattern 2. Factory Pattern 3. Decorator Pattern 4. Observer Pattern  5. Strategy Pattern 6. Adapter Pattern 7. Facade Pattern 8. Composite Pattern 9. Command Pattern 10. Interpreter Pattern,0,0,2023,2023,1,https://github.com/acshyguy/Design-Patterns-In-Java
Adapter,design-patterns-SOEN-6441,"A group project for Concordia University's SOEN 6441 -- a CLI Game (Risk) which implements quite a few design patterns such as the Adapter, Observer, Builder, Strategy and Command pattern. It also follows the best practices for programming such as using unit testing with JUnit, documentation with JavaDoc, generics and robust exception handling.",0,0,2020,2020,5,https://github.com/krsnvijay/design-patterns-SOEN-6441
Adapter,Duck-Simulator,"A console-based duck simulator following design principles. Implemented design patterns- adapter, decorator, factory, abstract factory, composite, and observer pattern",0,0,2024,2024,1,https://github.com/ShoyebWritesCode/Duck-Simulator
Adapter,Dungeon-and-Demons-Game,"A game developed following SOLID design principles and multiple design patterns(like MVC, Adapter etc) including unit testing in Junit",0,0,2023,2023,1,https://github.com/vivekananda-reddy/Dungeon-and-Demons-Game
Adapter,tams,"A TA Management System built with Spring. Utilizes a Microservices architecture and several design patterns like Builder, Decorator, Adapter, etc.",0,0,2022,2022,6,https://github.com/alifarukyucel/tams
Adapter,back-manager-payments,"Integração com Gateway de pagamentos Pagar.me, construído em clean architecture, design pattern Factory, Adapter,  Dependency Injection e demais metodologias.",0,0,2022,2022,0,https://github.com/gcboaventura/back-manager-payments
Adapter,Comprehensive-Guide-to-Design-Patterns,"A deep dive into various software design patterns that help solve recurring problems in object-oriented design. This repository explores patterns such as Singleton, Factory, Adapter, and Observer, highlighting their intent, structure, and when to apply them to create maintainable and scalable software systems.",0,0,2024,2024,1,https://github.com/Andrew256CRO/Comprehensive-Guide-to-Design-Patterns
Adapter,Electronic-Device-Adapter---Java-Implementation,"Description: A Java implementation of an Electronic Device Adapter system using the Adapter Design Pattern. This system allows different electronic devices to be plugged into standard power outlets via adapters, ensuring compatibility and safety.",0,0,2023,2023,1,https://github.com/kentrussel-dev/Electronic-Device-Adapter---Java-Implementation
Adapter,abstract-algorithms,"High level abstract code of every algorithm, data structure, and design patterns in any programming language",0,0,2018,2019,0,https://github.com/soc221b/abstract-algorithms
Adapter,GoDesignPatterns,"Go, a multi-paradigm programming language, features design patterns that allow developers to address common problems efficiently. In this course, senior developer advocate Joe Marini covers creation, structural, and behavioral design patterns. Joe begins with an overview of design patterns and design pattern categories. Then he gives you overviews and examples of several creational patterns, including builder pattern, factory pattern, and singleton pattern. He does the same for structural patterns, covering adapter patterns and facade patterns. Joe concludes with behavioral patterns such as an observer pattern and an iterator pattern.",0,0,2021,2021,1,https://github.com/cyadav18/GoDesignPatterns
Adapter,DesignPattern-Adapter,"This C# implementation demonstrates the Adapter design pattern, converting the interface of an incompatible Adaptee class to match the ITarget interface expected by the client. It shows how the Adapter class enables seamless interaction between the client and the adaptee.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Adapter
Adapter,ECommerece,"An e-commerce API that utilizes nine design patterns: FACTORY METHOD, PROTOTYPE, BUILDER, PROXY, FACADE, ADAPTER, CHAIN OF RESPONSABILITY, MEDIATOR, COMMAND",0,0,2024,2024,1,https://github.com/MunMihai/ECommerece
Adapter,Adapter-Design-Pattern-Java,"This is a simple scenario in between SD card, Micro SD card, SD Card Adapter & a laptop on how the Adapter Design pattern's execution takes place. The Java SE technology stack is used in order to develop this project",0,0,2023,2023,1,https://github.com/Sisuka2003/Adapter-Design-Pattern-Java
Adapter,Top-Games,"This application uses RelativeLayout to use cardView , displaying widgets present in RecyclerView. And use of the framework of  adapter-design-pattern  1. AdapterVIew 2. Data storage 3. Adapter ",0,0,2024,2024,1,https://github.com/sumitbhuia/Top-Games
Adapter,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
Adapter,serverless,Backend system design using Serverless Framework. Utilizing Clean Code Architecture such as Hexagonal Port and Adapter Concept along with Singleton Design Pattern.,0,0,2023,2023,2,https://github.com/kevinchanqx/serverless
Adapter,Clean-Architecture,"This project was created with SOLID principles and implementing clean architecture and design patterns such as Decorator, Observable pattern, Factory and Adapter.",0,0,2021,2021,1,https://github.com/celosotomaior/Clean-Architecture
Adapter,upgrad-patterns,"Implement an application using Spring Boot that uses five design patterns, which are as follows:  Singleton Adapter Factory Facade Chain of Responsibility",0,0,2024,2024,2,https://github.com/binhle3920/upgrad-patterns
Adapter,DP.20212.03,"Project in the Software Design Patterns course at my university. The project applies design principles, SOLID principles and design patterns such as Singleton, Strategy, Adapter, State,... to refactor the original source code to become better, easy to maintain, easy to expand.",0,0,2022,2023,5,https://github.com/HieuPham2000/DP.20212.03
Adapter,clean-node-api,"A clean and organized project with contains some features of Typescript. Futhermore, it is designed using Composite, Adapter and stuff as design patterns.",0,0,2020,2021,1,https://github.com/karlaugust1/clean-node-api
Adapter,MicroService-Design-Patterns-use-case-Amazon-Shopping-Payment,"This repository contains a use-case of Amazon Shopping Payment Microservice Architecture which is builded using Client Server Pattern, Proxy Pattern, ASYNC and SYNC Pattern, Ports and Adapter Pattern, ASYNC Messaging Pattern,  Discovery Service, Health Check Pattern, Performance Metrics pattern",0,0,2021,2025,1,https://github.com/sam253narula/MicroService-Design-Patterns-use-case-Amazon-Shopping-Payment
Adapter,final-advanced-ruby,"Jessi Febria's final project submission for ElectivesxGoAcademy Ruby Advanced class. Solving the problem, along with SOLID principle, Design pattern : Factory, Singleton, Adapter, Command",0,1,2021,2021,1,https://github.com/jessifebria/final-advanced-ruby
Adapter,DesignPatternSwift,"Most common Cocoa design patterns: Creational: Singleton. Structural: MVC, Decorator, Adapter, Facade. Behavioral: Observer, and, Memento has been implemented in this Music Album App",0,0,2016,2016,1,https://github.com/omarfaruqe/DesignPatternSwift
Adapter,Car_Rental_Management,"Exercise for design patterns (Singleton, Builder, Factory Method, Abstract Factory; Adapter, Decorator, Facade, Proxy; Iterator, Observer, State, Strategy), clean code, SOLID, DRY, KISS, YAGNI",0,0,2024,2024,2,https://github.com/19pawel970415/Car_Rental_Management
Adapter,Clean-Code-Clean-Architecture,"Um projeto com objetivo de colocar em prática conceitos como Clean Code, Refactoring, TDD, OO, Ports and Adapters, Clean Architecture, DDD, SOLID e Design Patterns",0,0,2023,2023,1,https://github.com/alexandreopc/Clean-Code-Clean-Architecture
Adapter,SuperSmashFactory,"Demonstrates OOP principles of polymorphism, inheritance, abstraction, and encapsulation, as well as the Gamma et. al. software design patterns: Abstract Factory, Template Method, and Adapter",0,0,2019,2019,1,https://github.com/webbdan1/SuperSmashFactory
Adapter,nodejs-adapter-pattern,"The Adapter pattern is a design pattern that allows two incompatible interfaces to work together by converting the interface of one object into an interface that another object expects. In the context of integrating two payment APIs in Node.js, an Adapter could be used to make calls to one API using the interface of the other API.",0,0,2023,2023,1,https://github.com/danielmarkjohn/nodejs-adapter-pattern
Adapter,java-patterns,Library containing design patterns and their implementations in Java. Plus exemplary applications of basic Java topics and various utils.,0,0,2020,2021,1,https://github.com/mzacki/java-patterns
Adapter,car-information,Android App for Cars Information without internet ( MVC pattern – SQLiteAssetHelper– Menu- Material Design Recycler view adapter - Singleton design pattern - Intents RunTime permissions –Search View - custom listeners ),0,0,2019,2019,0,https://github.com/AhmedKhozam/car-information
Adapter,Stores-management-system,Mashaal stores App: A stores management system Platform - Android  Programming language (Kotlin) Used technologies: ( Recycler view – adapter design pattern – MVVM – Room DataBase - Coroutines – Filter – Navigation Component  ),0,0,2021,2021,1,https://github.com/mahmoudmashaal157/Stores-management-system
Adapter,farm-dashboard-prototype,"A prototype for a farmer utility application built with JavaFX as an exercise in using design patterns such as entity-control-boundary, composite, visitor, and adapter",0,0,2021,2021,2,https://github.com/eolatham/farm-dashboard-prototype
Adapter,Gourmand-Restaurant-App,"Gourmand is a restaurant management and food ordering app. This repository contains the complete Design Document for the app along with UML artifacts like Domain Model, Design Model, Sequence Diagrams, Activity Diagrams, State Diagrams, Design Patterns (Observer, State, Abstract Factory, Decorator, Composite, Iterator, Template Method, Singleton, Adapter and Proxy). The MVC architecture also has been applied to the design",0,2,2017,2017,1,https://github.com/mohammedshethwala/Gourmand-Restaurant-App
Adapter,trainee-exercise-onready,"Report generating app using the Builder and Strategy design patterns. It was simply a practice challenge, and also it's my first approach towards the Ports & Adapters architecture.",0,0,2020,2021,1,https://github.com/luis-nvrr/trainee-exercise-onready
Adapter,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Adapter,registration_api,"This is a registration API for a fictitious market, with email sending through another API. Using hexagonal architecture (ports and adapters), any design patterns and also SOLID principles.",0,0,2024,2024,1,https://github.com/Only-Vitin/registration_api
Adapter,java-desing-patterns-II-loja,Repositório do curso Jornada do Conhecimento de Back-End Java (Nível Intermediário) - Design Patterns em Java II: avançando nas boas práticas de programação da plataforma Alura.,0,0,2024,2024,1,https://github.com/Robson-Teixeira/java-desing-patterns-II-loja
Adapter,DynamicMapper,Create dynamic classes with the design pattern Adapter made it with CodeDom to map two entities from different assemblies on runtime without consuming resources after the mapper is created.,0,1,2015,2017,0,https://github.com/DanielRibas1/DynamicMapper
Adapter,2D-App,"A 2d drawing application built in Java. The application was built with MVC concepts in mind. Implemented in the application are command, observer, strategy, adapter and prototype design patterns.",0,0,2021,2021,1,https://github.com/MarkoMihajlovIT51-2017/2D-App
Adapter,Final-Lab-APL,"Ikram Muhaimin 1908107010043  Kasus Yang di ambil dalam menggunakan kedua pattern ini yaitu Kasus Provider Internet (Internet Provider), Kasus ini diambil dikarenakan huruf awalan nama saya Ikram yaitu I, yang dimana dalam kasus ini Costumer dapat memilih provider internet yang sudah tersedia di dalam pattern  Design Pattern :  Strategy Pattern Design pattern ini di Implementasikan ke dalam InternetProvider Strategy(Provider.java)  Adapter Pattern Design pattern ini di Implementasikan ke dalam pemilihan provider internet(InternetAdapter.java)",0,0,2021,2021,1,https://github.com/ikrammuhaimin04/Final-Lab-APL
Adapter,legacy-adapter,"The purpose of the project is to simulate the successful transmission of customer information to a mainframe for reporting purposes. The design constraint is to use the classes that the new systems use, namely Company and Website, while at the same time having into consideration that the AS400 uses the archaic LegacyCustomerUtil, which only accepts as parameter a LegacyCustomer. To achieve the goal, I have implemented the Adapter design pattern, which is a Structural GoF pattern to ""convert the interface of a class into another interface clients expect"".",0,0,2015,2015,1,https://github.com/percyvega/legacy-adapter
Adapter,artistgraph,"My OOP Semester Project- Artist Graph. Pulls data from MongoDB and Discogs API to generate graph with artist nodes and collaborators. Implements design patterns such as Adapter, Bridge, and Decorator.",0,0,2022,2022,1,https://github.com/liezlbl/artistgraph
Adapter,RealTimeChatApp,"A real-time chat application implemented in Java, demonstrating the use of design patterns such as Observer, Singleton, and Adapter. Focuses on SOLID principles, defensive programming, and global best practices.",0,0,2024,2024,1,https://github.com/Nirjhar003/RealTimeChatApp
Adapter,Weather-Monitoring,"Java-based weather monitoring system with a GUI, implementing Singleton, Factory, Adapter, Builder, and Proxy design patterns for efficient data management, object creation, source integration, report construction, and access control.",0,0,2024,2025,1,https://github.com/MariamIsmaeil/Weather-Monitoring
Adapter,Design-Pattern-Back-End,"An application which allow the client to command a pizza. This application is built using four design patterns which are Observer pattern, Adapter pattern, Abstract Factory pattern and Dependency Injection.",0,0,2022,2022,1,https://github.com/AmineLhb/Design-Pattern-Back-End
Adapter,Facebook-features-app-using-Facebook-API,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.  ",0,1,2019,2019,1,https://github.com/AndrewSergeev/Facebook-features-app-using-Facebook-API
Adapter,Design-Pattern,"In this repository, I’ve implemented three key design patterns in Python: Factory, Prototype, and Adapter. These patterns make the code more flexible, reusable, and scalable for solving complex problems.",0,0,2024,2024,1,https://github.com/AdrikaPanwar/Design-Pattern
Adapter,Purspot.Personalkollen.Core,"Personalkollen thirdpary integration middleware API developemt  SOLID principle, Design patterns(Adapter Pattern, Decorator Pattern), .Net 6, Web API ,API hosted in Azure PAAS WebApps and .Net 6 class libraries, Git and ",0,0,2022,2022,1,https://github.com/NirmalSamaranayaka/Purspot.Personalkollen.Core
Adapter,2-source-weather-app,"Written in TypeScript and React, this app displays weather forecast for a given coordinates enabling user's to switch between two different data sources. The project uses the Adapter design pattern. ",0,0,2022,2022,1,https://github.com/pizgo/2-source-weather-app
Adapter,Payment-Gateway,"Gateway de Pagamento utilizando Node.js. Utiliza o conceito de Adapter (Design Pattern). A solução para pagamento do projeto é o Pagar me. Para mais informações, recomendo ler o README.md.",0,0,2024,2024,1,https://github.com/patrick-cuppi/Payment-Gateway
Adapter,movie-tv-app-,"Android movies fetching app using some features as Fetching data using AsyncTask and APIs, JSON Parsing, Collection views and Adapters, Content Provider/SQL, Multi-Fragment Tablet UI and Observer Design Pattern.",0,0,2016,2017,0,https://github.com/beshoy-samy/movie-tv-app-
Adapter,Java-MachineLender-Application-Refactor,"Machine rental system. Implemented a One Time Password(OTP) security feature along with refactoring of code to reduce duplication and adding some design patterns such as facade, builder and adapter pattern",0,0,2021,2021,5,https://github.com/CantonCode/Java-MachineLender-Application-Refactor
Adapter,BritishPub,"Este projeto tem objetivo de gerenciar Pub's (típico bar inglês), com método de Design Pattern: Ports and Adapters e utilizando C# como linguagem de programação - Contém as seguintes classes: Pedido e Cliente",0,0,2023,2023,1,https://github.com/gaturama/BritishPub
Adapter,labo_02,"Exemple d'utilisation de trois design pattern au sein d'une application symfony, adapter => pour découpler l'application de doctrine, observer => pour la gestion des événements et decorateur => pour décharger la responsabilité des controller.",0,0,2019,2020,0,https://github.com/robinmoquet/labo_02
Adapter,dotnetcore-api-architecture,"An sketch to develop applications using Fowler N-Tier architecture with Transaction Script organization. This project uses ASP .NET Core as a framework and some Design Patterns such as Repository, DI, Facade and Adapters.",0,0,2020,2021,2,https://github.com/luafalcaocode/dotnetcore-api-architecture
Adapter,Hexagonal-Arquiterture,"The Hexagonal Architecture, also known as the Ports and Adapters Architecture or the Clean Architecture, is a software design pattern that emphasizes the separation of concerns and the decoupling of components in an application. ",0,0,2023,2023,1,https://github.com/EdwardMelendezM/Hexagonal-Arquiterture
Adapter,Collivery-V3-Courier-Api,"The package provides an easiest and elegant way to integrate with V3 Collivery.net API while using best practices and design patterns like Singleton and Adapter pattern, and handle all communication as well as caching.",0,0,2023,2023,1,https://github.com/Magnificent-Big-J/Collivery-V3-Courier-Api
Adapter,AP1-FlightSimulator-CommunicationAndSearchAlg,Used SOLID principles (such as single responsibility & open/close) and design patterns (such as Object Adapter & Bridge patterns) to create a generic server for problem-solving and to use this server for implementing search algorithms.,0,1,2019,2021,1,https://github.com/israelElad/AP1-FlightSimulator-CommunicationAndSearchAlg
Adapter,UserProfilesProject,"A little test project illustrating dependency injection with hilt, retrofit2, glide, databinding, binding adapters, paging 3, navigation and navigation animation, view models, Kotlin extension functions, Kotlin flow, Kotlin coroutines, and LiveData leveraged within the MVVM design pattern.",0,0,2021,2021,1,https://github.com/GameOfAndroids/UserProfilesProject
Adapter,Adaptor_pattern,"The Adapter pattern is a structural design pattern that allows objects with incompatible interfaces to work together. It acts as a bridge between two incompatible classes, converting the interface of one class into another interface that clients expect",0,0,2023,2023,1,https://github.com/katkaryk/Adaptor_pattern
Adapter,Object-Oriented-Programming,"Comprehensive resource on OOP principles (Encapsulation, Inheritance, Polymorphism, Abstraction), advanced concepts (Interfaces, Abstract Classes, Nested Classes, Lambda Expressions, Generics), and design patterns (Singleton, Factory, Adapter, Strategy). Includes detailed docs, Java/C++ code examples, diagrams, and exercises. Contributions welcome!",0,1,2024,2024,1,https://github.com/HarshalMPatil20/Object-Oriented-Programming
Adapter,214-prac5,"This repository contains the code for a Smart Home Automation System using 4-5 design patterns which are Composite, Adapter, Command, Observer, and Iterator. The project supports device control, legacy device integration, automation routines, sensor notifications, and efficient device management.",0,0,2024,2024,2,https://github.com/thendombedzi/214-prac5
Adapter,CSE-308-Software-Engineering-Sessional,"This sessional course corresponds to the theory course CSE 307 taught by BUET CSE department at Level 3- Term 1.  This course includes code implementation of widely used different software design patterns, such as Adapter, Builder, Composite, Observer, Mediator etc.",0,0,2023,2023,1,https://github.com/SaffatZabin-17/CSE-308-Software-Engineering-Sessional
Adapter,Weather-Monitor,"Weather Monitor for key areas in Melbourne. Application consumes two SOAP web services. Written in JavaFX, and uses some key design patterns and principles (e.g Abstract Factory, Abstract server, Adapter pattern, Observer pattern open-closed principle, Dependency inversion, etc.)",0,0,2017,2024,2,https://github.com/gwom5/Weather-Monitor
Adapter,design-pattern,"Explore and implement the 23 GoF design patterns in C#. Features detailed C# examples and explanations to help programmers enhance their .NET projects with elegant, scalable designs. Dive into object-oriented design and improve your software architecture skills.",0,0,2024,2025,1,https://github.com/faisalcse1/design-pattern
Adapter,DesignPattern,"This C# repository demonstrates various design patterns with practical examples. It covers Creational (Singleton, Factory Method), Structural (Adapter, Decorator), and Behavioral (Observer, Strategy) patterns. Each pattern is illustrated with a simple example to highlight its use and benefits. To use, clone the repository.",0,1,2024,2024,2,https://github.com/Dharma-DX/DesignPattern
Adapter,android_task_manager,"a local android task manager application use ORM Green dao database with users and tasks and used many design patterns such as singleton and repository and adapter , login page for sign up and handle forget password by send password to the email account.",0,0,2019,2019,1,https://github.com/sepehrsadri/android_task_manager
Adapter,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Adapter,Ei-Coding-Exercises,"This repository includes two Exercises. The first demonstrates six design patterns: Observer, Strategy, Singleton, Factory, Decorator, and Adapter with clean code and logging. The second is a console app for astronaut schedules, using Singleton, Factory, and Observer patterns, featuring task management with logging and error handling.",0,0,2024,2024,1,https://github.com/irus987/Ei-Coding-Exercises
Adapter,Library-mangment-system-pattern-educational-demo,"This project is a Library Management System utilizing various design patterns like Singleton (for database connection and logging), Prototype (for cloning books), Factory (for book creation), Adapter (for integrating external books), Builder (for constructing books), Proxy (for adding security and logging), and Command (for book transactions).",0,0,2024,2024,1,https://github.com/mohammedsalama0/Library-mangment-system-pattern-educational-demo
Adapter,QMAC,This project was developed using C# and Windows Presentation Foundation. It is my first official WPF application and my first time using the MVVM design pattern. It gives you the ability to get quickly get the MAC address for the network adapter that is currently active.,0,0,2015,2015,1,https://github.com/AlbertoMonteiro/QMAC
Adapter,Object_Oriented_Design_Project,"The aim of this project was to familiarise with OOP design patterns, such as Factory, Builder, Adapter, Iterator, Command, Memento, etc. and learn useful C# features (reflection, serialization, interfaces, data structures). It was carried out as part of the course ""Object Oriented Design"" at the Warsaw University of Technology.",0,0,2023,2023,1,https://github.com/Bakaczor/Object_Oriented_Design_Project
Adapter,JavaFXPatientsManagement,"An app that manages appointments and patients. Interface can be graphical (JavaFX) or via console, depending on the selected run configuration. Repository is selected via properties file: text file, binary file, sql database or in-memory. Added interfaces, testing, custom exceptions, entity validators, factory and adapter design patterns.",0,0,2023,2023,1,https://github.com/VictorSalajan/JavaFXPatientsManagement
Adapter,ElectronicShopWebAPI,"This is a WebAPI design pattern and object-oriented programming project using c#. The design Patterns used are: The chain of responsability pattern to check if the product is acceptable or not depending if it is a laptop or a phone,  The Factory method pattern to create new products and the Adapter pattern to convert the product into Excell, JSON and XML files. The dependancy injection is also used in the project as well as the code first approach. The database used is the PostgreSQL database.",0,0,2022,2022,1,https://github.com/Joebsn/ElectronicShopWebAPI
Adapter,HemenBilet,"HemenBilet is a collaborative flight ticket reservation web app that streamlines flight search, comparison, and booking with user-friendly interfaces and integrated flight data and pricing.  The technologies used include ASP.NET, SQL, HTML, CSS and JavaScript, and design patterns such as Factory, Adapter, Repository and Strategy have been applied.",0,0,2025,2025,1,https://github.com/eminegocer/HemenBilet
Adapter,Django-Webapp,"This is a scalable web application which supports an online booking and payment system and uses Django, SQLite, Stripe & Google Analytics. The purpose of this project is to showcase the use of the listed software design patterns. 1. Observer 2. Decorator 3. State Design 4. MVT 5. Factory Method 6. Template Method 7. Iterator Method 8 Adapter Method 9. Chain of Responsibility",0,0,2020,2020,1,https://github.com/David-Bromell/Django-Webapp
Adapter,Media-Player-App,"This app was created for a course in Object-Oriented Design. The goal of the project was to use all three types of design patterns (creational, behavioral, and structural) to create a desktop application. The Media Player App implements the singleton pattern for creation of the GUI, iterative pattern for song traversal capabilities, and two-way adapter pattern to provide computational support for both .mp3 and .wav audio file formats.",0,0,2017,2017,1,https://github.com/robynsilber/Media-Player-App
Adapter,MVC-Europe-home,"1, the use of MVC design patterns to achieve the page view, model and controller of the separation, division management. 2, in order to facilitate the development of the project, encapsulates a MVC closure framework for inter module reference, save the object collection, page output, improve code reusability and maintainability; 3, the use of MVC framework, split the page according to the function of view, each region corresponds to a separate model and controller, easy to maintain and modify, easy to manage 4, use the adapter mode to adapt the interface of the class / object to the interface of class / object, and solve the problem of incompatibility between interfaces Using behavioral design patterns to solve the coupling problem between modules and objects",0,0,2017,2017,1,https://github.com/blanchecyan/MVC-Europe-home
Adapter,Tema2-PAO," Please choose 2 of the following design patterns to implement in java: 1. factory method 2. strategy  3. proxy 4. adapter 5. facade  You can choose whichever objects you like to implement it.(Cats, Dogs, Cars, Employers, A, B, C,...) Create a command line interface to showcase the usage of the implementation.  Google is your friend and will explain each of the patterns(we did builder in class). However, please try to understand how they work.   Deadline: April 6th",0,0,2022,2022,1,https://github.com/alexion2001/Tema2-PAO
Adapter,Universal-Memories,"This repository contains the files that that were used for my Object Oriented Design term project for the Spring 2017 semester. The goal of this project was to create a text based game in Swift that would encompass Objected Oriented Design patterns. The patterns I used in this game were Adapter, Decorator, Command, and Pattern. As for the story of the game, the player has to work regain his memories by traveling to different universe through portals.",0,0,2017,2018,1,https://github.com/Kryptic-Ken/Universal-Memories
Adapter,Advanced-Software-Development---JAVA-MICROSERVICES,"The course target:: Advanced Software Development JAVA MICROSERVICES Course To cover the gap between the academia and the industry in Israel high-tech industry market 1. To give the relevant tools to build and develop an E2E application ( RPC - Application Servers (web application server ) , Docker , K8, Mongo DB ,Postman ) 2. To provide a serious and a heavy programming background ( Java language) ,the newest technologies (Java 8 & 9, Maven ,Jenkins , Restful , JPA , ORM , HTML ,CSS , JS) and the latest frameworks which are used in the industry (Spring , NoSQL , Swagger, Angular/React ,Lombok) 3. To implement the relevant Programming Design patterns like Singleton ,MVC, Factory , Abstract , Adapter , Facade , Composite , Visitor ,Proxy ,Iterator and the newest programming concepts & architectures (modularity , loose coupling, Microservices )",0,0,2022,2023,1,https://github.com/ahmadsb/Advanced-Software-Development---JAVA-MICROSERVICES
Bridge,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Bridge,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Bridge,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Bridge,design-patterns-in-angular,Deprecated | new project: https://github.com/Itchimonji/design-patterns-in-typescript,40,15,2020,2025,0,https://github.com/Itchimonji/design-patterns-in-angular
Bridge,dotnet-design-patterns-samples,The samples of .NET design patterns,37,11,2017,2025,2,https://github.com/AliakseiFutryn/dotnet-design-patterns-samples
Bridge,ETLC_ApexBridge,ETLC_ApexBridge: Lightning Components Communicating With Apex Design Pattern,25,9,2016,2023,3,https://github.com/eltoroit/ETLC_ApexBridge
Bridge,BridgePattern,Source code for the Bridge Design Pattern in C# Pluralsight course,20,18,2020,2024,1,https://github.com/vkhorikov/BridgePattern
Bridge,DesignPatternsExamples,"A project constructed with the purpose of applying design patterns to examples within Unity, in a gamified context. The goal is to reinforce knowledge and use it as a readily accessible bridge for replicating these designs in my day-to-day life as a developer.",18,6,2023,2024,2,https://github.com/Naandoo/DesignPatternsExamples
Bridge,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Bridge,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Bridge,Bridge-Design-Pattern,Bridge Design Pattern,13,0,2019,2024,1,https://github.com/akshayblevel/Bridge-Design-Pattern
Bridge,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Bridge,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Bridge,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Bridge,Bridge-Pattern-Sample,A very easy to understand sample of Bridge design pattern in C#.,9,1,2019,2024,1,https://github.com/MoienTajik/Bridge-Pattern-Sample
Bridge,design_patterns,C++ 设计模式  Common design pattern examples:(Factory AbstractFactory Adapter Bridge Command Visistor Observer....etc),7,1,2018,2024,1,https://github.com/cf-zhang/design_patterns
Bridge,inventory-management-system,JavaFX app which implements various design patterns and oop principles.,7,0,2024,2025,1,https://github.com/yaeby/inventory-management-system
Bridge,pubsub-test-bridge,:left_right_arrow: Integration test in a pub-sub design pattern.,4,0,2014,2015,1,https://github.com/mooreniemi/pubsub-test-bridge
Bridge,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Bridge,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Bridge,Adapter-Pattern-Java,Adapter pattern works as a bridge between two incompatible interfaces. This type of design pattern comes under structural pattern as this pattern combines the capability of two independent interfaces.,4,0,2021,2022,1,https://github.com/iresh-rajitha/Adapter-Pattern-Java
Bridge,Adapter_Design2.0,The Adapter design pattern allows incompatible interfaces to work together seamlessly. It acts as a bridge between two incompatible interfaces by converting the interface of one class into another interface that a client expects.,4,0,2024,2024,1,https://github.com/samyam81/Adapter_Design2.0
Bridge,Virtual-Stock-Portfolio-Bank-Account-Management-System,"Created an Account Management System which manages a stock portfolio account and a bank account using C++ and STL *Created the capability to dynamically manage portfolios by allowing users to view price, buy shares, sell shares *Developed features to simulate bank account transactions like deposit/withdraw money and view history *Plotted variation in the value of portfolio over a period of time using MATLAB *Developed a Graphic User Interface using QT to make the whole system more User-friendly *Used Design Patterns like Bridge and Adapter to enhance the experience to ensure reusability of software",4,2,2017,2024,1,https://github.com/ramyaa412/Virtual-Stock-Portfolio-Bank-Account-Management-System
Bridge,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Bridge,Design-Patterns,Bu repoda Yazılım Tasarımı ve Mimarisi dersi ile paralel yürüttüğüm Desing Patterns ile ilgili çalışmalarım ve patternslar ile ilgili notlarım bulunmaktadır.,3,0,2021,2023,1,https://github.com/emirhandogandemir/Design-Patterns
Bridge,Bridge-Structural-Design,"This repository showcases an implementation of the Bridge structural design pattern in Java, demonstrating how it decouples abstraction from implementation for flexible and independent variations.",3,0,2024,2024,1,https://github.com/samyam81/Bridge-Structural-Design
Bridge,AR-Design-Patterns-In-Swift,用Swift来实现设计模式,3,1,2018,2020,1,https://github.com/andyRon/AR-Design-Patterns-In-Swift
Bridge,SurveyTrackingSystem,"Class, use-case and activity models of survey tracking system. Used factory, strategy, bridge and composite design patterns also.",3,0,2021,2023,1,https://github.com/eneskzlcn/SurveyTrackingSystem
Bridge,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Bridge,dp-structural-bridge,Bridge is a structural design pattern that divides business logic or huge class into separate class hierarchies that can be developed independently.,2,4,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-structural-bridge
Bridge,Bridge-Pattern-in-Swift,Simple bridge design pattern written in Swift,2,0,2022,2025,1,https://github.com/HappyIosDeveloper/Bridge-Pattern-in-Swift
Bridge,Bridge,"Código personalizado por mim, feito com base no curso de Design Patterns do Rodrigo Gonçalves Santana na udemy.",2,0,2024,2024,1,https://github.com/Medeiroshenrique/Bridge
Bridge,design-patterns,Examples for design patterns,2,1,2022,2024,1,https://github.com/Jovidon/design-patterns
Bridge,designpattern4devs-bridge-composite-patterns-2022-09-29,Repositório sobre a aula dos design patterns da classificação estrutural bridge e composite,2,1,2022,2024,1,https://github.com/rocketseat-creators-program/designpattern4devs-bridge-composite-patterns-2022-09-29
Bridge,befitting-advice-51,HoodieFoodie (Online Food Delivery App); to form a bridge between customer and restaurant; to cater the issue of delivering food to the doorstep of customer; fully functional with MVC design pattern in Spring Boot; handled all type of exception; used JPA and JPQL ; lombok and swagger; db relationship; Register_LogIn_Out;,2,3,2022,2023,4,https://github.com/sgrprmnk/befitting-advice-51
Bridge,TheGame,"This document describes the team work assignment for Telerik Academy students studying Object-Oriented Programming (OOP) – February 2014. Project Description Design and implement an object-oriented Role Playing Game by choice. Here are some suggestions: -	The world can be fantasy, sci-fi, modern, etc. -	You may have one or more heroes, gaining experience, having skills, wearing items, etc. -	You may have one or more players, fighting against a computer or against each other -	You may have enemies like creatures, machines, warriors, etc.  -	You may have items like swords, guns, armor, space-suits, etc. -	You may have skills like double-damage, teleportation, etc.  General Requirements Please define and implement the following object-oriented assets in your project: •	At least 5 interfaces (with one or more implementations) •	At least 15 classes (implementing the application logic) •	At least 3 abstract class (with inheritors) •	At least 1 exception class (with usage in your code) •	At least 3 levels of depth in inheritance •	At least 1 polymorphism usage •	At least 1 structure •	At least 1 enumeration •	At least 1 event (with subscribers) •	At least 1 design pattern (e.g. Composite, Singleton, Factory, Wrapper, Bridge, Command, Iterator, …) You might read about design patterns in Wikipedia, Sourcemaking, DoFactory and others. Additional Requirements •	Follow the best practices for OO design: use data encapsulation, use exception handling properly, use delegates and events like it is recommended in MSDN, use inheritance, abstraction and polymorphism properly, follow the principles of strong cohesion and loose coupling. •	Obligatory use Git to keep your source code and for team collaboration (you might use https://github.com/). TFS or SVN are not allowed. Use Git. •	Provide a class diagram (to visualize all types). Optional Requirements If you have a chance, time and a suitable situation, you might add some of the following to your project: •	Static members (fields, properties, constructor, etc.) •	Constants, generic types, indexers, operators •	Lambda expressions and LINQ •	Implementation of IEnumerable<T>, ICloneable, ToString() override •	Namespaces (if your classes are too much)  •	User interface (UI) – console, graphical, web or mobile Non-Required Work •	Completely finished project is not obligatory required. It will not be a big problem if your project is not completely finished or is not working greatly. This team work project is for educational purpose. Its main purpose it to experience object-oriented modeling and OOP in a real-world project and to get some experience in team working and team collaboration with Git.  Deliverables Put the following in a ZIP archive and submit it (each team member submits the same file): •	The complete source code. •	Brief documentation of your project (2-3 pages). It should provide the following information (in brief): o	Team name and list of team members o	Project purpose – what problem do you solve? o	Class diagram of your types o	The URL of your Git repository o	Any other information (optionally) •	Optionally provide a PowerPoint presentation designed for the project defense. Public Project Defense Each team will have to deliver a public defense of its work in from of the other students and trainers. You will have only 10 minutes for the following: •	Demonstrate the application (very shortly). •	Show the class diagram (just a glance). •	Show the source code in the Git web-based source code browser. •	Show the commits logs to confirm those team members who have contributed. •	Optionally you might prepare a PowerPoint presentation (3-4 slides). Please be strict in timing! Be well prepared for presenting maximum of your work for minimum time. Bring your own laptop. Test it preliminary with the multimedia projector. Open the project assets beforehand to save time. You have 10 minutes, no more. Give Feedback about Your Teammates You will be invited to provide feedback about all your teammates, their attitude to this project, their technical skills, their team working skills, their contribution to the project, etc. The feedback is important part of the project evaluation so take it seriously and be honest.",2,3,2014,2019,1,https://github.com/TeamSazerac/TheGame
Bridge,design-pattern-bridge,Want to learn more about design patterns in Java? Check out this post to learn more about how to use the bridge design pattern in this tutorial.,1,3,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-bridge
Bridge,Design-Patterns-Bridge,Design Patterns-Bridge,1,0,2022,2022,1,https://github.com/Jacky0624/Design-Patterns-Bridge
Bridge,bridge_pattern,Bridge Design Pattern in Java,1,0,2018,2019,1,https://github.com/parsa-JPM/bridge_pattern
Bridge,Bridge-Design-Pattern,Bridge Design Pattern In C++,1,1,2020,2022,1,https://github.com/Coding4life92/Bridge-Design-Pattern
Bridge,DesignPattern-Bridge,Example implementation of Bridge design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Bridge
Bridge,ITStep.DesignPatterns,I implemented a Bridge design pattern,1,0,2022,2023,1,https://github.com/AmirkhanSalimgerey/ITStep.DesignPatterns
Bridge,Design-pattern,"Design pattern Cos, bridge, and adapter",1,0,2023,2023,1,https://github.com/ivananassar/Design-pattern
Bridge,csci426-bridge,Sample code for the Bridge design pattern,1,0,2015,2015,1,https://github.com/falkzach/csci426-bridge
Bridge,bridged-design-patterns,See example of bridged design pattern in go,1,0,2024,2024,1,https://github.com/bujosa/bridged-design-patterns
Bridge,java_bridge_pattern,"Exemplo de utilização do design pattern ""Bridge"" em Java",1,0,2011,2014,1,https://github.com/fpierin/java_bridge_pattern
Bridge,bridge-command-design-patterns,Example of implement two design patterns: bridge and command,1,0,2019,2019,1,https://github.com/mr-ramirez/bridge-command-design-patterns
Bridge,Multi-User-Chat-Room-JAVA-,"JAVA Design patterns: mediator, bridge, singleton, factory, observer.",1,0,2012,2013,1,https://github.com/yaxing/Multi-User-Chat-Room-JAVA-
Bridge,bridgedesignpattern,A .NET Core C# console application to implement the Bridge Design Pattern,1,0,2020,2023,1,https://github.com/technicalbundle/bridgedesignpattern
Bridge,DesignPatterns-GOF,"Gang of four Design Pattern Implementation (Will keep adding)(Contains Bridge implementation,)",1,0,2019,2024,1,https://github.com/Anish407/DesignPatterns-GOF
Bridge,simple-bridge-java,A simple example of how to implement the Bridge design pattern in Java,1,0,2023,2024,1,https://github.com/sean-campbelltech/simple-bridge-java
Bridge,SimpleBridgeCSharp,A simple example of how to implement the Bridge design pattern in C#,1,0,2023,2024,1,https://github.com/sean-campbelltech/SimpleBridgeCSharp
Bridge,design_pattern_bridge,"Develop a system that uses the pattern given in class. ""Bridge"" design pattern. ",1,0,2021,2024,1,https://github.com/sc0v0ne/design_pattern_bridge
Bridge,Design-Patterns-Csharp,Estudo de Design Patterns com C#,1,1,2020,2024,1,https://github.com/thiago-roock/Design-Patterns-Csharp
Bridge,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Bridge,Design-Patterns,"This project implements an arithmetic expressions evaluator using the Composite-, Bridge-, Iterator-, Strategy-, Factory-, Interpreter- and Visitor-Pattern.",1,0,2018,2022,1,https://github.com/MHaselmaier/Design-Patterns
Bridge,design-patterns,"Disponíveis exemplos de padrões de projetos em Java, como SOLID, Factory Method, Abstract Factory, Builder, Bridge, entre outros.",1,0,2023,2024,1,https://github.com/ThaliaLevy/design-patterns
Bridge,design-patterns-library,"Sistema bibliotecário com padrões de projetos Strategy, Null objects, Hook methods, Bridge, State e Observer.",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library
Bridge,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Bridge,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Bridge,bridge-design-pattern,"Ce projet implémente le design pattern Bridge en Java à travers un cas pratique : un système de contrôle d’appareils électroniques (TV, Radio) à l’aide de télécommandes (Simple et Avancée).",1,0,2025,2025,1,https://github.com/ElazzouziHassan/bridge-design-pattern
Bridge,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Bridge,Intro-To-Bridge-Design-Pattern,Bridge is a structural design pattern that lets you split a large class or a set of closely related classes into two separate hierarchies—abstraction and implementation—which can be developed independently of each other,1,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Bridge-Design-Pattern
Bridge,Property-Pal,"Property-Pal is a tenant/property management app with the mission of bridging the gap between tenants and landlords. Built using Rails, Ruby, Postgresql, and MVC design patterns.",1,1,2018,2018,3,https://github.com/Universe-Man/Property-Pal
Bridge,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Bridge,Masai-Restaurant-RestFull-API,The Fodie Express(Online Food Delivery App);to form a bridge between customer and restaurant; to cater the issue of delivering food to the doorstep of customer; fully functional with MVC design pattern in Spring Boot; handled all type of exception; used JPA and JPQL ; lombok and swagger; db relationship; Register_LogIn_LogOut;,1,0,2023,2023,1,https://github.com/Nitesh314/Masai-Restaurant-RestFull-API
Bridge,Bridge,Structural Design Pattern in C# | Bridge Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Bridge
Bridge,bridge,Bridge Design Pattern,0,0,2020,2020,1,https://github.com/KieranOConnell/bridge
Bridge,Bridge,Design Pattern Bridge,0,0,2022,2022,1,https://github.com/aliounemane2/Bridge
Bridge,bridge,Bridge Design Pattern,0,0,2020,2020,1,https://github.com/mydesignpatters/bridge
Bridge,Bridge,Bridge design pattern,0,0,2020,2020,1,https://github.com/brendanit/Bridge
Bridge,DP_bridge3,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_bridge3
Bridge,DP_bridge1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_bridge1
Bridge,DP_bridge2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_bridge2
Bridge,bridge,Bridge Structural Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/bridge
Bridge,Bridge,C# Design Pattern - Bridge,0,0,2018,2018,1,https://github.com/KNaka88/Bridge
Bridge,Bridge,Bridge basic design pattern,0,0,2018,2018,0,https://github.com/scyzeq/Bridge
Bridge,BridgeTest,Bridge Design Pattern,0,0,2020,2021,1,https://github.com/PaoloCatalano/BridgeTest
Bridge,BridgeDesignPattern,Structural Design Pattern,0,0,2020,2020,2,https://github.com/Bigyan123/BridgeDesignPattern
Bridge,Bridge,Example for Bridge design pattern,0,0,2022,2022,1,https://github.com/BSX8GS/Bridge
Bridge,Bridge,Bridge Structural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Bridge
Bridge,BridgeDesignPattern,Structural Design Pattern -,0,0,2017,2017,1,https://github.com/JavaDesignPatterns/BridgeDesignPattern
Bridge,Bridge,Implementando o Design Pattern Bridge,0,0,2025,2025,1,https://github.com/mariasilvano/Bridge
Bridge,bridge,Implementation of bridge design pattern,0,0,2023,2023,1,https://github.com/ignacysko/bridge
Bridge,Design-Pattern-Bridge,Design Pattern,0,0,2016,2016,1,https://github.com/aakash140/Design-Pattern-Bridge
Bridge,State_Decorator_Bridge,Design Pattern,0,0,2025,2025,1,https://github.com/funatsuya/State_Decorator_Bridge
Bridge,Bridge-Design-Pattern,Bridge Design Pattern,0,0,2019,2019,1,https://github.com/ibavli/Bridge-Design-Pattern
Bridge,DesignPatternBridge,Design Pattern Bridge,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternBridge
Bridge,Aula16042024,Bridge - Design Pattern,0,0,2024,2024,0,https://github.com/lorenzovendrame/Aula16042024
Bridge,Codigo-032---Formas-Coloridas,Design Pattern Bridge,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-032---Formas-Coloridas
Bridge,Codigo-033---Question-rio,Design Pattern Bridge,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-033---Question-rio
Bridge,BridgeDesignPattern,Bridge design pattern demo,0,0,2021,2021,1,https://github.com/rajan4study/BridgeDesignPattern
Bridge,bridge_pattern,gof design pattern,0,0,2013,2014,1,https://github.com/butislime/bridge_pattern
Bridge,Bridge,This project implements the bridge design pattern ,0,0,2021,2021,1,https://github.com/mlibasc/Bridge
Bridge,Bridge,An example of Bridge design pattern taken from the book by Dmitri Nesteruk Design Patterns in Modern C++ ,0,0,2023,2023,1,https://github.com/r-tarnowski/Bridge
Bridge,QueueBridgeDesignPattern,Design pattern practice,0,0,2017,2017,1,https://github.com/AaronZhangGitHub/QueueBridgeDesignPattern
Bridge,BridgeDesignPattern,Test using bridge design pattern,0,0,2020,2020,1,https://github.com/DDobrovolskiy/BridgeDesignPattern
Bridge,CS356-BridgeDemo,Bridge design pattern simple demo,0,0,2018,2018,1,https://github.com/bryanlferguson/CS356-BridgeDemo
Bridge,STRUCTURAL-DESIGN-PATTERN-Bridge-,STRUCTURAL DESIGN PATTERN (Bridge),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-Bridge-
Bridge,bridge-design-pattern,C# - Bridge design pattern,0,0,2023,2023,1,https://github.com/flcristian/bridge-design-pattern
Bridge,dp-bridge,Bridge Design Pattern Demo,0,0,2023,2023,1,https://github.com/rodolfofajardo/dp-bridge
Bridge,CSharpDP_Structural_Bridge,Structural Bridge Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Bridge
Bridge,bridge-pattern,Bridge design pattern example,0,0,2018,2018,0,https://github.com/astahov/bridge-pattern
Bridge,design_lab4,School - design patterns - bridge,0,0,2015,2015,1,https://github.com/DavidNr2/design_lab4
Bridge,Bridge-D.P,C# Bridge Design Pattern ,0,0,2018,2018,1,https://github.com/HarunYetgindag/Bridge-D.P
Bridge,csharp-bridge-pattern,csharp bridge design pattern,0,0,2022,2022,0,https://github.com/MarshalOfficial/csharp-bridge-pattern
Bridge,angular-bridge,Bridge design pattern example,0,0,2022,2022,1,https://github.com/Adask023/angular-bridge
Bridge,PatternBridge,Design Pattern Bridge Pattern,0,0,2019,2020,1,https://github.com/VinCleanCode/PatternBridge
Bridge,go-bridge-design-pattern,Bridge Design Pattern | Go,0,0,2023,2023,0,https://github.com/loxt/go-bridge-design-pattern
Bridge,Bridge-Design-Pattern,Java Design Pattern Bridge,0,0,2021,2021,1,https://github.com/Kensaigm/Bridge-Design-Pattern
Bridge,Design-Pattern-Bridge,Exemple Design Pattern Bridge,0,0,2022,2023,1,https://github.com/Helyion/Design-Pattern-Bridge
Bridge,designPattern-Bridge,Design Pattern Bridge - WRI,0,0,2023,2023,1,https://github.com/koctaa04/designPattern-Bridge
Bridge,Bridge-Design-Pattern,Structural Design Patterns: Bridge,0,0,2024,2024,1,https://github.com/samehesmael277/Bridge-Design-Pattern
Bridge,Bridge,design pattern associated with the software architecture discipline ,0,0,2023,2023,1,https://github.com/alvaro-veiga/Bridge
Bridge,Bridge,Exemplo de Design Pattern (Bridge) implementado em Java,0,0,2018,2018,1,https://github.com/Renan4783/Bridge
Bridge,BridgePattern,Example implementation of bridge design pattern,0,0,2016,2016,0,https://github.com/Jaco32/BridgePattern
Bridge,BridgeKata,Kata of GOF Bridge design pattern,0,0,2013,2014,1,https://github.com/ddijk/BridgeKata
Bridge,BridgeDesignPattern,Example of the bridge design pattern,0,0,2020,2020,0,https://github.com/DaniloMurer/BridgeDesignPattern
Bridge,Bridge-Pattern-in-Java,Design Patterns in Java ,0,0,2021,2021,1,https://github.com/mainulBUBT/Bridge-Pattern-in-Java
Bridge,Bridge,Example of the Structural design pattern Bridge in Java.,0,0,2016,2016,1,https://github.com/levyoav/Bridge
Bridge,Pattern_Bridge,Exemplo de Design Pattern Bridge,0,0,2022,2022,1,https://github.com/laura-c-soares/Pattern_Bridge
Bridge,bridge-pattern,Bridge design pattern - Structural pattern,0,0,2024,2024,0,https://github.com/evazquezm-developer/bridge-pattern
Bridge,CSharpDP_Structural_Bridge2,Structural Bridge Design Pattern 2nd example,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Bridge2
Bridge,Gurmenler_DesignPatternsAndSolid,"Solid Principles, Facade Design Pattern, Bridge Design Patterns with Example",0,0,2022,2022,1,https://github.com/akdemirsafak/Gurmenler_DesignPatternsAndSolid
Bridge,BridgePattern,https://refactoring.guru/es/design-patterns/bridge,0,0,2021,2021,1,https://github.com/rominamenacho/BridgePattern
Bridge,BridgeDP,Simple project that implements Bridge design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/BridgeDP
Bridge,java_gof_bridge,"design pattern ""bridge"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_bridge
Bridge,Bridge-Design-Pattern,Design Pattern with Example Code,0,0,2023,2023,0,https://github.com/nirmala-sharma/Bridge-Design-Pattern
Bridge,design-pattern-bridge,GOF bridge structural design pattern,0,1,2014,2014,1,https://github.com/a-cordier/design-pattern-bridge
Bridge,engComp.padroesDeProjeto.bridge,Bridge design pattern in java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.bridge
Bridge,bridge-design-pattern-java,bridge design pattern using java,0,0,2023,2023,0,https://github.com/kalanakarannagoda/bridge-design-pattern-java
Bridge,BridgeDesignPattern,Refactoring code with the Bridge Design Pattern,0,0,2021,2021,1,https://github.com/brendanit/BridgeDesignPattern
Bridge,NotificationServiceBasicLLD,lld using bridge design pattern,0,0,2022,2022,1,https://github.com/Nilmani24/NotificationServiceBasicLLD
Bridge,BridgeAndCommand,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/BridgeAndCommand
Bridge,BridgeDesignPattern,Demonstrating the Bridge design pattern in C#,0,0,2024,2024,1,https://github.com/BackToTech-Study/BridgeDesignPattern
Bridge,BridgeDP_FIFOCollectionExample,Simple project that implements Bridge design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/BridgeDP_FIFOCollectionExample
Bridge,BridgeONE,Structural Design Pattern exercise about the Bridge pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/BridgeONE
Bridge,php-design-patterns-bridge,PHP Design Patterns - Bridge Pattern Sample,0,1,2018,2019,1,https://github.com/rito328/php-design-patterns-bridge
Bridge,DesignPatterns-Bridge,Atividade de Design Patterns sobre Bridge,0,0,2024,2024,1,https://github.com/MattRez/DesignPatterns-Bridge
Bridge,BridgeDesignPattern,This sample was written for Bridge Design Pattern,0,0,2020,2020,1,https://github.com/anand-mcs/BridgeDesignPattern
Bridge,SampleBridgePattern,GoF Design Pattern using Bridge Pattern,0,0,2013,2014,1,https://github.com/FuruyamaTakeshi/SampleBridgePattern
Bridge,structural_design_patterns_bridge,Example structural design pattern using bridge,0,0,2022,2022,1,https://github.com/dukrl722/structural_design_patterns_bridge
Bridge,DesignPatterns,"Bridge, Flyweiht, Proxy",0,0,2020,2020,0,https://github.com/thomascanal/DesignPatterns
Bridge,BridgePattern,This is an example of the Bridge Design Pattern,0,0,2019,2019,1,https://github.com/chesterhartin/BridgePattern
Bridge,hashi,Project to study Design Pattern Bridge,0,0,2018,2018,1,https://github.com/sidneynakatani/hashi
Bridge,BridgePattern,"Ccontoh implementasi design pattern jenis Structural, yaitu Bridge Pattern",0,0,2021,2021,1,https://github.com/geryfauzi/BridgePattern
Bridge,BridgeDesignPattern,Bridge Design Pattern Basic Crud For Used Car Tender,0,0,2022,2022,1,https://github.com/ABarcin/BridgeDesignPattern
Bridge,BridgeDesignPatern,Example of bridge design pattern and OOP in Java.,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/BridgeDesignPatern
Bridge,BridgePattern-1,This is sample code snippet for Bridge Design Pattern,0,0,2015,2016,1,https://github.com/sn3g14/BridgePattern-1
Bridge,DesignPatterns-Bridge,Bridge na Pratica,0,0,2024,2024,0,https://github.com/Diego5496/DesignPatterns-Bridge
Bridge,DESIGN_PATTERN_Bridge, Source code demo cho Design Pattern Bridge,0,0,2021,2021,1,https://github.com/mirushi/DESIGN_PATTERN_Bridge
Bridge,Bridge-design-pattern,Practice problem to implement bridge design pattern,0,0,2024,2024,1,https://github.com/rohit16794/Bridge-design-pattern
Bridge,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Bridge,bridge-design-pattern,A basic implementation of Bridge Design Pattern,0,0,2018,2019,0,https://github.com/OkanUzun/bridge-design-pattern
Bridge,Bridge-Design-Pattern,Basic Bridge Design Pattern in Java Language,0,0,2021,2021,1,https://github.com/charss/Bridge-Design-Pattern
Bridge,bridge-design-pattern,Example implementation of the bridge design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/bridge-design-pattern
Bridge,bridge-implementation-exercise,Example of the 'Bridge' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/bridge-implementation-exercise
Bridge,ccdp_tugas_besar,"Pada point yang saya kerjakan adalah Builder Creational Design Pattern, Bridge Structural Design Pattern, Strategy Behavioral Design Pattern ",0,0,2024,2024,1,https://github.com/ngodingmace/ccdp_tugas_besar
Bridge,BridgeSerialize,A program to serialize a file using a design pattern,0,0,2022,2022,0,https://github.com/skaund/BridgeSerialize
Bridge,BridgeDP,This is an example codes implemented by Bridge Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/BridgeDP
Bridge,CS-5800-Bridge-Assignment,Bridge design pattern implementation for CS-5800.,0,0,2023,2024,1,https://github.com/CristopherH95/CS-5800-Bridge-Assignment
Bridge,bridge-example,An example of the structural design pattern 'Bridge',0,0,2023,2023,1,https://github.com/vladdubceac/bridge-example
Bridge,BridgeDesignDemo,A simple IOS app to illustrate the Bridge Design pattern,0,0,2017,2017,1,https://github.com/Reidweb1/BridgeDesignDemo
Bridge,bridge,This Repository I did because I wanto to learn more about bridge design pattern,0,0,2018,2018,1,https://github.com/joneng2016/bridge
Bridge,bridge,Design pattern estrutural (gof) Bridge para separar a interface do objeto de sua implementação,0,0,2021,2021,1,https://github.com/Jhow-R/bridge
Bridge,DesignPatterns-Bridge,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Bridge
Bridge,DesignPatterns.Bridge,,0,0,2024,2024,1,https://github.com/goteEND/DesignPatterns.Bridge
Bridge,DesignPatterns.Bridge,,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.Bridge
Bridge,ExamplePattern-Bridge,Example :https://dotnettutorials.net/lesson/bridge-design-pattern/,0,0,2020,2020,1,https://github.com/GermaniU/ExamplePattern-Bridge
Bridge,DesignPatterns-Bridge,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Bridge
Bridge,DesignPatterns-Bridge,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Bridge
Bridge,DesignPatterns-Bridge,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Bridge
Bridge,DesignPatterns-Bridge,,0,0,2021,2022,0,https://github.com/GabrielBronte/DesignPatterns-Bridge
Bridge,GameEngLab1,"Abstract Factory, Bridge and Proxy design patterns.",0,0,2019,2019,1,https://github.com/dionb112/GameEngLab1
Bridge,Bridge-D.P-Form-App-with-Database,C# Bridge Design Pattern Veritabanı ile uygulanışı,0,0,2018,2018,1,https://github.com/HarunYetgindag/Bridge-D.P-Form-App-with-Database
Bridge,csci426-bridge-implementation,Second Code Example for the Bridge Design Pattern,0,0,2015,2015,1,https://github.com/falkzach/csci426-bridge-implementation
Bridge,Demo.DesignPattern.Bridge,An example of bridge design pattern in C#,0,0,2023,2023,1,https://github.com/LiteObject/Demo.DesignPattern.Bridge
Bridge,Bridge-And-Observer-Patterns,Practice implementation of bridge and observer design patterns,0,0,2020,2022,1,https://github.com/tylerscottarndt/Bridge-And-Observer-Patterns
Bridge,bridge-example,Marmara University OOP Class Assignment - Bridge Design Pattern Example,0,0,2014,2014,1,https://github.com/bamasyali/bridge-example
Bridge,bridge,bridge pattern descried on https://cararuseugeniu.blogspot.co.uk/p/design-patterns-in-images.html,0,0,2016,2016,0,https://github.com/ecararus/bridge
Bridge,CE-40103-HW3-Bridge,bridge design pattern on math power and multiplication,0,0,2021,2021,2,https://github.com/moradiarmin/CE-40103-HW3-Bridge
Bridge,Bridge-and-Facade-in-Python,Using Design Patterns - Bridge and Facade in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Bridge-and-Facade-in-Python
Bridge,DesignPatterns-Str-Bridge,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Str-Bridge
Bridge,DZL_DesignPatterns_Bridge,,0,0,2024,2024,1,https://github.com/dizhilang/DZL_DesignPatterns_Bridge
Bridge,Xperiments.DesignPatterns.Bridge,A litttle implementation of Bridge pattern,0,0,2017,2017,0,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Bridge
Bridge,bridge-design-pattern,A demo highlight the bridge design pattern in Angular,0,0,2021,2021,0,https://github.com/jacheong/bridge-design-pattern
Bridge,DesignPatterns-Structural-Bridge,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Structural-Bridge
Bridge,Bridge-Email-Server,📧 Bridge Email Server Design Pattern with multi-threads,0,0,2021,2022,1,https://github.com/majdrezik/Bridge-Email-Server
Bridge,bridge-design-pattern-php,Example how to apply bridge design pattern in php,0,0,2018,2018,1,https://github.com/phpauldj/bridge-design-pattern-php
Bridge,java-training-bridge-dpattern,A simple Java example of Bridge design pattern implementation,0,0,2022,2022,1,https://github.com/miguelmmtz/java-training-bridge-dpattern
Bridge,avoid-cast-bridge-visitor,Avoid type cast with design pattern Bridge and Visitor,0,0,2017,2017,1,https://github.com/msoft/avoid-cast-bridge-visitor
Bridge,Structural-Bridge,This is a short implementation of the Bridge design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Structural-Bridge
Bridge,AppBridge,Estudos relacionados a C# - Design Patterns: (Bridge). Projeto Console Application ,0,0,2021,2021,1,https://github.com/JTBCode86/AppBridge
Bridge,CarConfigurator,Java projetct that implements the Bridge Design Pattern,0,0,2019,2022,1,https://github.com/TheodoraG/CarConfigurator
Bridge,BridgeDesign_patterns,,0,0,2019,2019,1,https://github.com/ahmedco82/BridgeDesign_patterns
Bridge,BridgeDesignPatterns,,0,0,2023,2023,0,https://github.com/AhmadZeb/BridgeDesignPatterns
Bridge,3DRender,Silk.net example to apply bridge design pattern,0,0,2024,2024,1,https://github.com/Daves2126/3DRender
Bridge,5402_Structural_Patterns_1,"Structural Design Patterns Bridge, Proxy, Adapter and Facade",0,0,2021,2021,1,https://github.com/ferdhell/5402_Structural_Patterns_1
Bridge,Bridge_Pattern_Example,A simple example of the Bridge design pattern in C#,0,0,2013,2013,1,https://github.com/randomducks/Bridge_Pattern_Example
Bridge,bridge-design-pattern,This git repository is all about the design pattern bridge.,0,0,2023,2024,1,https://github.com/cawa-dev/bridge-design-pattern
Bridge,Bridge-Design-Pattern,Simple application for understanding Bridge design pattern. (for school project),0,0,2022,2022,1,https://github.com/akkoyunseda/Bridge-Design-Pattern
Bridge,PhpDesignPatterns-Bridge,Bridge,0,0,2018,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Bridge
Bridge,File_System_Design_patterns,"A mock file system applying the different design patterns like bridge, composite and decorator design patterns",0,0,2024,2024,1,https://github.com/Robinm94/File_System_Design_patterns
Bridge,bridge-go,Source: https://refactoring.guru/design-patterns/bridge/go/example#example-0,0,0,2022,2022,1,https://github.com/fabiorubim/bridge-go
Bridge,template-and-bridge-dp,A simple implementation of bridge and template design patterns together,0,0,2023,2023,1,https://github.com/OveysSafarnejad/template-and-bridge-dp
Bridge,Design-Patterns-3---Bridge-Pattern,Assignment 3 of the Design Patterns for C++ Developers course,0,0,2018,2018,1,https://github.com/sakarisson/Design-Patterns-3---Bridge-Pattern
Bridge,bridge-pattern-exercise,Resolução de exercício para aprendizado em relação ao design pattern Bridge,0,0,2024,2024,1,https://github.com/Bruno-Venturini/bridge-pattern-exercise
Bridge,Esspresor-automat,JAVA project in which I highlight Bridge Design Pattern.,0,0,2016,2016,1,https://github.com/anapintilie/Esspresor-automat
Bridge,DesignPattern-Learning-Implementation,"Design Patterns: Bridge pattern, Factory Pattern, Facade pattern, Iterator Pattern, Visitor Pattern, Singleton pattern, Filter Design pattern ",0,0,2019,2021,1,https://github.com/MayankBatra005/DesignPattern-Learning-Implementation
Bridge,bridge-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Bridge em Java.,0,0,2023,2023,1,https://github.com/gabsgc/bridge-java
Bridge,Week-1-Homework-C-,"This Homework includes 3 projects and these projects about SOLID,  Bridge Design Pattern and Facade Design Pattern",0,0,2022,2022,1,https://github.com/gorkemcngr/Week-1-Homework-C-
Bridge,Bridge-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Bridge-Pattern
Bridge,SWE530BridgePattern,Simple Bridge Design Pattern Implementation to present at SWE 530 class,0,0,2020,2020,1,https://github.com/8hk/SWE530BridgePattern
Bridge,Lab1_DesignPatterns,"An implementation of the abstract factory, bridge and proxy design patterns",0,0,2019,2019,1,https://github.com/MartinFarrell24/Lab1_DesignPatterns
Bridge,Bridge-Design-Pattern,Implementing the bridge design pattern which is a Structural pattern using Java,0,0,2015,2015,0,https://github.com/Doaa-Ahmed/Bridge-Design-Pattern
Bridge,Bridge_DesignPattern,Quick example in C# about how to implement a Bridge Design Pattern,0,0,2024,2024,1,https://github.com/Djtv1304/Bridge_DesignPattern
Bridge,sd_bridge_pattern,Assignment for software design converting a design to a bridge design pattern,0,0,2022,2022,1,https://github.com/mnanwarmz/sd_bridge_pattern
Bridge,Design-patterns,"Paterns(ObjectPool,Bridge,NullObject,Reactor) realisation",0,0,2024,2024,1,https://github.com/NorthDice/Design-patterns
Bridge,Design-Patterns-Bridge,,0,0,2023,2023,1,https://github.com/valdenir-ziger/Design-Patterns-Bridge
Bridge,design-patterns-bridge,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-bridge
Bridge,Design-Patterns-Bridge,,0,0,2022,2022,1,https://github.com/quy1990/Design-Patterns-Bridge
Bridge,bridge-design-patterns,,0,0,2024,2024,0,https://github.com/Qeagle/bridge-design-patterns
Bridge,design_patterns__bridge,,0,0,2022,2022,1,https://github.com/catalunha/design_patterns__bridge
Bridge,bridge-design-patterns,,0,0,2024,2024,1,https://github.com/amanda-faria/bridge-design-patterns
Bridge,Structural-Design-Patterns,Bridge and Flyweight Design Patterns - Object Oriented Analysis and Design,0,0,2017,2017,1,https://github.com/ashwath30/Structural-Design-Patterns
Bridge,CS3280Assignment08,Implementing the Bridge Design Pattern from the 23 GoF Patterns,0,0,2020,2020,1,https://github.com/BenjaminTheDeveloper/CS3280Assignment08
Bridge,Notification_System,Notification_System Low-Level Design (Backend using Bridge Design Pattern),0,0,2023,2023,1,https://github.com/rahulsankla05/Notification_System
Bridge,GameCharacterDesigner,"application of some design patterns working together [Observer, Singleton, Bridge]",0,0,2023,2024,1,https://github.com/P0TAT037/GameCharacterDesigner
Bridge,Holt.DataAccessLayer,This solution is a prototype using the Bridge design pattern,0,0,2016,2016,1,https://github.com/debasser/Holt.DataAccessLayer
Bridge,lab4-ces22,Lab 4 de CES 22: Design Patterns Bridge e Factory,0,0,2022,2022,1,https://github.com/luiz-lvj/lab4-ces22
Bridge,DesignPatternExamples,"Good examples of Strategy, Adapter, Bridge and Observer Design Patterns",0,0,2020,2020,1,https://github.com/waqarbabar/DesignPatternExamples
Bridge,basicDP,"4 of basic design patterns: bridge, builder, adapter and proxy.",0,0,2018,2018,1,https://github.com/gevorgsukias/basicDP
Bridge,ShoppingApp,"Shopping app with design patterns. Design patterns such as Factory, Observer, Bridge, Memento, Decorator and Strategy Pattern were used.",0,0,2021,2021,0,https://github.com/melikeyilmaz/ShoppingApp
Bridge,design_patterns_course,delegate/bridge/visitor/decorator/iterator/composite,0,0,2018,2021,1,https://github.com/DaniilRoman/design_patterns_course
Bridge,Design-Patterns-Practice-01,"Factory method, bridge and singleton",0,0,2024,2024,1,https://github.com/PedroHFSO/Design-Patterns-Practice-01
Bridge,strategy-bridge-design-patterns,,0,0,2024,2024,0,https://github.com/zeynal-alakus/strategy-bridge-design-patterns
Bridge,Bridge-Method-Design-Patterns,,0,0,2024,2024,1,https://github.com/KAVINDAPIYUMAL/Bridge-Method-Design-Patterns
Bridge,design-patterns,"Padrões de projeto Bridge, Facade, Strategy, Singleton. Status: Funcionando.",0,0,2019,2020,1,https://github.com/MatheusZakkwylde/design-patterns
Bridge,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Bridge,DesignPatterns,"Commonly  used Design Patterns in dotnet. This repo will help you in getting Real world example for design patterns like singleton, factory, observer , bridge, etc ",0,0,2024,2024,1,https://github.com/VarunPractice/DesignPatterns
Bridge,LibraryManagementSystem,"Application built on Netbeans using JDBC Service Package, Bridge Design Pattern.",0,0,2016,2025,3,https://github.com/syed-imam/LibraryManagementSystem
Bridge,angular-design-patterns,includes bridge and light weight dependency injection patterns,0,0,2021,2021,0,https://github.com/venukalam/angular-design-patterns
Bridge,net_client_example,A UDP/TCP network client using C++ and  Bridge design pattern,0,0,2020,2020,1,https://github.com/ChipHunter/net_client_example
Bridge,Electric-car-rent-prototyp_1,Creating a console app using some of the  creational design patterns and Structural design patterns(only bridge and adapter if needed)),0,0,2020,2020,1,https://github.com/lukkristi/Electric-car-rent-prototyp_1
Bridge,java_design_patterns_bridge_mode,java设计模式_桥接模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_bridge_mode
Bridge,Design-Patterns-Factory-Proxy-Bridge,,0,0,2021,2021,1,https://github.com/Richard-Fleming/Design-Patterns-Factory-Proxy-Bridge
Bridge,Bridge-Pattern,"demonstration of the Bridge design pattern that I took from the https://github.com/iluwatar/java-design-patterns.git repository for educational purpose, i added two new classes in the process of understanding the functioning of the pattern!",0,0,2024,2024,1,https://github.com/na1tto/Bridge-Pattern
Bridge,designPatterns,A repo with a collection of design patterns,0,1,2020,2021,1,https://github.com/daniel199410/designPatterns
Bridge,TrabalhoJavaP2,"Utilizando os design patterns Bridge, Decorator, Abstract Factory, Adapter, Composite, Factory Method",0,0,2013,2013,1,https://github.com/bknupp/TrabalhoJavaP2
Bridge,Gang-of-Four-Design-Patterns,"Implementation of Design Patterns such as Adapter, Bridge, Builder etc in C#",0,0,2017,2017,1,https://github.com/AbubakarSarwar/Gang-of-Four-Design-Patterns
Bridge,Seminario-P.O.O,"seminar on design patterns, with explanation and examples on Facade and Bridge",0,0,2023,2023,1,https://github.com/Filinho/Seminario-P.O.O
Bridge,EncryptionApp,Implementation of the Bridge Design Pattern to encrypt message's and accounts,0,0,2023,2023,1,https://github.com/OzyKartike/EncryptionApp
Bridge,Bridge-Pattern-Deisgn-Bank-System,"Developed a banking application in Java using the Bridge Design Pattern to separate credit card types from payment methods. Through this project, I gained valuable knowledge about design patterns, clean architecture, and scalable software development.",0,0,2025,2025,1,https://github.com/andreinechifor2275/Bridge-Pattern-Deisgn-Bank-System
Bridge,DesignPatternsGoF,"Solucionar situações utilizando alguns dos Design Patterns mais conhecidos do Gang of Four (GoF), sendo eles: Abstract Factory, Factory, Builder, Bridge, Adapter e Chains of Responsibility",0,0,2024,2024,1,https://github.com/CaueCG/DesignPatternsGoF
Bridge,Design-Patterns,"This is a repository for design patterns learning examples. (singleton, factory, prototype, bridge etc.).",0,0,2021,2021,1,https://github.com/Bogdan191/Design-Patterns
Bridge,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Bridge,MarbleWheels,"Design patterns. Creating a game in C# using different types of design patterns: adapter pattern, bridge pattern, factory method pattern, decorator and facade.",0,0,2015,2017,2,https://github.com/mrgunior/MarbleWheels
Bridge,GE-Design-Patterns,"Lab 2 for Games Engineering, focused on using the Factory, Proxy, and Bridge pattern.",0,0,2021,2021,1,https://github.com/MichaelRRyan/GE-Design-Patterns
Bridge,BridgeStructuralPattern,Bridge is a structural design pattern that lets you split a large class or a set of closely related classes into two separate hierarchies,0,0,2019,2019,1,https://github.com/amandalsaboia/BridgeStructuralPattern
Bridge,structural-design-patterns,"Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост (Bridge), Легковес (Flyweight), Фасад (Facade)",0,0,2020,2020,1,https://github.com/ann-vicheva/structural-design-patterns
Bridge,SRE_DesignPattern,"Strategy,Proxy,Iterator,Bridge,Sequence of Responsibility,FlyWeight Design Patterns implemented in c#",0,0,2022,2022,1,https://github.com/UsmannArshad/SRE_DesignPattern
Bridge,shapesilog,implementing bridge design pattern in a shape drawer app using c# window form,0,0,2024,2024,1,https://github.com/0xkenn/shapesilog
Bridge,ICA-7-Design-Patterns-1225545633,"Implemented five design patterns into the Product Trading and Bidding System (PTBS). The five design patterns are Façade, Bridge, Factory Method, Iterator, and Visitor.",0,0,2022,2022,1,https://github.com/Deven-Prajapati-2/ICA-7-Design-Patterns-1225545633
Bridge,Design_patterns_project,"A project based on various design patterns such as singleton, factory, bridge and decorator patterns",0,0,2024,2024,1,https://github.com/Robinm94/Design_patterns_project
Bridge,design-patterns,"Creational Design patterns ,Singleton, Builder, Prototype pattern , Structural patterns,  Facade, Proxy, Bridge pattern, Behavioral pattern, Template, Strategy, Iterator pattern",0,0,2023,2023,1,https://github.com/fatimasultanova/design-patterns
Bridge,BridgeDesignPattern,Bridge Design Pattern allows to divide and organize extendable funtionality of a single class into two hierarchies : Abstraction and Implementaion.Support Single Responsibility and Open/Close Principles.,0,0,2024,2024,1,https://github.com/DejavuNerdPro/BridgeDesignPattern
Bridge,Developersstack-Java-bridge_dp,"Developersstack Course on Bridge Design Pattern: This repository provides a comprehensive guide to the Bridge design pattern, including practical examples and real-world applications. It covers pattern implementation, benefits, and best practices, enabling developers to decouple abstraction from implementation for more flexible code structures.",0,0,2024,2024,0,https://github.com/ayesh156/Developersstack-Java-bridge_dp
Bridge,NetCommand,"Blank web site built up using MVC, Command and Bridge design patterns with C#",0,0,2015,2015,0,https://github.com/mikep74/NetCommand
Bridge,FiduciaryAdviser,Implementation of Bridge design pattern in Java to simulate a Fiduciary Adviser for Investments,0,0,2018,2018,0,https://github.com/tschultz1216/FiduciaryAdviser
Bridge,bridge,"Simple project demonstrating the bridge design pattern. For this one, I simulate a online shopping cart for two different types of user and two different payment methods. There is a bridge between the payment method class and the cart class.",0,0,2021,2022,1,https://github.com/Piazzi/bridge
Bridge,RestaurantSimulator,This repository simulates a restaurant. It demonstrates the application of two structural design patterns: the decorator and the bridge.,0,0,2021,2021,1,https://github.com/anhkhoido/RestaurantSimulator
Bridge,project-patterns," design patterns like these: Abstract Factory, Decorator, Builder, Command, Prototype, Iterator, Bridge, Observer, Composite, Strategy",0,0,2019,2020,1,https://github.com/jhonatheberson/project-patterns
Bridge,Persistent-Framework,"Design of Persistent framework using Controller, Bridge, Command, Template method and Factory method design patterns.",0,0,2016,2017,0,https://github.com/abhishekdhotre/Persistent-Framework
Bridge,Design-patterns,"This repository contains Java implementations of design patterns such as Adapter, Bridge, Builder, and more. It serves as a concise reference for understanding and applying these patterns to improve software design.",0,0,2020,2024,1,https://github.com/Harshith-Reddy-Revoori/Design-patterns
Bridge,awesomeshop_api-restful_dps-bridge_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPS (Design Pattern Strutuctural) Bridge, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dps-bridge_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Bridge,java-4h-5h-design-patterns-2,"Creational (Singleton, Prototype, etc) and Structural (Proxy, Composite, Decorator, Adapter and Bridge)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-2
Bridge,OOP-Design_Pattern,This repo is to demonstrate the usage of 2 Design Patterns in OOP: Bridge and Observer,0,0,2024,2024,1,https://github.com/m0nters/OOP-Design_Pattern
Bridge,M426_Design-Patterns,"Examples of some design pattern for presentation in module 426. Covered are the three big pattern families, each with one example (Builder, Bridge, Interpreter).",0,0,2023,2023,1,https://github.com/vilichtSarina/M426_Design-Patterns
Bridge,NIXO-BANK,Playing around with the developer.saxo api and trying out python design patterns. So far I have abstracted some of the api-functionality away in a bridge design pattern.,0,0,2025,2025,1,https://github.com/NicolaiBanke/NIXO-BANK
Bridge,Design-Patterns,This repository contains example implementations of three core design patterns in Java:  Observer Pattern (Behavioral)- Demonstrates a publish-subscribe model  Factory Pattern (Creational)- Provides a simple way to create objects without specifying Adapter Pattern (Structural)- Bridges incompatible interfaces,0,0,2024,2024,1,https://github.com/Ishara-Aththanagoda/Design-Patterns
Bridge,Structural-DesignPattern-Swift,"This Repository includes structural design pattern in swift which includes Adapter , Bridge , Composite , Decorator , Facade , Flyweight & Proxy .",0,0,2020,2023,2,https://github.com/dvvaliya369/Structural-DesignPattern-Swift
Bridge,SalaryTaxCalculator,SalaryTaxCalculator is an application which utilizer Bridge design pattern for caluclating the salary in ASP.NET MVC.,0,0,2022,2022,1,https://github.com/karan9617/SalaryTaxCalculator
Bridge,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Bridge,POS-System-Using-Bridge-Design-Pattern,"This project implements a point-of-sale system using ""Bridge"" design pattern. The project focuses on how to build a system using object oritented methodology",0,0,2023,2023,1,https://github.com/AhmedBinhamim/POS-System-Using-Bridge-Design-Pattern
Bridge,DesignPatternFinalAssignment,"Design Pattern Assignment implemented with strategy,singleton,bridge,mediator,observer,abstract factory,command,composite,chain of responsibility patterns",0,0,2019,2019,1,https://github.com/fahmidf3053/DesignPatternFinalAssignment
Bridge,Software-Design-Architecture,"This project demonstrates a solution implemented with the Bridge design pattern, enhancing flexibility by decoupling abstraction from implementation.",0,0,2024,2024,1,https://github.com/S24JXD/Software-Design-Architecture
Bridge,Audio-API-in-Python-SQLAlchemy,This is an API written in Python Flask with SQLAlchemy Database under the strong bridge of Design Patterns,0,0,2021,2021,1,https://github.com/musabanees/Audio-API-in-Python-SQLAlchemy
Bridge,ModelisationStarcraft,"UML modeling exercise with a starcraft like game, with implementation of design patterns (strategy, bridge, singleton, adapter, etc.)",0,0,2015,2017,1,https://github.com/rbello/ModelisationStarcraft
Bridge,ML_design_patterns,"Master the application of Object-Oriented Programming (OOP) design patterns in Machine Learning! This repository provides hands-on examples and detailed explanations to help you integrate OOP principles with ML workflows, enabling scalable, maintainable, and efficient code. Perfect for those looking to bridge software engineering with data science.",0,0,2024,2024,1,https://github.com/Cpicon/ML_design_patterns
Bridge,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Bridge,DesignPattern-Bridge,"This C# implementation demonstrates the Bridge design pattern, decoupling abstraction from its implementation to allow independent variation. It shows how different shape types can use various drawing implementations, enhancing flexibility and scalability.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Bridge
Bridge,mmv-architecture-demo,An approach to the use of architecture and design patterns to bridge a market opportunity to a technical strategy.,0,0,2019,2019,1,https://github.com/theBoEffect/mmv-architecture-demo
Bridge,DesignPattern,"SER515 - Implementation of Product Trading and Bidding System using the following Design Patterns:  Facade, Bridge, Factory Method, Iterator, Visitor",0,0,2022,2024,1,https://github.com/snerall1/DesignPattern
Bridge,ImageManipulation,"Project with fundamentals of Image Processing in OpenCV and design patterns Prototype and Bridge. Technology stack: C#, VS22, WinForms, OpenCV. ",0,0,2023,2023,1,https://github.com/werma56s/ImageManipulation
Bridge,Go_Bridge_Pattern,"A comprehensive Go project showcasing advanced device management systems, user profile handling, and the implementation of classical design patterns for enhanced scalability and maintainability. Perfect for demonstrating practical applications of software engineering principles in real-world scenarios.",0,0,2024,2024,1,https://github.com/arthurfp/Go_Bridge_Pattern
Bridge,bridge-design-pattern-Java,"Comprehensive Java-based repository showcasing the Bridge Design Pattern. This structural pattern allows for the separation of abstraction from its concrete implementation, enabling greater flexibility in code. Dive into detailed examples, insightful explanations, and best practices for effective application",0,0,2023,2023,1,https://github.com/IsmaInfiniteCloud/bridge-design-pattern-Java
Bridge,ser-515-fall-22-private-repo,"A console-based Product Trading and Bidding System (PTBS) implemented using the 5 design patterns: Facade, Bridge, Iterator, Factory Method and Visitor",0,0,2022,2024,1,https://github.com/amitnoelasu/ser-515-fall-22-private-repo
Bridge,design-pattern-example,"Explore and implement popular design patterns in Java! This repository includes examples of Singleton, Factory, Proxy, Bridge, Prototype, Abstract-Factory, and Proxy patterns with clear explanations and code samples. Perfect for learning and applying design patterns in real-world projects.""",0,0,2024,2024,1,https://github.com/togrul01/design-pattern-example
Bridge,Quad-retris,"Simulation of Tetris implemented using design patterns such as MVC, bridge, visitor and decorator patterns. Includes Text/Graphic Display with file I/O",0,1,2018,2018,5,https://github.com/a2nagi/Quad-retris
Bridge,pizzaDeliveryApplicationWithDesignPatterns,"Pizza ordering application project. As part of  the HND Computing and Systems Development module Advanced Programming.  We explored design patterns and had to incorporate a minimum of three patterns (one of each type: Creational, Structural and Behavioral) into the program.  I used the Observer pattern to allow customers to  place and delete orders. The Factory pattern was used to construct the customer's order via given inputted data from the customer. Finally, the Bridge pattern was used to switch between customer and employee viewpoints in the program. ",0,0,2018,2020,1,https://github.com/henrikauzins/pizzaDeliveryApplicationWithDesignPatterns
Bridge,Bridge-Design-Pattern,  One Of Structural patterns:  Example of the Bridge Design Pattern : that this Job is Decouple an abstraction from its implementation so that the two can vary independently. in this example we have some shapes and some colors and we need to deteremine the tybe of the shape and the color from the bridge pattern we can make it .,0,0,2017,2017,1,https://github.com/aliOsm3n/Bridge-Design-Pattern
Bridge,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Bridge,software_design,"Large Java project developed over the course of a term. Used to learn various software design patterns including but not limited to the bridge, factory method, singleton, and more",0,0,2020,2020,1,https://github.com/BobbyRoche/software_design
Bridge,artistgraph,"My OOP Semester Project- Artist Graph. Pulls data from MongoDB and Discogs API to generate graph with artist nodes and collaborators. Implements design patterns such as Adapter, Bridge, and Decorator.",0,0,2022,2022,1,https://github.com/liezlbl/artistgraph
Bridge,MarioMaze,"Mario maze game in java. Incorporating searching algorithms such as BFS/DFS and Best Search by using  Bridge design pattern. Client-Server  architecture with Multithreading. GUI made with FXML, JavaFX and CSS",0,0,2021,2021,1,https://github.com/ofekron33/MarioMaze
Bridge,Motodologija-razvoja-softvera-PetrolPlus,"Cilj projekta: Specifikacija korisničkih zahteva, primena MVC arhitekture, modelovanje aplikacje primenom UML jezika i primena obrazaca projektovanja (Design Pattern) kao što su Bridge method i Template method. Jezici: UML. Alat: IBM Rational Software Architect",0,0,2025,2025,1,https://github.com/Miks1001/Motodologija-razvoja-softvera-PetrolPlus
Bridge,DatabaseFramework,"This is a java application which helps the user to maintain the books by adding, deleting and updating the book. This application is developed using MySql & 5 design patterns - Controller, Command, Template, Singleton and Bridge",0,0,2017,2018,1,https://github.com/vijayalb/DatabaseFramework
Bridge,AP1-FlightSimulator-CommunicationAndSearchAlg,Used SOLID principles (such as single responsibility & open/close) and design patterns (such as Object Adapter & Bridge patterns) to create a generic server for problem-solving and to use this server for implementing search algorithms.,0,1,2019,2021,1,https://github.com/israelElad/AP1-FlightSimulator-CommunicationAndSearchAlg
Bridge,Java-Multiple-MVC,The goal of this project was to utilize model view controller design pattern. This project specifically uses two separate models and views bridged by a single controller. It also utilizes the concept of swing graphics.,0,0,2017,2017,0,https://github.com/WoodruffA122/Java-Multiple-MVC
Bridge,CarroOffRoad," This design is for Design Patterns Discipline, where we must apply at least 5 patterns learned in the class. My choices are initially Strategy, State, Observer, Bridge, Composite, Singleton and Factory. But it is likely that other",0,0,2017,2017,1,https://github.com/Paulohncaixeta/CarroOffRoad
Bridge,Adaptor_pattern,"The Adapter pattern is a structural design pattern that allows objects with incompatible interfaces to work together. It acts as a bridge between two incompatible classes, converting the interface of one class into another interface that clients expect",0,0,2023,2023,1,https://github.com/katkaryk/Adaptor_pattern
Bridge,design-pattern,"Explore and implement the 23 GoF design patterns in C#. Features detailed C# examples and explanations to help programmers enhance their .NET projects with elegant, scalable designs. Dive into object-oriented design and improve your software architecture skills.",0,0,2024,2025,1,https://github.com/faisalcse1/design-pattern
Bridge,MavAppoint,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust.  Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/aishiyer18/MavAppoint
Bridge,MavAdvisingSystem,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust. Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/gurleenkaur793/MavAdvisingSystem
Bridge,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Bridge,adapter,"The Adapter Design Pattern bridges two incompatible interfaces. It involves an ""Adapter"" class that melds the functionality of distinct interfaces. Think of it like electrical plug converters: without changing the device or socket, they allow compatibility. It's a solution for interfacing mismatched systems.",0,0,2023,2023,1,https://github.com/IsmaInfiniteCloud/adapter
Bridge,Flight-Simulator,"Final project in Advanced Software Programming course.   Presentation Video: https://youtu.be/HHmSaIBHxGI   I created with my partner a plain control center application in Java (javafx) , considering the SOLID   and GRASP principles, using the modern design patterns such as bridge, command and   composite and MVVM architecture.",0,0,2021,2021,1,https://github.com/Daniel-Ely/Flight-Simulator
Bridge,Flight-Simulator,"Final project in Advanced Software Programming course.Presentation Video: https://youtu.be/HHmSaIBHxGI   I created with my partner a plain control center application in Java (javafx) , considering the SOLID   and GRASP principles, using the modern design patterns such as bridge, command and   composite and MVVM architecture.",0,0,2021,2021,1,https://github.com/omer5144/Flight-Simulator
Bridge,Survey-Test-Program,"This project allows the user to create, modify, take, and delete surveys/tests. This was created for a class to teach the different forms of abstraction and design patterns. This program demonstrates the use of structural patterns like the facade and bridge, and behavioral patterns such as template methods.",0,0,2019,2019,1,https://github.com/btmosher1/Survey-Test-Program
Bridge,PersistentDatabaseFramework,"A persistence framework for accessing MySQL database using controller, bridge, command, template method, and factory method design patterns. The framework has been designed in such a way that changing underlying database will have minimal impact on other parts of the application. This design supports undo and redo functionality buy encapsulating user operations together into command objects which are scheduled for execution dynamically using execution stack and undone stack.",0,0,2016,2016,1,https://github.com/tushargarud/PersistentDatabaseFramework
Bridge,CSCI-605,"This course focuses on identifying advanced object-oriented programming concepts and implementing them in the context of specific problems. This course covers advanced concepts such as event-driven programming, design patterns, distributed and concurrent programming, and the use, design and implementation of applications. Assignments (both in class and as homework) requiring a solution to a problem and an implementation in code are an integral part of the course. Note: This course serves as a bridge course for graduate students and cannot be taken by undergraduate students without permission from the CS Undergraduate Program Coordinator.",0,0,2021,2021,2,https://github.com/JakandDaxter/CSCI-605
Composite,design_patterns_in_typescript,:triangular_ruler: Design pattern implementations in TypeScript,5272,763,2013,2025,8,https://github.com/torokmark/design_patterns_in_typescript
Composite,Real-world-Design-Patterns-Node-JS,All the 23 (GoF) design patterns implemented in Javascript with Real World Example using Node.js APIs,393,57,2020,2025,1,https://github.com/nimit95/Real-world-Design-Patterns-Node-JS
Composite,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Composite,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Composite,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Composite,SenecaOOP345-attic,"This folder, attic, contains code fragments.   Like most attics, this attic needs a good cleaning.  Some fragments are from the usual places on the web, cplusplus.com, stackoverflow, etc.  Some fragments are DIY code written in class.  Some fragments are as-is as found on the web while others are heavily modified to make work or add functionality.   Some fragments are useful, some are not.  Most fragments work, some don't.  Notable Useful Fragments ========================  fastforward.cpp  - a summary of OOP345.  funcptr.cpp - examples of the many ways of passing function names to other functions:               direct call, c-style function pointer, c++-style function pointer, function object (functor), lambda, bind               examples of intersting functions to pass function to: thread, async, packaged_task  sp?.cpp     - smart pointer resources  mi-*.cpp    - multiple inheritance resources, clone+diamond problem  theading?01?.cpp - threading101?.cpp - basic threading, mutexes                  - threading201?.cpp - futires and promises                  - threading301?.cpp - async, packaged_task                  - threading401?.cpp - how things were done before async + packaged task  thread-*.cpp     - cool thread code, such as thread pools  ll*.cpp          - linked list code  moveSimple.cpp   - move semantics  stl-calc-*.cpp   - postfix calculator using stl stack, list, vector, deque containers  vectorchar*.cpp  - how to make a string class mased on std::vector<char>  dp-composite*.cpp  - composite (tree) design pattern code  alarmsetjmp.cpp + setjmp*.cpp - use alarm and setjmp to do interesting things  swap.cpp          - swapping data in place (without using a temporary) using xor and add operators.  asmlist.cpp       - how to generate an in-line assembler listing of the code generated by the compiler  popen.cpp         - how to start up a pipe to a program and read the output from the program  folder threading-concurrency_in_action                   - pdf and sample code from Concurancy in Action book",69,35,2015,2024,3,https://github.com/CaptGreg/SenecaOOP345-attic
Composite,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Composite,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Composite,HeadFirstDesignPattern,Head First Design Pattern: Completely Rewrite in C#,51,18,2016,2025,1,https://github.com/dotnet-labs/HeadFirstDesignPattern
Composite,clean-ts-api,"API em NodeJs usando Typescript, TDD, Clean Architecture, Design Patterns e SOLID principles",45,4,2020,2023,1,https://github.com/williamkoller/clean-ts-api
Composite,dotnet-design-patterns-samples,The samples of .NET design patterns,37,11,2017,2025,2,https://github.com/AliakseiFutryn/dotnet-design-patterns-samples
Composite,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Composite,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Composite,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Composite,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Composite,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Composite,mvc-patterns,"Implementation of the architectural pattern Model View Controller through the composition of the design patterns Observer, Strategy and Composite.",9,1,2018,2024,1,https://github.com/tmscarla/mvc-patterns
Composite,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Composite,inventory-management-system,JavaFX app which implements various design patterns and oop principles.,7,0,2024,2025,1,https://github.com/yaeby/inventory-management-system
Composite,gauss-framework,gauss engine is designed for Spring Boot based Java project including bean copy with custom convertor and design pattern adoption such as composite pattern,7,0,2022,2023,1,https://github.com/fenix-Lee/gauss-framework
Composite,better-business-logic-with-typescript,"The repository will provide examples on how to use and implement design patterns (like Composite, Builder, Template Method and others) using Typescript. The repository will demonstrate code reuse strategies and extensibility techniques for building robust Angular Services and Business Logic.  The repository will demonstrate how to implement shared Angular services and how to use them in Angular domain services. The services will include rich business logic layers that use the angular-rules-engine and angular-actions NPM packages.",7,0,2017,2021,1,https://github.com/buildmotion/better-business-logic-with-typescript
Composite,py-composite,Generic implementation of the Composite Design Pattern as a Python class decorator,6,0,2022,2022,5,https://github.com/BstLabs/py-composite
Composite,Design-Patterns,"Patrones de diseño / Clase Template C++ / Parciales / Exámenes de Programación 4 de Facultad de Ingeniería UdelaR - Uruguay. Análisis, Diseño e implementación en C++ usando programación orientada a objetos. UML. Design Patterns, Template C++, exercises...",6,2,2018,2024,2,https://github.com/mathiasuy/Design-Patterns
Composite,typescript_design_patterns,Implementations of design patterns (GOF) in Typescript,5,0,2018,2022,1,https://github.com/Uncleseneca/typescript_design_patterns
Composite,business-logic-with-actions-and-rules,A repository to demonstrate business logic implementation using business actions and a rules engine. Create highly testable and consistent business logic using the template-method and composite design patterns.,5,0,2019,2023,1,https://github.com/angularlicious/business-logic-with-actions-and-rules
Composite,Composite-Design-Pattern-WPF-Samples-,Purpose of the Composite design pattern Composite is a design pattern that allows you to create objects as tree structures and work with the branches of that tree as if they were individual objects.,4,0,2022,2024,1,https://github.com/YusufsKaygusuz/Composite-Design-Pattern-WPF-Samples-
Composite,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Composite,ranch-management,"Our team developed the drone enhanced ranch management software. The software was able to track livestock vitality and location, monitor feeding and watering systems, and monitor property status with the help of the drone(s).  Our team used Java 8 and Scenebuilder to develop the software. We created the Class diagrams, Sequence diagrams, Rapid prototypes, and other diagrams to assist us in developing the software. Also, different design patterns like Composite, Visitor, Adapter were used to develop the project.",4,0,2021,2025,1,https://github.com/prajun7/ranch-management
Composite,dp-structural-composite,Design Pattern: structural - composite,3,3,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-structural-composite
Composite,DesignPattern,"Design Pattern Implement——Observer,Undo/Redo,Composite",3,0,2016,2020,1,https://github.com/j444obs/DesignPattern
Composite,DesignPatterns-Web.Core,"Including .Net Core 3.1-5.0-6.0, MVC, Layers Architecture, PostgreSQL, Entity Framework Core, Code First, ChainOfResponsibility, CQRS, TemplateMethod, Observer, UnitOfWork, Repository, Composite, Mediator, Iterator, Facade, Decorator Design Patterns Transactions.",3,1,2023,2024,1,https://github.com/erkanbstn/DesignPatterns-Web.Core
Composite,Design-Patterns,Bu repoda Yazılım Tasarımı ve Mimarisi dersi ile paralel yürüttüğüm Desing Patterns ile ilgili çalışmalarım ve patternslar ile ilgili notlarım bulunmaktadır.,3,0,2021,2023,1,https://github.com/emirhandogandemir/Design-Patterns
Composite,binary_expression_tree,Java implementation of a Binary Expression Tree to manage algebraic expressions using Composite and Visitor design patterns.,3,1,2021,2024,1,https://github.com/jvirico/binary_expression_tree
Composite,AR-Design-Patterns-In-Swift,用Swift来实现设计模式,3,1,2018,2020,1,https://github.com/andyRon/AR-Design-Patterns-In-Swift
Composite,SurveyTrackingSystem,"Class, use-case and activity models of survey tracking system. Used factory, strategy, bridge and composite design patterns also.",3,0,2021,2023,1,https://github.com/eneskzlcn/SurveyTrackingSystem
Composite,Attribute-System,Unity Project: An RPG attribute system showing off how to setup the composite design pattern. Complex stat systems can be created with this system.,3,1,2020,2023,1,https://github.com/Jason-Skillman/Attribute-System
Composite,design-pattern-composite,Want to learn more about the composite design pattern in Java? Take a look at this tutorial to learn how to implement this design pattern in your project.,2,3,2020,2023,1,https://github.com/BrijeshSaxena/design-pattern-composite
Composite,PhpDesignPatterns-Composite,Composite,2,0,2018,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Composite
Composite,TextEditor,"Text editor based on GOF Design pattern book(Observer, Command, Visitor, Strategy, Composite,Command Design patterns)",2,1,2012,2023,1,https://github.com/sjmaharjan/TextEditor
Composite,DesignPatterns,Sample codes with c++ to understand design patterns.,2,0,2020,2021,1,https://github.com/hamuryen/DesignPatterns
Composite,hijos,JavaScript classes for building tree structures and the composite design pattern.,2,0,2012,2015,1,https://github.com/petermichaux/hijos
Composite,designpattern4devs-bridge-composite-patterns-2022-09-29,Repositório sobre a aula dos design patterns da classificação estrutural bridge e composite,2,1,2022,2024,1,https://github.com/rocketseat-creators-program/designpattern4devs-bridge-composite-patterns-2022-09-29
Composite,DesignPattern,"Design pattern ""Gang of Four"" : Proxy, Composite, Decorator, Strategy, Observer, Adapter, Builder, Factory, FactoryAbstract.",2,0,2021,2021,1,https://github.com/belaid1993/DesignPattern
Composite,SJSU_website,SJSU Shopping website in Java. Uses MVC model as well as Composite and Prototype design patterns.,2,0,2021,2021,4,https://github.com/alenba2/SJSU_website
Composite,xcomposite,This module exposes the composite design pattern in an easy to use waywhich attempts to minimalise the repetitive overhead.,2,0,2018,2020,1,https://github.com/mikemalinowski/xcomposite
Composite,Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF,"In this project; composite, iterator, proxy, template method and state design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2022,2022,1,https://github.com/kamilhan-karaismailoglu/Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF
Composite,pixi-shooter,"This is a 2D demo shooter developed with Typescript, Pixi JS and React that uses the composite design pattern. You will try to survive from the enemies that will appear and use your skills against them.",2,0,2021,2023,1,https://github.com/leoflood/pixi-shooter
Composite,proxy-query,"With updates to Web APIs like .querySelector() and JavaScript syntax improvements, I felt that the core functionality of jQuery could now use native browser code - the only thing missing was the composite design pattern. Thus, Proxy Query was born.",2,0,2019,2023,1,https://github.com/bcdewitt/proxy-query
Composite,TheGame,"This document describes the team work assignment for Telerik Academy students studying Object-Oriented Programming (OOP) – February 2014. Project Description Design and implement an object-oriented Role Playing Game by choice. Here are some suggestions: -	The world can be fantasy, sci-fi, modern, etc. -	You may have one or more heroes, gaining experience, having skills, wearing items, etc. -	You may have one or more players, fighting against a computer or against each other -	You may have enemies like creatures, machines, warriors, etc.  -	You may have items like swords, guns, armor, space-suits, etc. -	You may have skills like double-damage, teleportation, etc.  General Requirements Please define and implement the following object-oriented assets in your project: •	At least 5 interfaces (with one or more implementations) •	At least 15 classes (implementing the application logic) •	At least 3 abstract class (with inheritors) •	At least 1 exception class (with usage in your code) •	At least 3 levels of depth in inheritance •	At least 1 polymorphism usage •	At least 1 structure •	At least 1 enumeration •	At least 1 event (with subscribers) •	At least 1 design pattern (e.g. Composite, Singleton, Factory, Wrapper, Bridge, Command, Iterator, …) You might read about design patterns in Wikipedia, Sourcemaking, DoFactory and others. Additional Requirements •	Follow the best practices for OO design: use data encapsulation, use exception handling properly, use delegates and events like it is recommended in MSDN, use inheritance, abstraction and polymorphism properly, follow the principles of strong cohesion and loose coupling. •	Obligatory use Git to keep your source code and for team collaboration (you might use https://github.com/). TFS or SVN are not allowed. Use Git. •	Provide a class diagram (to visualize all types). Optional Requirements If you have a chance, time and a suitable situation, you might add some of the following to your project: •	Static members (fields, properties, constructor, etc.) •	Constants, generic types, indexers, operators •	Lambda expressions and LINQ •	Implementation of IEnumerable<T>, ICloneable, ToString() override •	Namespaces (if your classes are too much)  •	User interface (UI) – console, graphical, web or mobile Non-Required Work •	Completely finished project is not obligatory required. It will not be a big problem if your project is not completely finished or is not working greatly. This team work project is for educational purpose. Its main purpose it to experience object-oriented modeling and OOP in a real-world project and to get some experience in team working and team collaboration with Git.  Deliverables Put the following in a ZIP archive and submit it (each team member submits the same file): •	The complete source code. •	Brief documentation of your project (2-3 pages). It should provide the following information (in brief): o	Team name and list of team members o	Project purpose – what problem do you solve? o	Class diagram of your types o	The URL of your Git repository o	Any other information (optionally) •	Optionally provide a PowerPoint presentation designed for the project defense. Public Project Defense Each team will have to deliver a public defense of its work in from of the other students and trainers. You will have only 10 minutes for the following: •	Demonstrate the application (very shortly). •	Show the class diagram (just a glance). •	Show the source code in the Git web-based source code browser. •	Show the commits logs to confirm those team members who have contributed. •	Optionally you might prepare a PowerPoint presentation (3-4 slides). Please be strict in timing! Be well prepared for presenting maximum of your work for minimum time. Bring your own laptop. Test it preliminary with the multimedia projector. Open the project assets beforehand to save time. You have 10 minutes, no more. Give Feedback about Your Teammates You will be invited to provide feedback about all your teammates, their attitude to this project, their technical skills, their team working skills, their contribution to the project, etc. The feedback is important part of the project evaluation so take it seriously and be honest.",2,3,2014,2019,1,https://github.com/TeamSazerac/TheGame
Composite,CompositeDesignPattern,Design patterns,1,0,2023,2023,1,https://github.com/Surender1987/CompositeDesignPattern
Composite,compositeExample,Composite design pattern implementation.,1,0,2023,2023,1,https://github.com/lukasgzella/compositeExample
Composite,CompositeDesignPatternSample,Composite Design Pattern Sample,1,0,2023,2023,1,https://github.com/Hooshmand-Sepehr/CompositeDesignPatternSample
Composite,CodingShikshak-CompositePattern,Composite Design Pattern using C#,1,0,2020,2020,1,https://github.com/ashishKumarAgarwal/CodingShikshak-CompositePattern
Composite,dp_composite,Composite design pattern example.,1,0,2016,2022,1,https://github.com/nick79/dp_composite
Composite,Compsite,Composite Design Pattern laboratory,1,0,2013,2023,2,https://github.com/sabs231/Compsite
Composite,CompositePattern_Kotlin,[Design Pattern] Composite Pattern with Kotlin,1,0,2021,2021,0,https://github.com/andyludeveloper/CompositePattern_Kotlin
Composite,CompositeDesignPattern,Implementation of a Composite Design Pattern,1,0,2015,2021,1,https://github.com/roldie/CompositeDesignPattern
Composite,composite_pattern,Composite Design Pattern in Java,1,0,2018,2019,1,https://github.com/parsa-JPM/composite_pattern
Composite,composite-poc,Exemplificação do design pattern composite,1,0,2022,2022,1,https://github.com/smiqueias/composite-poc
Composite,CompositeBuilderPatterns,combined composite and builder design pattern example,1,0,2014,2018,1,https://github.com/tuncayalt/CompositeBuilderPatterns
Composite,tp-designpatterns,"design pattern > Adapter, Composite, Prototype",1,0,2024,2024,1,https://github.com/hayatvyhr/tp-designpatterns
Composite,DesignPattern-Composite,Example implementation of Composite design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Composite
Composite,CompositeDesignPattern,Exemplo de implementação em C# do design pattern Composite.,1,0,2015,2019,0,https://github.com/robsoncastilho/CompositeDesignPattern
Composite,AutoCompositor,Example of the composite design pattern,1,0,2016,2016,3,https://github.com/thomas479/AutoCompositor
Composite,design_patterns_Python,Python Structural Design Patterns.,1,0,2018,2019,1,https://github.com/loaikanou/design_patterns_Python
Composite,Composite_java,Aplicação de teste para o Design Patterns composite,1,0,2019,2020,1,https://github.com/guilhermegrijo/Composite_java
Composite,c-_composite_pattern_assignment,The composite design pattern implemented in c#,1,0,2025,2025,2,https://github.com/JesseVanEvert/c-_composite_pattern_assignment
Composite,COMP345_composite_pattern_expression_tree,Design Pattern Practice by C++ - Expression Tree,1,0,2018,2019,1,https://github.com/vincentsun870530/COMP345_composite_pattern_expression_tree
Composite,Structural-DesignPatterns,Structural Design Pattern :Composite Pattern + Decorate Pattern ,1,0,2023,2023,1,https://github.com/mzerroug/Structural-DesignPatterns
Composite,Ex7-Virtual-Proxy-and-Composite-Design-Pattern,05506230-Design Patterns In Object-Oriented Programming ,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex7-Virtual-Proxy-and-Composite-Design-Pattern
Composite,composite_json_models,This is a Composite Design Pattern implementation for a JSONModel,1,0,2019,2021,1,https://github.com/engmohammedyehia/composite_json_models
Composite,composite-pattern,Small examples of Composite design pattern implemented in Java and Python.,1,0,2021,2022,1,https://github.com/jvirico/composite-pattern
Composite,musical-battle,OOP project with design patterns Composite and Strategy,1,1,2022,2025,2,https://github.com/fedebayer/musical-battle
Composite,composite_observer_design,"This is a composite, observer design pattern implementation using JAVA from cmpt276",1,0,2020,2023,2,https://github.com/eddie109109/composite_observer_design
Composite,DesignPatterns02,"Design Patterns -02 "" Padrões Estruturais - Técnicas de (Adpter, Decorator, Composite, Facade e Proxy)",1,0,2021,2021,1,https://github.com/marcello222/DesignPatterns02
Composite,analytics-composite,Uses the Composite design pattern to allow analytics log of events to multiple external services.,1,0,2022,2023,0,https://github.com/manoelcfeliciano/analytics-composite
Composite,Design-Patterns,Ejemplo de los patrones Factory Method y Composite.,1,0,2019,2023,1,https://github.com/seblaz/Design-Patterns
Composite,Composite-Design-Pattern,This is complete Tutorial of Composite Design Pattern . Feel Free to add something useful to it .,1,0,2023,2023,1,https://github.com/Neha611/Composite-Design-Pattern
Composite,design-patterns,"Design patterns in Java from lab exercies. Composite, Iterator, Visitor, Factory",1,0,2014,2023,0,https://github.com/tlehwalder/design-patterns
Composite,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
Composite,GestionFactureCommandeCompositeDesignPattern,It is an application of the Composite design pattern for invoice management of an order.,1,0,2021,2022,2,https://github.com/Smeud/GestionFactureCommandeCompositeDesignPattern
Composite,File-Management-System_implementing_Design_Patterns,"File Management System implementing Design Patterns uses Command,Composite,Iterator and Decorator",1,0,2023,2023,1,https://github.com/MuhammadSuffian/File-Management-System_implementing_Design_Patterns
Composite,Design-Patterns-Csharp,Estudo de Design Patterns com C#,1,1,2020,2024,1,https://github.com/thiago-roock/Design-Patterns-Csharp
Composite,AspNetCoreDesignPatterns,"Adapter, ChainResponsibility, Command, Composite, Decorator, Observer, Strategy, Template Patterns",1,0,2022,2023,0,https://github.com/MertGuney/AspNetCoreDesignPatterns
Composite,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Composite,Hamburguer_Store_JAVA,"Hamburguer store system developed in Java with Singleton, Factory and Composite design patterns.",1,0,2024,2024,1,https://github.com/lautaros4/Hamburguer_Store_JAVA
Composite,Apotek-java-jframe-netbeans,"Disini nge stuck di implementasi design pattern composite , belum bisa diterapkan ke database",1,0,2022,2023,1,https://github.com/AlfonsInfo/Apotek-java-jframe-netbeans
Composite,Enterprise,This is such an excercie using design pattern : the composite for modelestation hererchique,1,0,2022,2023,0,https://github.com/amiraMahcene/Enterprise
Composite,Design-Patterns,"This project implements an arithmetic expressions evaluator using the Composite-, Bridge-, Iterator-, Strategy-, Factory-, Interpreter- and Visitor-Pattern.",1,0,2018,2022,1,https://github.com/MHaselmaier/Design-Patterns
Composite,Unity3D-SkillSytem,"An RPG skill system created in Unity using strategy, decorator and composite design pattern",1,1,2023,2024,2,https://github.com/ngol0/Unity3D-SkillSytem
Composite,Fall14-ObjOrientedProg-FinalProject-DesignPatterns-RPG,"A turn based role playing game with a basic GUI. Utilizes many design patterns: Actor, Command, Factory, Strategy, and some composite patterns. ",1,0,2016,2019,1,https://github.com/rehpotsirhc/Fall14-ObjOrientedProg-FinalProject-DesignPatterns-RPG
Composite,design-patterns-library2,"Sistema bibliotecário com padrões de projetos: Composite, Chain of responsibility, Decorator, Proxy, Static factory method e Singleton",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library2
Composite,sample-api,"Sample API to demonstrate the use of Clean Architecture, TDD and the Composite design pattern",1,0,2022,2023,0,https://github.com/manoelcfeliciano/sample-api
Composite,BreakOut-Game,"This game is made on Swing in Java using Observer,Command and Composite Design Pattern",1,1,2015,2018,3,https://github.com/jaymmodi/BreakOut-Game
Composite,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Composite,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Composite,alphaCombats,"a 2D interactive PC game developed on Greenfoot using Observer, State, Factory and Composite design patterns",1,0,2017,2019,1,https://github.com/swathisudarshan/alphaCombats
Composite,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Composite,logger-with-design-patterns,"Example of a logger with design patterns: strategy, composite, adapter and factory. Based on this video: https://www.youtube.com/watch?v=lqYm2V6J7Gk",1,0,2021,2021,1,https://github.com/rayque/logger-with-design-patterns
Composite,designer-pattern-build-and-composite,"Este repositório é um tutorial interativo para aprender e aplicar design patterns em JavaScript. Aqui, exploramos como diferentes padrões de design podem ser utilizados para resolver problemas comuns de software de maneira eficiente e eficaz.",1,0,2024,2024,1,https://github.com/m4rcosazevedo/designer-pattern-build-and-composite
Composite,TPEProg2,"Prog 2 (Java with OOP) project, we modelled a song competition (like The Voice), using the Composite design pattern",1,0,2021,2024,1,https://github.com/gonsalomon/TPEProg2
Composite,Doacaofacil,"Application with a social purpose for food donation using design patterns such as: Factory Method, Composite, Adapter, Decorator, and Abstract",1,0,2024,2024,1,https://github.com/rafaelhendges/Doacaofacil
Composite,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Composite,Composite-Pattern-for-input-validator,Composite pattern is used where we need to treat a group of objects in similar way as a single object. Composite pattern composes objects in term of a tree structure to represent part as well as whole hierarchy. This type of design pattern comes under structural pattern as this pattern creates a tree structure of group of objects. ,1,0,2016,2016,0,https://github.com/rowinShahi/Composite-Pattern-for-input-validator
Composite,Software-Analysis-Design,"UML-driven backend for a trading card game. Utilizes Singleton, Observer, Composite, State Design patterns. Enables card creation, expansion management, and real-time status updates.",1,0,2024,2024,1,https://github.com/TobiZelders/Software-Analysis-Design
Composite,c-sharp-calculator,"This is a calculator made by strongly applying all SOLID principles, together with TDD, applying the Composite design pattern for the operations and using the MST algorithm to organize the operations according to the mathematical priority.",1,0,2024,2024,1,https://github.com/MorveN11/c-sharp-calculator
Composite,emergency-center,"This is code that uses design patterns like singleton, composite and strategy in order to simulate the behavior of an emergency center. The emergency center has access to all the different sensors in all the different locations. Each location and have other sub-locations. ",1,0,2023,2024,1,https://github.com/louisevelayo/emergency-center
Composite,Composite_Design_Patterns,,0,2,2020,2020,1,https://github.com/Afroprogrammer/Composite_Design_Patterns
Composite,Composite,Design Patterns,0,0,2018,2018,0,https://github.com/LeTranThuan/Composite
Composite,Composite,Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/Composite
Composite,Composite,Structural Design Pattern in C# | Composite Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Composite
Composite,CompositeDesignPattern,Go4 Design Patterns - Composite Design Pattern Example,0,0,2016,2016,0,https://github.com/codeanees/CompositeDesignPattern
Composite,Composite,composite design pattern,0,0,2017,2017,1,https://github.com/KisGabor/Composite
Composite,Composite,Composite Design Patterns,0,0,2022,2022,1,https://github.com/aliounemane2/Composite
Composite,Composite,Design Patterns - Composite,0,0,2020,2020,1,https://github.com/euygor/Composite
Composite,Composite,Design Pattern Estrutura,0,0,2022,2022,1,https://github.com/peehenrique/Composite
Composite,Composite-Design-Pattern,Structural Design Patterns: Composite Design Pattern,0,0,2024,2024,1,https://github.com/samehesmael277/Composite-Design-Pattern
Composite,Composite,Composite design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Composite
Composite,composite,Composite Structural Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/composite
Composite,CompositeDesignPattern,Composite Design Pattern,0,0,2017,2017,1,https://github.com/mehrbodkh/CompositeDesignPattern
Composite,composite,Testing composite design pattern,0,0,2019,2019,0,https://github.com/maldonadod/composite
Composite,DP_composite,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_composite
Composite,Composite-Pattern,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/Composite-Pattern
Composite,CompositePractice,Design Pattern -- Composite test,0,0,2015,2015,1,https://github.com/nicktogo/CompositePractice
Composite,CompositePattern,Composite Design Pattern Sample,0,0,2019,2019,1,https://github.com/pchenatwork/CompositePattern
Composite,Composite,Composite Structural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Composite
Composite,composite,Exercise for Composite Design Pattern,0,0,2018,2018,1,https://github.com/j05t/composite
Composite,Composite,Lab for design pattern composite,0,0,2021,2021,1,https://github.com/kalil-pelissier/Composite
Composite,composite,Example of Composite Design Pattern,0,0,2019,2023,1,https://github.com/romanleitner/composite
Composite,design-patterns,most lanaguage design patterns,0,0,2016,2017,0,https://github.com/bsed/design-patterns
Composite,Composite,implementation of composite design pattern,0,0,2016,2016,1,https://github.com/safayat/Composite
Composite,CompositeDesignPattern,Basic Composite Design Pattern,0,0,2018,2018,0,https://github.com/Wahap/CompositeDesignPattern
Composite,DesignPattern-Composite,Composite Design Pattern,0,0,2017,2017,1,https://github.com/RishikeshGIT/DesignPattern-Composite
Composite,TP-Composite-Visitor-Algebra,Design pattern,0,0,2023,2023,2,https://github.com/KeyDos42/TP-Composite-Visitor-Algebra
Composite,Composite-Pattern,Composite design pattern,0,0,2017,2017,0,https://github.com/joel-patrick-parks/Composite-Pattern
Composite,DP_COMPOSITE,COMPOSITE design pattern,0,0,2017,2017,0,https://github.com/bsadiki/DP_COMPOSITE
Composite,Design-pattern-Assignment,Composite design pattern,0,0,2021,2021,1,https://github.com/afifahossain/Design-pattern-Assignment
Composite,Composite-Design-Pattern,Composite Design Pattern,0,0,2022,2022,1,https://github.com/Dorothy2020/Composite-Design-Pattern
Composite,Codigo-034---Empacotamento,Design Pattern Composite,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-034---Empacotamento
Composite,composite-pattern-example-shapes,Design Pattern - Composite,0,0,2019,2020,0,https://github.com/guilhermerm-dev/composite-pattern-example-shapes
Composite,wild-composite,Design Patterns - Composite,0,0,2024,2024,1,https://github.com/wild-code-school-projects/wild-composite
Composite,DPComposite,Composite design pattern,0,0,2017,2017,1,https://github.com/chandrakantnitt/DPComposite
Composite,composite-pattern,composite design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/composite-pattern
Composite,dp-composite,Composite Design Pattern,0,0,2023,2023,1,https://github.com/rodolfofajardo/dp-composite
Composite,DesignPatternComposite,Design Pattern Composite,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternComposite
Composite,comp_373_self_study,Composite Design Pattern,0,0,2016,2016,1,https://github.com/ConnorMacDonell/comp_373_self_study
Composite,3-Uzduotis,Composite design pattern,0,0,2023,2023,1,https://github.com/DudeOwski/3-Uzduotis
Composite,DP_composite,C# design pattern,0,0,2018,2018,1,https://github.com/AntoineMer/DP_composite
Composite,composite,Composite design pattern in spring boot,0,0,2023,2023,1,https://github.com/TohidNorouzi/composite
Composite,Composite_Pattern,Coursera Design Pattern,0,0,2023,2023,1,https://github.com/jbalbalosa/Composite_Pattern
Composite,Composite,Rewrite Composite Design Pattern in C++,0,0,2016,2016,1,https://github.com/ivy-yue/Composite
Composite,CompositeVisitor,Composite Visitor Design Patterns Tutorial,0,0,2020,2020,1,https://github.com/dhmhgreCompilersII/CompositeVisitor
Composite,CompositeTutorial,Tutorial on Composire design pattern,0,0,2021,2021,0,https://github.com/JayantSravan/CompositeTutorial
Composite,CompositeCafe,Composite Design Pattern - implementation/practice,0,0,2018,2018,1,https://github.com/bwielk/CompositeCafe
Composite,Composite,Java implementation of composite design pattern,0,0,2020,2020,1,https://github.com/ErichWegendt/Composite
Composite,CompositeDesignPattern,LLD for Composite Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/CompositeDesignPattern
Composite,CompositeDesignPattern,Composite Design Pattern in C#,0,0,2019,2019,1,https://github.com/massecre2/CompositeDesignPattern
Composite,Composite,Example implementation of the Composite design pattern,0,0,2017,2017,1,https://github.com/JuanCarlosGI/Composite
Composite,Composite,Simple examples for Composite design pattern presentation,0,0,2019,2019,1,https://github.com/vladimir-martinka/Composite
Composite,composite,Simple project demonstrating the composite design pattern,0,0,2022,2022,1,https://github.com/Piazzi/composite
Composite,compositeDemo,Example of a composite design pattern,0,0,2021,2021,0,https://github.com/brentspector/compositeDemo
Composite,CompositePattern,Example of the Composite Design Pattern,0,0,2015,2015,1,https://github.com/Runman44/CompositePattern
Composite,Composite,A design pattern Composite in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Composite
Composite,CompositeElement,First task for Design Patterns Class,0,0,2019,2019,0,https://github.com/Shadier/CompositeElement
Composite,patterns-composite,Composite Design pattern example,0,0,2022,2022,1,https://github.com/maksymyavorovych/patterns-composite
Composite,CompositeFigures,Implementation of the composite design pattern,0,0,2015,2015,1,https://github.com/N3ll/CompositeFigures
Composite,dp_composite,Composite design pattern example,0,0,2017,2017,1,https://github.com/vm1234/dp_composite
Composite,composite-pattern,C# - Composite design pattern,0,0,2023,2023,1,https://github.com/flcristian/composite-pattern
Composite,CompositePattern,Form validation using composite design pattern,0,0,2016,2016,0,https://github.com/proshad/CompositePattern
Composite,Composite-Design-Pattern,Composite Design Pattern Sample,0,0,2019,2019,1,https://github.com/pchenatwork/Composite-Design-Pattern
Composite,Iterator_Composite_Pattern,Iterator&Composite Design Pattern,0,0,2024,2024,1,https://github.com/bluesun147/Iterator_Composite_Pattern
Composite,javacompositepattern,Composite design pattern example,0,0,2013,2013,0,https://github.com/parkhomenko/javacompositepattern
Composite,CompositeDesignPattern,A simple Composit Design Pattern Sample,0,0,2024,2024,1,https://github.com/bugandfix/CompositeDesignPattern
Composite,CSharpDP_Structural_Composite,Structural Composite Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Composite
Composite,DesignPatternA_2,composite design pattern assignment,0,0,2021,2021,1,https://github.com/smilestalker/DesignPatternA_2
Composite,Tasks,Composite Design Pattern Task,0,0,2020,2020,1,https://github.com/ddeimantass/Tasks
Composite,CreateYourPC,Composite Design Pattern example,0,0,2023,2023,1,https://github.com/eif-courses/CreateYourPC
Composite,vlspoljar_zadaca_2,"Design Patterns - SINGLETON, COMPOSITE",0,0,2015,2015,1,https://github.com/vlspoljar/vlspoljar_zadaca_2
Composite,DPComposite,Design Pattern Composite Implementation,0,0,2022,2022,1,https://github.com/Medkaffouh/DPComposite
Composite,STRUCTURAL-DESIGN-PATTERN-Composite-,STRUCTURAL DESIGN PATTERN (Composite),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-Composite-
Composite,CompositeDesignPattern,Implementation of Composite Software Design Pattern,0,0,2024,2024,1,https://github.com/Sunil-Tenali/CompositeDesignPattern
Composite,Software-Construction-Lab-5,Design pattern: Composite Pattern ,0,0,2021,2021,3,https://github.com/IngridAMorales/Software-Construction-Lab-5
Composite,Design-PatterDesign-Patterns-Decoratorns-Composite,Design Patterns – Decorator,0,0,2020,2020,1,https://github.com/lt1379/Design-PatterDesign-Patterns-Decoratorns-Composite
Composite,Composite,Exemplo de Design Pattern (Composite) implementado em Java,0,0,2018,2018,1,https://github.com/Renan4783/Composite
Composite,composite_design_pattern,A showcase of composite design pattern base on GoF design pattern book,0,0,2022,2022,1,https://github.com/m8811163008/composite_design_pattern
Composite,CompositeONE,Exercise 1 about Composite Structural Design Pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/CompositeONE
Composite,composite,Example of Composite design pattern written in python,0,0,2024,2024,1,https://github.com/Fede-Berga/composite
Composite,composite,Practical example of the Composite Structural Design Pattern,0,0,2024,2024,1,https://github.com/felipehidequel/composite
Composite,3-2-DesignPatterns-Composite,"Design Patterns in Object-Oriented Programming Seventh Tasks ""Composite Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Composite
Composite,demo-Composite,Design Patterns Of Composite Mode,0,0,2020,2020,1,https://github.com/SpikeJulia/demo-Composite
Composite,Composite-01,"Design Pattern, Composite, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/Composite-01
Composite,composite-pattern,Composite Design Pattern exemplo Java,0,0,2020,2020,1,https://github.com/gustavostz/composite-pattern
Composite,composite-pp,Exemplo do Design Pattern Composite,0,0,2023,2023,1,https://github.com/EduardoDos-SantosP/composite-pp
Composite,CompositeAndStrategy,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/CompositeAndStrategy
Composite,CompositeDP_Excercise,Simple project that implements Composite design pattern. ,0,0,2020,2020,1,https://github.com/uros-veljkovic/CompositeDP_Excercise
Composite,CompositeDesignPattern,Demonstrating the Composite design pattern in C#,0,0,2024,2024,1,https://github.com/BackToTech-Study/CompositeDesignPattern
Composite,composite-pattern,Design pattern composite in java,0,0,2020,2020,1,https://github.com/mariosergiorn/composite-pattern
Composite,CompositeDesignPattern,A presentation about the Composite Design Pattern.,0,0,2012,2013,1,https://github.com/danilobjr/CompositeDesignPattern
Composite,CompositeDP_Example1,Simple project that implements Composite design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/CompositeDP_Example1
Composite,composite,Using composite design pattern to represent a file system,0,0,2012,2013,1,https://github.com/dimmey/composite
Composite,java_gof_composite,"design pattern ""composite"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_composite
Composite,Composite,An implementation of the Composite design pattern in C++.,0,0,2012,2013,1,https://github.com/abrahamkoshy/Composite
Composite,CompositeDP_Example2,Simple project that implements Composite design pattern,0,0,2020,2020,1,https://github.com/uros-veljkovic/CompositeDP_Example2
Composite,Java-Composite-Pattern,Design Patterns - Composite Pattern Example,0,0,2014,2015,1,https://github.com/mavek87/Java-Composite-Pattern
Composite,DesignPatterns_Composite,Design Patterns: Composite pattern sample. ,0,1,2017,2017,1,https://github.com/dyamaletdinova/DesignPatterns_Composite
Composite,Composite-Design-Pattern,code of Composite Design Pattern ,0,0,2021,2021,1,https://github.com/Haris155/Composite-Design-Pattern
Composite,composite-pattern-example,Design Pattern - Composite in Java,0,0,2019,2020,0,https://github.com/guilhermerm-dev/composite-pattern-example
Composite,CompositeTWO, Another exercise about the Composite structural design patterns,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/CompositeTWO
Composite,CompositePattern,My representation of the GoF Composite design pattern.,0,0,2018,2018,1,https://github.com/j-runser/CompositePattern
Composite,compositeTest,a test to understand the composite design pattern,0,0,2025,2025,1,https://github.com/JanHuss/compositeTest
Composite,CompositeDesignPatternWithBuilder,Apply Composite Design Pattern With Builder Approach.,0,0,2022,2022,1,https://github.com/osamaMahmoud328/CompositeDesignPatternWithBuilder
Composite,composite-controller,RestAPI controller module using composite design pattern for structure and chain of responsibility design pattern,0,0,2023,2023,2,https://github.com/hooman-the1/composite-controller
Composite,CompositePattern,Head First Design Patterns Chapter 9 Part 2,0,0,2023,2023,1,https://github.com/DNate9427/CompositePattern
Composite,Empresa,Estudar o Design Pattern COMPOSITE.,0,0,2023,2023,1,https://github.com/Sir-Vinicius/Empresa
Composite,FileSystem,Implementation of Composite design pattern,0,0,2019,2020,1,https://github.com/Pietrov98/FileSystem
Composite,Design-Pattern,Design Patterns opdracht - Composite - schaakspel,0,0,2019,2019,1,https://github.com/boudybeck/Design-Pattern
Composite,pattern-compound,React Design Pattern Composite - Compound,0,0,2024,2025,1,https://github.com/hugomesquita/pattern-compound
Composite,designPattern,Atividade Design Patterns - Exemplo Composite,0,0,2019,2019,1,https://github.com/sichineli/designPattern
Composite,tp_a13_patron_composite,pratique du design pattern composite,0,0,2024,2024,1,https://github.com/nicoleBdeB/tp_a13_patron_composite
Composite,design-pattern-composite-visitor,Composite Visitor design pattern combo,0,0,2015,2015,1,https://github.com/a-cordier/design-pattern-composite-visitor
Composite,design-pattern-composite-interpreter,Composite Interpreter design pattern combo,0,0,2015,2015,1,https://github.com/a-cordier/design-pattern-composite-interpreter
Composite,Portfolio,Java Composite Design Pattern Demo,0,0,2013,2013,1,https://github.com/JRam13/Portfolio
Composite,design-pattern_tp1,"Design-pattern: tp1, Composite & Singleton",0,0,2019,2019,0,https://github.com/RoscaS/design-pattern_tp1
Composite,engComp.padroesDeProjeto.composite,Composite Design  Pattern in java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.composite
Composite,CS1Exam,"Word counter, Composite design pattern.",0,0,2019,2019,1,https://github.com/jovan-rankovic/CS1Exam
Composite,OOP-2,design Patterns composite and strategy,0,0,2018,2018,1,https://github.com/gauranga07/OOP-2
Composite,demo,Head first design pattern - composite,0,0,2018,2018,1,https://github.com/EgellocCollege/demo
Composite,composite-pattern,Composite Design Pattern demo in C#,0,0,2022,2022,1,https://github.com/jebarcha/composite-pattern
Composite,Composite_Patterns,An exercise for composite design patterns,0,0,2022,2022,1,https://github.com/kathleenedie/Composite_Patterns
Composite,Tree-composite,Tree commande with design pattern Composite,0,0,2023,2023,1,https://github.com/SokhnaAnta/Tree-composite
Composite,composite-example,Example of 'Composite' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/composite-example
Composite,composite-pattern,A demo of Composite Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/composite-pattern
Composite,Composite_pattern,"C++, Software design pattern: Composite pattern",0,0,2020,2020,3,https://github.com/MarcJimenez99/Composite_pattern
Composite,Composite,The task of information handling (text) with using design patterns.,0,0,2019,2019,1,https://github.com/ChmutSergei/Composite
Composite,CompositeList,A simple html list showing the Composite design pattern,0,1,2017,2017,1,https://github.com/pwindridge/CompositeList
Composite,CompositeShape,Drawing different shapes using Composite Design Pattern and JavaFX,0,0,2020,2020,1,https://github.com/bsse1017kavi/CompositeShape
Composite,design-pattern-composite,A review on Design Pattern - Composite,0,0,2021,2021,1,https://github.com/marciodegan/design-pattern-composite
Composite,Composite-Design-Pattern,Implementation of Composite Software Design Pattern,0,0,2024,2024,1,https://github.com/Sunil-Tenali/Composite-Design-Pattern
Composite,composite-design-pattern,Software Engineering Project - Composite Design Pattern,0,0,2024,2024,1,https://github.com/Rachit20031/composite-design-pattern
Composite,Composite,Composite design pattern showed on a simple example of file system,0,0,2020,2020,1,https://github.com/WojtekMs/Composite
Composite,composite,An implementation of the composite design pattern using java programming language,0,0,2021,2021,1,https://github.com/abdelghani-moussaid/composite
Composite,visitor-composite-patterns-combined,Composite and Visitor design patterns example,0,0,2015,2015,1,https://github.com/hickson1988/visitor-composite-patterns-combined
Composite,Iterator-Composite-Design-Pattern,Learn from Head First Design Pattern,0,0,2023,2023,1,https://github.com/thang-39/Iterator-Composite-Design-Pattern
Composite,MVC_Desgin_Pattern,"MVC design pattern implemented using composite, observer and strategy design patterns",0,0,2019,2019,1,https://github.com/pratheekshadr/MVC_Desgin_Pattern
Composite,song_composite,implemebtação do design pattern composite com musica,0,0,2021,2021,0,https://github.com/C4st3ll4n/song_composite
Composite,php-design-patterns-composite,PHP Design Patterns - Composite Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-composite
Composite,Composite_Florists,Small example of design pattern usage (Composite).,0,0,2017,2018,1,https://github.com/aleker/Composite_Florists
Composite,Demo_CompositePatternApplying,Demo how to apply Composite Design pattern into Android,0,0,2015,2015,1,https://github.com/KhoaSuperman/Demo_CompositePatternApplying
Composite,Composite-Pattern,Implementation of Composite Design Pattern using Java,0,0,2024,2024,1,https://github.com/ks-official-Sahan/Composite-Pattern
Composite,composite-design-pattern-example,Composite Design Pattern example from GeeksforGeeks,0,0,2018,2018,1,https://github.com/Deakyu/composite-design-pattern-example
Composite,CompositeDP,This is an example codes implemented by Composite Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/CompositeDP
Composite,OOP-Design-Pattern,Composite Design Pattern Demo in Java,0,0,2018,2018,1,https://github.com/aatishballa/OOP-Design-Pattern
Composite,Calculator,Calculator program utilizing composite design pattern.,0,0,2019,2020,1,https://github.com/ryanmeoni/Calculator
Composite,cs100-lab-05,CS100 (Software Construction) - Composite Design Pattern,0,1,2021,2021,3,https://github.com/michael07w/cs100-lab-05
Composite,composite-design-pattern,Example implementation of the composite design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/composite-design-pattern
Composite,Arithmetic-Expressions---LLD,Another example of composite design pattern.,0,0,2022,2022,1,https://github.com/tejasshaha/Arithmetic-Expressions---LLD
Composite,HorusBricks,Composite Design Pattern for coding interview,0,0,2024,2024,1,https://github.com/Dutchu/HorusBricks
Composite,TestCompositePattern,Demonstrates the Composite Design Pattern with TDD,0,0,2014,2014,1,https://github.com/SaberZA/TestCompositePattern
Composite,GuitarFactory,"Design Patterns - Composite, Factory, strategy, decorator,",0,0,2014,2014,1,https://github.com/icelated/GuitarFactory
Composite,DesignPatterns_CompositeWithIterator,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_CompositeWithIterator
Composite,vlspoljar_zadaca_3,"Design Patterns - COMPOSITE, COR, MEMENTO, MVC",0,0,2015,2015,1,https://github.com/vlspoljar/vlspoljar_zadaca_3
Composite,design-patterns-composite,Form validation using the Composite Design Pattern,0,1,2016,2016,1,https://github.com/viniciusaro/design-patterns-composite
Composite,shopping_basket,Shopping basket with composite design pattern,0,0,2022,2022,1,https://github.com/esteres/shopping_basket
Composite,Design-Patterns,"Design and implementation of various design patterns - Decorator, Factory & Composite Design Pattern.",0,0,2018,2018,1,https://github.com/monica-kuppuswamy/Design-Patterns
Composite,composite_and_strategy,Trabalho de Engenharia de Software II - Design Patterns,0,0,2020,2020,1,https://github.com/decobeto/composite_and_strategy
Composite,designPatterns,Using Composite and Visitor patterns,0,0,2015,2015,1,https://github.com/mmuddassarmubeen/designPatterns
Composite,DesignPatterns-Composite,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Composite
Composite,DesignPatterns-Composite,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Composite
Composite,composite-design-pattern,This is a composite design pattern in java,0,0,2018,2018,1,https://github.com/jamaliasultanajisha/composite-design-pattern
Composite,patternCompositeDecorator,basic implementation with composite and decorator design patterns,0,0,2021,2021,1,https://github.com/maikuvit/patternCompositeDecorator
Composite,DesignPatterns.Composite,first push,0,1,2016,2016,0,https://github.com/marcobfv/DesignPatterns.Composite
Composite,DesignPatterns-Composite,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Composite
Composite,DesignPatterns.Composite,https://www.udemy.com/course/design-patterns-csharp-dotnet,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.Composite
Composite,-DesignPatternsComposite,Ton challenge est le suivant: tu vas implémenter un programme représentant un arbre généalogique à partir d'un seul géniteur. Il est donc possible de reconstituer tout l'arbre généalogique en partant du premier géniteur.,0,0,2023,2023,1,https://github.com/mjcode6/-DesignPatternsComposite
Composite,FileSystem_Composite,Creating simple file system using Composite design pattern,0,0,2023,2023,1,https://github.com/Kasy00/FileSystem_Composite
Composite,DesignPatterns-Composite,,0,1,2016,2016,1,https://github.com/PGRProg001/DesignPatterns-Composite
Composite,DesignPatterns-Composite,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Composite
Composite,DesignPatterns_chapter-9,Iterator and Composite patterns,0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-9
Composite,composite-pattern,Composite design pattern example with Java (For University grade),0,0,2020,2024,0,https://github.com/vesmihaylov/composite-pattern
Composite,composite_task,Gang of Four Composite Design Pattern Implementation (with goodies),0,0,2016,2023,1,https://github.com/fornellas/composite_task
Composite,File-Manager_Composite-DP,File manager built based on Composite design pattern,0,0,2018,2018,1,https://github.com/faridhuseynov/File-Manager_Composite-DP
Composite,CompositeDesignPattern,A project that aims to highlight my skills in programming design patterns,0,0,2024,2024,1,https://github.com/Alex-Nin/CompositeDesignPattern
Composite,Movie-Selling-and-Renting-Application,"Implementation of Design Patterns, i.e : Singleton, Strategy, Composite, Decorator,State design patterns.",0,0,2017,2017,1,https://github.com/ShailJhaveri/Movie-Selling-and-Renting-Application
Composite,CompositeCommandPattern,Exploring pattern variations and extensions for the Composite and Command design pattern,0,0,2019,2019,1,https://github.com/chancehouston/CompositeCommandPattern
Composite,DesignPattern,"Design Pattern Implement——Observer,Undo/Redo,Composite",0,0,2016,2016,1,https://github.com/codemonkey716722/DesignPattern
Composite,FileGenerator,Factory method and composite design patterns implementation,0,0,2023,2023,1,https://github.com/mihaela111/FileGenerator
Composite,Example-composite-sistema-arquivos,Aplicando o Composite (Arquitetura de Software: Design Patterns),0,0,2020,2023,1,https://github.com/Geovane33/Example-composite-sistema-arquivos
Composite,composite-design-pattern-php,Simple implementation of composite design pattern in PHP,0,0,2019,2019,0,https://github.com/bdaler/composite-design-pattern-php
Composite,composite_design_pattern_PIP,mini-project PIP based on composite design pattern,0,0,2020,2023,1,https://github.com/Adela-Ioana/composite_design_pattern_PIP
Composite,PDF-Generator,PDF Generation with Composite - Visitor design pattern,0,0,2021,2021,1,https://github.com/vyshakhkj/PDF-Generator
Composite,text-editing-app,Text editing application with `composite design pattern.`,0,0,2018,2020,0,https://github.com/xerdink/text-editing-app
Composite,SE350_Assignment3,An example of a Composite Design Pattern,0,0,2018,2019,1,https://github.com/Rossmallow/SE350_Assignment3
Composite,SSD_DrawingBoard,SSD_DrawingBoard by using composite design pattern.,0,0,2018,2019,1,https://github.com/puow-mond/SSD_DrawingBoard
Composite,FileSystem,Filesystem java project using Composite design pattern,0,0,2024,2024,1,https://github.com/vaibhavsinha16/FileSystem
Composite,SalaryCalculator,Composite design pattern Used for this project ,0,0,2023,2023,0,https://github.com/ChandimaWish/SalaryCalculator
Composite,design_pattern,"design pattern: composite,singleton,observator,adapter,iterator",0,0,2019,2019,1,https://github.com/ayoubridouani/design_pattern
Composite,CompositeDesignPatterns,,0,0,2020,2020,1,https://github.com/maarin/CompositeDesignPatterns
Composite,composite-example-2,An example of the implementation of 'composite' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/composite-example-2
Composite,Composite_Design_Pattern,This is a practice implementing the Composite design pattern.,0,0,2024,2024,1,https://github.com/nikollquinteroc/Composite_Design_Pattern
Composite,Composite-shape-game,Shape game with a composite design pattern in Java,0,0,2023,2023,1,https://github.com/Jhazl/Composite-shape-game
Composite,composite,Composite pattern described on http://cararuseugeniu.blogspot.co.uk/p/design-patterns-in-images.html,0,0,2016,2016,0,https://github.com/ecararus/composite
Composite,DesignPatterns-Structural-Composite,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Structural-Composite
Composite,designPatterns-Composite-Painter,,0,1,2016,2016,1,https://github.com/vknez95/designPatterns-Composite-Painter
Composite,Java_DesignPatterns-Composite,,0,0,2021,2021,1,https://github.com/fernando-cadalso/Java_DesignPatterns-Composite
Composite,Composite-Design-Pattern,Composite Design Pattern Example to illustrate it for students,0,0,2024,2024,1,https://github.com/Saher-debug/Composite-Design-Pattern
Composite,DesignPatterns-Str-Composite,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Str-Composite
Composite,csharp_designPatterns_composite,,0,0,2017,2017,0,https://github.com/PlumpMath/csharp_designPatterns_composite
Composite,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Composite,Structural-Composite,This is a short implementation of the Composite design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Structural-Composite
Composite,Composite-Pattern,Explains how composite design pattern works in real life scenario,0,0,2016,2016,1,https://github.com/halevk/Composite-Pattern
Composite,composite-pattern-example-cpp,Simple example in C++ of the Composite Design Pattern,0,0,2019,2019,1,https://github.com/grzegorz-grzeda/composite-pattern-example-cpp
Composite,Composite_Design_Pattern_PHP,Making a list by using Composite Design Pattern PHP.,0,0,2021,2021,1,https://github.com/ahmadabd/Composite_Design_Pattern_PHP
Composite,design_patterns_in_typescript,Design pattern implementations in TypeScript,0,0,2024,2024,1,https://github.com/Santiagomrn/design_patterns_in_typescript
Composite,DesignPatternsCpp,"Composite, Builder, Abstract Factory, Visitor, Prototype Patterns",0,1,2014,2015,0,https://github.com/paumayr/DesignPatternsCpp
Composite,DesignPatterns,"Singleton, Composite and Strategy implementation for business case",0,0,2023,2023,1,https://github.com/Chelariu-Cosmin/DesignPatterns
Composite,composite-pattern-example,Java example of how to implement the composite design pattern,0,0,2022,2022,1,https://github.com/BCAD3G2-2022/composite-pattern-example
Composite,Design-Patterns,Composite pattern/IComponent,0,0,2021,2021,1,https://github.com/makudzi3/Design-Patterns
Composite,Composite,"An Implamantation of the Composite Design Pattern, by viewing the folders and files from the parent folder.",0,0,2019,2019,1,https://github.com/AvishaiAharoni/Composite
Composite,DesignPatterns--Decorators-and-Composite,,0,0,2017,2017,0,https://github.com/PavanTejaAnne/DesignPatterns--Decorators-and-Composite
Composite,designPatterns-Composite-TextEditor,,0,1,2016,2016,1,https://github.com/vknez95/designPatterns-Composite-TextEditor
Composite,DESIGN-PATTERNS-ET-ARCHITECTURES-LOGICIELLES,composite,0,0,2020,2020,1,https://github.com/elammarisouhail/DESIGN-PATTERNS-ET-ARCHITECTURES-LOGICIELLES
Composite,DesignPatternTP,"les quatres design pattern : Strategy, Decorator, Observer, Composite",0,0,2021,2021,1,https://github.com/a-maslah/DesignPatternTP
Composite,calculations,An composite design pattern approach to simple calculations,0,0,2016,2016,1,https://github.com/mesgu002/calculations
Composite,DesignPatterns,Programas realizados nos padrões de projeto Composite e Facade,0,0,2022,2022,1,https://github.com/LorenaNuns/DesignPatterns
Composite,Design-Patterns,"GOF Design Patterns : observer, strategy, command, composite, state",0,0,2017,2017,1,https://github.com/mesurace/Design-Patterns
Composite,Zombie_Game,"Applied design pattern such as composite, decorator, builder",0,0,2017,2017,1,https://github.com/KilyN/Zombie_Game
Composite,validator,Test composite design pattern with a simple validator,0,0,2019,2019,1,https://github.com/gionnicammello/validator
Composite,Design-Pattern,Draw Flag And Star With Composite Design Pattern,0,0,2021,2021,1,https://github.com/SudipKumarSah-0934/Design-Pattern
Composite,DesignPatternsExamples,[IFES] [POO2] Exemplos dos padrões Composite e Decorator,0,0,2014,2017,1,https://github.com/iac-isabella/DesignPatternsExamples
Composite,DesignPatterns,"My templates for Abstract Factory, Adapter, Composite, Command, State",0,0,2018,2018,1,https://github.com/Kropisha/DesignPatterns
Composite,ExpressionEvaluator,Expression evaluator program with Composite Visitor design patterns,0,0,2021,2021,1,https://github.com/vyshakhkj/ExpressionEvaluator
Composite,JavaProject-4-CompositeDP_ObserverDP_Serialization,"Restaurant management system using composite desig pattern, observer design pattern and serialization",0,0,2020,2022,1,https://github.com/mklsbali/JavaProject-4-CompositeDP_ObserverDP_Serialization
Composite,Composite-Pattern-File-System,A file management system built using the composite design pattern.,0,0,2024,2024,1,https://github.com/abdallahalhajahmed/Composite-Pattern-File-System
Composite,339-HW5-Design-Patterns,"Examples of Observer, Decorator, and Composite design patterns",0,0,2014,2014,1,https://github.com/TErenberger/339-HW5-Design-Patterns
Composite,Usecase-Composite-Design-Pattern,It describes an use case which implements Composite Design Pattern,0,0,2024,2024,0,https://github.com/N-andish/Usecase-Composite-Design-Pattern
Composite,-,"Composite,Observer,Undo/Redo design patterns c++ Realization",0,0,2017,2017,1,https://github.com/yzx2000/-
Composite,Design-patterns,• Composite pattern.   • Singleton Pattern,0,0,2019,2019,1,https://github.com/AlexandraDuron/Design-patterns
Composite,DesignPatterns,Implemented CounterBurger Problem using the composite and decorator design pattern,0,1,2014,2014,1,https://github.com/PrajaktaNaik/DesignPatterns
Composite,composite-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Composite em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/composite-java
Composite,Composite-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Composite-Pattern
Composite,Composite-Pattern,Composite Design Pattern: compunerea de obiecte într-o structură de tip arbore.,0,0,2022,2022,1,https://github.com/PrisacariuAndrei/Composite-Pattern
Composite,DesignPatternsCourse-TP2-Composite,,0,0,2025,2025,1,https://github.com/aimaad/DesignPatternsCourse-TP2-Composite
Composite,IteratorAndCompositePatterns,Head First Design Patterns - Chapter 9 - The Iterator and Composite Patterns,0,0,2020,2020,0,https://github.com/Ruoyu111/IteratorAndCompositePatterns
Composite,Demo_CompositePattern,Source code demo from this tutorial: http://www.javacodegeeks.com/2015/09/composite-design-pattern.html,0,0,2015,2015,1,https://github.com/KhoaSuperman/Demo_CompositePattern
Composite,Projeto-Composite-Exemplo,Um breve exemplo de como o Design Pattern Composite funciona com java,0,0,2022,2022,1,https://github.com/JoaoPedroPPS/Projeto-Composite-Exemplo
Composite,composite_pattern_demo,This is a demo project made to practice the composite design pattern,0,0,2021,2021,1,https://github.com/imtiaj-sreejon/composite_pattern_demo
Composite,design-patterns,Prototype e Composite. Extra: Sidecar,0,0,2023,2023,1,https://github.com/thiagoprazeres/design-patterns
Composite,File_System_Design_patterns,"A mock file system applying the different design patterns like bridge, composite and decorator design patterns",0,0,2024,2024,1,https://github.com/Robinm94/File_System_Design_patterns
Composite,Composite-File-System,"A simple terminal-based file system, built following the Composite design pattern.",0,0,2024,2024,1,https://github.com/rkerkides/Composite-File-System
Composite,Presentation_Pattern_Composite,Une présentation du design pattern Composite dans le cadre du module M3105,0,0,2020,2021,1,https://github.com/fvivet1/Presentation_Pattern_Composite
Composite,composite-pattern-csharp,Демонстрація патерну композит - https://refactoring.guru/uk/design-patterns/composite (по аналогії),0,0,2024,2024,1,https://github.com/arakviel/composite-pattern-csharp
Composite,Composite-Component,"System will draw line, triangle, rectangle, star and flag using Composite Design Pattern",0,0,2021,2021,1,https://github.com/SadmanSakib5597/Composite-Component
Composite,DesignPatterns,"Same examples using design Patterns such as composite, observer, strategy among others. ",0,0,2020,2020,1,https://github.com/Jm-Correia/DesignPatterns
Composite,Composite,"Implementação do Design Pattern Estrutural Composite em .net Core 3.1, simulando mensagens de validações com uma cadeia de mensagens recursivas",0,0,2021,2021,1,https://github.com/rafaelraah/Composite
Composite,tree-search-ts,Tree search implemented with Composite design pattern and TS,0,0,2023,2023,1,https://github.com/miltonnery/tree-search-ts
Composite,More-Design-Patterns,-Implemented the State design pattern; - Implemented the Strategy design pattern - Implemented the Decorator design pattern - Implemented the Composite design pattern; - understand UML State Diagrams; and - integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/More-Design-Patterns
Composite,rshell-cs100-2017,A simple unix shell demonstrating the composite design pattern.,0,0,2018,2018,1,https://github.com/RAMcGuyer/rshell-cs100-2017
Composite,Banking-App,Banking Application with Abstract Factory and Composite design pattern,0,0,2023,2023,2,https://github.com/ilaydaozel/Banking-App
Composite,file-management-system,File Management System made using a composite design pattern.,0,0,2025,2025,1,https://github.com/yogesh-ch-ss/file-management-system
Composite,delta-c,"A composite patterned, technology agnostic, full stack design pattern.",0,0,2016,2016,0,https://github.com/Michaeljmeyer3/delta-c
Composite,Composite_Design_Patterns,,0,0,2023,2023,1,https://github.com/cakirseymanur/Composite_Design_Patterns
Composite,BuilderPattern,Design Pattern explaining how a composite object gets created.,0,0,2020,2020,1,https://github.com/seryafarma/BuilderPattern
Composite,composite-design-patterns,,0,0,2022,2022,0,https://github.com/matheuzsr/composite-design-patterns
Composite,design-patterns-composite,,0,0,2019,2019,1,https://github.com/jakubit/design-patterns-composite
Composite,composite-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/composite-design-patterns
Composite,Design-Patterns-Composite,,0,0,2016,2016,0,https://github.com/Chenxi7/Design-Patterns-Composite
Composite,design-patterns-composite,,0,0,2023,2025,1,https://github.com/Henderson-da-rocha-porfirio/design-patterns-composite
Composite,design-patterns-composite,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-composite
Composite,design-patterns-composite,,0,0,2023,2023,1,https://github.com/Malek-O/design-patterns-composite
Composite,design_patterns__composite,,0,0,2022,2022,1,https://github.com/catalunha/design_patterns__composite
Composite,composite-design-pattern-sample,Implementation of a simple menu bar with composite design pattern in PHP,0,1,2021,2021,1,https://github.com/majidkarimizadeh/composite-design-pattern-sample
Composite,DesignPatterns,"exercises on various design patterns like composite, decorator, state, iterator, observer, strategy, etc.",0,0,2018,2019,1,https://github.com/nirbhay-kekre/DesignPatterns
Composite,design-patterns,"Decorator, Composite, Iterator, Strategy, Template Method",0,0,2016,2017,1,https://github.com/nikolaynizruhin/design-patterns
Composite,SimpleCompositeCSharp,A simple example of how to implement the Composite design pattern in C#,0,0,2023,2023,1,https://github.com/sean-campbelltech/SimpleCompositeCSharp
Composite,design_pattern_composite,"Develop a system that uses the pattern given in class. ""Composite"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_composite
Composite,EquipmentComposite,An implementation of the Composite design pattern using computer parts as the implementing classes.,0,0,2013,2013,1,https://github.com/wgimson/EquipmentComposite
Composite,designPatterns,"Practising the use of the Abstract Factory, Composite and Observer design patterns in Java.",0,0,2017,2017,1,https://github.com/qngapparat/designPatterns
Composite,Tree_command_DP_Composite,Nous avons implémenté la commande tree en JAVA grâce au design pattern composite ,0,0,2023,2023,0,https://github.com/MarieWalyFall/Tree_command_DP_Composite
Composite,Design-Patterns,"implementation of facade, composite and singleton pattern",0,0,2024,2024,1,https://github.com/shariqa31/Design-Patterns
Composite,Composite-Design-Pattern,Basic example of the Composite Design Pattern with VB.NET and Sql Express database,0,0,2017,2017,1,https://github.com/proncaglia/Composite-Design-Pattern
Composite,padraoProjetos_Composite,"Repository created during the LP V course, to implement the compositer structural design pattern",0,0,2023,2023,1,https://github.com/pkrodrigues/padraoProjetos_Composite
Composite,DesignPatterns_C-Sharp_e-commercial_website_Composite,,0,0,2023,2024,1,https://github.com/EsraTosun/DesignPatterns_C-Sharp_e-commercial_website_Composite
Composite,Design-Patterns3,Atividade Etapa 03 - Adapter - Comand - Composite,0,0,2023,2023,1,https://github.com/TadeuViegas/Design-Patterns3
Composite,design_patterns_course,delegate/bridge/visitor/decorator/iterator/composite,0,0,2018,2021,1,https://github.com/DaniilRoman/design_patterns_course
Composite,library-design-patterns,"working with factory, state and composite",0,0,2020,2020,1,https://github.com/LauraDevriendt/library-design-patterns
Composite,Composite-Method-Design-Patterns,,0,0,2024,2024,0,https://github.com/KAVINDAPIYUMAL/Composite-Method-Design-Patterns
Composite,design_patterns-builder-composite,,0,0,2020,2020,1,https://github.com/TimasJackus/design_patterns-builder-composite
Composite,Menus-Delegates-Interfaces,C# project using composite design pattern to implement menu structure.,0,0,2020,2020,1,https://github.com/Lior206/Menus-Delegates-Interfaces
Composite,entitymanipulator,"A C++ demo on Composite, Prototype and Visitor design patterns",0,0,2024,2024,1,https://github.com/anttijuu/entitymanipulator
Composite,clusters,A library with different clusters implementations using composite design pattern.,0,0,2018,2018,0,https://github.com/Tomev/clusters
Composite,dash_app_with_composite_menu,This is a test for trying class based design pattern of dash applications,0,0,2019,2019,1,https://github.com/wilsonchen12/dash_app_with_composite_menu
Composite,CompanyHierarchyStructure,Implementation of Company Hierarchy Structure using the Composite Design Pattern.,0,0,2018,2018,1,https://github.com/haiquangtran/CompanyHierarchyStructure
Composite,mini_calc,Sample Calculator for showing the Composite and Interpreter design patterns.,0,0,2019,2019,1,https://github.com/tahanebti/mini_calc
Composite,File-System-Implementation,Low Level Design of File System using Composite Design Pattern,0,0,2023,2023,0,https://github.com/white-rabbit10/File-System-Implementation
Composite,dojo-cupcake,Kata using decorator and composite design patterns to build cakes,0,0,2024,2024,1,https://github.com/MariaAbh/dojo-cupcake
Composite,Java_Coding_2,"Tree structures, recursion, and the Visitor and Composite design patterns. ",0,0,2022,2022,1,https://github.com/Robert-Lewis1962/Java_Coding_2
Composite,JavaCompositeDesignPattern,This is a project to demonstrate the implementation of Composite Design Pattern in Java.,0,0,2020,2021,1,https://github.com/projectOrhan/JavaCompositeDesignPattern
Composite,DrawShapesGui_CompositeDesignPattern,A Java FX project which can draw different shapes. This code is implemented following the Composite Design Pattern.,0,0,2020,2024,1,https://github.com/fraxhost/DrawShapesGui_CompositeDesignPattern
Composite,Design_Patterns,"Java: Composite, Decorator, Observer, Simple_Factory, Strategy (2018)",0,0,2020,2022,2,https://github.com/danielChrzanowski/Design_Patterns
Composite,composite-design-pattern,This mini Laravel application helps you to practice the usage of the Composite Design Pattern.,0,0,2019,2019,0,https://github.com/peterhaluska/composite-design-pattern
Composite,design-patterns-java,"Padrões Abstract Method, Adapter, Composite e Observer!",0,0,2023,2023,1,https://github.com/saraferreira10/design-patterns-java
Composite,Design-Patterns,Repository including C# implementations of popular Design Patterns,0,0,2020,2020,1,https://github.com/egolab/Design-Patterns
Composite,Go_Composite_Pattern,"A Go project demonstrating the Composite design pattern with a hierarchical structure management system. This repository showcases the creation and manipulation of composite and leaf nodes, emphasizing best practices in design patterns and unit testing.",0,0,2024,2024,1,https://github.com/arthurfp/Go_Composite_Pattern
Composite,Design-Patterns,"Mediator, Composite, Decorator, State, Strategy, Observer, Abstract Factory, SOLID",0,0,2019,2020,1,https://github.com/ozdemiryucel/Design-Patterns
Composite,CompositePattern,The Composite design pattern enables you to compose one whole object from one or more individual objects to represent a part-whole hierarchy. ,0,0,2018,2018,1,https://github.com/Rudnicky/CompositePattern
Composite,Composite_DesignPattern,"Entrainement au ""Composite"" design pattern, projet simple calculant le poids de dossier contenant des fichiers fictifs",0,0,2024,2024,1,https://github.com/Electric-Sheep-FH/Composite_DesignPattern
Composite,Facade-and-Composite-Design-Patterns,,0,0,2021,2021,1,https://github.com/pwalsh2/Facade-and-Composite-Design-Patterns
Composite,TP-Design-Patterns-Deco-Composite,,0,0,2024,2024,1,https://github.com/LOBNARABHI/TP-Design-Patterns-Deco-Composite
Composite,Draw-A-Star,"Implementation of ""Composite Design Pattern"" to draw different shapes using JavaFX",0,0,2020,2021,1,https://github.com/HasnatPranto/Draw-A-Star
Composite,CPP_Design_Patterns,"Design Patterns in C++ including observer, abstract factory, factory, composite, iterator",0,0,2020,2020,0,https://github.com/bpostalci/CPP_Design_Patterns
Composite,LogicGatesCpp,"Project with gates using composite, factory, prototype and visitor design patterns.",0,0,2018,2018,1,https://github.com/Dzudit/LogicGatesCpp
Composite,design-patterns-exercise,Using some design patterns like repository and composite besides clean code,0,0,2020,2020,1,https://github.com/georgehg/design-patterns-exercise
Composite,tree-expression-calculator,"Expression calculator implemented with the Visitor, Composite, and Builder design patterns.",0,0,2019,2020,2,https://github.com/peymathi/tree-expression-calculator
Composite,Pinball,"A Java Pinball Machine implementing design patterns (state, composite, singleton, command)",0,0,2021,2022,1,https://github.com/HerbIzzle/Pinball
Composite,ArithmeticTree,This is a project that use Composite and Visitor Design Pattern ,0,0,2015,2015,1,https://github.com/qianwang1013/ArithmeticTree
Composite,KTTsoft-test,"test task KTTsoft ( Laravel framework, Design Patterns: Composite, Iterator, Factory Method ).",0,0,2016,2020,1,https://github.com/mslobodyanyuk/KTTsoft-test
Composite,Hostinger-Test,Program for printing unlimited hierarchy tree using GoF Composite design pattern,0,0,2018,2018,1,https://github.com/rytisder/Hostinger-Test
Composite,Composite-Observer-Undo-Redo-C-,对Composite，Observer，Undo/Redo这三个design pattern的C++版实作,0,0,2016,2016,1,https://github.com/LPP2016/Composite-Observer-Undo-Redo-C-
Composite,banking-application,To fulfill the concept of Abstract Factory Design && Composite Design Pattern,0,0,2023,2023,0,https://github.com/burakkececi/banking-application
Composite,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Composite,composite-pattern,"Design pattern estrutural (gof) Composite para compor objetos em estruturas de árvores (computador é composto por gabinete, perifericos, etc)",0,0,2021,2021,1,https://github.com/Jhow-R/composite-pattern
Composite,composite-design-pattern-arithmetic-expression,Use design patterns to transform arithmetic expressions into a well-designed structure to calculate the answers.,0,0,2019,2019,1,https://github.com/RyanDaDeng/composite-design-pattern-arithmetic-expression
Composite,TodoList-Composite-Pattern,A sample project of composite design pattern by undergraduate students of computer engineering department of iztech university,0,1,2020,2020,4,https://github.com/yesyigitcan/TodoList-Composite-Pattern
Composite,design-patterns,"factory, command, composite, decorator, facade, iterator, mvc, observer, proxy, singleton, state, strategy",0,0,2022,2022,1,https://github.com/apkuznetsov/design-patterns
Composite,AtividadesDesignPatternsCompositeVersao1,,0,0,2017,2017,0,https://github.com/bateradt/AtividadesDesignPatternsCompositeVersao1
Composite,Java-Composite-and-Decorator-Design-Patterns,This is a mini project to study and implement the Compostie and Decorator design pattern in Java using BlueJ. The UML diagrams of the project are also included in the folder.,0,0,2017,2017,1,https://github.com/saurabhgedam/Java-Composite-and-Decorator-Design-Patterns
Composite,CompositeDesignPattern,Composite is a structural design pattern that lets you compose objects into tree structures and then work with these structures as if they were individual objects.,0,0,2023,2023,1,https://github.com/DejavuNerdPro/CompositeDesignPattern
Composite,EasyGroceryApp,"• Implemented command, observer, state, singleton, composite, iterator design patterns for the app.",0,0,2014,2014,1,https://github.com/shahharsh/EasyGroceryApp
Composite,TrabalhoJavaP2,"Utilizando os design patterns Bridge, Decorator, Abstract Factory, Adapter, Composite, Factory Method",0,0,2013,2013,1,https://github.com/bknupp/TrabalhoJavaP2
Composite,pos_system,"pos system using design patterns ( composite, observer, factory, strategy, adapter, singleton , etc)",0,0,2019,2019,0,https://github.com/goyurim/pos_system
Composite,OF-ParticleSystem,A simple particle system attempting to use composite design patterns in OpenFrameworks,0,1,2014,2014,1,https://github.com/dmelancon/OF-ParticleSystem
Composite,-coronavirus-simulation,"ITERATOR AND COMPOSITE, Model_View_Controller, Fly Weight and Mediator Design Patterns",0,0,2021,2021,1,https://github.com/fatihOguz/-coronavirus-simulation
Composite,ShoppingCartSim,"projek kecil untuk tugas ADPL yang menggunakan Design pattern singeton, command, composite",0,0,2024,2024,2,https://github.com/mhakimgf/ShoppingCartSim
Composite,ListaPSS,"this repository contains some solutions using Builder, Decorator and Composite design patterns. ",0,0,2020,2020,0,https://github.com/alcebiadesogamas/ListaPSS
Composite,design_patterns,"Simple demos for Adapter, Composite, Facade, Factory, Observer, Strategy, Template Mehod and Visitor.",0,0,2018,2018,1,https://github.com/j-o-e-d-o-e/design_patterns
Composite,Developersstack-Java-composite_dp,"Developersstack Course on Composite Design Pattern: This repository provides a thorough guide to the Composite design pattern, complete with practical examples. It covers pattern implementation, benefits, and real-world applications, helping developers create hierarchical structures of objects with ease and flexibility.",0,0,2024,2024,0,https://github.com/ayesh156/Developersstack-Java-composite_dp
Composite,design-patterns,"The Singleton, Factory Method, Adapter, Composite, and Observer design patterns are all demonstrated together.",0,0,2023,2023,1,https://github.com/khaledsawan/design-patterns
Composite,Design-Patterns,"Java implementations of 9 Design Patterns:  Visitor, Factory, State, Strategy, Observer, Singleton, Facade, Composite, Decorator",0,0,2022,2023,1,https://github.com/NLmeng/Design-Patterns
Composite,Composite_Com_Chain_e_Strategy_Design_Patterns,Atividade sobre composite da matéria Projetos de Software,0,0,2022,2022,1,https://github.com/yvesls/Composite_Com_Chain_e_Strategy_Design_Patterns
Composite,ProjetoRPG,"RPG game made using .net core, solving project problems with design patterns",0,0,2024,2024,3,https://github.com/angelum23/ProjetoRPG
Composite,composite-design-pattern,"This repo shows an example implementation of the Composite Design Pattern. The following technologies are used: C++11, Gtest, Gmock, CMake.",0,0,2019,2020,1,https://github.com/mvinturis/composite-design-pattern
Composite,CS356-Assignment-2,"Basic Twitter with Java Swing using Singleton, Observer, Visitor, and Composite design patterns",0,0,2017,2017,1,https://github.com/bcgilmartin/CS356-Assignment-2
Composite,BDD-project,Example of using EasyB as BDD framework. Implementation of a composite design pattern.,0,0,2014,2014,1,https://github.com/faeezshaikh/BDD-project
Composite,ModeraTest,"test task - ModeraTest( - MVC WITHOUT PHP framework, Design Patterns: Composite, Iterator, Factory Method  ).",0,0,2015,2020,1,https://github.com/mslobodyanyuk/ModeraTest
Composite,ModeraTest1,"test task Modera( - MVC WITHOUT PHP framework, Design Patterns: Composite, Iterator, Factory Method  ).",0,0,2018,2020,1,https://github.com/mslobodyanyuk/ModeraTest1
Composite,RestaurantMenuDesignPython,This mini project define Restaurant Menu Design in Python using Composite Design Pattern,0,0,2024,2024,1,https://github.com/smitesht/RestaurantMenuDesignPython
Composite,VisitorSample,This is a simple sample of GO4 visitor design pattern combined in composite,0,0,2024,2024,1,https://github.com/alirezanoori1476/VisitorSample
Composite,JSON-XML-Document-Builder,"School project, proof of basic design patterns knowledge, using composites, builders, and directors.",0,0,2019,2019,1,https://github.com/OwlsNeck/JSON-XML-Document-Builder
Composite,structural-design-patterns,"Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост (Bridge), Легковес (Flyweight), Фасад (Facade)",0,0,2020,2020,1,https://github.com/ann-vicheva/structural-design-patterns
Composite,CS-3560_A2,"Mini-twitter GUI with implementation of 4 design patterns (Singleton, Composite, Observer, Visitor)",0,0,2020,2021,1,https://github.com/PaytonPerchez/CS-3560_A2
Composite,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Composite,designPatterns,A repo with a collection of design patterns,0,1,2020,2021,1,https://github.com/daniel199410/designPatterns
Composite,design-patterns,"A project to demonstrate the use of various Design Patterns, including Adapter, Abstract Factory Method, Singleton, Composite and more.",0,0,2020,2020,1,https://github.com/karlaugust1/design-patterns
Composite,StockMarketObjectOrientedDesign,"Stock Market simulation in Java using 5 design patterns (Singleton, Factory, Composite, Strategy, Observer)",0,0,2024,2024,1,https://github.com/clarkvd/StockMarketObjectOrientedDesign
Composite,LogicGatesInCPP,A logic-gate library built by pure C++ code following the Composite Design Pattern!,0,1,2020,2021,1,https://github.com/ShayAxelrod/LogicGatesInCPP
Composite,filebrowser,Just playing arround with Composite Design Pattern. Establishing project with Maven and creating folder structure according to Composite Pattern.,0,0,2017,2017,0,https://github.com/DenKuzya/filebrowser
Composite,CS356Assignment02--Mini-Twitter,"Implement a mini twitter using several OOP design patterns including singleton, composite,observer,visitor.",0,0,2015,2015,1,https://github.com/singhnii/CS356Assignment02--Mini-Twitter
Composite,MiniTwitter,"A Mini Twitter Application that implements four design patterns (Singleton, Observer, Visitor and Composite)",0,0,2020,2020,1,https://github.com/chrisbt1213/MiniTwitter
Composite,design-patterns-node-based-infix-to-postfix-calculator,"Node based infix to postfix calculator demonstrating the Composite, Visitor, Builder software design patterns",0,0,2022,2022,1,https://github.com/winkingcatstudios/design-patterns-node-based-infix-to-postfix-calculator
Composite,design-patterns-unit-tests,"Working with different design patterns like State, Composite, Visitor, Adapter and unit testing via Mockito.",0,0,2020,2020,2,https://github.com/yashj21/design-patterns-unit-tests
Composite,digital-dungeon,"A 2D dungeon game. Implemented the observer, strategy and composite object oriented design patterns.",0,0,2020,2020,4,https://github.com/sergiomercado19/digital-dungeon
Composite,CS-3560-Mini-Twitter-Project-2,"Project 2 for CS 3560 applying the singleton, composite, visitor, and observer design patterns",0,0,2022,2022,1,https://github.com/floor777/CS-3560-Mini-Twitter-Project-2
Composite,design-patterns-exercises-with-java,Examples including: Mediator & State & Strategy & Observer & Abstract Factory & Decorator & Composite Design Patterns & SOLID principles  ,0,0,2022,2022,1,https://github.com/hasanyeniada/design-patterns-exercises-with-java
Composite,DevOps,"C# + .NET + Onion Architecture + Different design patterns (factory, state, strategy, observer, adapter, template, composite)",0,0,2024,2024,2,https://github.com/CKleijn/DevOps
Composite,CS356A2,"Mini Twitter using java(swing) applied design pattern includes singleton, visitor, observer and composite",0,0,2018,2019,1,https://github.com/JianchaoSun/CS356A2
Composite,java-structural-design-patterns,"Java implementations of various structural design patterns, including Adapter, Composite, Decorator, Facade, Flyweight, and Proxy.",0,0,2025,2025,1,https://github.com/HajiraGul/java-structural-design-patterns
Composite,PatternCompositeWithXML,Projet de classe : programme qui affiche l'arborescence au sein d'un repertoire en utilisant le design Pattern composite et un Ffichier XML,0,0,2022,2022,1,https://github.com/Anta9/PatternCompositeWithXML
Composite,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Composite,Composite-Chat,Composite is a structural design pattern that lets you compose objects into tree structures and then work with these structures as if they are were individual objects.,0,0,2020,2020,1,https://github.com/zuyatna/Composite-Chat
Composite,JavaDesignPatterns,"Multiple examples of design patterns  : Adapter, Command, Composite, Decorator, State, Fabric, AbstractFabric, FlyWeigth, Mediator, Observer, Prototype, Singleton, Strategy, TemplateMethod",0,0,2022,2022,1,https://github.com/leo77777/JavaDesignPatterns
Composite,usjt_20211_ccp1an_mcb_design_patterns_composite,,0,0,2021,2021,1,https://github.com/professorbossini/usjt_20211_ccp1an_mcb_design_patterns_composite
Composite,NF1-PAC02-Design-Patterns---Pas-1---Composite,,0,0,2023,2023,1,https://github.com/daw2-diaz23/NF1-PAC02-Design-Patterns---Pas-1---Composite
Composite,NF1-PAC02-Design-Patterns---Bloc-1---Composite,,0,0,2024,2024,1,https://github.com/davidblancofpllefia/NF1-PAC02-Design-Patterns---Bloc-1---Composite
Composite,Design-patterns,"Implementation of the structural pattern ""Composite"" and the behavioral patterns ""Chain of responsibility"" and ""Interpreter"". The goal - to parse text from the file.",0,0,2018,2018,1,https://github.com/Encories/Design-patterns
Composite,Design-Patterns,"Introduction to design patterns: Strategy, Observer, Factory, Singleton, Command, Adapter, Faade, Template Method, Iterator, Composite, State, Proxy. Object Oriented design principles, Java/UML. ",0,0,2019,2021,1,https://github.com/YifengQ/Design-Patterns
Composite,Design-Patterns,"Implementations of 13 Design Patterns in Structural, Behavioral, and Creational types in CPP, with explanation, and with circle prevention in Composite hierarchy DP. ",0,0,2022,2022,1,https://github.com/IsraelCohen54/Design-Patterns
Composite,RestaurantManagement_Java,"Rastaurant management platform using Composite Design Pattern, Serialization/Deserialization and MVC. App built using Java.",0,0,2020,2024,1,https://github.com/coreyclaudiu/RestaurantManagement_Java
Composite,EmployeeManagementSystemV1,A simple GUI based Employee Management System created using Java Swing and Composite Design Pattern.,0,0,2024,2024,1,https://github.com/AnkurGhosh541/EmployeeManagementSystemV1
Composite,Desktop-Facebook-Application,"windows desktop app for facebook, using design patterns like builder, composite, singelton. still in progress.",0,0,2021,2021,1,https://github.com/AmitShmuelevitz/Desktop-Facebook-Application
Composite,project-patterns," design patterns like these: Abstract Factory, Decorator, Builder, Command, Prototype, Iterator, Bridge, Observer, Composite, Strategy",0,0,2019,2020,1,https://github.com/jhonatheberson/project-patterns
Composite,Age-of-Villagers,An assignment done for Design Pattern course to implement a game function using composite pattern,0,0,2021,2021,1,https://github.com/Hhamid97/Age-of-Villagers
Composite,Design-Patterns-Lab-2024," Design Patterns Lab 2024-2025: A Spring Boot & React project showcasing real-time Book Management with SSE, Hibernate, and Design Patterns like Composite, Observer, and Strategy!",0,1,2024,2025,1,https://github.com/UserLH1/Design-Patterns-Lab-2024
Composite,Design-Patterns-Java,"Detail implementation of all design patterns in java ( creational(builder , prototype, abstract factory, singleton), structural (decorator, composite, adapter, facade)  and behavioural )",0,0,2025,2025,1,https://github.com/CynthiaAbi03/Design-Patterns-Java
Composite,Design-Patterns,A chronicle of various design patterns implemented under software engineering course,0,0,2023,2024,1,https://github.com/mrtaz77/Design-Patterns
Composite,Design-Patterns-in-Java,"In this training, I reviewed somme design patterns such as strategy, adapter, decorator, composite, proxy, builder, singleton and prototype.",0,0,2023,2023,1,https://github.com/ClaudEbro/Design-Patterns-in-Java
Composite,DesignPatternsInModernCPP,"This repository demonstrates Creational, Structural, and Behavioral Design Patterns using traditional and modern C++ features in various examples for learning purposes. Common patterns (Singleton, Factory Method, Abstract Factory, Adapter, Decorator, Composite, Observer, Strategy, Command) are implemented with assistance from the AI tool.",0,0,2024,2024,1,https://github.com/denkhzol/DesignPatternsInModernCPP
Composite,java-4h-5h-design-patterns-2,"Creational (Singleton, Prototype, etc) and Structural (Proxy, Composite, Decorator, Adapter and Bridge)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-2
Composite,design-patterns-term-project,"A Java command-line program exploring factory, singleton, strategy, observer, composite, and façade design patterns in a university department use-case.",0,0,2022,2022,1,https://github.com/hneels/design-patterns-term-project
Composite,swalabfive,Design and implement a program that models a computer architecture using Composite and Visitor design patterns.,0,0,2024,2024,1,https://github.com/prakash-aryan/swalabfive
Composite,File-system,"Basic file system allowing to use ls, tree, more methods. Implementing Composite and Proxy design pattern",0,0,2020,2021,1,https://github.com/smasiek/File-system
Composite,ChristmasTree,"An OOP program implementing Composite, Observer design patterns in C++ on the 3rd semester of studies.",0,0,2018,2018,1,https://github.com/pjotrekk/ChristmasTree
Composite,example-design-pattern,Exemplo do Design Pattern Composite em Python como atividade para a disciplina de Engenharia de Software,0,0,2022,2022,1,https://github.com/nairamouras/example-design-pattern
Composite,SP,"Design Patterns in Java - so long here are Composite, Flyweight, Proxy, Strategy, Iterator, Visitor and State",0,0,2017,2017,2,https://github.com/cpetrescu96/SP
Composite,MMLS-System,"Creates the music library application using Command, Strategy, and Composite design patterns for each different purpose.",0,0,2020,2020,1,https://github.com/dc9865/MMLS-System
Composite,UniversityListServe,"it is a listserve project developed using design patterns like composite, proxy, observer, factory, singleton etc",0,0,2022,2023,1,https://github.com/05satyam/UniversityListServe
Composite,DuenasGerard_NF1-PAC02-Design-Patterns---Bloc-1---Composite,,0,0,2024,2024,1,https://github.com/duenaspelaezgerard/DuenasGerard_NF1-PAC02-Design-Patterns---Bloc-1---Composite
Composite,awesomeshop_api-restful_dps-composite_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPS (Design Pattern Strutuctural) Composite, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dps-composite_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Composite,Calculator_2_Using_Design_Patterns,"This is a C++ program that emulates a Calculator using the composite, visitor, and builder patterns  (Works, but has a few bugs)",0,1,2019,2019,1,https://github.com/hldnwrght/Calculator_2_Using_Design_Patterns
Composite,MasterMenu,Builds off of TacoStand to create a full menu using Composite and Decorator design patterns in Java.,0,0,2020,2020,1,https://github.com/mbaumaister13/MasterMenu
Composite,Design-Patterns,"Explore key software design patterns including Inheritance, Singleton, Adapter, Composite, Observer, Command, State, Decorator, Strategy, Iterator, and MVC. These patterns offer blueprints to solve common design challenges, focusing on object and class communication, not just implementation. ",0,0,2022,2024,1,https://github.com/radubauzh/Design-Patterns
Composite,OOP-Vector-Graphics-Editor-C-,"Simple Vector Graphics Editor constructed with object-oriented programming and a few design patterns (Abstract Factory, Composite).",0,0,2021,2021,1,https://github.com/Yakberry/OOP-Vector-Graphics-Editor-C-
Composite,Structural-DesignPattern-Swift,"This Repository includes structural design pattern in swift which includes Adapter , Bridge , Composite , Decorator , Facade , Flyweight & Proxy .",0,0,2020,2023,2,https://github.com/dvvaliya369/Structural-DesignPattern-Swift
Composite,warehouseMS,"A warehouse management system developed in Java applying 4 software design patterns - Factory method, Strategy, Composite, Builder",0,0,2019,2019,1,https://github.com/NikolayKanchev/warehouseMS
Composite,LLD-Employee-Hierarchy,"This can be solved using Composite design pattern. When object is inside object, composite design pattern can be used. Here Employee levels are - CEO, VP, Manager and their reporting employees and all these are employees of company itself.",0,0,2023,2023,1,https://github.com/tejasshaha/LLD-Employee-Hierarchy
Composite,menu-bar,Provides a minimal example of a menu bar implementation inspired by the Composite and Builder design patterns,0,0,2025,2025,1,https://github.com/dmytro-parfenov/menu-bar
Composite,px-filesystem-design-patterns,"Repository showcasing software design patterns, part of a university course on software development methodologies. Includes implementations of Factory, Adapter, Composite, Observer, and more, with comprehensive examples and tests.",0,0,2024,2024,1,https://github.com/ngljcb/px-filesystem-design-patterns
Composite,CompositePresupuesto,"This Java project represents a hierarchical cost structure for a construction project, such as building a house. Using the Composite design pattern, the project organizes the components of a house (e.g., structure, interior, and garden) into a tree structure of parts, each with an associated cost. The application can calculate and display the total",0,0,2024,2024,1,https://github.com/RafaMartinezz/CompositePresupuesto
Composite,oop-textAlignment,Composite design patterns and implement Strategy design patterns of Text alignment where: - - Left alignment : does nothing - Center alignment : print *** in front of text - Right alignment : print ##### in front of text,0,0,2020,2020,1,https://github.com/ploy-coder/oop-textAlignment
Composite,breakout,"A game in which the user controlls the paddle to hit the bricks. This is implemented using observer design patterns, composite design patterns, strategy patterns, command patterns and MVC patterns. ",0,0,2018,2018,1,https://github.com/AdithyaHS/breakout
Composite,DesignPattern-Composite,"This C# implementation demonstrates the Composite design pattern, allowing clients to treat individual objects and compositions uniformly. It shows how to create a flexible tree structure, enabling operations on complex hierarchies through simple, recursive traversal.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Composite
Composite,Composite-File-Explorer,"Explore and visualize file structures with Composite File Explorer, a .NET desktop application using the Composite Design Pattern. Select a folder, traverse its contents, and effortlessly calculate and visualize folder sizes. Simplify your file exploration experience.",0,0,2024,2024,1,https://github.com/AHMED11178/Composite-File-Explorer
Composite,DesignPatternFinalAssignment,"Design Pattern Assignment implemented with strategy,singleton,bridge,mediator,observer,abstract factory,command,composite,chain of responsibility patterns",0,0,2019,2019,1,https://github.com/fahmidf3053/DesignPatternFinalAssignment
Composite,oodbook-examples-des-pat,"The code for the examples done during lecture 14, the design patterns observer, strategy, factory singleton and composite.",0,0,2021,2024,1,https://github.com/KTH-IV1350/oodbook-examples-des-pat
Composite,LaboratorSP,"Here are basic implementations in C# for three design patterns: the Strategy Pattern, Proxy Pattern, and Composite Pattern.",0,0,2023,2024,2,https://github.com/negreacristian/LaboratorSP
Composite,RSS-feed-interface,"Human-Machine Interface course final project. The program uses the following design patterns: MVC, Observer, Command, Composite & Template.",0,0,2024,2024,1,https://github.com/mchokre/RSS-feed-interface
Composite,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Composite,HouseModel-Sketch,"An app to practice Composite and Visitor design patterns. The theme of the app is ""Modeling of buildings, houses""",0,0,2016,2016,0,https://github.com/iivchenko/HouseModel-Sketch
Composite,File-System---LLD,This is example of composite design pattern. In simple terms - Object inside object and it forms Tree like structure.,0,0,2022,2022,1,https://github.com/tejasshaha/File-System---LLD
Composite,Software-Design-Pattern,"Drawing tool by applying composite, state, command, observer, adapter, expert, controller, and iterator software design patterns using Java AWT.",0,0,2020,2020,1,https://github.com/khushboo520/Software-Design-Pattern
Composite,MovieDatabase,Hashmap of redblacktree was used to store the database. Composite design pattern was used to implement the query generator,0,0,2019,2019,1,https://github.com/jerryzhu94/MovieDatabase
Composite,Composite-Design-pattern,"This is a simple java project for fitting out a hardware store: it allows you to distinguish between basic parts and composite parts. It highlights the concepts of object-oriented programming, namely inheritance, abstraction, encapsulation and polymorphism but also the structural COMPOSITE design pattern.",0,0,2023,2024,1,https://github.com/JugurtaO/Composite-Design-pattern
Composite,Drawing-Figures-using-Design-Patterns,"A standalone desktop application made using Java Swing UI to create figures like circles and rectangles on canvas. The project demonstrates the use of different design patterns like  Controller, Expert, Observer, Adaptor, Iterator, Composite and Command.",0,0,2020,2020,1,https://github.com/parth2706/Drawing-Figures-using-Design-Patterns
Composite,Duck-Simulator,"A console-based duck simulator following design principles. Implemented design patterns- adapter, decorator, factory, abstract factory, composite, and observer pattern",0,0,2024,2024,1,https://github.com/ShoyebWritesCode/Duck-Simulator
Composite,Compositactic,"Compositactic - .NET Core 3.0 HTTP Server Code Library, Architecture Patterns, and Functional Design Guidance using the Composite design pattern",0,0,2018,2019,1,https://github.com/compositactic/Compositactic
Composite,System-Design,This Repository contains different projects using different design patterns: 1: Log Processor System - Chain of Responsibility Pattern 2: File Design System - Composite Pattern 3: Calculator - Composite Pattern,0,0,2024,2024,0,https://github.com/aameen07/System-Design
Composite,HTMLStructureJava,"A Java implementation of HTML structure where elements are represented by Java classes and interfaces, using the Composite Design Pattern",0,0,2024,2024,1,https://github.com/OresteGabo/HTMLStructureJava
Composite,Zork-Java,"Java Progam That Allows User To Create Their World Of Physical Objects. Program Utilizes Inheritance, Polymorphism, And Composite Design Patterns. ",0,0,2021,2021,1,https://github.com/MuhammadMoeezKhan/Zork-Java
Composite,RestaurantManagementSystem,"Design Pattern project on C# Console Application which includes Builder Pattern, Factory Pattern, Proxy Pattern, Strategy Pattern, and Composite Pattern.",0,0,2022,2022,1,https://github.com/asadsheikh1/RestaurantManagementSystem
Composite,Zork-Java,"Java Progam That Allows User To Create Their World Of Physical Objects. Program Utilizes Inheritance, Polymorphism, And Composite Design Patterns.",0,0,2023,2023,1,https://github.com/zohaib-cheema/Zork-Java
Composite,Design-Patterns-In-Java,This shows 10 types of Design patterns with some projects to execute them. They are as follows: 1. Singleton Pattern 2. Factory Pattern 3. Decorator Pattern 4. Observer Pattern  5. Strategy Pattern 6. Adapter Pattern 7. Facade Pattern 8. Composite Pattern 9. Command Pattern 10. Interpreter Pattern,0,0,2023,2023,1,https://github.com/acshyguy/Design-Patterns-In-Java
Composite,tree-with-composite,"This project aims to develop an implementation of the ""tree"" command specifically designed for the Ubuntu operating system. This command is widely used to display the hierarchical structure of files and directories on a file system. We have chosen to implement this functionality using the Composite design pattern.",0,0,2023,2023,4,https://github.com/MdialloC19/tree-with-composite
Composite,Design-Pattern-Composite,Un projet qui utlise le Design pattern Composite. Il comporte deux methodes l'une (pathToXml) qui va créer une chaine xml qui imitera l'architecture d'un repertoire qui existe sur notre machine. L'autre utlisera la chaine xml pour créer des Objets de la classe Dossier ou Fichier. ,0,0,2022,2022,1,https://github.com/Seynabou-Diop/Design-Pattern-Composite
Composite,03-design-patterns-java,"""Como conhecer diversas soluções sem precisar passar por vários anos alternando entre escolhas certas e erradas? Como saber o contexto em que essas soluções são adequadas e quais são as contrapartidas dos benefícios da solução? Felizmente existe uma forma na qual desenvolvedores mais experientes expressam seu conhecimento em um determinado domínio. E então eu apresento os padrões de projeto, os Design Patterns!""",0,0,2020,2022,1,https://github.com/rubenssleme/03-design-patterns-java
Composite,Library-Management-System,"It is a library management system based on given requirements. It incorporated observer, visitor, singleton, decorator, factory and composite design patterns",0,0,2024,2024,0,https://github.com/JohnRebecca/Library-Management-System
Composite,classroom-observer-pattern,This is an assignment as part of my software engineering course where we must implement the observer and composite design patterns,0,0,2024,2024,1,https://github.com/lynxzen/classroom-observer-pattern
Composite,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
Composite,Restaurant-Management-System,"A Restaurant Management System displaying use of MySQL,  Object Oriented Composite design pattern and exemplary use of Inheritance, Abstraction, Polymorphism and Encapsulation.",0,0,2023,2023,1,https://github.com/LukeObornik-Personal/Restaurant-Management-System
Composite,warehouse,"Spring project of a stock / warehouse, using the composite design pattern to allow items to be grouped and treated as the same.",0,0,2022,2022,1,https://github.com/sabrinakappann/warehouse
Composite,Intro-To-Composite-Design-Pattern,"The composite pattern is a partitioning design pattern. The composite pattern describes a group of objects that are treated the same way as a single instance of the same type of object. The intent of a composite is to ""compose"" objects into tree structures to represent part-whole hierarchies.",0,0,2022,2024,1,https://github.com/ParsaMehdipour/Intro-To-Composite-Design-Pattern
Composite,clean-node-api,"A clean and organized project with contains some features of Typescript. Futhermore, it is designed using Composite, Adapter and stuff as design patterns.",0,0,2020,2021,1,https://github.com/karlaugust1/clean-node-api
Composite,SoftwareDesignPattern_Project2_4thSem,A project using design patterns to create a class library that uses a builder to generate composites that represent JSON and XML documents.,0,0,2023,2023,1,https://github.com/agnifiraz/SoftwareDesignPattern_Project2_4thSem
Composite,ToDo-List,Simple ToDo List with GUI Form Interface; The project follows object-orientated programming and composite design pattern; Apply hash maps and priority queues; ,0,0,2019,2023,0,https://github.com/NingyuanXu/ToDo-List
Composite,Smart-Pointers-usage-in-polymorphism,"This concise project, models the composite design pattern and utilizes the rvalue concept and smart pointer to benefit the move constructor performance advantages.",0,0,2024,2024,1,https://github.com/HamidMapna/Smart-Pointers-usage-in-polymorphism
Composite,orgChart,A simple organizational chart that was made using the composite design pattern. It's purpose is to help me prepare for a test,0,0,2016,2016,1,https://github.com/mesgu002/orgChart
Composite,Composite-Design-Pattern,A composite pattern is a partitioning design pattern and describes a group of objects that are treated the same way as a single instance of the same type of object. The intent of a composite is to “compose” objects into tree structures to represent part-whole hierarchies. It allows you to have a tree structure and ask each node in the tree structure to perform a task.,0,1,2020,2021,1,https://github.com/mehboobali98/Composite-Design-Pattern
Composite,ProjectManager,"Dessktop App helping PM to manage their dailly task, created in Java swing and PostgreSQL and applied Design Pattern concept as Composite, DAO, MVC...",0,0,2024,2024,1,https://github.com/Abderrahmane-Haberchid/ProjectManager
Composite,ProjetTree,Le code que vous avez fourni illustre l'utilisation du design pattern Composite pour représenter et afficher une arborescence de fichiers et de répertoires.,0,0,2023,2023,1,https://github.com/Arona11122001/ProjetTree
Composite,mini_twitter,"A Java­ based Mini Twitter simulator with graphical user interface (GUI) using Java Swing. The goal of this program is to let you experience how to apply design patterns to build extensible software systems . Design Patterns Used: Singleton, Observer, Visitor, and Composite",0,0,2017,2019,1,https://github.com/codeham/mini_twitter
Composite,EI-MiniProject,"A simulation of a Mars Rover navigating a grid-based terrain using object-oriented principles and design patterns. The project implements movement commands, obstacle avoidance, and direction changes for the Rover, following key design patterns including Command, Composite, Singleton, Factory, and Observer.",0,0,2024,2024,1,https://github.com/SwethaVairamuthu/EI-MiniProject
Composite,-File-Folder-visulizer,a simple desktop application to visulize the capacity of files and folders using charts.  Designed to follow the following design patterns:  • Observer pattern • Composite pattern,0,0,2024,2024,1,https://github.com/MQHANAD/-File-Folder-visulizer
Composite,CS100-AImovie-recommender,"Intelligent movie recommendation system developed collaboratively showcasing our use of Agile Scrum Methodologies, Composite Design Pattern, Unit Testing, Git/Github, and implementation of database algorithms.",0,0,2022,2023,1,https://github.com/thedigitalchief/CS100-AImovie-recommender
Composite,Calculator,"The purpose of this project was to build a calculator using design patterns. Specifically, the project utilized design patterns: the Composite Pattern, Visitor Pattern, Command Factory, and Builder Pattern. These patterns were implemented to create a calculator that is modular, easy to modify, and extensible.",0,0,2021,2023,1,https://github.com/medha-kul/Calculator
Composite,recursive_bubble,"Implementation of a recursive ""bubble"" structure. The writing of this small app employs several design patterns for fun, namely Composite, Observer, Iterator, Visitor, and State pattern.",0,0,2015,2015,0,https://github.com/prajogotio/recursive_bubble
Composite,NFC-Application,"I have created a NFC system at my university. My aim in my project is to design a university system using design patterns. I used a total of 6 design patterns in my Java project. These are composite, observer, singleton, command, iterator, and facade respectively.",0,0,2022,2022,1,https://github.com/berkinozturk/NFC-Application
Composite,farm-dashboard-prototype,"A prototype for a farmer utility application built with JavaFX as an exercise in using design patterns such as entity-control-boundary, composite, visitor, and adapter",0,0,2021,2021,2,https://github.com/eolatham/farm-dashboard-prototype
Composite,Gourmand-Restaurant-App,"Gourmand is a restaurant management and food ordering app. This repository contains the complete Design Document for the app along with UML artifacts like Domain Model, Design Model, Sequence Diagrams, Activity Diagrams, State Diagrams, Design Patterns (Observer, State, Abstract Factory, Decorator, Composite, Iterator, Template Method, Singleton, Adapter and Proxy). The MVC architecture also has been applied to the design",0,2,2017,2017,1,https://github.com/mohammedshethwala/Gourmand-Restaurant-App
Composite,java-patterns,Library containing design patterns and their implementations in Java. Plus exemplary applications of basic Java topics and various utils.,0,0,2020,2021,1,https://github.com/mzacki/java-patterns
Composite,nested-set,"This project implements a hierarchical management system using the composite design pattern in Java. It provides a robust framework for organizing and managing a tree-like structure, where each node can either be a simple element (leaf) or a composite element containing other nodes (composites).",0,0,2023,2024,1,https://github.com/khinemyaezin/nested-set
Composite,WallE-Robot,"A Java project to define actions of a robot and its basic mechanics (movement and charging). The project aims to demonstrate template, visitor, and composite design pattern.",0,0,2021,2021,1,https://github.com/mowglu/WallE-Robot
Composite,cashier,This is a simple cashier function where you can scan any item and display the total price. A couple of Design Patterns were used: Command and Composite.,0,0,2020,2023,1,https://github.com/armando-palace/cashier
Composite,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Composite,TaskAssigner,This was the final project for CS 100: Software Construction at UC Riverside. Our group of 3 memebers collaborated to design a task management application with a GUI that demonstrates understanding of 3 design patterns.,0,0,2021,2021,4,https://github.com/shawn636/TaskAssigner
Composite,game-dev-custom-project,"Custom game project showcasing the implementation of different software design patterns and data structures built in C++. This includes the state, composite, component, command and factory design patterns, as well as a graph/node data structure to represent the game world with different locations with adjacent location nodes.",0,0,2022,2023,1,https://github.com/jamesvovos/game-dev-custom-project
Composite,college-classes-schedule-parser,Classes Schedule Parser for my college classes. The program opens the college's website using Selenium and gets the data about my classes. Using the Composite Design Pattern and the Mediator Design Pattern I implemented a parsing algorithm. After the parsing the data is inserted in a MySQL database.,0,0,2021,2021,1,https://github.com/romanovadrian/college-classes-schedule-parser
Composite,EducationalInitiatives-EngineeringAssignment,"A Java project implementing a Mars Rover simulation with design patterns (Command, Composite) and focusing on OOP principles, SOLID design, and code quality for an Educational Initiatives coding assignment.",0,0,2024,2024,1,https://github.com/HARSHMISHRA-521/EducationalInitiatives-EngineeringAssignment
Composite,Emergency-Department-Simulator," Text based game in which you are an Emergency Medicine Physician who has to evaluate patients. Used Swift to implement Design Patterns such as Singleton, Observer, Façade, and Composite.",0,0,2019,2019,1,https://github.com/mmoore96/Emergency-Department-Simulator
Composite,java-desing-patterns-II-loja,Repositório do curso Jornada do Conhecimento de Back-End Java (Nível Intermediário) - Design Patterns em Java II: avançando nas boas práticas de programação da plataforma Alura.,0,0,2024,2024,1,https://github.com/Robson-Teixeira/java-desing-patterns-II-loja
Composite,TreeCommand,C'est un programme qui après exécution va lister le contenu d'un dossier comme le fait la commande tree. Le code sera fait en utilisant le design pattern composite,0,0,2023,2023,1,https://github.com/Aw2001/TreeCommand
Composite,214-PA4,"This repository contains the code for Software Modelling (2nd Year) Practical 4. The project integrates five key design patterns:  Composite , State, Decorator, Iterator and Observe, into a unified and functional codebase.",0,0,2024,2024,2,https://github.com/thendombedzi/214-PA4
Composite,R-Shell,"Constructed a Bash terminal using Command, Composite, Decorator, and Factory Design Patterns. Applied Execvp, Fork, Recursion, Stacks,and Trees to handle nested commands with precedence. Included Google Unit and Integration Testings",0,0,2020,2020,1,https://github.com/sevarbiter/R-Shell
Composite,LibraryManagementSystem,"A flexible and scalable library management system built using Java, implementing design patterns such as Composite, Factory, and State for robust book categorization, dynamic book return management, and efficient object creation.",0,0,2025,2025,0,https://github.com/abdchtourou/LibraryManagementSystem
Composite,214-prac3,"This repository contains the code for Software Modelling (2nd Year) Practical 3. The project integrates four key design patterns: Abstract Factory, Strategy, Memento, and Composite, into a unified and functional codebase.",0,0,2024,2024,2,https://github.com/thendombedzi/214-prac3
Composite,restaurant-menu,"You can see prices in the menu, add new food, drinks and subcategories. Created according to composite design pattern with the help of https://github.com/buraksenyurt/tasarim-desenleri-turkce-kaynak repo",0,0,2020,2020,1,https://github.com/esmahaber/restaurant-menu
Composite,Design-Pattern-Interpreter,Interpreter design pattern is one of the behavioral design pattern. Interpreter pattern is used to defines a grammatical representation for a language and provides an interpreter to deal with this grammar. This pattern involves implementing an expression interface which tells to interpret a particular context. This pattern performs upon a hierarchy of expressions. Each expression here is a terminal or non-terminal. The tree structure of Interpreter design pattern is somewhat similar to that defined by the composite design pattern with terminal expressions being leaf objects and non-terminal expressions being composites. The tree contains the expressions to be evaluated and is usually generated by a parser. The parser itself is not a part of the interpreter pattern.,0,0,2020,2021,1,https://github.com/soufianemostafi/Design-Pattern-Interpreter
Composite,LO21,"C++ based development, using Qt Framework . Design and implementation of a ""taking notes"" software. We used different design-patterns: MVC, singleton, composite, factory.  Main functionalities : notes, documents, workspaces, tags, HTML/LaTeX/Text exports.",0,2,2014,2014,1,https://github.com/felixmt/LO21
Composite,Shape-Drawing-Tool,"A tool that can be used to draw Boxes, Circles and Lines with Undo and Redo functionalities. Several Design Patterns including Composite, Command, Iterator, State, Singleton, Controller, Expert are used to develop this tool.",0,0,2020,2020,1,https://github.com/Charan-Venkatesan/Shape-Drawing-Tool
Composite,My-First-Graphical-Application,"My learning to use event-driven programming abstractions including the Qt event loop, use of graphical widgets and creation of graphical applications. Additional learning objectives include use of design patterns such as the composite pattern.",0,0,2018,2019,1,https://github.com/Andyliang97/My-First-Graphical-Application
Composite,USMC-Army-Builder,"Simulate creating an army based the US Marine unit structure. This project utilizes existing OOP paradigms such as association, aggregation, and composition. It also incorporates a couple Java design patterns such as factory, composite, and command.",0,0,2025,2025,1,https://github.com/yichii/USMC-Army-Builder
Composite,text-handler,"This application parses the input text into its component parts, down to letters and punctuation marks. Examples of input data in the resources package. Composite and chain of responsibility design patterns were used here and also regex. ",0,0,2023,2024,1,https://github.com/Kovvvalski/text-handler
Composite,CarroOffRoad," This design is for Design Patterns Discipline, where we must apply at least 5 patterns learned in the class. My choices are initially Strategy, State, Observer, Bridge, Composite, Singleton and Factory. But it is likely that other",0,0,2017,2017,1,https://github.com/Paulohncaixeta/CarroOffRoad
Composite,2D-game-using-OOP,"Creating a 2D game which uses C++ and STL (Standard template library). The software is data driven using XML. Incorporates various design patterns such as singleton, factory, composite and flyweight. Emphasis was on memory management and modular design.",0,0,2016,2016,0,https://github.com/anshumt/2D-game-using-OOP
Composite,MyMusic-App,"Java | A music application which lets users search for tracks, artists-albums, play tracks, create and edit playlists. Admin functionalities such as editing albums-tracks-artists are also implemented. Uses well known design patterns such as Singleton, Composite, State, Factory",0,1,2019,2019,4,https://github.com/psprao95/MyMusic-App
Composite,214-prac5,"This repository contains the code for a Smart Home Automation System using 4-5 design patterns which are Composite, Adapter, Command, Observer, and Iterator. The project supports device control, legacy device integration, automation routines, sensor notifications, and efficient device management.",0,0,2024,2024,2,https://github.com/thendombedzi/214-prac5
Composite,CSE-308-Software-Engineering-Sessional,"This sessional course corresponds to the theory course CSE 307 taught by BUET CSE department at Level 3- Term 1.  This course includes code implementation of widely used different software design patterns, such as Adapter, Builder, Composite, Observer, Mediator etc.",0,0,2023,2023,1,https://github.com/SaffatZabin-17/CSE-308-Software-Engineering-Sessional
Composite,Task-Planner,"Task Planner is a Java-based desktop application for efficient task management, designed using key design patterns like Composite, Decorator, Observer, and Strategy. The application provides users with a dynamic interface to manage tasks, receive notifications, and display personalized messages.",0,0,2025,2025,1,https://github.com/boratrhan/Task-Planner
Composite,Flight-Management-System,"Flight Management System is a Java application for efficient flight management, utilizing Strategy, Composite, and Observer design patterns. It supports customizable flight searches, hierarchical airline management, and real-time notifications, demonstrating advanced OOP principles in a flexible and scalable system.",0,0,2024,2024,1,https://github.com/NadavShabta/Flight-Management-System
Composite,Programming_Desing_Patterns_Curse,"Programming Desing Patterns For Unity - Write Better Code course by Sam Patuzzi and GameDev.tv. Unity project containing the following C# design patterns: Singleton, FiniteStateMachine (FMS), Composite Pattern, Decorator, Model View Presenter (MVP), Pool Object, Observer, Delegates, Events, and Strategy Pattern.",0,0,2022,2024,1,https://github.com/SoulDavid/Programming_Desing_Patterns_Curse
Composite,Tugas-Besar-CCDP-10116073-10116076,"Repository ini digunakan untuk menyimpan file atau project dari tugas besar clean code dan design pattern. Pada repository ini ada 3 tipe design pattern yang diimplementasikan yaitu creational, structural, dan behavioral pattern. Dimana diambil dua contoh pattern dari ketiga tipe tersebut. Dimana untuk creational dipilih abstrac factory pattern dan prototype pattern, untuk structural dipilih proxy pattern dan composite pattern, dan untuk behavioral dipilih mediator pattern dan iterator pattern.",0,0,2020,2020,1,https://github.com/fritsonagung/Tugas-Besar-CCDP-10116073-10116076
Composite,Geometric-Design-System,"Built a geometric design system using object-oriented principles, focusing on shape intersections and robust test- ing with JUnit to identify edge cases and ensure accuracy. Incorporated exception handling and design patterns like Composite, Iterator, and Singleton to enable hierarchical compositions and efficient instance management.",0,0,2025,2025,1,https://github.com/jenilmaru2004/Geometric-Design-System
Composite,JavaShop,"This Inventory Management System is a comprehensive Java application designed to showcase the practical use of several important design patterns, including Observer, Composite, Singleton, Factory, and Strategy. The system allows for dynamic inventory management, item crafting and un-crafting, and offers a flexible search functionality.",0,0,2024,2024,1,https://github.com/MajdIssa34/JavaShop
Composite,Flight-Simulator,"Final project in Advanced Software Programming course.   Presentation Video: https://youtu.be/HHmSaIBHxGI   I created with my partner a plain control center application in Java (javafx) , considering the SOLID   and GRASP principles, using the modern design patterns such as bridge, command and   composite and MVVM architecture.",0,0,2021,2021,1,https://github.com/Daniel-Ely/Flight-Simulator
Composite,Flight-Simulator,"Final project in Advanced Software Programming course.Presentation Video: https://youtu.be/HHmSaIBHxGI   I created with my partner a plain control center application in Java (javafx) , considering the SOLID   and GRASP principles, using the modern design patterns such as bridge, command and   composite and MVVM architecture.",0,0,2021,2021,1,https://github.com/omer5144/Flight-Simulator
Composite,ShapeComposer,"Utilized the controller, expert, iterator, and composite design patterns to develop a simple application that allows users to draw shapes by clicking on buttons and the drawing area. 2. Improved user experience by designing an intuitive interface with only two buttons for Circle, Triangle and Box drawing options. ",0,0,2023,2023,1,https://github.com/keyurmushrif02/ShapeComposer
Composite,Food-Delivery-Management-System,"Design and implement a food delivery management system for a catering company. The client can order products from the company’s menu. The system should have three types of users that log in using a username and a password: administrator, regular employee, and client. I used functional programing( lambda expresions, streams), Design Patterns (Composite, Observer).",0,0,2021,2021,1,https://github.com/MatiocBogdanDarius/Food-Delivery-Management-System
Composite,SVG-Manipulator,"Project is based on  MVI architecture to form a communication channel between View and Model.This project is capable of manipulating basic SVG images. Users can add multiple SVG shapes and they can perform various features like scaling, attaching and grouping, to achieve this I also used design patterns like composite and factory and facade.",0,0,2020,2020,1,https://github.com/AbdeAliSomesar/SVG-Manipulator
Composite,cos214-assignment3,A racing company has approached you to design their new race circuit. You will have to use your knowledge about the composite and decorator design patterns in order to design their race track. After you have designed the race track you will use the observer pattern to simulate what will happen when there is a crash on the track.,0,0,2019,2022,2,https://github.com/giovannijoubert/cos214-assignment3
Composite,Design-Pattern-Observer,"The objective of this case study is to familiarize with the Observer design pattern through an example and to observe its relation with other design patterns such as Singleton and Composite. The goal is to realize a cyclic counter modulo 60 (like a timer) to be used for example in a traffic light controller. Each time the counter changes its value it is displayed on devices in binary, octal, and hexadecimal. We also made these devices able to join and leave the system dynamically and other types of display devices can be added easily through the proposed solution. ",0,0,2020,2021,1,https://github.com/soufianemostafi/Design-Pattern-Observer
Composite,Shapes-Project,"My submission for an OOP class project: I was tasked with developing a program that would allow the user to create various shapes, of a specified size and colour, and to move them - individually or together as a compound shape. For full marks, I was required to have well-documented code, smooth performance and implement the Observer, Composite, and Iterator design patterns.",0,0,2015,2015,0,https://github.com/nikolai-momot/Shapes-Project
Composite,Mini-Twitter,"In this program, a Java-based Mini-Twitter is built with a GUI using Java Swing. Some significant features the Mini-Twitter composes of are design patterns (Singleton, Observer, Visitor, and Composite), and additional aspects like user/group ID verification, creation time attributes for the user and group, the last updated time attribute for the user, and the last updated user.",0,0,2020,2020,1,https://github.com/catherinegronkiewicz/Mini-Twitter
Composite,consoleProjectEntityFramework,"This is a project which takes an instruction in json file and transform it into several objects. After, this objects are translated into processes which after be validated, the object instruction results are published in a database. Design patterns used: Singleton, Factory, Chain of Responsability and Composite. Entity framework approach used: code first. The diagram in the readme explain the data flux and the relation between code parts.",0,0,2022,2022,1,https://github.com/YaiGenes/consoleProjectEntityFramework
Composite,Advanced-Software-Development---JAVA-MICROSERVICES,"The course target:: Advanced Software Development JAVA MICROSERVICES Course To cover the gap between the academia and the industry in Israel high-tech industry market 1. To give the relevant tools to build and develop an E2E application ( RPC - Application Servers (web application server ) , Docker , K8, Mongo DB ,Postman ) 2. To provide a serious and a heavy programming background ( Java language) ,the newest technologies (Java 8 & 9, Maven ,Jenkins , Restful , JPA , ORM , HTML ,CSS , JS) and the latest frameworks which are used in the industry (Spring , NoSQL , Swagger, Angular/React ,Lombok) 3. To implement the relevant Programming Design patterns like Singleton ,MVC, Factory , Abstract , Adapter , Facade , Composite , Visitor ,Proxy ,Iterator and the newest programming concepts & architectures (modularity , loose coupling, Microservices )",0,0,2022,2023,1,https://github.com/ahmadsb/Advanced-Software-Development---JAVA-MICROSERVICES
Composite,Restaurant-Management---Java,"Consider implementing a restaurant management system. The system should have three types of users: administrator, waiter and chef. The administrator can add, delete and modify existing products from the menu. The waiter can create a new order for a table, add elements from the menu, and compute the bill for an order.  The chef is notified each time it must cook food ordered through a waiter. Consider the system of classes in the diagram below. To simplify the application you may assume that the system is used by only one administrator, one waiter and one chef, and there is no need of a login process.  Solve the following:   1. Define the interface RestaurantProcessing containing the main operations that can be executed by the waiter or the administrator, as follows:  • Administrator: create new menu item, delete menu item, edit menu item  • Waiter: create new order; compute price for an order; generate bill in .txt format.   2. Define and implement the classes from the class diagram shown above:  • Use the Composite Design Pattern for defining the classes MenuItem, BaseProduct and CompositeProduct  • Use the Observer Design Pattern to notify the chef each time a new order containing a composite product is added.   3. Implement the class Restaurant using a predefined JCF collection which uses a hashtable data structure. The hashtable key will be generated based on the class Order, which can have associated several MenuItems. Use JTable to display Restaurant related information.  • Define a structure of type Map> for storing the order related information in the Restaurant class. The key of the Map will be formed of objects of type Order, for which the hashCode() method will be overwritten to compute the hash value within the Map from the attributes of the Order (OrderID, date, etc.)  • Define a structure of type Collection which will save the menu of the restaurant. Choose the appropriate collection type for your implementation.  • Define a method of type “well formed” for the class Restaurant. • Implement the class using Design by Contract method (involving pre, post conditions, invariants, and assertions).   4. The menu items for populating the Restaurant object will be loaded/saved from/to a file using Serialization.",0,1,2021,2021,1,https://github.com/alexpereanu/Restaurant-Management---Java
Decorator,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Decorator,laravel-large-project,"An example project with detailed documentation created to show how to build large and maintanable projects in laravel/php and use design patterns like decorator, iterator, proxy etc.",180,35,2020,2025,4,https://github.com/stasyanko/laravel-large-project
Decorator,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Decorator,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Decorator,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Decorator,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Decorator,Software-Design-Patterns,"🎨 A comprehensive exploration of object-oriented design patterns, featuring fully implemented examples like inheritance, composition, observers, decorators, and factory methods. Built with Java to demonstrate their real-world applications in scalable and maintainable software design.",18,15,2024,2025,1,https://github.com/hoangsonww/Software-Design-Patterns
Decorator,pGerrit,A decorator design pattern based python Gerrit rest API library,18,4,2023,2025,2,https://github.com/demonguy/pGerrit
Decorator,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Decorator,ActionScript-State-Machine,State machine implemented in ActionScript. Optionally supports (using the decorator design pattern) history and event dispatching.,15,1,2010,2022,1,https://github.com/justinmclean/ActionScript-State-Machine
Decorator,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Decorator,Decorator-Design-Pattern,Decorator Design Pattern,14,0,2018,2024,1,https://github.com/akshayblevel/Decorator-Design-Pattern
Decorator,real-world-design-patterns,"Since there are a lot of misconceptions and some controversy about real-world use cases and the benefits of Design Patterns, I've decided to create this repository where I'll develop and share some implementations of them. Each pattern will have a README file with a components relationship diagram and explanations about it.",13,1,2021,2023,1,https://github.com/j-didi/real-world-design-patterns
Decorator,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Decorator,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Decorator,vue-koa-boilerplate,Vue & Koa2 isomorphism development boilerplate. With decorator design pattern and hot-reloading,11,1,2017,2020,1,https://github.com/luventa/vue-koa-boilerplate
Decorator,DesignPatternsPHP-Decorator,Repo do vídeo do youtube de Design Patterns - Decorator ,10,3,2021,2022,1,https://github.com/leoqbc/DesignPatternsPHP-Decorator
Decorator,laravel-code-examples,"Clean Architecture, SOLID, PHP 8.2, Laravel 9, RESTful API, Nginx, PostgreSQL 16, MySQL 8, CRUD, DTO, Enum, Docker Compose, Unit tests, Feature tests, SQL, Repository Criteria Pattern, Mocking Objects, Design Patterns, PHPUnit",9,1,2022,2025,1,https://github.com/d-alejandro/laravel-code-examples
Decorator,Virtual-Coffee-Shop,This project implements Decorator and Iterator Design patterns using Java,8,1,2018,2024,3,https://github.com/banerjeesamrat/Virtual-Coffee-Shop
Decorator,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Decorator,DecoratorDesignPatternCourse,Source code to accompany the Pluralsight course C# Design Patterns: Decorator,7,12,2019,2024,1,https://github.com/DavidCBerry13/DecoratorDesignPatternCourse
Decorator,php-design-patterns,"The Decorator Pattern, Adapter Pattern, Template Method Pattern, Strategy Pattern, Observer Pattern",7,0,2021,2024,1,https://github.com/manjeetk/php-design-patterns
Decorator,inventory-management-system,JavaFX app which implements various design patterns and oop principles.,7,0,2024,2025,1,https://github.com/yaeby/inventory-management-system
Decorator,py-composite,Generic implementation of the Composite Design Pattern as a Python class decorator,6,0,2022,2022,5,https://github.com/BstLabs/py-composite
Decorator,bottled_decorators,"A Gem that makes creating Decorators (real decorators, according to the decorator design pattern outlined on wikipedia). An attempt to move the community away from the current presentor / decorator mixup that is often seen.",6,0,2016,2019,1,https://github.com/John-Hayes-Reed/bottled_decorators
Decorator,quark-decorators,🖼 Simple decorators (ES2016) based on Decorator design pattern,5,1,2017,2020,2,https://github.com/fm-ph/quark-decorators
Decorator,Design-Patterns,Design patterns simple snippets,5,0,2020,2022,1,https://github.com/kolosovpetro/Design-Patterns
Decorator,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Decorator,Game-Engine-Design,"A game engine that supports a text based game. This was created as a demonstration of use of multiple design patterns be implemented into a single project but working independently of each other. Includes the State pattern, Factory pattern, basic Facade pattern, Decorator pattern and Observer pattern.",4,5,2018,2024,1,https://github.com/Cermic/Game-Engine-Design
Decorator,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Decorator,Decorator-Pattern-Java,Decorator pattern allows a user to add new functionality to an existing object without altering its structure. This type of design pattern comes under structural pattern as this pattern acts as a wrapper to existing class.,4,0,2021,2022,1,https://github.com/iresh-rajitha/Decorator-Pattern-Java
Decorator,UstaDonerciDesignPattern,"A term project about usage of multiple design pattern. In this project used Decorator Pattern, Factory Pattern, Template Method Pattern, Command Pattern. ",4,0,2020,2022,1,https://github.com/Scankiran/UstaDonerciDesignPattern
Decorator,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Decorator,dp-structural-decorator,Design Pattern: Structural - Decorator,3,3,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-structural-decorator
Decorator,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Decorator,DomHandler,Decorative design pattern to ease DOM handling,3,0,2017,2023,2,https://github.com/WsdlToPhp/DomHandler
Decorator,WsdlHandler,Decorative design pattern to ease WSDL handling based on DomHandler,3,1,2021,2025,1,https://github.com/WsdlToPhp/WsdlHandler
Decorator,design-patterns,"Examples of the Decorator, Observer, State, and the Visitor design patterns in Java",3,0,2015,2021,0,https://github.com/motasay/design-patterns
Decorator,Observer-Strategy-Decorator-Design-Patterns-With-WPF,"In this project; observer, decorator and strategy design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",3,0,2021,2024,1,https://github.com/kamilhan-karaismailoglu/Observer-Strategy-Decorator-Design-Patterns-With-WPF
Decorator,DesignPatterns-Web.Core,"Including .Net Core 3.1-5.0-6.0, MVC, Layers Architecture, PostgreSQL, Entity Framework Core, Code First, ChainOfResponsibility, CQRS, TemplateMethod, Observer, UnitOfWork, Repository, Composite, Mediator, Iterator, Facade, Decorator Design Patterns Transactions.",3,1,2023,2024,1,https://github.com/erkanbstn/DesignPatterns-Web.Core
Decorator,AR-Design-Patterns-In-Swift,用Swift来实现设计模式,3,1,2018,2020,1,https://github.com/andyRon/AR-Design-Patterns-In-Swift
Decorator,Design-Pattern-Decorator,An Demonstration Completing the Presentation Slide about the Design Pattern Decorator that i made. The Demos are made with PHP and JAVA.,2,4,2020,2025,1,https://github.com/orbitturner/Design-Pattern-Decorator
Decorator,Diamond.Core-Patterns,C# libraries to support common design patterns.,2,2,2019,2024,3,https://github.com/porrey/Diamond.Core-Patterns
Decorator,Decorator,Design Pattern implemented in C#,2,0,2020,2023,1,https://github.com/wojciechligeza/Decorator
Decorator,DecoratorSample,Decorator design pattern on notification sample,2,0,2019,2022,1,https://github.com/bezzad/DecoratorSample
Decorator,DesignPattern_TheDecoratorPattern,Design pattern php,2,0,2022,2022,1,https://github.com/vanquang202/DesignPattern_TheDecoratorPattern
Decorator,decorator-pattern-java,Decorator Design Pattern in Java,2,0,2021,2023,1,https://github.com/Sahanaka/decorator-pattern-java
Decorator,Design-Patterns,Design Patterns Decorator Strategy Observer ,2,0,2022,2023,1,https://github.com/Amin-chak99/Design-Patterns
Decorator,IS-Lez-Decor,Un esempio di design pattern Decorator,2,0,2023,2024,1,https://github.com/e-tramontana/IS-Lez-Decor
Decorator,AdaDecoratorPattern,Example of the Decorator design pattern in Ada,2,0,2019,2023,0,https://github.com/jonoliver82/AdaDecoratorPattern
Decorator,kohana-decorator,Decorator design pattern module for kohana 3.x framework,2,0,2011,2014,1,https://github.com/emtou/kohana-decorator
Decorator,TetrisDual,"Multiplayer Tetris utilizing observer, factory, and decorator design patterns",2,0,2019,2020,2,https://github.com/MatthewZMD/TetrisDual
Decorator,My_Car_With_Special_Pattern,ENSE 470 Lab U of R - Decorator Design Pattern,2,1,2019,2020,1,https://github.com/zainshafiq/My_Car_With_Special_Pattern
Decorator,Christmas-Tree-Decorator,Christmas Tree Decorator is GUI Application using JavaFX. This application apply design pattern principle,2,0,2018,2023,4,https://github.com/adib1204/Christmas-Tree-Decorator
Decorator,DesignPatterns,Sample codes with c++ to understand design patterns.,2,0,2020,2021,1,https://github.com/hamuryen/DesignPatterns
Decorator,RealWordExample_DecoratorDesignPattern,Decorator is a real world example for Design Pattern. Hope it will be useful to those who are interested,2,0,2020,2021,1,https://github.com/vmutlu/RealWordExample_DecoratorDesignPattern
Decorator,DesignPattern,"Design pattern ""Gang of Four"" : Proxy, Composite, Decorator, Strategy, Observer, Adapter, Builder, Factory, FactoryAbstract.",2,0,2021,2021,1,https://github.com/belaid1993/DesignPattern
Decorator,react-voice-decorator,react voice recorder component using navigator's mediaDevices and MediaRecorder api that provides record/play/pause functionalities for developers using render-props design pattern,2,0,2020,2022,1,https://github.com/ammoradi/react-voice-decorator
Decorator,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Decorator,fynapp_backend,"Python Flask backend for FynApp. It can use DynamoDb or MongoDB. The DynamoDb interaction is made by mongoDb like calls. Software design patterns used: factory method, facade, iterator, template method, decorator.",2,0,2022,2023,1,https://github.com/tomkat-cr/fynapp_backend
Decorator,avalanche,"C# library for stream processing using the decorator design pattern. Build a pipeline of operations to parse, store, persist, and publish data from various sources. Comes with pre-defined operations and allows custom ones.",2,0,2022,2023,1,https://github.com/graduenz/avalanche
Decorator,Notifyr,"Multi-Channel Message Relay with AI Customer Service 🚀 A FastAPI-powered messaging system for Email ✉️, SMS 📲, and Voice 🎙️, featuring Redis scheduling ⏰, implemented with a custom Decorator Design Pattern 🎨 and IoC Container . It also includes an AI assistant leveraging LLM , RAG 📚, KG 🧠, and Speech-to-Text 🎤 throughout the project.  ",2,1,2024,2025,1,https://github.com/princee1/Notifyr
Decorator,OOSW-Project2-SpaceInvanders,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",2,0,2021,2023,1,https://github.com/johnnylongvo/OOSW-Project2-SpaceInvanders
Decorator,design-pattern-decorator,Want to learn more about using the decorator design pattern in Java? Check out this example using the Shape class to learn how,1,2,2020,2023,1,https://github.com/BrijeshSaxena/design-pattern-decorator
Decorator,Decorator,Decorator Design Pattern,1,0,2016,2019,1,https://github.com/macdidi5/Decorator
Decorator,decorator,Decorator design pattern,1,0,2023,2023,1,https://github.com/starseeker-code/decorator
Decorator,BuildACarUsingDesignPatterns,"Code to build a car, drive it and rent it via Some design patterns - Abstract Factory, Decorator, Template Method, Strategy",1,2,2015,2024,1,https://github.com/pserra77/BuildACarUsingDesignPatterns
Decorator,DP-Decorator,design pattern decorator,1,0,2024,2024,1,https://github.com/shaimi-hamza/DP-Decorator
Decorator,DesignPatterns.Decorator,Decorator Design Pattern,1,0,2022,2022,1,https://github.com/dFarkhod/DesignPatterns.Decorator
Decorator,DesignPatterns_chapter-3,Decorator design pattern,1,0,2014,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-3
Decorator,VisitorDecoratorDesignPatterns,using design patterns,1,0,2022,2022,1,https://github.com/OdeyaSadoun/VisitorDecoratorDesignPatterns
Decorator,dp_decorator,Decorator design pattern example.,1,0,2016,2022,1,https://github.com/nick79/dp_decorator
Decorator,decorator-pattern,Implement decoration design pattern,1,0,2019,2023,1,https://github.com/diem-ai/decorator-pattern
Decorator,DecoratorCar-Java,Application de Notion Decorator( design Pattern ),1,0,2019,2019,1,https://github.com/Bachir-ELmehdi/DecoratorCar-Java
Decorator,CodingShikshak-DecoratorDesignPattern,Decorator Design Pattern implemented using C#,1,0,2020,2020,1,https://github.com/ashishKumarAgarwal/CodingShikshak-DecoratorDesignPattern
Decorator,python-decorator-patterns,Design patterns for Python decorators,1,0,2021,2022,1,https://github.com/oliver-sanders/python-decorator-patterns
Decorator,Decorator-Design-Pattern,Implementation of Decorator Design Pattern,1,0,2018,2018,1,https://github.com/yamahachou/Decorator-Design-Pattern
Decorator,AbstractFactory,Design Pattern class,1,0,2017,2017,0,https://github.com/clusson/AbstractFactory
Decorator,christmas_card_ufu,Implementando o design pattern Decorator ,1,0,2021,2023,1,https://github.com/samuel-cavalcanti/christmas_card_ufu
Decorator,CoffeeShop,CoffeeShop using design pattern decorator.,1,0,2022,2023,2,https://github.com/amandap2/CoffeeShop
Decorator,jsDecorator,The Decorator Design Pattern in JavaScript,1,1,2016,2016,1,https://github.com/gergob/jsDecorator
Decorator,DecoratorDesignPattern,This is an example of Decorator Design Pattern,1,0,2021,2021,1,https://github.com/thisismzm/DecoratorDesignPattern
Decorator,DecoratorDesignPattern,Sample code to use a decorator design pattern,1,0,2024,2024,1,https://github.com/MBakhtiari97/DecoratorDesignPattern
Decorator,Design_Patterns,Design Pattern Examples,1,0,2022,2022,0,https://github.com/mertcanuygun/Design_Patterns
Decorator,DesignPattern-Decorator,Example implementation of Decorator design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Decorator
Decorator,design-pattern-decorator,Utilisation du Design Pattern de structuration : Decorator,1,0,2024,2024,1,https://github.com/ZK9XW3/design-pattern-decorator
Decorator,decoratorDemo_java,"A simple demo of the decorator design pattern, by java.",1,0,2019,2019,1,https://github.com/AmoyHan/decoratorDemo_java
Decorator,decoratorDemo_OC,"A simple demo of the decorator design pattern, by OC.",1,0,2019,2019,1,https://github.com/AmoyHan/decoratorDemo_OC
Decorator,DecoratorPattern,"My take on Kotlin YouTube Design Patterns series, Decorator and Proxy",1,0,2022,2022,1,https://github.com/marenovakovic/DecoratorPattern
Decorator,csharp_decorator_design_pattern,The decorator design pattern implemented in C#,1,0,2025,2025,2,https://github.com/JesseVanEvert/csharp_decorator_design_pattern
Decorator,decorator_design_pattern,Implementation of the decorator design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/decorator_design_pattern
Decorator,decorator-design-pattern,See example of decorator design pattern in go,1,0,2024,2024,1,https://github.com/bujosa/decorator-design-pattern
Decorator,decorando,Simple sample project about Decorator design pattern,1,0,2023,2023,1,https://github.com/profflaviomoreni/decorando
Decorator,art_deco,Rails implementation of the decorator design pattern.,1,0,2020,2023,0,https://github.com/Mondido/art_deco
Decorator,MCR-Projet,Space Invaders with Decorator design pattern use,1,0,2021,2022,5,https://github.com/alexis-allemann/MCR-Projet
Decorator,Ex6-Adapter-Decorator-Facade-Design-Pattern,05506230-Design Patterns In Object-Oriented Programming ,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex6-Adapter-Decorator-Facade-Design-Pattern
Decorator,decorator-design-pattern,simple implementation of decorator design pattern using java swing,1,0,2019,2020,1,https://github.com/thibeDev/decorator-design-pattern
Decorator,CppDecoratorDesignPattern,C++ (Compile-Time) Decorator Design Pattern implemented using inheritance.,1,1,2020,2021,1,https://github.com/coralkashri/CppDecoratorDesignPattern
Decorator,DecoratorDesignPatternDemo,Decorator Design Pattern in ASP.NET Core 5 - Demo Project for a blog post available at https://www.ezzylearning.net/tutorial/decorator-design-pattern-in-asp-net-core-5,1,0,2021,2021,1,https://github.com/ezzylearning/DecoratorDesignPatternDemo
Decorator,Design_Pattern,"Design Pattern, like Singleton, Decorator, State, Strategy, etc",1,0,2023,2024,1,https://github.com/PeterHUistyping/Design_Pattern
Decorator,DesignPatterns,The most used Design Patterns that softwares engineers work with. ,1,0,2020,2020,1,https://github.com/flaviocr2012/DesignPatterns
Decorator,decorator_ruby,This Ruby program is an example of de Decorator Design Pattern 🖌️,1,0,2021,2021,1,https://github.com/LoginALee/decorator_ruby
Decorator,decorator-design-pattern,Showing example of the decorator design pattern in PHP using Laravel 5,1,0,2014,2022,1,https://github.com/WebBusinessGeek/decorator-design-pattern
Decorator,Decorator-Design-Pattern-,Here you will find complete implementation of Decorator Design Pattern with explanation,1,0,2023,2023,1,https://github.com/Neha611/Decorator-Design-Pattern-
Decorator,decorator-pattern-example,Simple code showing how to implement the decorator design pattern in python,1,1,2014,2021,1,https://github.com/aphearin/decorator-pattern-example
Decorator,OOP-Project3,"OOP project implementing singleton, factory and decorator design patterns.",1,0,2023,2024,1,https://github.com/CiobanuPaul/OOP-Project3
Decorator,MusicAlbums,"use design patterns ,Abstract Factory , MVC ,Decorator,Adapter,Facade",1,0,2016,2016,1,https://github.com/jobsyu/MusicAlbums
Decorator,TutorialDesignPatterns,"Tutorial design patterns in java : Singleton, factory-method, Decorator, ...",1,0,2019,2019,1,https://github.com/ilaghrissi/TutorialDesignPatterns
Decorator,DesignPatterns,"T-Shirts store design using four design patterns: Factory, Observer, Decorator and Simgleton",1,0,2024,2024,1,https://github.com/AymanAttili/DesignPatterns
Decorator,DesignPatterns,A small python module containing decorators for designing classes with different design patterns.,1,0,2020,2020,1,https://github.com/wassafshahzad/DesignPatterns
Decorator,Intercepting,A code sample of Intercepting with Decorator Design Pattern.,1,0,2022,2023,1,https://github.com/EmreAka/Intercepting
Decorator,design-patterns-decorator,Code for the Design patterns - Decorator chapter of the book More programming with Java,1,0,2016,2022,1,https://github.com/progund/design-patterns-decorator
Decorator,Decorator-Design-Patterns,The example of decorator work and strong inheritance functionalities.,1,0,2021,2022,1,https://github.com/SzymonSmagowski/Decorator-Design-Patterns
Decorator,Design-Patterns-Decorator,,1,0,2022,2022,1,https://github.com/Jacky0624/Design-Patterns-Decorator
Decorator,meanheap_designPatterns,"Minheap implementation with design patterns - iterator , strategy, decorator, filter, null object pattern",1,0,2014,2016,1,https://github.com/Bela2711/meanheap_designPatterns
Decorator,DesignPatterns02,"Design Patterns -02 "" Padrões Estruturais - Técnicas de (Adpter, Decorator, Composite, Facade e Proxy)",1,0,2021,2021,1,https://github.com/marcello222/DesignPatterns02
Decorator,software-quality-and-testing,"Design patterns: Factory, Builder, Adapter, Decorator, Strategy, Memento, and others.",1,0,2021,2022,1,https://github.com/sabrinalupsan/software-quality-and-testing
Decorator,decoratordesignpattern,A NET Core C# console application to implement the Decorator Design Pattern using a simple example.,1,0,2020,2023,1,https://github.com/technicalbundle/decoratordesignpattern
Decorator,BlueLibrary,"Design pattern illustration: Singleton, MVC, Decorator, Adapter, Facade, Observer, Memento.",1,0,2017,2020,1,https://github.com/ngominhtrint/BlueLibrary
Decorator,DesignPatterns,"Singelton, Observer, Decorator and Factory pattern to design a software for a shop that produces T-shirts.",1,0,2024,2025,1,https://github.com/Hadeel-Abdeljalil/DesignPatterns
Decorator,DesignPatternsWPFApp,"Small project to show implementation of Unit Of Work pattern, Decorator pattern and Repository pattern.",1,1,2017,2023,0,https://github.com/katarinakelam/DesignPatternsWPFApp
Decorator,Decorator-Pattern,Implementation of the Decorator pattern from the book Head First: Design Patterns. Changing Java to C#.,1,0,2011,2014,1,https://github.com/osukaa/Decorator-Pattern
Decorator,design-patterns-software-engineering,Studies on design patterns and software engineering.,1,0,2024,2025,1,https://github.com/kastorcode/design-patterns-software-engineering
Decorator,textEditor,"application of decorator design pattern, implement an extensible text processing package",1,0,2017,2024,1,https://github.com/boyingl/textEditor
Decorator,design_patterns,"Abstract Factory, Factory Method, Decorator and Strategy patterns Ruby implementation.",1,0,2018,2019,1,https://github.com/OscarMichelH/design_patterns
Decorator,ViewModelBundle,Bundle that provides ViewModel features by appying the decorator design pattern,1,0,2012,2014,1,https://github.com/mqmtech/ViewModelBundle
Decorator,flask-compose,"A routing library for flask applications obeying the ""Decorator Design Pattern"".",1,0,2018,2025,1,https://github.com/cmanallen/flask-compose
Decorator,Hb.RedisCacheSample.API,Asp.net Core Api with Redis Sample and Decorator Design Pattern,1,0,2023,2024,1,https://github.com/hasanbaysal/Hb.RedisCacheSample.API
Decorator,csce247DecoratorDesignPatterns,,1,0,2020,2022,1,https://github.com/burnworc/csce247DecoratorDesignPatterns
Decorator,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
Decorator,multiple-design-patterns-java,Factory Pattern & Decorator Pattern used together in Java.,1,0,2019,2021,1,https://github.com/emretanriverdi/multiple-design-patterns-java
Decorator,Design-Patterns-Examples,"Repository with several design patterns examples in Java: Strategy, Observer, Decorator, etc.",1,0,2018,2022,1,https://github.com/MarioCavero/Design-Patterns-Examples
Decorator,Mastering-Design-Patterns-in-Java,"real world examples for singleton, factory, builder, adapter, decorator, observer design patterns",1,0,2024,2024,1,https://github.com/DharshiBalasubramaniyam/Mastering-Design-Patterns-in-Java
Decorator,File-Management-System_implementing_Design_Patterns,"File Management System implementing Design Patterns uses Command,Composite,Iterator and Decorator",1,0,2023,2023,1,https://github.com/MuhammadSuffian/File-Management-System_implementing_Design_Patterns
Decorator,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Decorator,design-patterns,"Mise en oeuvre des design patterns Adapter, Observer, State, Decorator, Proxy, Command et Factory",1,0,2017,2023,3,https://github.com/cdevy/design-patterns
Decorator,AspNetCoreDesignPatterns,"Adapter, ChainResponsibility, Command, Composite, Decorator, Observer, Strategy, Template Patterns",1,0,2022,2023,0,https://github.com/MertGuney/AspNetCoreDesignPatterns
Decorator,DNDFinalProject,"Personal repo for Design Patterns Final Project. Dungeons and Dragons Style program with implementation of multiple Design Patterns(Memento, Decorator, Strategy, Factory)",1,0,2020,2020,1,https://github.com/wolffcol/DNDFinalProject
Decorator,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Decorator,DesignPatterns,"This repository is a practical demonstration of some of the widely use object-oriented design patterns used in Java. Includes coding examples to illustrate the implementation of  Singleton,Factory,Decorator,Observer and Adaptor Design Patterns.",1,0,2024,2024,1,https://github.com/umayanganacooray/DesignPatterns
Decorator,Facebook-App-DP,"Facebook app using 6 design patterns (cache Proxy, Factory Method, Builder, Strategy, Observer, Decorator)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-DP
Decorator,Unity3D-SkillSytem,"An RPG skill system created in Unity using strategy, decorator and composite design pattern",1,1,2023,2024,2,https://github.com/ngol0/Unity3D-SkillSytem
Decorator,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Decorator,design-patterns-library2,"Sistema bibliotecário com padrões de projetos: Composite, Chain of responsibility, Decorator, Proxy, Static factory method e Singleton",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library2
Decorator,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Decorator,Java-Design-Patterns,"Java project program to demonstrate design pattern implementation in Java code, such as observer, decorator, and adapter patterns of software design.",1,0,2021,2022,1,https://github.com/drew-m7/Java-Design-Patterns
Decorator,CoffeeOrderer,A quick VB.NET application that demonstrates some neat WPF controls and the Decorator design pattern.,1,0,2015,2015,1,https://github.com/akcorp2003/CoffeeOrderer
Decorator,Framework-Implementing-Design-Patterns,"A framework specially for financial institution like bank, insurance using the best practice of design patterns like Singleton, Factory, Observer, Strategy,  Decorator",1,0,2022,2022,1,https://github.com/lisa99990/Framework-Implementing-Design-Patterns
Decorator,go-grpc-microservices,Basic microservices application showing the use of grpc and using the decorator design pattern in golang,1,0,2024,2024,1,https://github.com/Akash141000/go-grpc-microservices
Decorator,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Decorator,design-patterns,:alien: A list of design patterns implementeds in JAVA that I worked during my graduation,1,0,2017,2019,1,https://github.com/MarceloBritoWD/design-patterns
Decorator,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Decorator,Java3Dmaze,"Three-Dimensional maze using DFS and BFS search algorithms. Design patterns: strategy pattern, command pattern ,decorator pattern",1,0,2016,2017,1,https://github.com/dvirHashai/Java3Dmaze
Decorator,Store_Final_Project_Design_Patterns," Streaming Binary I/O, Collections, Design Patterns: Comparator, Iterator (For file), List Iterator, Observer, MVC, Singleton, Command, Adapter, Decorator, Memento and Multi Treading Systems",1,0,2021,2022,1,https://github.com/RonShmaya/Store_Final_Project_Design_Patterns
Decorator,decorator-pattern,Decorator is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors. It's more flexible alternative to subclassing in field of expanding functionality.,1,1,2021,2023,1,https://github.com/danil-sergeev/decorator-pattern
Decorator,MVC_Chef_Game_Application,"A Java client game application based on MVC and other design patterns like Observer, Decorator, Iterator, and Factory.",1,0,2018,2019,2,https://github.com/ZhepuZhao/MVC_Chef_Game_Application
Decorator,StarbuzzCoffee,"This is sample code that demonstrates the Decorator Pattern discussed in Chapter 3 of ""Head First Design Patterns""",1,0,2012,2014,0,https://github.com/jlombardo/StarbuzzCoffee
Decorator,CECS_Coffee_Shop,Final Project in Object Oriented Design Class. Design a coffee shop register using Factory and Decorator design patterns.,1,1,2019,2020,5,https://github.com/Rv-ben/CECS_Coffee_Shop
Decorator,software-design-patterns-java,"Explore Java code examples for software design patterns—creational (Singleton, Factory), structural (Adapter, Decorator), and behavioral (Observer, Strategy). Master best practices for writing maintainable, flexible, and scalable Java code in this comprehensive repository.",1,0,2023,2023,1,https://github.com/kodiidok/software-design-patterns-java
Decorator,DataStructure-Assignment-NPC-Generator,"Submission for my DataStructures module, using states and a decorator design pattern, various NPC's could be generated easily. ",1,0,2023,2023,1,https://github.com/BrendonPlummer/DataStructure-Assignment-NPC-Generator
Decorator,design-patterns,A GitHub repository providing simple explanations and code snippets for various design patterns in JavaScript and Python.,1,0,2023,2023,1,https://github.com/simon-das/design-patterns
Decorator,EsiMealApp,"a flutter mobile app for restaurant management  implementig design patterns (chain of responsibility, decorator, factory method, singleton, strategy and facade).",1,1,2020,2020,2,https://github.com/Sihamtahi/EsiMealApp
Decorator,python-cheat-sheet,"A collection of good practices, guidelines, design patterns, built-in data types, dunder methods, decorators, and dev-made data structures.",1,0,2021,2021,1,https://github.com/marioabz/python-cheat-sheet
Decorator,Doacaofacil,"Application with a social purpose for food donation using design patterns such as: Factory Method, Composite, Adapter, Decorator, and Abstract",1,0,2024,2024,1,https://github.com/rafaelhendges/Doacaofacil
Decorator,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Decorator,desktop-application-for-quick-customer-handle,"This is a desktop application (Java) that can handle customer food orders quickly. This application is made using 6 different design patterns. Such as builder, decorator, fly-weight, interpreter, chain of responsibility and mediator design patterns.",1,0,2024,2024,1,https://github.com/Varnitha12345/desktop-application-for-quick-customer-handle
Decorator,alura-design-patterns-java-I,"Design Patterns Java I: Boas práticas de programação - Não repita código com Template Method, Saiba da importancia de estudar os Padrões de projeto, Resolva problemas de muito Ifs usando Strategy, Adicione comportamentos ao seu objeto com Decorator, Crie diferentes ações com Observer, Use o Builder para criação de objetos complicados",1,0,2020,2022,1,https://github.com/Edufreitass/alura-design-patterns-java-I
Decorator,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Decorator,custome-mvc-sample-application,"custom MVC framework in PHP 7 with mixers of Decorator, Factory and Singleton design patterns | support of MySQL and MS-SQL databases.",1,0,2020,2020,2,https://github.com/kuldeep198811/custome-mvc-sample-application
Decorator,HeadlessZombie,"This project is a game that I created using object oriented design patterns. Patterns used in this project include decorator, command, and singleton.",1,0,2017,2017,0,https://github.com/jazart/HeadlessZombie
Decorator,chat_app_backend_nest_socket,"nestjs-chatapp-api-with-socket-io,crud,dto.login,decorators,gurads,design-pattern-for-nestjs-backend,docker,cicd,s3,encryption,postgress,typeorm,protobuff",1,0,2023,2025,1,https://github.com/krishbale/chat_app_backend_nest_socket
Decorator,VehicleAgency,"This project is a vehicle agency graphical user interface (GUI) implemented in Java. It incorporates various design patterns to enhance code organization and functionality. The design patterns utilized include the thread pool, memento, observer, singleton, abstract factory method, and decorator patterns.",1,0,2023,2025,1,https://github.com/RonyBubnovsky/VehicleAgency
Decorator,MusicAlbums,"This app shows a Music Album collection and allows you edit the list. It uses different design patterns like Singleton, MVC, Decorator, Adapter, Facade, Observer.",1,0,2017,2018,0,https://github.com/josman185/MusicAlbums
Decorator,ts-design,"Design patterns for building large applications: dive deeper into Typescript with decorators and React/Redux, which I use to build a custom integration between Typescript and Express.",1,0,2022,2022,1,https://github.com/GabrielDillenburg/ts-design
Decorator,Yu-Gi-Oh-Game,Simple version of Yu-Gi-Oh game with just one monster slot with some attack buffers. Two important design patterns are applied the state and the decorator! ,1,0,2024,2024,1,https://github.com/AyoubBelhaj/Yu-Gi-Oh-Game
Decorator,Random-Plot-Graph,This project draws randomly generated points in 3 similar styles graph continuously. The goal is to practice different software design patterns such as Observer and Decorator patterns.,1,0,2021,2021,1,https://github.com/toantnguyen99/Random-Plot-Graph
Decorator,Pizza_Machine,Developed A Pizza Machine that follow the Decorator Design Pattern with two interface of cost and Description also have 4 different type Pizza and &  different type Add-on. ,1,0,2023,2023,1,https://github.com/MidhinNair/Pizza_Machine
Decorator,online-shopping-simulation,"This project is an Online Shopping System that implements Singleton, Factory, Decorator, and Observer Design Patterns to manage shopping carts, apply discounts, process payments, and track order statuses.",1,0,2025,2025,1,https://github.com/meliscann/online-shopping-simulation
Decorator,decorutils,"Decorator Utilities: A set of utilities for the use of decorators in a Java web application. The goal of this project is to offer an easy way to ""decorate"" data for presentation purposes. This is partially done by using concepts introduced by the Decorator Design Pattern.",1,0,2017,2022,1,https://github.com/fptavares/decorutils
Decorator,Python_OOP_SoftUni_2021,"Understand the OOP paradigm, Creating a hierarchy of classes and inheritance , SOLID Principles, Working with Iterators and Generators,  Applying the OOP principles,  Component testing,  Working with decorators,  Design Patterns",1,0,2021,2022,1,https://github.com/HadzhieV777/Python_OOP_SoftUni_2021
Decorator,student_loan_services,"Java - Spring Boot Back-End application for students to apply for loans which can be then reviewed by the Bank Representatives and Bank Admins who can approve/reject the applications. The project implements the key design patterns such as the Observer, Strategy, Command, Decorator, Factory and the Interceptor design patterns. ",1,0,2025,2025,1,https://github.com/nikunjpanchal22/student_loan_services
Decorator,python-journal,"Explore advanced Python concepts with hands-on examples: OOP, decorators, concurrency, async programming, functional programming, data manipulation, networking, testing, and design patterns. Contribute to enrich this practical learning resource. Ideal for experienced devs and learners.",1,0,2023,2025,1,https://github.com/shashaaankkkkk/python-journal
Decorator,AnimeArea,"an eCommerce  site to sell anime t-shirts , this project is an attempt to apply some design pattern such as singleton and observer ,decorator . and the most awesome part is that it's based on  laravel . ",1,0,2017,2022,1,https://github.com/amrHassanAbdallah/AnimeArea
Decorator,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Decorator,To-do-notification-application,"Users can create labels for lists such as Grocery, Today, Travel, etc. and add items to them. Users get notified by email on the due date and todo completion. Demonstrated Multiple Design Patterns such as Observer, Decorator, and Command. Developed an Azure DevOps CI pipeline.",1,0,2024,2024,1,https://github.com/mihson95/To-do-notification-application
Decorator,Parking-System-Application,"Extensive Java project that simulates a Parking System software. The concepts explored for this assignment are: UML diagrams, inheritance, interface classes, design patterns (strategy, factory, command, decorator, observer, and builders), serialization through JSON and JUnit testing. Made for the MS in ICT: Software Design and Programming.",1,0,2022,2022,1,https://github.com/ingridjone/Parking-System-Application
Decorator,BankApiRest_Onion_Architechure,"ApiRestful project with .Net Core 7.0 ,Microsoft SQL Server, Entity Framework, CQRS with Mediator,Repository ,Specification design Patterns ,Redis Cache,Authentication and Authorization process with JWT and Identity Framework Core,Unit Test for commands and querys handler  using Moq,Wrapper(Decorator patter),Extension (Factor patter),Cust Middlewar",1,0,2023,2024,1,https://github.com/omarsilvayepes/BankApiRest_Onion_Architechure
Decorator,Maze-Game-Project,"In the project we are programming a maze game. We create a code library by creating a pseudo-code   For object-oriented programming. We implement server-client methodology. Work with streaming, files and decorator. Programmers in parallel with java threads. With Architectural Design Pattern. We carry out event-oriented programming and the GUI interface with JavaFX technology.",1,0,2020,2021,1,https://github.com/adielazari/Maze-Game-Project
Decorator,OOP-Design-Principles-For-Programmers,"The Object-Oriented Design Principles are the core of OOP programming, but I have seen most of the Java programmers chasing design patterns like Singleton pattern, Decorator pattern, or Observer pattern, and not putting enough attention on learning Object-oriented analysis and design.  It’s important to learn the basics of Object-oriented programming like Abstraction, Encapsulation, Polymorphism, and Inheritance. But, at the same time, it’s equally important to know object-oriented design principles.",1,0,2021,2022,1,https://github.com/lanaflonform/OOP-Design-Principles-For-Programmers
Decorator,OOSW-Project2-,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",1,0,2021,2023,1,https://github.com/classicvalues/OOSW-Project2-
Decorator,lab-06,Lab 6: The decorator design pattern,0,7,2023,2024,1,https://github.com/cpit252/lab-06
Decorator,decorator-pattern-example,Decorator pattern example in Java - Design pattern series by Java9s.com,0,3,2016,2016,1,https://github.com/java9s/decorator-pattern-example
Decorator,Decorator-Pattern,Decorator design pattern example for C#,0,2,2017,2019,1,https://github.com/mehmetkoca/Decorator-Pattern
Decorator,graphics-decorator,IT-CS 350: Software Design Patterns & Techniques,0,2,2024,2024,1,https://github.com/MobileApps-Cascadia/graphics-decorator
Decorator,Decorator,Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/Decorator
Decorator,decorator,Design Patterns,0,0,2024,2024,0,https://github.com/MoniqueSukerman/decorator
Decorator,decorator,design pattern,0,0,2014,2014,1,https://github.com/magiclud/decorator
Decorator,Decorator,Design Pattern,0,0,2016,2016,1,https://github.com/ryespike/Decorator
Decorator,decorator,Design pattern,0,0,2018,2018,1,https://github.com/wiltrouble/decorator
Decorator,Decorator,Structural Design Pattern in C# | Decorator Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Decorator
Decorator,DP_decorator3,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_decorator3
Decorator,DP_decorator1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_decorator1
Decorator,DP_decorator2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_decorator2
Decorator,decorator,decorator design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/decorator
Decorator,Decorator,Decorator design pattern,0,0,2020,2020,1,https://github.com/KorneliaJagodzinska/Decorator
Decorator,decorator,Design Pattern Decorator,0,0,2020,2020,1,https://github.com/mydesignpatters/decorator
Decorator,Decorator,java design patterns,0,0,2022,2022,2,https://github.com/olulat/Decorator
Decorator,Decorator,Design pattern - Decorator,0,0,2017,2017,1,https://github.com/Genato/Decorator
Decorator,decorator,Decorator design pattern,0,0,2017,2017,1,https://github.com/mschultz-epsi-oss/decorator
Decorator,Decorator,Decorator Design Pattern,0,0,2020,2020,1,https://github.com/OsMir92/Decorator
Decorator,decorator,decorator design pattern,0,0,2017,2017,0,https://github.com/zshanjun/decorator
Decorator,Decorator,Design Pattern Decorator,0,0,2022,2022,1,https://github.com/aliounemane2/Decorator
Decorator,decorator,Decorator Design Pattern,0,0,2017,2017,1,https://github.com/pswiech/decorator
Decorator,Decorator,Design Patterns - Decorator,0,0,2020,2020,1,https://github.com/euygor/Decorator
Decorator,Decorator,Design pattern Decorator,0,0,2022,2022,1,https://github.com/fagenius/Decorator
Decorator,Decorator,Decorator Design Pattern,0,0,2023,2023,1,https://github.com/deveshithanawala/Decorator
Decorator,Decorator,Design Pattern - Decorator ,0,0,2019,2019,1,https://github.com/Yodyna/Decorator
Decorator,Decorator-Design-Pattern,  Structural Design Patterns: Decorator Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Decorator-Design-Pattern
Decorator,DecoratorDesignPattern,Decorator Design Pattern,0,0,2022,2022,1,https://github.com/LakshithaPeiris/DecoratorDesignPattern
Decorator,DecoratorDesignPattern,Design Pattern 3,0,0,2021,2021,1,https://github.com/Bruth98/DecoratorDesignPattern
Decorator,decorator,Rendu design pattern Button,0,0,2017,2017,1,https://github.com/JacquesLesur/decorator
Decorator,Decorator,decorator design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Decorator
Decorator,decorator,Structural Design Pattern Decorator,0,0,2021,2021,0,https://github.com/tokuga96/decorator
Decorator,decorator,Decorator Structural Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/decorator
Decorator,Decorator-Pattern,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/Decorator-Pattern
Decorator,DecoratordesignPattern,Decorator Design pattern example ,0,0,2012,2014,1,https://github.com/NileshGule/DecoratordesignPattern
Decorator,Design_pattern-DECORATOR,Design pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-DECORATOR
Decorator,Decorator-Design-Pattern,Design Pattern,0,0,2022,2022,1,https://github.com/muskanpethiya103/Decorator-Design-Pattern
Decorator,State_Decorator_Bridge,Design Pattern,0,0,2025,2025,1,https://github.com/funatsuya/State_Decorator_Bridge
Decorator,DecoratorPattern,Head First Design Patterns,0,0,2015,2015,1,https://github.com/h4rib0/DecoratorPattern
Decorator,DPDecorator,Decorator Design pattern,0,0,2017,2017,1,https://github.com/chandrakantnitt/DPDecorator
Decorator,Decorator-Design-Pattern,Decorator Design Pattern,0,0,2019,2019,1,https://github.com/ibavli/Decorator-Design-Pattern
Decorator,decoretorPatt,design pattern - decorator,0,0,2016,2016,1,https://github.com/SStepan/decoretorPatt
Decorator,CECS-277-Lab-12,Decorator Design Pattern,0,0,2020,2020,0,https://github.com/Pengyuuu/CECS-277-Lab-12
Decorator,Pizza-order-management,Design patterns decorator.,0,0,2020,2020,1,https://github.com/Omer-Malka/Pizza-order-management
Decorator,Decorator_Industry-Pill-Counter,Decorator Design Pattern,0,0,2023,2023,1,https://github.com/srijharao/Decorator_Industry-Pill-Counter
Decorator,decorator_design_pattern,decorator design pattern,0,0,2018,2024,1,https://github.com/AJEETX/decorator_design_pattern
Decorator,decoratordesignpattern,Decorator Design Pattern,0,0,2016,2016,0,https://github.com/suada-haji/decoratordesignpattern
Decorator,PatternDecoratorPizza,Design Pattern - Decorator,0,0,2018,2018,1,https://github.com/lukasztomalczyk/PatternDecoratorPizza
Decorator,decorator_design_pattern,Decorator design pattern,0,0,2021,2021,1,https://github.com/indreshchander/decorator_design_pattern
Decorator,decorador,Decorator Design Pattern,0,0,2022,2022,1,https://github.com/janiorosa/decorador
Decorator,CarDecorator,Decorator design pattern,0,0,2015,2020,2,https://github.com/N3ll/CarDecorator
Decorator,Elementary_HW19,Decorator Design Pattern,0,0,2019,2019,1,https://github.com/ElSindarin/Elementary_HW19
Decorator,VogtDecorator,Decorator design pattern,0,0,2020,2020,1,https://github.com/gavogt/VogtDecorator
Decorator,DP_DECORATOR,DECORATOR design pattern,0,0,2017,2017,0,https://github.com/bsadiki/DP_DECORATOR
Decorator,Decorator_Design_Pattern,Decorator Design Pattern,0,0,2020,2020,1,https://github.com/FPasaoglu/Decorator_Design_Pattern
Decorator,DesignPatternDecorator,Design Pattern Decorator,0,0,2021,2021,1,https://github.com/Albert1981A/DesignPatternDecorator
Decorator,Codigo-035---Cafeteria,Design Pattern Decorator,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-035---Cafeteria
Decorator,Codigo-036----rvore-de-Natal,Design Pattern Decorator,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-036----rvore-de-Natal
Decorator,Java-decorator-design-pattern,Decorator Design Pattern,0,0,2024,2024,1,https://github.com/Maxowino/Java-decorator-design-pattern
Decorator,DesignPattern-Decorator,Design Pattern - Decorator,0,0,2018,2018,1,https://github.com/maobon/DesignPattern-Decorator
Decorator,decorator-pattern,Decorator Design Pattern,0,0,2022,2022,1,https://github.com/u-bayram/decorator-pattern
Decorator,PizzaHut,Decorator Design Pattern,0,0,2024,2024,1,https://github.com/haovo234/PizzaHut
Decorator,DecoratorDesignPattern,Decorator Design Pattern POC1,0,0,2022,2022,1,https://github.com/ashishkalradotnet/DecoratorDesignPattern
Decorator,Implement-Pizza-decorator,Design patterns decorator ,0,0,2020,2022,1,https://github.com/zahTayar/Implement-Pizza-decorator
Decorator,Decorator-Design-Pattern,Decorator-Design-Pattern,0,0,2024,2024,1,https://github.com/AprajitaChhawi/Decorator-Design-Pattern
Decorator,Creative-Assignment,Decorator Design Pattern,0,0,2022,2022,1,https://github.com/KhushiDharmik/Creative-Assignment
Decorator,design-pattern-decorator,Decorator design pattern,0,0,2025,2025,1,https://github.com/mikedr/design-pattern-decorator
Decorator,DecoratorPatternExample,Decorator Pattern Design Pattern,0,0,2024,2024,1,https://github.com/ashishpatel007/DecoratorPatternExample
Decorator,-Decorator-,Design Patterns - Decorator  C#,0,0,2023,2023,1,https://github.com/guilherme294/-Decorator-
Decorator,Decorator,Structural design pattern in php,0,0,2020,2020,1,https://github.com/rjiosum/Decorator
Decorator,Design-PatterDesign-Patterns-Decoratorns-Composite,Design Patterns – Decorator,0,0,2020,2020,1,https://github.com/lt1379/Design-PatterDesign-Patterns-Decoratorns-Composite
Decorator,Decorator-Design,Decorator Design Pattern,0,0,2024,2024,1,https://github.com/NagaiahAvinash/Decorator-Design
Decorator,decorator,Training on design pattern decorator,0,0,2022,2022,0,https://github.com/LordFeza/decorator
Decorator,Decorator,Decorator Structural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Decorator
Decorator,Decorator,Practice with decorator design pattern.,0,0,2020,2020,1,https://github.com/DLillard10UTM/Decorator
Decorator,decorator,decorator design pattern in php,0,0,2024,2024,1,https://github.com/mhk92/decorator
Decorator,Decorator,Part 4 Structural Design Pattern,0,0,2019,2019,1,https://github.com/AvinashKarada/Decorator
Decorator,swe6853-assignment1,Design Patterns - Showcase the decorator design pattern.,0,0,2023,2023,1,https://github.com/alexandropinion/swe6853-assignment1
Decorator,CaesarCipher,Design patterns - decorator and strategy design patterns,0,0,2015,2015,1,https://github.com/N3ll/CaesarCipher
Decorator,DecoratorPattern,"Implementation of one of the core software design patterns, the Decorator design pattern.",0,0,2023,2023,1,https://github.com/rdhadda123/DecoratorPattern
Decorator,Decorator-pattern,Java Design Patterns,0,0,2018,2018,1,https://github.com/balamanova/Decorator-pattern
Decorator,EmployeeManagement_DecoratorDesignPattern,Decorator Design Pattern Example,0,0,2021,2021,1,https://github.com/VaibhavBhapkar/EmployeeManagement_DecoratorDesignPattern
Decorator,Decorator-Design-Pattern,Implementation of decorator design pattern form HeadFirst design pattern,0,0,2017,2017,1,https://github.com/piyurisahu/Decorator-Design-Pattern
Decorator,decoratorPattern,Decorator Design Pattern Implementation Example,0,0,2022,2022,1,https://github.com/joaojv90/decoratorPattern
Decorator,DecoratorProject,Decorator Design Pattern - Project (POS),0,0,2024,2024,1,https://github.com/krishan1902/DecoratorProject
Decorator,DecoratorPattern,Decorator design pattern simple example,0,0,2017,2017,1,https://github.com/martamaniula/DecoratorPattern
Decorator,decoratorPattern,explanation of decorator design pattern,0,0,2023,2023,0,https://github.com/MDSUHAIL786/decoratorPattern
Decorator,DecoratorLesson,Example of decorator design pattern,0,0,2022,2022,1,https://github.com/zeMontreuilMITT/DecoratorLesson
Decorator,DecoratorPattern,Decorator Design Pattern using java.,0,0,2021,2024,1,https://github.com/Electrostat-Lab/DecoratorPattern
Decorator,Decorator,Decorator (wrapper) Design Pattern in C#,0,0,2021,2021,1,https://github.com/behnam-mahdavirad/Decorator
Decorator,decorator,Exemplo de uso design pattern Decorator ,0,0,2024,2024,1,https://github.com/NexusDVL/decorator
Decorator,DesignPatterns-Decorator,Atividade Design Patterns,0,0,2024,2024,1,https://github.com/MattRez/DesignPatterns-Decorator
Decorator,DecoratorDesignPattern,LLD for Decorator Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/DecoratorDesignPattern
Decorator,decorator,head first design pattern practice - decorator,0,0,2016,2016,0,https://github.com/EleganceLESS/decorator
Decorator,decorator,Gang of Four design pattern: Decorator,0,0,2018,2018,1,https://github.com/markKL1/decorator
Decorator,DecoratorDesignPattern,decorator design pattern using iceCream,0,0,2023,2023,1,https://github.com/CodenameOverlord/DecoratorDesignPattern
Decorator,DecoratorDesignPattern,Decorator Design Pattern using Swift ,0,0,2019,2019,1,https://github.com/iOSDevD/DecoratorDesignPattern
Decorator,Projeto-DecoratorApartamento,Exercício de programação - Design Patterns,0,0,2021,2021,1,https://github.com/rogeriotadeudosreis/Projeto-DecoratorApartamento
Decorator,Decorator,Implementation of the Decorator design pattern,0,0,2013,2013,1,https://github.com/wgimson/Decorator
Decorator,decorator,Try Design Patterns / Structural Patterns / Decorator,0,0,2022,2022,1,https://github.com/AldiRvn/decorator
Decorator,Decorator,"Builder design pattern, might need improvement.",0,0,2018,2018,0,https://github.com/scyzeq/Decorator
Decorator,Decorator,Decorator Design Pattern example in java,0,0,2019,2019,1,https://github.com/bonggalshn/Decorator
Decorator,Strategy-Iterator-Null-Decorator-Patttern-on-Minheap,Design Patterns,0,0,2015,2015,1,https://github.com/rohitvyavahare/Strategy-Iterator-Null-Decorator-Patttern-on-Minheap
Decorator,Projeto-DecoratorAiresRibeiro,Exercício de programação - Design Patterns,0,0,2021,2021,1,https://github.com/rogeriotadeudosreis/Projeto-DecoratorAiresRibeiro
Decorator,decorator-starbuzz,Decorator Design Pattern example,0,0,2016,2019,1,https://github.com/paBilicki/decorator-starbuzz
Decorator,TpDecorator,Design Pattern of Decorator,0,0,2019,2019,1,https://github.com/lelong1304/TpDecorator
Decorator,DesignPattern-Example-Decorator02,Learning Design Pattern in wikibook,0,0,2018,2018,1,https://github.com/donnghi/DesignPattern-Example-Decorator02
Decorator,DecoratorPizza,Simple example of decorator design pattern,0,0,2020,2020,1,https://github.com/FilBil/DecoratorPizza
Decorator,DecoratorPattern,Testproject voor het design pattern Decorator,0,0,2015,2015,1,https://github.com/KristofSpaas/DecoratorPattern
Decorator,decorator-design-pattern,Decorator design pattern implemented,0,0,2022,2022,1,https://github.com/kalyanchakravarty/decorator-design-pattern
Decorator,christmastree_decorator,Implementing decorator design pattern ,0,0,2024,2024,1,https://github.com/Czwiki/christmastree_decorator
Decorator,decoratorHTML,Decorator design pattern (injection balises HTML),0,0,2017,2017,1,https://github.com/mschultz-epsi-oss/decoratorHTML
Decorator,Decorator-Design-Pattern-Example,Decorator Design Pattern Example,0,0,2018,2018,1,https://github.com/AhmedEltorky/Decorator-Design-Pattern-Example
Decorator,ts_decorator,Decorator | Design Pattern | TypeScript,0,0,2018,2018,1,https://github.com/jalbertocoder/ts_decorator
Decorator,com.fredericoferreiracosta.designpatterns.decorator,Decorator design pattern example,0,0,2019,2019,1,https://github.com/fredericoferreiracosta/com.fredericoferreiracosta.designpatterns.decorator
Decorator,DotNetDecoration,Decorator Design Pattern Test,0,0,2021,2021,1,https://github.com/pereke/DotNetDecoration
Decorator,DecoratorPattern,Head First Design Patterns Chapter 3,0,0,2023,2023,1,https://github.com/DNate9427/DecoratorPattern
Decorator,paoo_ddp,Decorator Design Pattern Exercise,0,0,2020,2020,1,https://github.com/tatyvssq/paoo_ddp
Decorator,DPDecorator,Design Pattern Decorator Implementation,0,0,2022,2022,1,https://github.com/Medkaffouh/DPDecorator
Decorator,outstanding-eyeglasses,Design Pattern Decorator (Wrapper),0,0,2020,2020,2,https://github.com/kelgwiin/outstanding-eyeglasses
Decorator,CoffeeShopDecoratorDesignPattern,Java Decorator design pattern,0,0,2024,2024,1,https://github.com/Rocket387/CoffeeShopDecoratorDesignPattern
Decorator,Decorator-D.P,C# Decorator Design Pattern,0,0,2018,2018,1,https://github.com/HarunYetgindag/Decorator-D.P
Decorator,csharp-pattern-decorator,C# Design Patterns : Decorator,0,0,2020,2020,1,https://github.com/utarn/csharp-pattern-decorator
Decorator,Design_Patterns_Decorator_pattern,Design Patterns Decorator pattern,0,0,2022,2022,1,https://github.com/prostatus123/Design_Patterns_Decorator_pattern
Decorator,Professions,Decorator design pattern example,0,0,2023,2023,0,https://github.com/VladislavPavlyuk/Professions
Decorator,CSharpDP_Structural_Decorator,Structural Decorator Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Decorator
Decorator,dp-decorator-voyagercafe,design pattern - decorator pattern,0,0,2017,2017,1,https://github.com/voyagerwoo/dp-decorator-voyagercafe
Decorator,javadecoratorpattern,Decorator design pattern example,0,0,2013,2013,0,https://github.com/parkhomenko/javadecoratorpattern
Decorator,fatec_ipi_tarde_design_pattern_decorator_exercicio,Exercício  design pattern decorator,0,0,2020,2020,1,https://github.com/SayansED/fatec_ipi_tarde_design_pattern_decorator_exercicio
Decorator,University_Decorator,Implementing Decorator design pattern,0,0,2020,2021,1,https://github.com/viksimenaite/University_Decorator
Decorator,decorator-design-pattern,C# - Decorator design pattern.,0,0,2023,2023,1,https://github.com/flcristian/decorator-design-pattern
Decorator,Decorator-Design-Pattern,Decorator Design Pattern POC,0,0,2025,2025,0,https://github.com/sahuyash/Decorator-Design-Pattern
Decorator,Decorator-Design-Pattern,Sample Decorator Design Pattern,0,0,2024,2024,1,https://github.com/victory8/Decorator-Design-Pattern
Decorator,Decorator,A design pattern Decorator in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Decorator
Decorator,DecoratorDesignPattern,Demo project for Decorator Design Pattern,0,0,2015,2015,1,https://github.com/denapucaco/DecoratorDesignPattern
Decorator,Decorator,Test Program to understand Decorator design pattern,0,1,2017,2017,1,https://github.com/ajithere/Decorator
Decorator,DecoratorDesignPattern,an example of decorator design pattern,0,0,2024,2024,1,https://github.com/esmanurgokkaya/DecoratorDesignPattern
Decorator,DecoratorDesignPattern,Decorator design pattern example using Java,0,0,2015,2015,1,https://github.com/LiteObject/DecoratorDesignPattern
Decorator,Decorator,Decorator Design Pattern With Nour The Light ,0,0,2017,2017,1,https://github.com/AllaaAmer/Decorator
Decorator,Decorator,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/Decorator
Decorator,DecoratorDesignPattern,Java apps using Decorator Design Pattern,0,0,2019,2019,1,https://github.com/JustNETOrgani/DecoratorDesignPattern
Decorator,car-decoratorPattern,"Rails app, decorator design pattern used",0,0,2019,2019,0,https://github.com/ethornbury/car-decoratorPattern
Decorator,DecoratorPatternExample,Example of the Decorator design pattern,0,0,2018,2018,1,https://github.com/jonoliver82/DecoratorPatternExample
Decorator,DecoratorsSSW345,Repo for decorator design pattern assignment,0,0,2023,2023,1,https://github.com/nickopicz/DecoratorsSSW345
Decorator,SWD_Character_Decorator,SWD Design Patterns Assignment,0,0,2019,2019,1,https://github.com/workingtitledk/SWD_Character_Decorator
Decorator,DesignPatterns-DecoratorPattern,Testes Com Design Patterns em Java,0,0,2018,2018,0,https://github.com/mario1980miranda/DesignPatterns-DecoratorPattern
Decorator,decoratorpattern,decorator design pattern using java,0,0,2023,2023,1,https://github.com/kalanakarannagoda/decoratorpattern
Decorator,decoratorpattern,Creating the decorator design Pattern,0,0,2024,2025,1,https://github.com/manosakpujiha/decoratorpattern
Decorator,3-2-DesignPatterns-Decorator,"Design Patterns in Object-Oriented Programming Sixth Tasks ""Decorator Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Decorator
Decorator,DecoratorDP,Example of using the Decorator design pattern.,0,0,2023,2023,2,https://github.com/mapache17/DecoratorDP
Decorator,Decorator,A simple implementation of the decorator design pattern,0,1,2015,2015,1,https://github.com/Syhnn/Decorator
Decorator,DecoratorPattern,Decorator OO Design Pattern implemented in Java,0,0,2014,2014,1,https://github.com/iconza98/DecoratorPattern
Decorator,Decorator,design pattern associated with the software architecture discipline ,0,0,2023,2023,1,https://github.com/alvaro-veiga/Decorator
Decorator,go-decorator,Design Pattern Decorator with GoLang,0,0,2023,2023,1,https://github.com/JailtonJunior94/go-decorator
Decorator,ClassicDecorator,Decorator design pattern conventially implemented,0,0,2016,2016,1,https://github.com/jcaicoya/ClassicDecorator
Decorator,Command-Decorator, Design pattern command more Decorator,0,0,2019,2019,1,https://github.com/diegomoran777/Command-Decorator
Decorator,dp-decorator,implementation du design pattern decorattor,0,0,2022,2022,1,https://github.com/Nzonbi/dp-decorator
Decorator,Decorator,"Inspired by: ""Head First! Design Patterns"" Eric Freeman",0,0,2021,2021,1,https://github.com/smykal/Decorator
Decorator,seminario_decorator,Seminário Design Patterns IFTM 2017,0,0,2017,2017,0,https://github.com/raphaelrpereira/seminario_decorator
Decorator,Decorator-pattern,Example of decorator design pattern,0,0,2019,2019,1,https://github.com/sreckokuz/Decorator-pattern
Decorator,email-decorator,Evaluation Email decorator - Design Pattern,0,0,2019,2019,1,https://github.com/erivaud/email-decorator
Decorator,decorator-example,Example of 'Decorator' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/decorator-example
Decorator,patterns.decorator,Example for decorator design pattern,0,0,2022,2022,2,https://github.com/ingomohr/patterns.decorator
Decorator,Decorator,Exemplo simples do Design Pattern Decorator em java.,0,0,2018,2018,1,https://github.com/brunonlima/Decorator
Decorator,pattern-Decorator,Design Pattern Decorator avec java,0,0,2022,2022,1,https://github.com/Java-Design-Pattern/pattern-Decorator
Decorator,decorator-pattern,Implementation of Decorator design pattern,0,0,2023,2023,1,https://github.com/sgadkar2/decorator-pattern
Decorator,DecoratorDesignPattern,Example of Decorator Design Pattern In Go,0,0,2022,2022,1,https://github.com/NatBrian/DecoratorDesignPattern
Decorator,DecoratorPizzaFactory,Uses the decorator and factory design patterns,0,0,2018,2018,1,https://github.com/alexthayn/DecoratorPizzaFactory
Decorator,decoratorDesignPattern,Demo repo for a decorator design pattern,0,0,2019,2019,1,https://github.com/RidRack/decoratorDesignPattern
Decorator,DecoratorDesignPattern,Demonstrating the Decorator design pattern in C#,0,0,2024,2024,1,https://github.com/BackToTech-Study/DecoratorDesignPattern
Decorator,SwiftDecorator,https://medium.com/design-patterns-in-swift/design-patterns-in-swift-decorator-pattern-2026e7112869,0,0,2018,2018,1,https://github.com/Gamma404/SwiftDecorator
Decorator,DecoratorPatternExample,Window design example using Decorator Design Pattern,0,0,2017,2019,0,https://github.com/gulcanertopp/DecoratorPatternExample
Decorator,DecoratorPatternDemo,Demo of Decoration Design Pattern of C#,0,0,2020,2020,1,https://github.com/TobyXYan/DecoratorPatternDemo
Decorator,DecoratorDesignPattern,Implementing file uploader with decorator design pattern,0,0,2024,2024,0,https://github.com/mghoreishi/DecoratorDesignPattern
Decorator,Design-Pattern---Decorator-,Estudo do design pattern Decorator,0,0,2016,2016,1,https://github.com/vitorfelipep/Design-Pattern---Decorator-
Decorator,Decorator-Design-Pattern,A decorator design pattern implementation,0,0,2024,2024,1,https://github.com/Saher-debug/Decorator-Design-Pattern
Decorator,decorator-design-pattern,To demonstrate Decorator design pattern ,0,0,2023,2023,0,https://github.com/achio84/decorator-design-pattern
Decorator,decorator-in-java,a design pattern in java.,0,0,2015,2015,0,https://github.com/mkcoder/decorator-in-java
Decorator,design-pattern-decorator,Design Pattern practice with java,0,0,2024,2024,1,https://github.com/Fatema-A-Ferdaus-Ananna/design-pattern-decorator
Decorator,Projeto-Pizza-Decorator,Utilizando o Design Pattern Decorator,0,0,2020,2021,1,https://github.com/emanoelantonio/Projeto-Pizza-Decorator
Decorator,java_gof_decorator,"design pattern ""decorator"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_decorator
Decorator,Decorator-Design-Pattern,Demo of decorator Design Pattern,0,0,2024,2024,1,https://github.com/aliiioo/Decorator-Design-Pattern
Decorator,DecoratorDP,Simple project where decorator design pattern is implemented.,0,0,2020,2020,1,https://github.com/uros-veljkovic/DecoratorDP
Decorator,design-pattern-decorator,GOF decorator structural design pattern,0,0,2014,2014,1,https://github.com/a-cordier/design-pattern-decorator
Decorator,Lab5-Decorator-and-Facade-Pattern,Lab of design patterns,0,0,2024,2024,1,https://github.com/marko-homulak/Lab5-Decorator-and-Facade-Pattern
Decorator,Decoratorpattern, Decorator design pattern implementing with typescript,0,0,2017,2017,1,https://github.com/jcaviedesc/Decoratorpattern
Decorator,hellojavadecorator,Java Design Pattern Tutorial: Decorator,0,0,2013,2013,1,https://github.com/gapperdan/hellojavadecorator
Decorator,StarbuzzCoffee,Decorator Design Pattern - implementation/practice,0,0,2017,2017,1,https://github.com/bwielk/StarbuzzCoffee
Decorator,Create-the-Decorator-Design-Pattern,Creating the Decorator Design Pattern,0,0,2024,2024,1,https://github.com/sauravgyawali88/Create-the-Decorator-Design-Pattern
Decorator,design_lab7,scool project - design pattern decorator,0,0,2015,2015,1,https://github.com/DavidNr2/design_lab7
Decorator,DPBDecorator,Decorator Design pattern - From Book,0,0,2017,2017,1,https://github.com/chandrakantnitt/DPBDecorator
Decorator,design-pattern_tp2,Design pattern tp2: Décorator & State,0,0,2019,2019,0,https://github.com/RoscaS/design-pattern_tp2
Decorator,laravel-decorator-design-pattern,Laravel Decorator Design Pattern Tutorial,0,0,2023,2023,1,https://github.com/BabakNiknejad/laravel-decorator-design-pattern
Decorator,CoffeeShopApp,Implementation of Decorator Design pattern,0,0,2025,2025,1,https://github.com/ChiragParmar-786/CoffeeShopApp
Decorator,php-decorator-design-pattern,Decorator Design Pattern in PHP,0,0,2016,2016,0,https://github.com/quantumhype/php-decorator-design-pattern
Decorator,starbuzz-coffee,Decorator Design Pattern Simple Example,0,0,2019,2019,1,https://github.com/yildizozan/starbuzz-coffee
Decorator,DecoratorPattern,In french - implémentation du design pattern du décorateur,0,0,2016,2016,1,https://github.com/maximebonin/DecoratorPattern
Decorator,DecoratorPractice,a repository for the Decorator Design Pattern Practice,0,0,2023,2023,1,https://github.com/tifjdeck/DecoratorPractice
Decorator,Pizza,Implemenatation of Decorator design pattern,0,0,2022,2022,1,https://github.com/suhasinipatil/Pizza
Decorator,DecoratorExample,Example of the Decorator Design Pattern in C#,0,0,2017,2017,1,https://github.com/BornOutOfFrustration/DecoratorExample
Decorator,Design-Patterns,Implementation of Design Patterns - Decorator,0,0,2018,2018,1,https://github.com/gosia-szczepaniak/Design-Patterns
Decorator,design-patterns-decorator-exemple,a design patterns decorator exemple,0,0,2024,2024,1,https://github.com/dhia-eddine/design-patterns-decorator-exemple
Decorator,DecoratorTWO,Practical exercise about the Decorator structural design pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/DecoratorTWO
Decorator,PizzaShop,A decorator design pattern example,0,0,2016,2016,1,https://github.com/xiuyiy/PizzaShop
Decorator,zirhsan,Decorator Design Pattern Simple Example,0,0,2019,2020,1,https://github.com/yildizozan/zirhsan
Decorator,Trab-POO2,Trabalho: Jogo - Design Pattern Decorator,0,0,2024,2024,1,https://github.com/alinedorio/Trab-POO2
Decorator,Decorator,The following repo is about C# decorator design pattern ,0,0,2020,2020,0,https://github.com/pochingliu131/Decorator
Decorator,Angry-Balls,Projet de Design Pattern faisant usage du design pattern decorator,0,0,2019,2019,1,https://github.com/Nexey/Angry-Balls
Decorator,checkout-pagamento,Implementação do design pattern decorator.,0,0,2020,2020,1,https://github.com/gabriel-cunha-ads/checkout-pagamento
Decorator,Decorator_Pattern,Decorator Design Pattern minimal example + explanations ,0,0,2017,2017,1,https://github.com/Gwynbl31dd/Decorator_Pattern
Decorator,PythonDecorators,Decorators design pattern implemented in python,0,0,2019,2019,1,https://github.com/khushboo29/PythonDecorators
Decorator,DecoratorDesignPattern,Simple console application that uses Decorator Design Pattern,0,0,2016,2016,0,https://github.com/rmitchells/DecoratorDesignPattern
Decorator,DecoratorDesignPattern,Demonstration of decorator design pattern using coffee example,0,0,2024,2024,1,https://github.com/vijayrao97/DecoratorDesignPattern
Decorator,DecoratorPatternExample,https://medium.com/@ademcatamak/decorator-design-pattern-f282ddc2ce23,0,1,2020,2021,1,https://github.com/AdemCatamak/DecoratorPatternExample
Decorator,decorator-pattern,A demo of Decorator Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/decorator-pattern
Decorator,decorator-pattern,Design Pattern: Decorator Pattern in PHP,0,0,2016,2016,1,https://github.com/VVChuang/decorator-pattern
Decorator,DecoratorDesignPattern,Implement a cefe menu with decorator design pattern,0,0,2024,2024,1,https://github.com/FarzinPourabdolahi/DecoratorDesignPattern
Decorator,Decorator_pattern,"C++, Software design pattern: Decorator pattern",0,0,2020,2020,4,https://github.com/MarcJimenez99/Decorator_pattern
Decorator,BurgerDecorator,Experiment with the decorator design pattern.,0,0,2020,2022,1,https://github.com/ginagerace/BurgerDecorator
Decorator,node-decorators,Revised microservice architecture with design patterns,0,0,2018,2018,1,https://github.com/alextanhongpin/node-decorators
Decorator,DecoratorDesignPattern,small projects for practics with Decorator design pattern,0,0,2024,2024,1,https://github.com/Roman-Svyshch/DecoratorDesignPattern
Decorator,Decorator,"Uma aula sobre Decorator, um design pattern do tipo estrutural",0,0,2019,2019,1,https://github.com/LuisGustavoBlockNienkotter/Decorator
Decorator,design-pattern-decorator,My review on Design Pattern Decorator,0,0,2021,2021,1,https://github.com/marciodegan/design-pattern-decorator
Decorator,data-provider-decorator,Sample usage of Decorator Design Pattern.,0,0,2018,2018,1,https://github.com/bskton/data-provider-decorator
Decorator,Decorator-Design-Pattern,Sample explain to Decorator Design Pattern,0,0,2022,2022,1,https://github.com/ahmed-khiter/Decorator-Design-Pattern
Decorator,DecoratorStudy,Repositório de estudos do Design Pattern Decorator em Python.,0,0,2024,2024,1,https://github.com/ViniciusOtoni/DecoratorStudy
Decorator,Decorator,Demonstra em C# o padrão de projeto (design pattern) decorator.,0,0,2021,2021,1,https://github.com/MarcosCalazans/Decorator
Decorator,Decorator,"we made a DrinkMaker, to implement the Decorator Design Pattern",0,0,2021,2021,1,https://github.com/LanaAlzbibi/Decorator
Decorator,decorator-design-pattern,Decorator design pattern project for CSCE247,0,0,2021,2021,1,https://github.com/bjr0421/decorator-design-pattern
Decorator,Decorator-Multiple-Inheritance,"Decorator Design Pattern, using multiple inheritance",0,0,2018,2018,1,https://github.com/KNaka88/Decorator-Multiple-Inheritance
Decorator,Decorator-Dynamic-Composition,Decorator Design Pattern that generates dynamically,0,0,2018,2018,1,https://github.com/KNaka88/Decorator-Dynamic-Composition
Decorator,decorator-design-pattern,An example of decorator design pattern,0,1,2023,2024,1,https://github.com/aterzi24/decorator-design-pattern
Decorator,DecoratorPattern-DesignPatterns,this creates a simple decorator pattern for the hypothetical case in the head first design pattern book,0,0,2020,2020,1,https://github.com/dinith95/DecoratorPattern-DesignPatterns
Decorator,Pizza_DecoratorDesign,The Decorator design pattern experimenting on a Pizza store,0,0,2018,2018,1,https://github.com/CameronBeeler/Pizza_DecoratorDesign
Decorator,DecoratorDesignPattern,A netbeans project example of the Decorator Design Pattern,0,0,2017,2017,1,https://github.com/KadeHels/DecoratorDesignPattern
Decorator,decoratorDesignPattern,Pizza cost calculate example to understand decorator design pattern,0,0,2022,2022,1,https://github.com/Nilmani24/decoratorDesignPattern
Decorator,DesignPatterns-DecoratorPattern,,0,0,2024,2024,1,https://github.com/MohamedElhanchir/DesignPatterns-DecoratorPattern
Decorator,Demo-DecoratorPattern,Star Trek-themed example of a decorator design pattern,0,0,2018,2018,1,https://github.com/SharktasticA/Demo-DecoratorPattern
Decorator,Decorator-Pattern,Code for implementation of decorator design pattern.,0,0,2022,2022,1,https://github.com/BhumikaBalgar/Decorator-Pattern
Decorator,DecoratorDesignPatern,Example of Decorator design pattern and OOP in Java.,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/DecoratorDesignPatern
Decorator,php-design-patterns-decorator,PHP Design Patterns - Decorator Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-decorator
Decorator,TrainChallenge_DpDecorator,Challenge pour pratiquer le design pattern,0,0,2019,2019,1,https://github.com/TiaAntsari/TrainChallenge_DpDecorator
Decorator,Decorator-Factory-Design-Practice,Practicing Factory and Decorator Design Patterns,0,0,2016,2016,0,https://github.com/EricQTran/Decorator-Factory-Design-Practice
Decorator,design-patterns-text-decorator,Popular Design Patterns Implemented using Java,0,0,2020,2020,1,https://github.com/bdeore/design-patterns-text-decorator
Decorator,applyingDecoratorDesignPattern,Micronaut Applying Decorator Design Pattern Application,0,0,2021,2021,1,https://github.com/jaijuni/applyingDecoratorDesignPattern
Decorator,decorator_dp,An example of the decorator design pattern,0,0,2019,2021,1,https://github.com/JohanCederschiold/decorator_dp
Decorator,decorator_pattern,Simple Project to understand decorator design pattern,0,0,2023,2023,1,https://github.com/brngylni/decorator_pattern
Decorator,decorator_car,Rails5 - example of the decorator design pattern,0,0,2018,2018,0,https://github.com/ethornbury/decorator_car
Decorator,ses-patterns-decorator-template,Software Engineering Skills Design Patterns: Decorator ,0,0,2019,2021,1,https://github.com/KULeuven-Diepenbeek/ses-patterns-decorator-template
Decorator,decorator-design,Simple App using the Decorator Design Pattern,0,0,2014,2014,1,https://github.com/thelowlypeon/decorator-design
Decorator,dp-decorator,Example of the Decorator design pattern (C#),0,0,2022,2022,1,https://github.com/EndMove/dp-decorator
Decorator,decorator_pattern,Example of Decorator design pattern in Java,0,0,2023,2023,1,https://github.com/Matt-Warnock/decorator_pattern
Decorator,Coffe-Decorator,A simple app using Decorator design pattern,0,0,2018,2018,1,https://github.com/arturhayne/Coffe-Decorator
Decorator,decorator,Simple project demonstrating the decorator design pattern. For this one I used the design pattern to create a house which can be decorated with furnatures.,0,0,2022,2022,1,https://github.com/Piazzi/decorator
Decorator,decorator-game,Card game using the decorator design pattern.,0,0,2022,2022,1,https://github.com/umaryusuf11/decorator-game
Decorator,hfdp-decorator,Head First Design Patterns : Decorator : Coffee Shop,0,0,2018,2018,1,https://github.com/fenwickjb/hfdp-decorator
Decorator,java-decorator,This Project Implementation the Decorator Design Patterns,0,0,2020,2020,1,https://github.com/phelliperodrigues/java-decorator
Decorator,Exercises_design_patterns_Deel_1_ABerns,"design patterns: decorator, factorydesign and singleton",0,0,2023,2023,1,https://github.com/AlinaBerns/Exercises_design_patterns_Deel_1_ABerns
Decorator,decoratorPattern,This is an example of Decorator Design Pattern in JAVA,0,0,2023,2024,1,https://github.com/ClarkBelen/decoratorPattern
Decorator,DesignPatternsDecorator,Opdracht 2c Decorator,0,0,2014,2014,1,https://github.com/EdwinOtten/DesignPatternsDecorator
Decorator,Pizzaria,Implementando pizzaria utilizando design pattern Decorator,0,0,2019,2019,1,https://github.com/YasminLuz/Pizzaria
Decorator,DesignPatternDecoratorExample.NET,Design Pattern Decorator Example in .NET,0,0,2024,2024,1,https://github.com/EmilioIvanMedina/DesignPatternDecoratorExample.NET
Decorator,NMC_DesignPatterns,Experiments implementing the decorator design pattern,0,1,2014,2014,1,https://github.com/BeeryTC/NMC_DesignPatterns
Decorator,AP_HW4_A2,Singleton and Decorator Design pattern implementation,0,0,2024,2024,1,https://github.com/Kiarash-Sanei/AP_HW4_A2
Decorator,software-design-and-architectures,"Design patterns: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/oblakov0372/software-design-and-architectures
Decorator,DecoratorDP,This is an example codes implemented by Decorator Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/DecoratorDP
Decorator,GuitarFactory,"Design Patterns - Composite, Factory, strategy, decorator,",0,0,2014,2014,1,https://github.com/icelated/GuitarFactory
Decorator,Moon-1,A Decorator is a design pattern,0,0,2021,2022,1,https://github.com/ValeriaBorisova/Moon-1
Decorator,android-testing-project,Learn decorator and presenter design pattern,0,0,2017,2017,1,https://github.com/farhanarnob/android-testing-project
Decorator,UML_DP_TP2,Implementation of a decorator design pattern,0,0,2021,2021,1,https://github.com/gharbiamine/UML_DP_TP2
Decorator,Vectors,Learning adapter and decorator design pattern,0,0,2022,2022,1,https://github.com/dolooo/Vectors
Decorator,cpp_decorator_components_usage_example,C++ Decorator design pattern usage example.,0,0,2021,2021,1,https://github.com/coralkashri/cpp_decorator_components_usage_example
Decorator,BuildYourBurger,"Java, Blue J, Decorator Design Pattern",0,0,2014,2014,1,https://github.com/lingzhang-lyon/BuildYourBurger
Decorator,CaribbeanWD,Design patterns.  Structural patterns. Decorator problem,0,1,2020,2020,0,https://github.com/moar82/CaribbeanWD
Decorator,DecoratorPattern,"A demonstration of the decorator pattern, a structural design pattern. ",0,0,2019,2019,1,https://github.com/codermanu/DecoratorPattern
Decorator,PizzaShop-Decorator,"PizzaShop built using Decorator Design Pattern, Swing",0,0,2020,2021,2,https://github.com/adityastic/PizzaShop-Decorator
Decorator,decorator-design-pattern,Add example code for decorator design pattern,0,0,2022,2022,1,https://github.com/bit-sahti/decorator-design-pattern
Decorator,decorator-design-pattern,Example implementation of the decorator design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/decorator-design-pattern
Decorator,DESIGN_PATTERN_Decorator, Source code demo cho Design Pattern Decorator,0,0,2021,2021,1,https://github.com/mirushi/DESIGN_PATTERN_Decorator
Decorator,DP3_Decorator,java design patterns study#3 Decorator Pattern,0,0,2015,2015,1,https://github.com/amyarh92/DP3_Decorator
Decorator,ts-pattern-decorators,Software design patterns implemented with Typescript decorators,0,0,2023,2023,2,https://github.com/mitchgibson/ts-pattern-decorators
Decorator,decorator-design-pattern,Codigo do desafio de decorator design pattern,0,0,2022,2022,1,https://github.com/Edusilva3108/decorator-design-pattern
Decorator,decorator_design_pattern,Flutter app demo using decorator design pattern,0,0,2020,2020,1,https://github.com/VatsalBhesaniya/decorator_design_pattern
Decorator,decorator_design_pattern,Sample project for Structural Design Pattern (Decorator),0,0,2023,2023,1,https://github.com/fst-gerald/decorator_design_pattern
Decorator,DecoratorDesignPattern,Decorator Design Pattern using Java which adds toppings to Pizza,0,0,2017,2017,1,https://github.com/tusharpahuja09/DecoratorDesignPattern
Decorator,DecoratorDesignPattern,This is a Java implementation of the Decorator design pattern,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/DecoratorDesignPattern
Decorator,Design-Patterns,"Design and implementation of various design patterns - Decorator, Factory & Composite Design Pattern.",0,0,2018,2018,1,https://github.com/monica-kuppuswamy/Design-Patterns
Decorator,sandwichDecorator,sandwich price calculator using the decorator design pattern,0,0,2024,2024,1,https://github.com/TheDeGeO/sandwichDecorator
Decorator,Starbuzz-Coffee,"A introduction to the decorator design pattern from ""Head First Design Patterns""",0,0,2020,2020,1,https://github.com/demery12/Starbuzz-Coffee
Decorator,Decorator-Pattern-With-Swing,Practicing a few design patterns and swing ,0,0,2017,2017,0,https://github.com/xcperez/Decorator-Pattern-With-Swing
Decorator,ge-designer-patterns-decorator,Group of Study of Design Pattern - Decorador,0,1,2018,2018,1,https://github.com/dcommar/ge-designer-patterns-decorator
Decorator,api-decorator,an api implementation example with decorator design pattern,0,1,2022,2022,1,https://github.com/4lessandrodev/api-decorator
Decorator,DecoratorPattern-,Ini adalah contoh aplikasi sederhana Structural Design Pattern menggunakan Decorator Pattern ,0,0,2020,2020,1,https://github.com/rahadiandwiputra/DecoratorPattern-
Decorator,DecoratorDesignPatternExample,Simple program demonstrating the decorator design pattern using utilizing JPanels,0,0,2019,2019,1,https://github.com/leonngai/DecoratorDesignPatternExample
Decorator,decorator-example,This is an example of Decorator Design Pattern. ,0,0,2022,2022,1,https://github.com/shaho1090/decorator-example
Decorator,Decorator-pattern,Implementing Decorator design pattern for a registered user,0,0,2018,2018,0,https://github.com/megha-sengupta/Decorator-pattern
Decorator,JavaDecorator,Test code for decorator design pattern in java,0,0,2023,2023,0,https://github.com/kakalasek/JavaDecorator
Decorator,CS-5800-Decorator-Assignment,Decorator design pattern implementation for CS-5800.,0,0,2023,2024,1,https://github.com/CristopherH95/CS-5800-Decorator-Assignment
Decorator,Decorator_Design_Pattern_CSharp,Implement Decorator Desing Pattern (Wrapper Design Pattern),0,0,2023,2023,1,https://github.com/MahmoudAshraf2899/Decorator_Design_Pattern_CSharp
Decorator,decorator-tastyburgers,An application to explain the design pattern decorator ,0,0,2020,2020,1,https://github.com/a-dridi/decorator-tastyburgers
Decorator,DecoratorPattern,Head First Design Patterns Decorator Pattern c++ implementation of the examples,0,0,2022,2022,1,https://github.com/grtyvr/DecoratorPattern
Decorator,DecoratorPatternDrinkExample,This example include basic logic example of decorator design pattern.,0,0,2019,2019,1,https://github.com/ahmetcagdasturan/DecoratorPatternDrinkExample
Decorator,vehicle-decorator-pattern-example,C# - Decorator design pattern example with vehicles,0,0,2023,2023,1,https://github.com/flcristian/vehicle-decorator-pattern-example
Decorator,HttpClientDecoratorPattern,Decorator Design Pattern: Adding Telemetry to HttpClient,0,0,2023,2024,2,https://github.com/markhazleton/HttpClientDecoratorPattern
Decorator,DesignPatternsExample,Decorator and Factory Patterns,0,0,2023,2023,2,https://github.com/GutoFaria365/DesignPatternsExample
Decorator,design-pattern-structural-decorator,"Conceptual example about structural design pattern ""Decorator""",0,0,2023,2023,1,https://github.com/ajunquit/design-pattern-structural-decorator
Decorator,decorator,Example of decorator pattern adapted from the book Head First Design Patterns,0,0,2019,2021,2,https://github.com/omargomez2/decorator
Decorator,decoratorpattern,This project implements a software design pattern called decorator ,0,0,2022,2022,1,https://github.com/balensphillip/decoratorpattern
Decorator,DesignPatterns,"Observer, decorator and strategy usage.",0,0,2023,2023,1,https://github.com/jordanmruczynski/DesignPatterns
Decorator,DesignPatterns,"Singleton,Factory,Builder,Decorator,Strategy",0,0,2024,2024,1,https://github.com/Sruthilenka/DesignPatterns
Decorator,DecoratorDesignPattern,Common c# design patterns with easy to understand and simple examples.,0,0,2022,2022,1,https://github.com/jose-engineer/DecoratorDesignPattern
Decorator,DesignPatterns.Decorator,,0,0,2024,2024,1,https://github.com/goteEND/DesignPatterns.Decorator
Decorator,DecoratorDesignPattern,Apply Decorator Design Pattern on a Logging and Cashing FoodConsumer Api,0,0,2022,2022,1,https://github.com/osamaMahmoud328/DecoratorDesignPattern
Decorator,DesignPatterns-Decorator,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Decorator
Decorator,DesignPatternsAdapterToDecorator,Structural Design Patterns excercises: Adapter to Decorator,0,0,2023,2023,1,https://github.com/OhadEsp/DesignPatternsAdapterToDecorator
Decorator,DesignPatternsWithDecorator,Homework with decorator realization.,0,0,2016,2016,1,https://github.com/GondarOleg/DesignPatternsWithDecorator
Decorator,DesignPatterns-Decorator,Bakery example using the decorator pattern,0,0,2018,2018,1,https://github.com/brianstoiber/DesignPatterns-Decorator
Decorator,DesignPatternsDecorator,,0,0,2018,2018,1,https://github.com/BSzydlowska/DesignPatternsDecorator
Decorator,DesignPatternsDecorator,,0,0,2018,2018,0,https://github.com/xufeixianggithub/DesignPatternsDecorator
Decorator,DesignPatternsDecorator,,0,0,2019,2019,1,https://github.com/eduardomario/DesignPatternsDecorator
Decorator,design-patterns-decorator,Source for the “Design Patterns: Decorator Pattern” course,0,0,2023,2023,1,https://github.com/codecourse/design-patterns-decorator
Decorator,swiftDecoratorDP,"🍧 Decorator Design Pattern, in Swift 3.0",0,1,2017,2017,1,https://github.com/adagio/swiftDecoratorDP
Decorator,Decorator-Design-Pattern,A program playing with the decorator design pattern.,0,0,2020,2020,1,https://github.com/ChaseFaine/Decorator-Design-Pattern
Decorator,DesignPatterns_Decorator,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_Decorator
Decorator,DesignPatterns.Decorator,https://www.udemy.com/course/design-patterns-csharp-dotnet,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.Decorator
Decorator,DesignPatternsDecorator,,0,0,2024,2024,1,https://github.com/Apedrejado/DesignPatternsDecorator
Decorator,DesignPatterns-Decorator,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-Decorator
Decorator,DesignPatterns-Decorator,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Decorator
Decorator,DesignPatterns_Decorator,,0,0,2024,2024,1,https://github.com/Freedom-Coding/DesignPatterns_Decorator
Decorator,Decorator-Design-Pattern,Use Decorator Design Pattern to decorate an Input,0,0,2020,2020,1,https://github.com/onkkul/Decorator-Design-Pattern
Decorator,Decorator_design_pattern,Taking a deep dive into Software Design Patterns.,0,0,2022,2022,1,https://github.com/arafats1/Decorator_design_pattern
Decorator,Decorator-Assignment4,design pattern and object-oriented techniques (XAMK) assignment4 ,0,0,2023,2023,2,https://github.com/Dazunx/Decorator-Assignment4
Decorator,patternCompositeDecorator,basic implementation with composite and decorator design patterns,0,0,2021,2021,1,https://github.com/maikuvit/patternCompositeDecorator
Decorator,decorator-example-2,Another example of 'Decorator' software design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/decorator-example-2
Decorator,Decorator,"It's a simple practice using the principle of design patterns, the decorator",0,0,2022,2022,1,https://github.com/anopszetex/Decorator
Decorator,design-pattern-decorator,Simple implémentation du design pattern Decorator en Php,0,0,2019,2019,1,https://github.com/dev-tsf4/design-pattern-decorator
Decorator,DesignPatterns-Decorator,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Decorator
Decorator,DesignPatterns.Decorator,,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.Decorator
Decorator,DesignPatternsDecorator,,0,0,2018,2018,1,https://github.com/patdolovs/DesignPatternsDecorator
Decorator,DesignPatterns_Decorator,,0,0,2021,2021,1,https://github.com/morzhik02/DesignPatterns_Decorator
Decorator,DesignPatternsDecorator,,0,0,2019,2019,1,https://github.com/mckasap/DesignPatternsDecorator
Decorator,DesignPatternsDecorator,,0,0,2019,2019,0,https://github.com/hukopo/DesignPatternsDecorator
Decorator,DesignPatterns-Decorator,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Decorator
Decorator,DesignPatterns-Decorator,,0,0,2022,2022,1,https://github.com/GabrielBronte/DesignPatterns-Decorator
Decorator,Decorator-design-pattern,This is a decorator design pattern in java,0,0,2018,2018,1,https://github.com/jamaliasultanajisha/Decorator-design-pattern
Decorator,DesignPattern-Decorator,Decorator pattern from the HeadFirst book Design Patterns,0,0,2022,2022,1,https://github.com/GuidoDSalem/DesignPattern-Decorator
Decorator,DesignPatternsWithJava,"Singleton, Observer, Decorator & Strategy",0,0,2024,2024,1,https://github.com/Georgina444/DesignPatternsWithJava
Decorator,DesignPatterns-JAVA,Singleton | MVC | Façade | Decorator | Adapter,0,0,2020,2020,1,https://github.com/ShashithAdithyaWijerathne/DesignPatterns-JAVA
Decorator,DecoratorPattern,This Java project provides a working example of the Decorator design pattern.,0,0,2015,2015,1,https://github.com/LikeLikeAteMyShield/DecoratorPattern
Decorator,Decorator-typescript,Practical example of the Decorator design pattern in typescript,0,0,2022,2022,1,https://github.com/bvelasqo/Decorator-typescript
Decorator,Java-DecoratorDesignPattern,This repository contains simple java code that demonstrates decorator design pattern,0,0,2017,2017,1,https://github.com/Divyankitha/Java-DecoratorDesignPattern
Decorator,decorator-example,Exemple d'implémentation du design pattern Decorator en Java,0,0,2024,2024,1,https://github.com/llarboulletmarin/decorator-example
Decorator,Movie-Selling-and-Renting-Application,"Implementation of Design Patterns, i.e : Singleton, Strategy, Composite, Decorator,State design patterns.",0,0,2017,2017,1,https://github.com/ShailJhaveri/Movie-Selling-and-Renting-Application
Decorator,decorator-example,Marmara University OOP Class Assignment - Decorator Design Pattern Example,0,0,2014,2014,1,https://github.com/bamasyali/decorator-example
Decorator,Structural_Example,Example of the decorator structural design pattern,0,0,2018,2018,1,https://github.com/Slidejiveman/Structural_Example
Decorator,customize-your-pc,Desafio de Projeto - Design Pattern Decorator Example,0,0,2022,2022,1,https://github.com/pedrovbeltran/customize-your-pc
Decorator,DesignPatterns,Observer and Decorator Design Pattern Code Sample,0,0,2022,2022,1,https://github.com/nsabbani/DesignPatterns
Decorator,BestBuy,BestBuy Store Receipt using Decorator Design Pattern,0,0,2019,2019,1,https://github.com/dasare/BestBuy
Decorator,cafe-decorator,simple decorator from the head first design patterns book,0,0,2016,2016,1,https://github.com/runnerdave/cafe-decorator
Decorator,decorators-starbuzz,"Exercises from Head First Design Patterns, Chapter 3: Decorators",0,0,2023,2023,0,https://github.com/DianaLunaXIV/decorators-starbuzz
Decorator,Assignment9,Applying SOLID and the Decorator Design Pattern,0,0,2019,2019,5,https://github.com/cs3398-betazoid-betamales/Assignment9
Decorator,balloon-service,A Java project demonstrating Decorator Design Pattern,0,0,2023,2023,1,https://github.com/NdiranguMuchai/balloon-service
Decorator,Angular-v18-Design-Pattern-Decorator-NgRx-PrimeNG,Angular-v18-Design-Pattern-Decorator-NgRx-PrimeNG,0,0,2024,2024,1,https://github.com/KasiaKasia/Angular-v18-Design-Pattern-Decorator-NgRx-PrimeNG
Decorator,car-showroom,decorator and facade design patterns in java,0,0,2022,2023,1,https://github.com/raise89/car-showroom
Decorator,Decorator-Pattern-,Implemented sample Decorator patters of the software design patterns ,0,0,2018,2018,0,https://github.com/RanaJakka/Decorator-Pattern-
Decorator,RedisExample,Decorator Design Pattern yaklaşımıyla basit redis yapılanması,0,0,2024,2024,1,https://github.com/kdingin/RedisExample
Decorator,Design-Patterns,Pizza Store Implemented with Decorator Design Pattern,0,0,2022,2022,1,https://github.com/MohamedWw/Design-Patterns
Decorator,cppStarbuzz,Demonstrates the Decorator design pattern in c++,0,0,2019,2019,0,https://github.com/wt5ljon/cppStarbuzz
Decorator,The-counter-burger-receipt,User decorator design pattern to print receipt,0,0,2015,2015,1,https://github.com/zhonggn/The-counter-burger-receipt
Decorator,Assignment-9,Applying SOLID and the Decorator Design Pattern,0,0,2019,2019,3,https://github.com/cs3398-borgs-bros/Assignment-9
Decorator,CoffeeShop,"Simple Program to implement ""Decorator"" Design Pattern!",0,0,2020,2020,1,https://github.com/multible/CoffeeShop
Decorator,contaazul,Using decorator design pattern in contaazul challenge,0,0,2018,2019,1,https://github.com/araujoivan/contaazul
Decorator,Demo.DesignPattern.Decorator,An example of decorator design pattern in C#,0,0,2022,2023,1,https://github.com/LiteObject/Demo.DesignPattern.Decorator
Decorator,Decorator_Design_Pattern_PHP,an example of Decorator Design Pattern in PHP,0,0,2021,2021,1,https://github.com/ahmadabd/Decorator_Design_Pattern_PHP
Decorator,AS3-Dev-DesignPatterns-DecoratorPattern,,0,0,2016,2016,0,https://github.com/VladimirCores/AS3-Dev-DesignPatterns-DecoratorPattern
Decorator,logger-decorator,Logger Decorator - A sample app implementing the Decorator Design Pattern,0,0,2021,2021,1,https://github.com/gabigutu/logger-decorator
Decorator,Decorator-design-pattern2,This is another decorator design pattern in java,0,0,2018,2018,1,https://github.com/jamaliasultanajisha/Decorator-design-pattern2
Decorator,design_patterns,Padrão de Projeto: decorator,0,0,2021,2021,1,https://github.com/cleberlecheta/design_patterns
Decorator,DecoratorDesignPattern,This is a sample WinForm Computer Assembling Application using Decorator Design Pattern,0,0,2017,2017,0,https://github.com/alaa-m/DecoratorDesignPattern
Decorator,DesignPatterns_Task5,DesignPatterns - Task With Decorator Pattern,0,0,2022,2024,1,https://github.com/aykhan019/DesignPatterns_Task5
Decorator,design-patterns,Design patterns implemented in Go,0,0,2022,2023,1,https://github.com/Kartochnik010/design-patterns
Decorator,decorator,This repo will assist me in writing my blog explaining the decorator design pattern,0,0,2022,2022,1,https://github.com/eliwines19/decorator
Decorator,Decorator-Design-Pattern,Implementation of Decorator Design Pattern in Java using Eclipse.,0,0,2019,2019,2,https://github.com/noor-binte-amir/Decorator-Design-Pattern
Decorator,go-decorators-demo,A demonstration of the Decorator design pattern in Go,0,0,2024,2024,1,https://github.com/tiagoangelototvs/go-decorators-demo
Decorator,DesignPatterns-Structural-Decorator,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Structural-Decorator
Decorator,CoffeeDecoratorPattern,C# implementation of the Decorator Design Pattern for Coffee,0,0,2024,2024,1,https://github.com/Daryll1007/CoffeeDecoratorPattern
Decorator,ASSIGNMENT-4-DECORATORS,IT00EC00-3002 Design patterns and object-oriented techniques 2023,0,0,2023,2023,2,https://github.com/XeUby/ASSIGNMENT-4-DECORATORS
Decorator,Xperiments.DesignPatterns.Decorator,A litttle implementation of Decorator pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Decorator
Decorator,DesignPatterns-Str-Decorator,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Str-Decorator
Decorator,decorator_design_pattern_in_php,Decorator Design Pattern in PHP for class demonstration,0,0,2018,2019,1,https://github.com/aaraujo1/decorator_design_pattern_in_php
Decorator,Adapter-and-Decorator-in-Python,Using Design patterns - Adapter and Decorator in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Adapter-and-Decorator-in-Python
Decorator,DesignPatternsDecoratorPizza,,0,0,2015,2015,1,https://github.com/brunodevesa/DesignPatternsDecoratorPizza
Decorator,Java_DesignPatterns-Decorator,,0,0,2021,2021,1,https://github.com/fernando-cadalso/Java_DesignPatterns-Decorator
Decorator,designPatterns,"Exercise: Abstract Factory, Builder, Singleton, Decorator, Facade",0,0,2019,2019,1,https://github.com/alexandrakurek/designPatterns
Decorator,decorator-design-pattern,minimal example of decorator design pattern classes using php,0,0,2019,2019,1,https://github.com/isahlabbo/decorator-design-pattern
Decorator,DecoratorPattern,This is a small program demonstrating the use of the decorator design pattern.,0,0,2021,2022,1,https://github.com/shaindel-n/DecoratorPattern
Decorator,DesignPatterns-Decorator-Factory,,0,0,2023,2023,1,https://github.com/Mynreden/DesignPatterns-Decorator-Factory
Decorator,DecoratorPattern-StarbuzzCoffee,Steps by step guid for best design pattern while making `Starbuzz Coffee`,0,0,2022,2022,1,https://github.com/ankitkumar-ios/DecoratorPattern-StarbuzzCoffee
Decorator,Decorator,Sistema de venda de bebidas que utiliza o Padrão de Projeto (Design Patterns) Decorator. :coffee:,0,0,2020,2023,1,https://github.com/Gwolner/Decorator
Decorator,design-patterns,"Tests different design patterns such as Singleton, Factory, Adapter,Decorator and Observer design pattern.",0,0,2021,2021,1,https://github.com/Rasi98/design-patterns
Decorator,Design-Patterns-Impl,Design Patterns Implementation,0,0,2023,2023,1,https://github.com/TheMIU/Design-Patterns-Impl
Decorator,Structural-Decorator,This is a short implementation of the Decorator design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Structural-Decorator
Decorator,decorator-sample,This sample project is made to explore Decorator design pattern.,0,0,2022,2022,1,https://github.com/SanzharSuleimenov/decorator-sample
Decorator,SDA-DECORATOR,Project for SDA students to share design pattern decorator solution,0,0,2018,2018,1,https://github.com/WojciechPirog/SDA-DECORATOR
Decorator,PhpDesignPatterns-Decorator,Decorator,0,0,2018,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Decorator
Decorator,Decorator-Pattern,The Design Patterns used in Software Development course ENSF 480,0,0,2018,2018,1,https://github.com/umerhassan/Decorator-Pattern
Decorator,Receipt-Decorator,Program for printing receipts based on the decorator design pattern,0,0,2020,2020,1,https://github.com/mtleonardjr/Receipt-Decorator
Decorator,Decorator-Pattern,using the starBuzz Coffee Example from Head First Design Pattern,0,0,2015,2015,1,https://github.com/heshamadeldwedar/Decorator-Pattern
Decorator,Decorator_Practice,Made with the purpose of practicing the Decorator Design Pattern.,0,0,2022,2022,1,https://github.com/ColinWeatherly/Decorator_Practice
Decorator,Humber-Design-Pattern-c-Sharp-Lab3-and-Lab4,"Humber College North campus, Abstract Factory Design Pattern and  Decorator Design Pattern in C#",0,0,2025,2025,1,https://github.com/Gurjit211/Humber-Design-Pattern-c-Sharp-Lab3-and-Lab4
Decorator,CSCE247_DecoratorDesignPattern,The source code for the Decorator Design Pattern assignment for CSCE 247.,0,0,2019,2019,1,https://github.com/roguna343/CSCE247_DecoratorDesignPattern
Decorator,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Decorator,decorator-pattern,going through some head first design pattern examples and experiements,0,0,2015,2015,1,https://github.com/jeremy-brooks/decorator-pattern
Decorator,pizza_decorator,Examples of Decorator design pattern implemented in Java and Python.,0,0,2021,2021,1,https://github.com/jvirico/pizza_decorator
Decorator,decorator,Decorator pattern described on : http://cararuseugeniu.blogspot.co.uk/p/design-patterns-in-images.html,0,0,2016,2016,0,https://github.com/ecararus/decorator
Decorator,dp-assignment-decorator-pattern,Design Pattern Assignment... With JUnit TestCase for SQAT assignment,0,1,2015,2018,1,https://github.com/saif0524/dp-assignment-decorator-pattern
Decorator,decorator-design-pattern-java,Decorator Design Pattern Example made with Java and Maven.,0,0,2019,2019,1,https://github.com/emretanriverdi/decorator-design-pattern-java
Decorator,design-patterns-java-decorator,Simples implementação demonstrativa do design pattern decorator em Java,0,0,2024,2024,1,https://github.com/andresimiquelli/design-patterns-java-decorator
Decorator,design-patterns-decorator,Patrón Decorator,0,0,2019,2019,1,https://github.com/estebannovo/design-patterns-decorator
Decorator,Java-Design-Patterns,Observer & Decorator,0,0,2023,2024,1,https://github.com/fasahili/Java-Design-Patterns
Decorator,design-patterns,Design Patterns para apresentação no estágio.,0,0,2021,2022,1,https://github.com/GiovaneFGomes/design-patterns
Decorator,Design-Patterns,Assignment #3 Decorator,0,0,2015,2015,0,https://github.com/Micduhh/Design-Patterns
Decorator,decorators,"Python modules with various decorators such as design pattern decorators, documentation decorators, etc.",0,0,2019,2019,0,https://github.com/gaddlord/decorators
Decorator,Decorator-Design-Pattern,A design pattern used to add new functionality during runtime. ,0,0,2023,2023,1,https://github.com/akifislam/Decorator-Design-Pattern
Decorator,InputStreamDecorator,This an app to test a decorator software design pattern,0,0,2018,2018,1,https://github.com/tkrystkowiak/InputStreamDecorator
Decorator,TDDB84-Decorator,Simple Decorator design pattern implementation in both JavaScript and AngularJS,0,0,2017,2017,1,https://github.com/boatymctoastballs/TDDB84-Decorator
Decorator,JavaDecoratorDesign,ASU CSE 494: Advanced OOP with Java - Decorator Design Pattern,0,0,2014,2014,0,https://github.com/crsiebler/JavaDecoratorDesign
Decorator,Design-Patterns-Decorator,A problem and solution codebase for the Decorator Design Pattern,0,0,2025,2025,1,https://github.com/FalseNight/Design-Patterns-Decorator
Decorator,DesignPatternsExamples,[IFES] [POO2] Exemplos dos padrões Composite e Decorator,0,0,2014,2017,1,https://github.com/iac-isabella/DesignPatternsExamples
Decorator,DesignPatternTP,"les quatres design pattern : Strategy, Decorator, Observer, Composite",0,0,2021,2021,1,https://github.com/a-maslah/DesignPatternTP
Decorator,ReportsGenerator,Applications to implement Strategy and Decorator Design Patterns,0,0,2020,2020,1,https://github.com/clariceabreu/ReportsGenerator
Decorator,Design-Patterns,Design_Pattern Project with Decorator and Factory pattern,0,0,2022,2022,1,https://github.com/gamecem/Design-Patterns
Decorator,hfdp-decorator,Practicing the Decorator pattern using examples from Head First Design Patterns,0,0,2019,2019,1,https://github.com/nawhi/hfdp-decorator
Decorator,aop-decorator,Example how aspect (Spring Boot AOP) can enhance decorator design pattern.,0,0,2023,2023,1,https://github.com/nemrachi/aop-decorator
Decorator,DesignPatterns_Java,"Design Patterns with Java: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/DzhanSali/DesignPatterns_Java
Decorator,Zombie_Game,"Applied design pattern such as composite, decorator, builder",0,0,2017,2017,1,https://github.com/KilyN/Zombie_Game
Decorator,DesignPatterns_Assign3Decorator,,0,1,2015,2015,1,https://github.com/jfelts1/DesignPatterns_Assign3Decorator
Decorator,339-HW5-Design-Patterns,"Examples of Observer, Decorator, and Composite design patterns",0,0,2014,2014,1,https://github.com/TErenberger/339-HW5-Design-Patterns
Decorator,DesignPatterns,"review of memento, observer, adapter (protocol), decorator, facade patterns.",0,0,2016,2016,1,https://github.com/ksatia/DesignPatterns
Decorator,SuitGenerator,Suit generator simulation to implement Decorator Design Pattern,0,0,2019,2019,1,https://github.com/muazkurt/SuitGenerator
Decorator,DP-Lab-1,A text modificator implemented using decorator design pattern,0,0,2021,2021,1,https://github.com/nafiz1307/DP-Lab-1
Decorator,DesignPatterns--Decorators-and-Composite,,0,0,2017,2017,0,https://github.com/PavanTejaAnne/DesignPatterns--Decorators-and-Composite
Decorator,DecoratorDesignPattern,Quick Xcode Playground to be used for an introduction to the Decorator design pattern,0,0,2019,2019,0,https://github.com/samburnstone/DecoratorDesignPattern
Decorator,DesignPatterns,"Singleton, Decorator, Memento, Adapter, Observer, Delegate, Facade, and MVC",0,0,2017,2017,0,https://github.com/baubrey91/DesignPatterns
Decorator,structural-design-pattern-imp-order,"Common use example for structural design pattern ""Decorator""",0,0,2023,2023,1,https://github.com/ajunquit/structural-design-pattern-imp-order
Decorator,Gym,"implementing 4 design patterns - Singleton, Strategy, Observer, Decorator. ",0,0,2024,2024,1,https://github.com/Dayana1919/Gym
Decorator,Bricker,"a simple Bricker game, implements Decorator design Pattern",0,0,2023,2023,1,https://github.com/LiatRefa/Bricker
Decorator,design-pattern-2,"-- DESIGN PATTERNS USED  -- Composition, Decorator, Proxy, Builder, Singleton",0,0,2022,2022,0,https://github.com/yhann0695/design-pattern-2
Decorator,Image,Uses decorator design pattern to alter an image,0,0,2023,2023,2,https://github.com/ethanbyrd03/Image
Decorator,State_Pattern,small projects for practics with Decorator design pattern,0,0,2024,2024,0,https://github.com/Roman-Svyshch/State_Pattern
Decorator,bakery-decorator,Assignment in OOP course where we learnt about decorator design pattern,0,0,2023,2023,0,https://github.com/johanssonvincent/bakery-decorator
Decorator,DesignPatterns,"Adapter, Builder, Decorator, Chain of Responsibility, Factory, Observer, Singleton",0,0,2022,2022,0,https://github.com/KarynaAliushkevich14/DesignPatterns
Decorator,Decorator-Pattern,Decorator Design Pattern: Adaugarea de functionalitati fara a alterna structura codului.,0,0,2023,2023,1,https://github.com/PrisacariuAndrei/Decorator-Pattern
Decorator,decoratorDesignPatternsExamples,,0,0,2018,2018,1,https://github.com/giraudev/decoratorDesignPatternsExamples
Decorator,Decorator_Pattern,"in this oportunity,  i do a representation about Decorator design pattern",0,0,2017,2017,1,https://github.com/jazb18/Decorator_Pattern
Decorator,design-patterns,Learning Design Patterns.,0,0,2022,2022,1,https://github.com/tnusraddinov/design-patterns
Decorator,Decorator_Scala_Design_Pattern,Added Decorator design pattern which adds responsibility dynamically at runtime,0,0,2021,2021,1,https://github.com/gunishj/Decorator_Scala_Design_Pattern
Decorator,ImplementacaoDesignPatternDecorator,implementação do Design pattern Decorator - elaborado para apresentação de seminário,0,0,2023,2023,1,https://github.com/MarianaLuca/ImplementacaoDesignPatternDecorator
Decorator,MIET_Python_Decorator_Singleton,Project for test design patterns Singleton and Decorator in Python,0,0,2024,2024,1,https://github.com/goldenapple545/MIET_Python_Decorator_Singleton
Decorator,java-design-patterns,add decorator pattern,0,1,2019,2020,1,https://github.com/lijingrong/java-design-patterns
Decorator,design-patterns-decorator,Learning Decorator Pattern,0,0,2019,2021,1,https://github.com/diedona/design-patterns-decorator
Decorator,Design-Patterns,"Adapter, Decorator, Observer, Strategy ",0,0,2019,2019,0,https://github.com/deniskutnar/Design-Patterns
Decorator,DesignPatterns,"Project with design patterns: Iterator, Singleton, Observator, Decorator, Factory Method",0,0,2021,2021,1,https://github.com/MateuszKozik/DesignPatterns
Decorator,Design_patterns,"Observer, builder, adapter, decorator",0,0,2023,2023,2,https://github.com/timofeev-vadim-96/Design_patterns
Decorator,Design-Patterns,Observer and Decorator Patterns,0,0,2018,2018,1,https://github.com/DePacifier/Design-Patterns
Decorator,DesignPatterns,Implemented CounterBurger Problem using the composite and decorator design pattern,0,1,2014,2014,1,https://github.com/PrajaktaNaik/DesignPatterns
Decorator,Decorator_design_pattern,this is the implementation and class diagram of decorator_design_pattern,0,0,2023,2023,1,https://github.com/rajsoni5197/Decorator_design_pattern
Decorator,cache-com-decorator,Implementando cache através do framework Scruptor utilizando o Design Pattern Decodor,0,0,2022,2023,1,https://github.com/OsvaldoJRamos/cache-com-decorator
Decorator,NotificationsDecoratorPattern,"Decorator design pattern applied to terminal-based, email and audio notifications",0,0,2024,2024,1,https://github.com/DTProductions/NotificationsDecoratorPattern
Decorator,Decorator-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Decorator-Pattern
Decorator,StarbuzzDecorator,"A ""Coffee Maker"" app in Java that demonstrates the Decorator design pattern.",0,0,2019,2019,0,https://github.com/KristaBalling/StarbuzzDecorator
Decorator,decorator-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Decorator em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/decorator-java
Decorator,Java_DesignPattern_Decorator,TP Java avec la mise en place du design pattern decorator,0,0,2016,2016,0,https://github.com/vincent59u/Java_DesignPattern_Decorator
Decorator,Design_Pattern_CPP-Decorator,Some test to learn one of the most interesting design pattern,0,0,2018,2018,1,https://github.com/GeoffreyBacquet/Design_Pattern_CPP-Decorator
Decorator,FactoryDecoratorObserverPrototype,This code repository contains some of the design patterns integrated together.,0,1,2019,2019,1,https://github.com/Mark-Arias/FactoryDecoratorObserverPrototype
Decorator,decorator_design_pattern_java,Example on how to implement the decorator design pattern with java,0,0,2023,2023,1,https://github.com/Chris-Precieux/decorator_design_pattern_java
Decorator,ts_decorator_api_server,Decorator Design Pattern for build API Restfull server in Typescript language,0,0,2018,2018,1,https://github.com/mimani68/ts_decorator_api_server
Decorator,File_System_Design_patterns,"A mock file system applying the different design patterns like bridge, composite and decorator design patterns",0,0,2024,2024,1,https://github.com/Robinm94/File_System_Design_patterns
Decorator,Design-Patterns-Tutorial-Decorator,This project is taken from Derek Banas' Design Patterns Tutorial series.,0,0,2019,2019,1,https://github.com/olosinno/Design-Patterns-Tutorial-Decorator
Decorator,DesignPatterns,"Single Responsibibility Principle, Factory, Strategy, Command, Template Method, Proxy and Decorator Pattern",0,0,2020,2020,1,https://github.com/IgorFerro/DesignPatterns
Decorator,pramod.choudhari-design-patterns-decorator-pattern,Repository to give walkthrough on example of Decorator design pattern,0,0,2023,2023,1,https://github.com/pramodchoudhari/pramod.choudhari-design-patterns-decorator-pattern
Decorator,Inlamningsuppgift---Design-Patterns,Strategy-Observer-Repository-Decorator,0,0,2021,2021,1,https://github.com/GurkanGenc/Inlamningsuppgift---Design-Patterns
Decorator,More-Design-Patterns,-Implemented the State design pattern; - Implemented the Strategy design pattern - Implemented the Decorator design pattern - Implemented the Composite design pattern; - understand UML State Diagrams; and - integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/More-Design-Patterns
Decorator,DecoratorPattern,(C#/x86-64/Console/VS2019) Following the decorator pattern on YouTube Simplest Decorator Design Pattern in C#.,0,0,2021,2022,1,https://github.com/astrohart/DecoratorPattern
Decorator,Decorator-Design-Pattern,Decorator design pattern helps to add new functionalities to the existing object.,0,0,2023,2023,1,https://github.com/tejasshaha/Decorator-Design-Pattern
Decorator,Design-Patterns-Uppgift-1,"Inlämningsuppgift 1 av Design Patterns (Strategy, Repository, Observer, Decorator)",0,0,2022,2022,1,https://github.com/marcusnilss0n/Design-Patterns-Uppgift-1
Decorator,Decorator-Design-Pattern,A simple console based Food ordering system implemented using decorator design pattern,0,0,2023,2023,1,https://github.com/Mechatron00/Decorator-Design-Pattern
Decorator,Decorator_Exo,Exercice sur les design pattern en Java Exercice sur le pattern des decorators,0,0,2022,2023,1,https://github.com/Noxlumina/Decorator_Exo
Decorator,decorator-pattern,An implementation of the Decorator Design Pattern that builds custom ice cream cones.,0,0,2023,2023,1,https://github.com/DrOldGuy/decorator-pattern
Decorator,design-patterns-spring-boot,"This project, implementing, design patterns, command, factory, decorator, builder",0,0,2024,2024,1,https://github.com/guilhermeferreira0/design-patterns-spring-boot
Decorator,pizza-net,Design Patterns utilisés : Factory pattern / Strategy pattern / Decorator pattern. ,0,0,2023,2024,2,https://github.com/sarah-bouadi/pizza-net
Decorator,Decorator-Design-Pattern,This is simple basic Ice cream shop build with decorator design pattern.,0,0,2024,2024,1,https://github.com/dragonblue327/Decorator-Design-Pattern
Decorator,PatternsInCpp,"Design patterns coded in C++ (Decorator, Observer, and Factory)",0,0,2016,2016,1,https://github.com/Enriqe/PatternsInCpp
Decorator,decorator,"Example code that accompanies the Avoid Excessive Subclassing with the Decorator Design Pattern article published on January 27, 2006.",0,0,2021,2024,1,https://github.com/mpredli01/decorator
Decorator,DecorationCakeSwift,A sample of Decorator Design Pattern written in Swift4. ,0,0,2018,2018,1,https://github.com/YutoMizutani/DecorationCakeSwift
Decorator,WholesaleRebate,Prototype project with Decorator Design Pattern tested with Cucumber,0,0,2018,2018,1,https://github.com/ileontiuc/WholesaleRebate
Decorator,Pizza-Delivery-Automation,Used Data Access Object (DAO) and Decorator Design Pattern,0,0,2019,2019,1,https://github.com/tolgafguler/Pizza-Delivery-Automation
Decorator,JavaDesignPattern,"Java project on design patterns (Abstract Factory, Decorator, Facade)",0,0,2020,2020,1,https://github.com/27maxou27/JavaDesignPattern
Decorator,museumcard,Java Project using Design Pattern Decorator and Lambda Expressions,0,0,2019,2019,1,https://github.com/abartilucci/museumcard
Decorator,meta-patterns,Design patterns for Python implemented with decorators and classes.,0,0,2020,2020,1,https://github.com/JoeyDP/meta-patterns
Decorator,DesignPatternDecorator,"Implementation of the design pattern decorator in programing languages: PHP, Java, C++",0,0,2014,2014,1,https://github.com/jesusm19/DesignPatternDecorator
Decorator,Straights,Straights card game using decorator and observer design patterns!,0,0,2023,2023,1,https://github.com/derekmaxin/Straights
Decorator,lab_1_discount,Making a discount system with the design pattern Decorator,0,0,2024,2024,1,https://github.com/ConnyPettersson/lab_1_discount
Decorator,decorator-pattern,"This is a simple app on decorator pattern, a nice software design pattern",0,0,2014,2014,1,https://github.com/mah1212/decorator-pattern
Decorator,decoratorclass,ลองทำตามหนังสือ Headfirst Design Pattern แต่ทำด้วย TypeScript โดยทำตามลุงคนนี้ https://www.youtube.com/watch?v=GCraGHx6gso,0,0,2018,2019,1,https://github.com/tonmanna/decoratorclass
Decorator,RWBlueLibrary-Part1-Starter,"working on design patterns for Decorator, Facade, MVC, Singleton",0,0,2017,2017,1,https://github.com/daver234/RWBlueLibrary-Part1-Starter
Decorator,Airline-Booking-System,Java Object Oriented GUI application with Decorator Design Pattern,0,0,2023,2023,1,https://github.com/EmannMaher/Airline-Booking-System
Decorator,Shapes_DrawingApp,This is an simple application using Decorator design pattern,0,0,2023,2023,1,https://github.com/PathumSanjana/Shapes_DrawingApp
Decorator,Proxy-Trinity,"Training exercise on Design Patterns: Adapter, Proxy, and Decorator",0,0,2024,2024,0,https://github.com/SergiiKravchuk/Proxy-Trinity
Decorator,DesignPatterns,"exercises on various design patterns like composite, decorator, state, iterator, observer, strategy, etc.",0,0,2018,2019,1,https://github.com/nirbhay-kekre/DesignPatterns
Decorator,DesignPatterns,"Projetos com as metodologias, Builder, Template Method, Cadeia de responsabilidades, Decorator, Observer, State.",0,1,2016,2016,1,https://github.com/diegocar448/DesignPatterns
Decorator,designer-patterns__Decorator,,0,0,2017,2023,1,https://github.com/arthur-souza/designer-patterns__Decorator
Decorator,Design-Patterns---Decorator,,0,0,2017,2017,1,https://github.com/gweinauer/Design-Patterns---Decorator
Decorator,Decorator_Design_Patterns,,0,0,2022,2022,0,https://github.com/lordcat9696/Decorator_Design_Patterns
Decorator,Design-Patterns--Decorator,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--Decorator
Decorator,decorator_design_patterns,,0,0,2022,2022,1,https://github.com/H-2020/decorator_design_patterns
Decorator,decorator-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/decorator-design-patterns
Decorator,design.patterns.decorators,,0,0,2024,2024,1,https://github.com/niteshcodespace/design.patterns.decorators
Decorator,DecoratorDPCSharp,This is an assignment activity that involves implementation of Decorator Design Pattern using Generics and Interfaces in C#.,0,0,2024,2024,1,https://github.com/TikamRai/DecoratorDPCSharp
Decorator,design-patterns-decorators,Decorator: explicação do padrão de desenvolvimento para a disciplina Engenharia de Software III - Senac Fatec Pelotas,0,0,2017,2017,3,https://github.com/brunaNobre/design-patterns-decorators
Decorator,Design_Patterns_Decorator,,0,0,2020,2020,1,https://github.com/formelaanna/Design_Patterns_Decorator
Decorator,design-patterns-decorator,,0,1,2017,2017,1,https://github.com/monsterlessons/design-patterns-decorator
Decorator,design-patterns-decorator,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-decorator
Decorator,design.patterns.decorator,,0,0,2021,2021,1,https://github.com/cristianpp/design.patterns.decorator
Decorator,design-patterns-decorator,,0,0,2023,2023,1,https://github.com/Henderson-da-rocha-porfirio/design-patterns-decorator
Decorator,Design-Patterns-Decorator,,0,0,2023,2023,1,https://github.com/sanjanagsaraswathi01/Design-Patterns-Decorator
Decorator,Design-Patterns-Decorator,,0,0,2015,2015,1,https://github.com/Micduhh/Design-Patterns-Decorator
Decorator,decorator-design-patterns,,0,0,2021,2021,1,https://github.com/Zemiro014/decorator-design-patterns
Decorator,design_patterns__decorator,,0,0,2022,2022,1,https://github.com/catalunha/design_patterns__decorator
Decorator,Decorator-and-Proxy-pattern,Decorator and proxy design patterns on java in person and authorization example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Decorator-and-Proxy-pattern
Decorator,PizzaDecoratorPatternDemo,Implements the Decorator design pattern to make pizzas. CS 321 Assignment 2.,0,1,2016,2016,1,https://github.com/bbrakefield/PizzaDecoratorPatternDemo
Decorator,design-patterns,"Decorator, Composite, Iterator, Strategy, Template Method",0,0,2016,2017,1,https://github.com/nikolaynizruhin/design-patterns
Decorator,MyNewRestaurant_DesignPatterns,"Project with design patterns. Singleton, Command, Factory and Decorator used. ",0,0,2023,2023,1,https://github.com/ChristinaDian/MyNewRestaurant_DesignPatterns
Decorator,UpgradeSystemWithDecorator,"A simple, yet useful, upgrade system created using the Decorator design pattern",0,0,2024,2024,1,https://github.com/Renan1423/UpgradeSystemWithDecorator
Decorator,design-pattern-decorator,"Develop a system that uses the pattern given in class. ""Decorator"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design-pattern-decorator
Decorator,DesignPatterns,"Active Object, Class Adapter, Command Pattern, Creator Pattern, Decorator, Object Adapter, Strategy Pattern, Singleton.",0,0,2019,2022,1,https://github.com/iluzzamit/DesignPatterns
Decorator,pizza-patterns,Pizza patterns builds pizza orders on the fly by using factory design pattern and decorator design pattern. ,0,0,2019,2019,1,https://github.com/nishi2893/pizza-patterns
Decorator,JavaDesignPatterns,Singleton | Factory | AbstractFactory | Command | Decorator ,0,0,2017,2019,1,https://github.com/MaulikMegha/JavaDesignPatterns
Decorator,Java-Decorator-Example,Using the Decorator Design Pattern for solving a Pizza Parlor's Order problem,0,0,2018,2018,0,https://github.com/BrendanJones44/Java-Decorator-Example
Decorator,DesignPatterns,"4 Design Patterns You Should Know for Web Development: Observer, Singleton, Strategy, and Decorator",0,0,2021,2021,1,https://github.com/khairnarTK/DesignPatterns
Decorator,Java-Decorator-Pattern,This is a full example of how I implemented the Decorator Design Pattern,0,0,2020,2020,1,https://github.com/LanoCodes/Java-Decorator-Pattern
Decorator,DesignPatterns-1,"Implementation of Iterator, null object, decorator and strategy patterns for min - max heap",0,0,2014,2014,0,https://github.com/PayalGodse/DesignPatterns-1
Decorator,Weapon-Decorator,C# Console Application: Example project showing off how to use the decorator design pattern.,0,0,2020,2020,1,https://github.com/Jason-Skillman/Weapon-Decorator
Decorator,Decorators-Player,Program that uses the Decorators design pattern with C# to create a new character,0,0,2023,2023,1,https://github.com/xCarlosDevx/Decorators-Player
Decorator,Decorator-Pattern,This Repository shows how to work Object Oriented Design Pattern which name Decorator Pattern,0,0,2023,2023,1,https://github.com/munaff-adahan/Decorator-Pattern
Decorator,example-decorator-desgin-pattern-php,This is a simple implementation of the decorator design pattern in PHP.,0,0,2023,2023,0,https://github.com/ngtrdai/example-decorator-desgin-pattern-php
Decorator,Clock_using_observer_and_decorator,Implementation of a simple clock using both decorator and Observer design patterns,0,0,2018,2018,1,https://github.com/charlesbrtl/Clock_using_observer_and_decorator
Decorator,Design-Patterns,"Decorator, adapter, prototype, factory method, abstract factory",0,0,2017,2017,1,https://github.com/omarushchak/Design-Patterns
Decorator,designPatterns1,"Netbeans project for a coffee vending machine using decorator, memento, and adapter design patterns",0,0,2024,2024,0,https://github.com/InduUpadhya/designPatterns1
Decorator,design_patterns_course,delegate/bridge/visitor/decorator/iterator/composite,0,0,2018,2021,1,https://github.com/DaniilRoman/design_patterns_course
Decorator,DesignPatterns,"Meerdere design patterns zoals: Adapter Pattern, Decorator Pattern, Observer Pattern, Template Method, Facade Pattern en meer.",0,0,2019,2020,1,https://github.com/TTvdO/DesignPatterns
Decorator,node-design-patterns,Projeto simples exeplorando singletons e decorators,0,0,2024,2024,1,https://github.com/Nicolas-klaumann/node-design-patterns
Decorator,Decorator-Friday-Learning-Demo,A demo created for explaining the friday learning topic of Decorator Design Pattern,0,0,2021,2021,1,https://github.com/JANA-JamieHou/Decorator-Friday-Learning-Demo
Decorator,Decorator-Design-Pattern,this is the example of structural design pattern called decorator which implemented in .net.,0,0,2024,2024,1,https://github.com/chhayleang/Decorator-Design-Pattern
Decorator,decorator-in-ts,Simple example of decorator design pattern written in Type Script (generated JS also included),0,0,2018,2018,1,https://github.com/mateuszmilewski/decorator-in-ts
Decorator,design-patterns-in-php,"Implementing design patterns (Adapter, Decorator, Template, Strategy, etc.) using PHP",0,0,2022,2022,1,https://github.com/tee-code/design-patterns-in-php
Decorator,Pizza_Ordering_App_LLD,This is a simple implementation of the Decorator Design pattern.,0,0,2024,2024,0,https://github.com/samruddhiselukar/Pizza_Ordering_App_LLD
Decorator,InMemoryDB_DesignPatterns,"In memory database for video store inventory- implemented patterns- Mamnto, Command, Decorator",0,0,2014,2014,1,https://github.com/Bela2711/InMemoryDB_DesignPatterns
Decorator,design_pattern_decorator,Repositório dedicado à atividade de Design Patterns da disciplina de Engenharia de Software 2,0,0,2022,2022,1,https://github.com/diego-rosa/design_pattern_decorator
Decorator,dojo-cupcake,Kata using decorator and composite design patterns to build cakes,0,0,2024,2024,1,https://github.com/MariaAbh/dojo-cupcake
Decorator,sp16a6,An exercise on the observer/observable and decorator design patterns.,0,0,2016,2016,1,https://github.com/havalley/sp16a6
Decorator,Aircraft-Modelling-System,A Java program demonstrating application of the decorator design pattern.,0,0,2016,2016,1,https://github.com/PeterMcteague/Aircraft-Modelling-System
Decorator,CoffeeShop,Coffee Shop Application in Java implements Decorator Structural Design Pattern.,0,0,2025,2025,1,https://github.com/AnujMongia1/CoffeeShop
Decorator,Multimedia-Streamlined-Project,"This is my project based on Low Level Design Adaptor Design Pattern, Decorator Design Pattern using JAVA intellij",0,0,2024,2024,1,https://github.com/GausiyaNisar/Multimedia-Streamlined-Project
Decorator,Columbus-Sailing-Demo,"sailing game using strategy, abstract factory, singleton, & decorator design pattern",0,0,2018,2018,1,https://github.com/rsoliva/Columbus-Sailing-Demo
Decorator,cars-room,A small project that allow to understand decorator design pattern,0,0,2022,2022,1,https://github.com/aab595/cars-room
Decorator,exemplo-DesignPatterns,"Exemplo de Decorator Patterns em uma aplicação C#, para o Bootcamp Decola Dev Avanade 2021",0,0,2020,2020,1,https://github.com/AlandaAquino/exemplo-DesignPatterns
Decorator,basic-math-ops,Basic mathematical operations with Decorator design pattern for input validation,0,0,2020,2020,1,https://github.com/jonasrc/basic-math-ops
Decorator,Cafe,"Used Design patterns -> Factory Method, Null Object, Decorator and Builder",0,0,2020,2020,1,https://github.com/Diiiya/Cafe
Decorator,cs202-design-patterns-seminar,CS202 design patterns seminar for the Decorator and Facade pattern,0,0,2024,2025,2,https://github.com/beer-psi/cs202-design-patterns-seminar
Decorator,api-base,base api using express js and typescript design pattern decorator,0,0,2023,2023,1,https://github.com/Apuy717/api-base
Decorator,decorator-singleton-abstract-factory-design-patterns,"An example of 3 design patterns in TS - decorator, singleton & abstract factory.",0,0,2022,2024,1,https://github.com/SpinachWings/decorator-singleton-abstract-factory-design-patterns
Decorator,youtube-design-patterns-decorator,Example in typescript of design pattern decorator for Strawti channel playlist. https://www.youtube.com/watch?v=twByFM6d0Q0&list=PL9IpSeZX5M_YtNJokEt3uhO_r3YOsU-Z9,0,0,2022,2022,2,https://github.com/PedroHenry-Santos/youtube-design-patterns-decorator
Decorator,pizza-decorator,A pizza ordering program that implements the Decorator and Factory Design Patterns written in Java.,0,0,2020,2020,1,https://github.com/annmai/pizza-decorator
Decorator,GuerreiroProjeto, Jogo de um guerreiro base utilizando o design pattern decorator.,0,0,2024,2024,1,https://github.com/Novellirian/GuerreiroProjeto
Decorator,Design-Patterns-Decorator-CSHARP,,0,0,2023,2023,1,https://github.com/ivnvalxndr/Design-Patterns-Decorator-CSHARP
Decorator,Design-Patterns-6---Decorator,,0,0,2018,2018,1,https://github.com/sakarisson/Design-Patterns-6---Decorator
Decorator,DartDesignPatternsDecorator,サンプル：Dart(Flutter)のデザインパターン「デコレータ」,0,0,2021,2021,1,https://github.com/rascal9622/DartDesignPatternsDecorator
Decorator,Design_Patterns,"Java: Composite, Decorator, Observer, Simple_Factory, Strategy (2018)",0,0,2020,2022,2,https://github.com/danielChrzanowski/Design_Patterns
Decorator,Designer-Patterns,"Los Patrones utilizados fueron Adapter, Decorator y Singleton.",0,0,2022,2022,1,https://github.com/elinmontero/Designer-Patterns
Decorator,Risks_Practising_DesignPatterns,"A simple project to implement myself a few design patterns: Builder, Decorator and Command.",0,0,2019,2019,1,https://github.com/pisanina/Risks_Practising_DesignPatterns
Decorator,CS_5800_HW_5_Decorator,Uses the decorator design pattern to make a food ordering system in java,0,0,2024,2024,1,https://github.com/tapatiohaxx/CS_5800_HW_5_Decorator
Decorator,design-patterns-java,"Fasade, Decorator, Observer, Adapter + Aspect Programming Basics",0,0,2020,2020,1,https://github.com/Wetfingerzz/design-patterns-java
Decorator,decorator-design-pattern,This mini Laravel application helps you to practice the usage of the Decorator Design Pattern.,0,0,2019,2019,0,https://github.com/peterhaluska/decorator-design-pattern
Decorator,decorator-design-pattern,Design pattern that handles add-ons to a class. Example as a video game player,0,1,2020,2021,1,https://github.com/nghia-t-nguyen/decorator-design-pattern
Decorator,DesignPatterns,"some simple demo about Design Pattern

jdk 1.7
IntelliJ IDEA 13.0.3

containing (up to now):
Decorator",0,1,2014,2014,1,https://github.com/mck-dajiao/DesignPatterns
Decorator,DesignPatternsWithMaven,"I had learnt and resolved tasks about design patterns like Singleton, Builder, Strategy or Decorator.",0,0,2022,2022,0,https://github.com/Sherlocky1809-PrzemyslawMadej/DesignPatternsWithMaven
Decorator,Design-Patterns,"Mediator, Composite, Decorator, State, Strategy, Observer, Abstract Factory, SOLID",0,0,2019,2020,1,https://github.com/ozdemiryucel/Design-Patterns
Decorator,Design-Patterns,"Singleton, Adapter, Factory in C++ & Decorator, Facade in Python.",0,0,2023,2023,1,https://github.com/firatkorkmaz/Design-Patterns
Decorator,ShoppingApp,"Shopping app with design patterns. Design patterns such as Factory, Observer, Bridge, Memento, Decorator and Strategy Pattern were used.",0,0,2021,2021,0,https://github.com/melikeyilmaz/ShoppingApp
Decorator,js-design-patterns,Examples for design patterns in javascript,0,1,2019,2019,1,https://github.com/AdithyaBhat17/js-design-patterns
Decorator,Decorator-Design,Implement the a Decorator design pattern. Created a core class TextField and additional classes to add features. ,0,0,2022,2022,1,https://github.com/bricahrds2/Decorator-Design
Decorator,Dynamic_Graphics_Design_Patterns,"Decorator, Observer, and Visitor Pattern Graphics Project",0,0,2024,2024,1,https://github.com/Soufianbarkati4/Dynamic_Graphics_Design_Patterns
Decorator,AnimalRace,"Designed and developed a Java Swing application following GOF Design Patterns. Implementation involves Creational Design Patterns - Singleton, Factory method and Abstract Factory; Structural Design Patterns - Decorator; and Behavioral Design Patterns - Strategy and Observer patterns.",0,0,2017,2017,1,https://github.com/pavithravinay/AnimalRace
Decorator,Design-Patterns,Design Patterns - Decorator Pattern - Factory Method - Abstract Factory - 2-tier architecture,0,0,2014,2014,1,https://github.com/LorenzoVanLeeuwaarden/Design-Patterns
Decorator,smoothieMaker,Smoothie maker is an application which elaborates the decorator design pattern. ,0,0,2018,2018,1,https://github.com/kalathiln/smoothieMaker
Decorator,account_validator-console-dotnet,"Projeto em C# que filtra contas, utilizando o Design Pattern Decorator",0,0,2022,2023,1,https://github.com/felipetoscano/account_validator-console-dotnet
Decorator,BestBuy-Reciept,Implementing the Decorator Design Pattern (with Strategy Pattern and Factory Class),0,0,2019,2019,1,https://github.com/Shobecker/BestBuy-Reciept
Decorator,Design-Patterns-TicTacToe-Game,"Memento, Decorator, Adapter, Singleton and Command Design Patterns in one System",0,0,2019,2019,1,https://github.com/ShalevL/Design-Patterns-TicTacToe-Game
Decorator,ProjetoRegistro,Sistema para registro de usuários utilizando design patterns - Singleton e Decorator,0,0,2024,2024,1,https://github.com/andrielystarosky/ProjetoRegistro
Decorator,Starbuzz,The Decorator pattern. Based on Design Patterns book by Head First.,0,0,2013,2023,1,https://github.com/adagio/Starbuzz
Decorator,Coffee-Shop,Simple interactable coffee shop with customizable orders using decorator design patterns.,0,0,2024,2024,1,https://github.com/DaniyalSKKR/Coffee-Shop
Decorator,model-view-controller,Simple ice cream shop emulator using decorator and MVC design patterns,0,0,2018,2018,1,https://github.com/rolandoramirezx/model-view-controller
Decorator,test-webdriver-patterns,"Practise webdriver design patterns: Factory, SRP, Stategy,Template & decorator with java8+",0,0,2022,2022,1,https://github.com/AnudeepKumarTuniki/test-webdriver-patterns
Decorator,design-patterns,"Simple php design pattern. Memento, State, Strategy, Chain of Responsibility & Decorator",0,0,2021,2021,1,https://github.com/teodoroleckie/design-patterns
Decorator,design-patterns,"Creational Pattern - Singleton, AbstractFactory | Structural Pattern - Decorator | Behavioral Pattern - Visitor",0,1,2017,2019,1,https://github.com/centrumek/design-patterns
Decorator,Design_Patterns,Strategy / Observer / Decorator / Factory / Singleton / Command / Adapter / Adapter and others .,0,0,2022,2022,1,https://github.com/WiemBelhadj/Design_Patterns
Decorator,Design-Patterns-Builder-e-Decorator,"Implementação e características dos padrões de projeto conhecidos por Builder e por Decorator, aplicados em Java.",0,0,2024,2024,1,https://github.com/andref03/Design-Patterns-Builder-e-Decorator
Decorator,Projeto-de-Design-Patterns-Decorator-,"Projeto desenvolvido durante o Bootcamp Decola Dev Avanade 2021, onde foram trabalhados conceitos de Design Patterns em uma aplicação C#.",0,0,2020,2020,1,https://github.com/isaiascleiton/Projeto-de-Design-Patterns-Decorator-
Decorator,java_design_patterns_decorator_pattern,java设计模式_装饰者模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_decorator_pattern
Decorator,Java-DesignPatterns-Visitor,"Java project to design File Decorators, Populate Words, Highlight Palindromes, Mark Prime, and Print Words using Visitor Pattern",0,0,2018,2018,1,https://github.com/girishkurkute/Java-DesignPatterns-Visitor
Decorator,JAVA-DesignPatterns-Visitor,"JAVA project to design File Decorators Populate Words, Highlight Palindromes, Mark Prime, and Print Words using Visitor Pattern",0,0,2018,2018,1,https://github.com/vdkamdar/JAVA-DesignPatterns-Visitor
Decorator,Burger-Ordering-Simulation-System-Assignment,A system that simulates the online burger ordering system involving the Decorator design pattern and State design pattern using Java.,0,0,2021,2021,1,https://github.com/ChooiChunWei/Burger-Ordering-Simulation-System-Assignment
Decorator,DecoratorDesignPattern,Decorator Design Pattern applied to usage for an auto shop. MikeyAutoClient is the client. Notice the wrappers for the modification of the services.,0,0,2015,2015,0,https://github.com/nylonthanh/DecoratorDesignPattern
Decorator,decorator_observer_project,Implement the design patterns of decorator and observer for the preparation of final Java GUI project(MVC),0,0,2018,2018,1,https://github.com/ZhepuZhao/decorator_observer_project
Decorator,Design-patterns,"C# Beispiele zu den Entwicklungsmustern: Observer, Facade, MVC, Builder und Decorator.",0,0,2022,2022,1,https://github.com/amargapinho/Design-patterns
Decorator,OOP-Decorator-Mediator-Singleton,"Demonstrating the implementation of Object-Oriented Programming principles, Decorator Pattern, Mediator Design Pattern, and Singleton Pattern.",0,0,2023,2023,1,https://github.com/YoungOnef/OOP-Decorator-Mediator-Singleton
Decorator,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Decorator,designPatternsAuction,"Automated auction where the bidders are bots. There are several design patterns used in this auction: factory, observer, decorator and virtual proxy.",0,0,2017,2020,2,https://github.com/JennoVink/designPatternsAuction
Decorator,design-patterns,"Java implementation of singleton, abstract factory, adapter, decorator and observer design patterns.",0,0,2025,2025,1,https://github.com/bskracic/design-patterns
Decorator,design-patterns,"factory, command, composite, decorator, facade, iterator, mvc, observer, proxy, singleton, state, strategy",0,0,2022,2022,1,https://github.com/apkuznetsov/design-patterns
Decorator,DesignPatterns-VisitorPattern_JAVA,"JAVA project to design File Decorators Populate Words, Highlight Palindromes, Mark Prime, and Print Words using Visitor Pattern",0,0,2017,2017,1,https://github.com/shahnish009/DesignPatterns-VisitorPattern_JAVA
Decorator,Decorators,A repository demonstrating the Decorator Design Pattern implemented in C#. The Decorator pattern is a structural design pattern that allows you to attach additional responsibilities to an object dynamically. Explore practical examples and gain insights into using decorators to extend and modify object behavior seamlessly.,0,0,2023,2023,1,https://github.com/EfremMic/Decorators
Decorator,decorator-pattern-learning,"As part of learning Head First Design Patterns book's in DANA, here it is the Decorator Pattern.",0,0,2019,2019,1,https://github.com/abrakitlaw/decorator-pattern-learning
Decorator,DecoratorPattern,Decorator is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors,0,0,2024,2024,1,https://github.com/HadiMhb/DecoratorPattern
Decorator,se-designpatterns,Some design patterns written in Python for Software engineering classes.,0,0,2018,2023,1,https://github.com/MateuszGrabuszynski/se-designpatterns
Decorator,Text-Processor,Code for a simple text processor that uses the decorator design pattern,0,0,2019,2020,1,https://github.com/JohnWin8/Text-Processor
Decorator,Pizza-Toppings,Pizza Toppings - A fun program to practice using the Decorator Design Pattern,0,0,2019,2019,2,https://github.com/uncmhsu/Pizza-Toppings
Decorator,advenced-OOP,"This project contains popular Design Patterns like: Strategy, Decorator, Observer, Singleton, Factory",0,0,2024,2024,1,https://github.com/rodis00/advenced-OOP
Decorator,CSci3301-2025-DecoratorPattern,"This is the code for UMN Morris Spring 2025 CSci 3301 course. It is based on the companion code for the Head First Design Patterns book https://wickedlysmart.com/head-first-design-patterns/, with a few modifications. The credit for the original code goes to Elisabeth Robson and her coauthors.",0,0,2025,2025,1,https://github.com/elenam/CSci3301-2025-DecoratorPattern
Decorator,CashRegisterProblem,The Cash Register problem demonstrates the use of the decorator design pattern,0,0,2019,2019,1,https://github.com/reashore/CashRegisterProblem
Decorator,design_patterns,"Explanando os Design Patterns mais utilizados do JavaScript (Factory, Singleton, Decorator, Observer, Module)",0,0,2020,2020,1,https://github.com/rebeccamanzi/design_patterns
Decorator,design-patterns,"Projects that teach various OOP design patterns such as Factory, Decorator, Observer, etc. ",0,0,2021,2021,1,https://github.com/sfauteaux/design-patterns
Decorator,Java-Composite-and-Decorator-Design-Patterns,This is a mini project to study and implement the Compostie and Decorator design pattern in Java using BlueJ. The UML diagrams of the project are also included in the folder.,0,0,2017,2017,1,https://github.com/saurabhgedam/Java-Composite-and-Decorator-Design-Patterns
Decorator,SoftUni-Python-OOP-June-2022,"OOP principles, SOLID, creational, structural and behavioral design patterns, decorators, unit testing",0,0,2022,2022,1,https://github.com/borisov5/SoftUni-Python-OOP-June-2022
Decorator,assignments-Design-Patterns,"assignments Design Patterns 1 2 3, Strategy Patterns , Observer Patterns , Decorator Patterns",0,0,2022,2022,0,https://github.com/657595oi/assignments-Design-Patterns
Decorator,universtity_java_multi_db,"University Project - Java with Design Patterns - Abstract Factory, Factory and Decorator - SOLID",0,0,2023,2023,1,https://github.com/joaoangnes/universtity_java_multi_db
Decorator,minheap_designPattern,"Minheap implementation with design patterns - iterator,strategy,decorator,filter, null object pattern",0,0,2014,2014,1,https://github.com/Bela2711/minheap_designPattern
Decorator,ListaPSS,"this repository contains some solutions using Builder, Decorator and Composite design patterns. ",0,0,2020,2020,0,https://github.com/alcebiadesogamas/ListaPSS
Decorator,TrabalhoJavaP2,"Utilizando os design patterns Bridge, Decorator, Abstract Factory, Adapter, Composite, Factory Method",0,0,2013,2013,1,https://github.com/bknupp/TrabalhoJavaP2
Decorator,Interpretor-in-Java,An interpretor of syntax using Decorator and Visitor design patterns in Java.,0,0,2016,2016,0,https://github.com/craciunalexandru/Interpretor-in-Java
Decorator,php-design-patterns,"Game application with examples of design patterns Strategy, Builder, Factory, Observer, Decorator",0,0,2023,2023,0,https://github.com/iljadedeiko/php-design-patterns
Decorator,4AL2-design-patterns-decorator,,0,0,2024,2025,1,https://github.com/LoicZHU/4AL2-design-patterns-decorator
Decorator,Design_patterns_Text-Decorators-summer-2020,Assignment Goal: Develop a application using design of decorator pattern ,0,0,2020,2020,1,https://github.com/Shrijeetrupnar/Design_patterns_Text-Decorators-summer-2020
Decorator,Decorator-and-State-Design-Pattern-Combined,Short example of decorator + state design pattern to control view and animation of certain view items ,0,0,2019,2019,1,https://github.com/mariodujic/Decorator-and-State-Design-Pattern-Combined
Decorator,decorators-python-go,Slides for a presentation about Python's decorators syntactic sugar and decorator design pattern in the context of Go.,0,0,2024,2024,1,https://github.com/BSski/decorators-python-go
Decorator,CECS277-DesignPatterns-Project,"Project combining several Common Design patterns including Decorator, Memento, Observer, Singleton, and Factory. Idea is that this models a Roach Motel",0,0,2018,2018,1,https://github.com/zance1054/CECS277-DesignPatterns-Project
Decorator,DecoratorDesignPattern,Decorator is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.,0,0,2022,2022,0,https://github.com/HAMED-NIYAZI/DecoratorDesignPattern
Decorator,Decorator-Design-Pattern,"This repository showcases the implementation of the Decorator Design Pattern, a structural design pattern that allows dynamic addition of responsibilities to objects without modifying their code. It provides an alternative to subclassing for extending functionality, making the code more flexible and reusable.",0,0,2025,2025,1,https://github.com/Nijz/Decorator-Design-Pattern
Decorator,Java-design-patterns,"ejemplos de patrones de diseño en java como el singleton , builder , decorator",0,0,2020,2021,1,https://github.com/vidal1101/Java-design-patterns
Decorator,design_patterns,Project to practice and have an example of pattern decorator using golang and python.,0,0,2020,2021,2,https://github.com/cnavas88/design_patterns
Decorator,design-patterns,"implementação dos design patterns: strategy, chain of responsibility, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns
Decorator,design_patterns_examples,"Examplos dos padrões Builder, Decorator e Strategy, para um trabalho da faculdade. ",0,0,2021,2021,1,https://github.com/mmdutra/design_patterns_examples
Decorator,DesignPattern,Implementation of different types of software design pattern,0,0,2022,2023,1,https://github.com/parvez86/DesignPattern
Decorator,Design_Patterns_Five_In_One_Project,Strategy - Builder - Decorator - Observer -Observer by events Pattern   ,0,0,2021,2021,1,https://github.com/ahmedelbassal/Design_Patterns_Five_In_One_Project
Decorator,Design-Patterns,"Java implementations of 9 Design Patterns:  Visitor, Factory, State, Strategy, Observer, Singleton, Facade, Composite, Decorator",0,0,2022,2023,1,https://github.com/NLmeng/Design-Patterns
Decorator,js-design-patterns,"A project built in Javascript and some patterns like Prototype, Decorator and Memento",0,0,2020,2020,1,https://github.com/guilhermegarcia86/js-design-patterns
Decorator,Design-Patterns,"Aquí, mostraremos tres patrones de diseño, de cada tipo: Creacional (Singleton), Estructural (Decorator), Comportamiento (Observer).",0,0,2020,2020,1,https://github.com/abelbatiista/Design-Patterns
Decorator,towson-cosc436-decorator,"Implementation of a decorator design pattern. Setting is a made up ""Best Buy"" store with static items to purchase",0,0,2015,2020,0,https://github.com/richard-frink/towson-cosc436-decorator
Decorator,12DesignPatterns,simple c# implementation of 12 design patterns (Builder also has Prototype and Decorator),0,0,2023,2023,1,https://github.com/Dannymane/12DesignPatterns
Decorator,examples-design-patterns,Just some code demonstrating a few of the ways in which Microsoft have kindly provided some out-of-the-box implementations of some well known and well used Design Patterns,0,0,2023,2023,1,https://github.com/bill-richards/examples-design-patterns
Decorator,StarBuzz-DesignPatternDecorator,"The Decorator design pattern dynamically assigns additional responsibilities to an object. It provides a flexible alternative to bypass,... ",0,0,2021,2021,2,https://github.com/Smeud/StarBuzz-DesignPatternDecorator
Decorator,Decorator-Example,"Exemplo da aplicação do design pattern decorator por meio da criação de tipos de café, sendo este, a classe principal ou ConcreteComponent",0,0,2024,2024,1,https://github.com/Gabriel-Cisneiros/Decorator-Example
Decorator,Design-Patterns,"Simple analogy in C# in Adapter, Decorator and Façade to understand how it can be used",0,0,2023,2023,1,https://github.com/NandaChaves/Design-Patterns
Decorator,designpatterns,"Code example for Adapter, Abstract Factory, Factory Method, Iterator and Decorator design patterns.",0,0,2019,2022,2,https://github.com/thekgk/designpatterns
Decorator,IceCreamShop,A basic Java terminal application demonstrating strategic choice of the Decorator Design Pattern,0,0,2024,2024,1,https://github.com/sequint/IceCreamShop
Decorator,ProjectAngryBalls,"This is an esample for implementation of some design patterns (Decorator, Observer ,etc )",0,0,2019,2019,0,https://github.com/Thykimik/ProjectAngryBalls
Decorator,vehicle-rental-system,Design a vehicle rental system and implement **Abstract Factory** and **Decorator** design patterns.,0,0,2025,2025,1,https://github.com/ashish-panicker/vehicle-rental-system
Decorator,genericBST,"Generic binary search tree that utilizes Iterator, Decorator, Strategy & Null Object Design Patterns",0,0,2016,2016,1,https://github.com/gadkins/genericBST
Decorator,Rock-Paper-Lizard-Spock,Rock Paper Lizard Spock game. Demonstrates the use of a decorator design pattern.,0,0,2016,2016,1,https://github.com/imccann91/Rock-Paper-Lizard-Spock
Decorator,2d-platformer,"Platformer project using design patterns such as Observer, MVC, Decorator, ScreenManager and Builder",0,0,2021,2021,1,https://github.com/GonzaLorenzo/2d-platformer
Decorator,structural-design-patterns,"Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост (Bridge), Легковес (Flyweight), Фасад (Facade)",0,0,2020,2020,1,https://github.com/ann-vicheva/structural-design-patterns
Decorator,Design-Patterns-PHP,"A activity from Kodigo showing some design patters examples (Factory, Adapter, Decorator and Strategy)",0,0,2024,2024,1,https://github.com/AbrahamVasquez/Design-Patterns-PHP
Decorator,ecommerce,"Console application in Java using 4 design patterns (strategy, builder, decorator and observer)",0,0,2021,2022,1,https://github.com/PalmaPedro/ecommerce
Decorator,Pizzeria,Basics of object-oriented programming in Java using decorator and factory design patterns,0,0,2017,2018,1,https://github.com/KubaWisniewski/Pizzeria
Decorator,patterns,"design patterns class final project. used patterns: singleton, factory method, strategy and decorator.",0,0,2022,2022,1,https://github.com/diasnrg/patterns
Decorator,StarbuzzCoffee,Chapter 3 of Head First's Design Pattern (Decorator Pattern) converted to C#,0,0,2022,2022,1,https://github.com/LeonardoGraham/StarbuzzCoffee
Decorator,IVector2D3D,Creating 2D and 3D Vector using Adapter and Decorator design patterns in Java,0,0,2023,2023,1,https://github.com/Kasy00/IVector2D3D
Decorator,Design_pattern_java,"Singleton, Decorator and Factory design patterns to implement Starbucks coffee example in Java",0,0,2019,2020,1,https://github.com/I-Raj/Design_pattern_java
Decorator,MarbleWheels,"Design patterns. Creating a game in C# using different types of design patterns: adapter pattern, bridge pattern, factory method pattern, decorator and facade.",0,0,2015,2017,2,https://github.com/mrgunior/MarbleWheels
Decorator,the-Decorator-Design-Pattern,"This assignment will walk you through implementing the Decorator Design Pattern using Generics and Interfaces in C#. The Decorator Design Pattern allows behavior to be added to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class.",0,0,2024,2024,1,https://github.com/A00302457/the-Decorator-Design-Pattern
Decorator,design-patterns,"Repositório com exemplos práticos em C++ dos padrões Factory Method, Decorator e Observer, baseados no Refactoring Guru.",0,0,2024,2024,1,https://github.com/AlexandreMarchi/design-patterns
Decorator,designPatterns,A repo with a collection of design patterns,0,1,2020,2021,1,https://github.com/daniel199410/designPatterns
Decorator,Decorator-Design-Pattern,"This assignment is to walk us through implementing the Decorator Design Pattern using Generics and Interfaces in C#. The Decorator Design Pattern allows behavior to be added to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class.",0,0,2024,2024,1,https://github.com/Lawaltunde/Decorator-Design-Pattern
Decorator,Etapa2Atividade4Decorator-Observer,"Implementação dos conhecimentos em Design Patterns adquiridos na cadeira de Padrões de Software, ministrada pelo professor João Carlos.",0,0,2021,2021,1,https://github.com/VitorMaverick/Etapa2Atividade4Decorator-Observer
Decorator,design-pattern-facade-decorator-example,Modélisation et implémentation d'un processus d'envol d'un oiseau à travers le design pattern façade et decorator,0,0,2022,2023,1,https://github.com/housseinmomo/design-pattern-facade-decorator-example
Decorator,Design_patterns_project,"A project based on various design patterns such as singleton, factory, bridge and decorator patterns",0,0,2024,2024,1,https://github.com/Robinm94/Design_patterns_project
Decorator,design-patterns1,"aplicação dos padrões de projeto parte 1: strategy, chain, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns1
Decorator,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Decorator,design-patterns,"Here are simple examples of designing a bank accounts as factory, online shop and Image Reader as decorator.",0,0,2021,2021,1,https://github.com/Taabannn/design-patterns
Decorator,SoftwareDevelopment_DesignPatterns,"Creating the Customize Development Framework like Spring framework and Spring Boot by applying the design patterns like.....Singleton,Command,Observer,Facade,Factory,Composit,COR,Strategy,State,Iterator,Adapter,Decorator,Builder,Adapter",0,0,2024,2024,1,https://github.com/HsuMinHtet/SoftwareDevelopment_DesignPatterns
Decorator,DesignPatterns,Não repita código com Template Method Saiba da importância de estudar os padrões de projeto Resolva problemas de muito ifs usando Strategy Adicione comportamentos ao seu objeto com Decorator Crie diferentes ações com Observer Use o Builder para a criação de objetos complicados,0,0,2022,2022,1,https://github.com/Honey-lee429/DesignPatterns
Decorator,Design_Patterns,"This includes most essential design patterns including singleton, factory, abstract factory, observer, builder, prototype, strategy, template method, adapter, facade, decorator design patterns in java",0,0,2023,2023,1,https://github.com/Ansu-s/Design_Patterns
Decorator,Design-Patterns-Spring-Boot,"Simple project with spring boot, explain the difference between design patterns (Proxy,Builder,Decorator...)",0,0,2024,2024,1,https://github.com/imadett88/Design-Patterns-Spring-Boot
Decorator,Bank_Design_Patterns,"Bank app where I had to implement Command, State and Decorator design patterns during the lectures",0,0,2016,2016,1,https://github.com/wojtasfi/Bank_Design_Patterns
Decorator,design-patterns,"This repository provides practical implementations of common design patterns in Go. Each pattern is accompanied by clear explanations, code examples, and usage scenarios. ",0,0,2024,2024,1,https://github.com/iarsham/design-patterns
Decorator,Csharp-Some-Design-Patterns,"Some patterns for C# projects: Abstract Factory, Chain of Responsibility, Decorator, Factory, Observer, Repository.",0,0,2020,2020,1,https://github.com/MaximCastornyi/Csharp-Some-Design-Patterns
Decorator,EasterBunnyDesignPatterns,"Задача пo Шаблони за Проектиране - need to use Factory, Singleton, Decorator and Observer patterns",0,0,2023,2023,1,https://github.com/BvBUndeader/EasterBunnyDesignPatterns
Decorator,designPatterns,"Projeto em JavaWeb desenvolvido para matéria de Projeto Web (PWE) do curso de Tecnologia em Análise e Desenvolvimento de Sistemas do Instituto Federal de Educação, Ciência e Tecnologia de São Paulo, utilizando JSF com objetivo de implementar os design patterns Facade, Observer e Decorator.",0,0,2018,2018,4,https://github.com/gabrielgasparini/designPatterns
Decorator,Java-Design-Patterns,"Singleton,Factory.Builder,Decorator, Facade Design Pattern (Eager, Static Block,Lazy Initilization, ThreadSafe Singleton, Bill Pugh Singleton)",0,0,2021,2021,0,https://github.com/yigitkader/Java-Design-Patterns
Decorator,javascript-image-crop,App exemplo de crop de imagem com javascript e css aplicando design pattern decorator.,0,0,2021,2021,0,https://github.com/frrodrigues49/javascript-image-crop
Decorator,Design_Patterns,"Examples of behavioral, creational, and structural design patterns in software development, including Observer, Strategy, Factory, Singleton, Decorator, and Facade patterns.",0,0,2024,2024,1,https://github.com/ManeeshaVR/Design_Patterns
Decorator,SmartPizza,"WPF app der bruger Design patterns (Factory- og Decorator pattern), til at lave pizza",0,0,2019,2019,1,https://github.com/kristoffersurrow/SmartPizza
Decorator,SDP-assignment-2,A assignment for Software Design & Patterns of algorithms classes on Decorator and Factory patterns,0,0,2023,2023,0,https://github.com/Shiradil/SDP-assignment-2
Decorator,Design_Pattern,"Design patterns project using C# using only chain of responsibility, singleton and decorator pattern",0,0,2022,2022,1,https://github.com/jeanpaulghoussoub/Design_Pattern
Decorator,decoratorPattern,"This repository implements the Decorator design pattern for savings accounts in a digital bank, specifically tailored for CIMB. The core structure includes a ""Standard Savings Account"" with essential attributes like accountNumber, accountName, and balance. ",0,0,2023,2023,1,https://github.com/sghangaan/decoratorPattern
Decorator,design_pattern,"Examples of some of the standard design patterns- factory, builder, singleton, decorator, observer, flyweight.",0,0,2020,2022,1,https://github.com/mayank4519/design_pattern
Decorator,Decorator,A decorator is a design pattern in Python that allows a user to add new functionality to an existing object without modifying its structure. Decorators are usually called before the definition of a function you want to decorate,0,0,2020,2020,1,https://github.com/avi527/Decorator
Decorator,ep2-coutinho,A report generator implemented with two design patterns (Strategy and Decorator) and SOLID principles,0,0,2023,2024,1,https://github.com/marcostomas/ep2-coutinho
Decorator,StarBuzzCafe,Program to serve orders in a cafe. An example of the Decorator Design Pattern.,0,0,2018,2018,0,https://github.com/agarkovand/StarBuzzCafe
Decorator,pizza-menu,Creation of a dynamic menu with some pizza components to practice Decorator design pattern.,0,0,2018,2020,1,https://github.com/cjlcarvalho/pizza-menu
Decorator,design-patterns-exercises-with-java,Examples including: Mediator & State & Strategy & Observer & Abstract Factory & Decorator & Composite Design Patterns & SOLID principles  ,0,0,2022,2022,1,https://github.com/hasanyeniada/design-patterns-exercises-with-java
Decorator,algebra,Simple java code using Decorator & Adapter Design Pattern. Code wrote on universit'ies classes,0,0,2018,2019,1,https://github.com/Bziomek97/algebra
Decorator,Software-Engineering-Design-Patterns,These are past assignments from my Software Engineering class at U of SC where I created programs based off of assigned UMLs with different design patterns. Each directory is a different program with a different design pattern.,0,0,2022,2024,1,https://github.com/M-Valentino/Software-Engineering-Design-Patterns
Decorator,java-structural-design-patterns,"Java implementations of various structural design patterns, including Adapter, Composite, Decorator, Facade, Flyweight, and Proxy.",0,0,2025,2025,1,https://github.com/HajiraGul/java-structural-design-patterns
Decorator,Coupon-Applied-Simulation-Using-Decorator-Pattern,The repo simulates the back working of how when we applies coupon on product works using the decorator design pattern.,0,0,2025,2025,1,https://github.com/mkhulbe5/Coupon-Applied-Simulation-Using-Decorator-Pattern
Decorator,DesignPatterns,Most common design patterns in software architecture.,0,0,2023,2024,1,https://github.com/staivanov/DesignPatterns
Decorator,Hospital-Staff-Management,"This is my 3rd Git repository. It's a console application created by using Java. Here I have applied three design  patterns. They are Proxy Design Pattern, Facade Design Pattern and  Decorator Design patter.",0,0,2024,2024,1,https://github.com/Kazi-Israt-Hassan-Eva/Hospital-Staff-Management
Decorator,software-design-patterns,This is a  Note and a Example coding demonstation of some of the most used object oriented design patterns using Java,0,0,2024,2024,1,https://github.com/itzzjb/software-design-patterns
Decorator,Design-Patterns-Practice,Practicing Observer/Observable and Decorator design patterns. Assignment #6 for my Foundations of Programming Class during Fall 2018.,0,0,2019,2019,1,https://github.com/NicolaFolchi/Design-Patterns-Practice
Decorator,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Decorator,design-pattern-playground,"Java project featuring examples of key design patterns like Factory, Singleton, Decorator, Facade, Observer, and Strategy, designed to help developers practice and learn design patterns.",0,0,2024,2024,1,https://github.com/bethmij/design-pattern-playground
Decorator,design_patterns,"Shell for DAW application which includes multiple design petterns, such as: abstract factory, singleton, factory method, adapter, decorator, facade, iterator, observer, strategy.",0,0,2023,2024,1,https://github.com/ruslan1us/design_patterns
Decorator,DecoratorPattern,"I wrote this MVC program to demonstrate the decorator design pattern by ""decorating"" a coffee beverage with extra additions like sugar/honey that increase the beverage's price and name. This allows for flexibility and extension.",0,0,2021,2021,1,https://github.com/Gegabyt3/DecoratorPattern
Decorator,Game-Design-Patterns,"Developed a 3 level game using PhaserJS to get hands on State, Command, factory, Proxy and Decorator design pattern.",0,0,2018,2018,6,https://github.com/sricheta92/Game-Design-Patterns
Decorator,java-design-patterns,"This repo includes SOLID principles and Design Pattern Implementations with Java (Strategy, Observer, Command, Factory, Singleton, Decorator Patterns, etc.) ",0,0,2020,2022,1,https://github.com/muhammedsaidkaya/java-design-patterns
Decorator,Java-Multi-threads-race-game,"JAVA Game Using Design Patterns  An interactive racing game implemented in Java, showcasing various design patterns and multi-threading.Implemented design patterns: Singleton, Builder, Thread Pool, Factory Method, Prototype, State, Observer-Observable, Decorator, and Delegator",0,0,2024,2025,1,https://github.com/IlanShtilman/Java-Multi-threads-race-game
Decorator,Design-Patterns---JAVA,"Botando em prática os Design Patterns no JAVA (MVC, Abstract Factory, Builder, Factory Method, Singleton, Decorator, Strategy e State)",0,0,2020,2020,0,https://github.com/phbritoo/Design-Patterns---JAVA
Decorator,JavaDesignPatterns,"Multiple examples of design patterns  : Adapter, Command, Composite, Decorator, State, Fabric, AbstractFabric, FlyWeigth, Mediator, Observer, Prototype, Singleton, Strategy, TemplateMethod",0,0,2022,2022,1,https://github.com/leo77777/JavaDesignPatterns
Decorator,Design-Patterns," The GitHub repository consists of separate implementations of various design patterns, including Adapter, Command, Decorator, Facade, Observer, Prototype, Proxy, Singleton, and Strategy, in Java.",0,0,2021,2023,1,https://github.com/mozammalrahat/Design-Patterns
Decorator,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Decorator,project-patterns," design patterns like these: Abstract Factory, Decorator, Builder, Command, Prototype, Iterator, Bridge, Observer, Composite, Strategy",0,0,2019,2020,1,https://github.com/jhonatheberson/project-patterns
Decorator,Racing-Game,"Racing game with GUI using Design patterns such as : Decorator, Prototype ,Factory, Observer, Builder etc",0,0,2022,2022,1,https://github.com/AlexBoyev/Racing-Game
Decorator,Design-Paterns,"Small project illustrating use of Design Patterns such as Visitor, Decorator, Factory Method and Enumerator",0,1,2021,2021,1,https://github.com/dkozykowski/Design-Paterns
Decorator,Design-Patterns,"implementation of design patterns (such as builder, decorator, facade, factory, strategy, singleton), covering with Unit Tests, using: .Net Framework 4.6.1 Library, Console projects",0,0,2019,2019,1,https://github.com/AKamieniak/Design-Patterns
Decorator,Design-Patterns---Teachers,"Final student project for my university course “Design Patterns”. Used technologies: Java, Swing. Used patterns: Singleton, Factory Method, Adapter, Proxy, Decorator ",0,0,2016,2016,1,https://github.com/itplamen/Design-Patterns---Teachers
Decorator,php_decorator_pattern,Decorator is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.,0,0,2020,2020,1,https://github.com/bariseser/php_decorator_pattern
Decorator,Atividade-Bimestre-2,"This project contains the full code of a ""Pizza Place"" using the Decorator Design Pattern. ",0,0,2024,2024,1,https://github.com/vhzuleta/Atividade-Bimestre-2
Decorator,.github,"Implementation de 7 Design Pattern avec java :P.proxy,P.Decorator,P.Observer,P.Adapter...",0,0,2022,2022,1,https://github.com/Java-Design-Pattern/.github
Decorator,Design-Patterns-Java,"Detail implementation of all design patterns in java ( creational(builder , prototype, abstract factory, singleton), structural (decorator, composite, adapter, facade)  and behavioural )",0,0,2025,2025,1,https://github.com/CynthiaAbi03/Design-Patterns-Java
Decorator,opencart,Add auto generator on coupon code and Apply decorator design pattern on calculate coupon discount,0,0,2023,2023,1,https://github.com/ahmedabdelaziz11/opencart
Decorator,cscd212-w22-finalprj,The final project for the winter 2022 quarter of CSCD 212 (Java decorator design pattern),0,0,2022,2022,3,https://github.com/joshmerrell/cscd212-w22-finalprj
Decorator,decorator-pattern,"test application of decoration pattern implementation on python based on book ""Head First Design Patterns A Brain-Friendly Guide"" By Bert Bates, Kathy Sierra, Eric Freeman, Elisabeth Robson",0,0,2019,2019,2,https://github.com/LucySpass/decorator-pattern
Decorator,RecipeCalculator,"Sample recipe calculator application showcasing the decorator design pattern, and unit testing with dependency injection",0,0,2016,2016,1,https://github.com/alxm0342/RecipeCalculator
Decorator,DesignPatternsInModernCPP,"This repository demonstrates Creational, Structural, and Behavioral Design Patterns using traditional and modern C++ features in various examples for learning purposes. Common patterns (Singleton, Factory Method, Abstract Factory, Adapter, Decorator, Composite, Observer, Strategy, Command) are implemented with assistance from the AI tool.",0,0,2024,2024,1,https://github.com/denkhzol/DesignPatternsInModernCPP
Decorator,Design-Patterns,A chronicle of various design patterns implemented under software engineering course,0,0,2023,2024,1,https://github.com/mrtaz77/Design-Patterns
Decorator,Design-Patterns-in-Java,"In this training, I reviewed somme design patterns such as strategy, adapter, decorator, composite, proxy, builder, singleton and prototype.",0,0,2023,2023,1,https://github.com/ClaudEbro/Design-Patterns-in-Java
Decorator,Design-Patterns-Summer-2020-Assignment5,"In this assignment decorator pattern is implemented. There are 4 decorators : KeywordDecorator, MostFrequentWordDecorator, SentenceDecorator, SpellCheckDecorator. The paragraph is given by input.txt file which has to be decorated with the suffix and prefix.",0,0,2020,2020,1,https://github.com/ashmeetchhabra/Design-Patterns-Summer-2020-Assignment5
Decorator,Design_Patterns,"Implementation of design patterns (such as builder, abstract factory, decorator, facade, singleton, strategy)  covered with Unit Tests, using .Net Framework 4.6.1 Library and Console projects.",0,0,2020,2020,1,https://github.com/AleksandraRzezniewska/Design_Patterns
Decorator,CS434_M04_P03_DecoratorExtended,Implementation of Baron's Decorator Pattern (Hands on Game Development With Unity 2019) refactored to fit into the Abstract Factory based on Gary Woodfine (https://garywoodfine.com/abstract-factory-design-pattern/),0,0,2020,2021,1,https://github.com/JIARC777/CS434_M04_P03_DecoratorExtended
Decorator,RestaurantSimulator,This repository simulates a restaurant. It demonstrates the application of two structural design patterns: the decorator and the bridge.,0,0,2021,2021,1,https://github.com/anhkhoido/RestaurantSimulator
Decorator,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Decorator,design-patterns-examples,"Small projects made to study the use of diferents design patterns.  Some patterns present are: Abstract factory, adapter, builder, decorator, proxy and others.",0,0,2021,2022,1,https://github.com/guihensn/design-patterns-examples
Decorator,kodilla-design-patterns2_mod_20,"Facade (also in repo_mod_13), Decorator, Observer, Adapter AND about  AOP - aspect oriented programming ",0,0,2018,2018,1,https://github.com/paulina-bukowska/kodilla-design-patterns2_mod_20
Decorator,java-4h-5h-design-patterns-2,"Creational (Singleton, Prototype, etc) and Structural (Proxy, Composite, Decorator, Adapter and Bridge)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-2
Decorator,Decorator-Design-Pattern,"The Decorator Design Pattern allows behavior to be added to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class.",0,0,2024,2024,1,https://github.com/Dademu/Decorator-Design-Pattern
Decorator,Most-Common-Design-Patterns,"The most commonly used Builder, Decorator, Facade, Factory, Singleton design patterns in projects were repeated and their advantages were tested practically.",0,0,2024,2024,1,https://github.com/yunuspektass/Most-Common-Design-Patterns
Decorator,Year3-DesignPatternsAssignment,"Grade: 42/50 | This is an assignment which utilizes the Template, Decorator & Observer design patterns. Clients connect to the server where the area & perimeter of a selected shape is calculated. The server keeps track of which task is for which client and is controlled using the various design patterns",0,0,2021,2021,1,https://github.com/Vorno2000/Year3-DesignPatternsAssignment
Decorator,decorator-pattern,Design pattern estrutural (gof) Decorator para atribuir responsabilidades a um objeto de forma dinâmica sem alterar o comportamento dos demais objetos da mesma classe (alternativa a herança para estender uma funcionalidade),0,0,2021,2021,1,https://github.com/Jhow-R/decorator-pattern
Decorator,C---Validator,"A C# program that validates incoming user entry data using mediator, state and decorator design patterns",0,0,2020,2020,1,https://github.com/Anesthet1ze/C---Validator
Decorator,RPG-Armour-Design-Class,I created a text-based RPG in Java that implements the Factory and Decorator Design Patterns.,0,0,2022,2022,1,https://github.com/lydiafarag/RPG-Armour-Design-Class
Decorator,Design-Patterns,"Various design patterns I have implemented in Java include: structural patterns like adapter and decorator, creational patterns such as factory, abstract factory, and singleton, and behavioral patterns like template method.",0,0,2024,2024,1,https://github.com/JustMyriiam/Design-Patterns
Decorator,Ski-competition,"Java game using the following design patterns: Prototype, Factory Method, Builder, Thread Pool, Decorator, Observer, State",0,0,2021,2021,1,https://github.com/vladich11/Ski-competition
Decorator,Design-Pattern,"Example design pattern 3 pattern and 6 design viz Singleton , Builder , Adapter , Decorator , Interpreter and Memento.",0,0,2024,2024,1,https://github.com/kulproffbrter/Design-Pattern
Decorator,Fast_Food_Restaurant_API,"A flexible API opened for modification. Used design patterns like Abstract Fabric, Decorator, Command and Facade.",0,0,2023,2024,1,https://github.com/Kuba2903/Fast_Food_Restaurant_API
Decorator,CoffeeShopUI,This application uses Java GUI to make a coffee shop user interface using Decorator Design Pattern. ,0,0,2020,2020,0,https://github.com/jaypatel-ops/CoffeeShopUI
Decorator,MI-SvajunasTeam,Realiziuoti „Decorator” design pattern + Symfony 2 Framework + PHP OOP + MySQL DB + Git SCM (GitHub) + PhpStorm IDE,0,0,2014,2014,0,https://github.com/Hakatonas/MI-SvajunasTeam
Decorator,AchievementTracker,"Small program combining strategy, factory, decorator, and observer design patterns to make an profile achievement tracker",0,0,2014,2014,0,https://github.com/ersin-ertan/AchievementTracker
Decorator,3_FlightTicket,Software design lab work using decorator and extension-object design patterns to solve the same problem.,0,0,2017,2018,1,https://github.com/GretaMame/3_FlightTicket
Decorator,Action-RPG,Used abstractions and design patterns such as factory and decorator to implement an Action RPG game ,0,0,2022,2022,1,https://github.com/SainaSeddighpour/Action-RPG
Decorator,Design-Pattern-Project,Singleton-Factory Method-Decorator Pattern term project that I prepared for Akdeniz University Design Pattern course.,0,0,2022,2022,1,https://github.com/furkan-can/Design-Pattern-Project
Decorator,Typescript-Design-Patterns,"Object oriented design patterns in pure Typescript. Patterns: Decorator pattern, Observer pattern, Facade pattern, Adapter pattern, State pattern; 2020 Edition - SOLID and all the other patterns",0,0,2017,2020,1,https://github.com/stefantrajkovic7/Typescript-Design-Patterns
Decorator,Intro-To-Decorator-Design-Pattern,Decorator is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Decorator-Design-Pattern
Decorator,designpatterns,"Example of use Design Patterns (Strategy, Chain of Responsibility, Template Method, Decorator, State, Builder and Observer)",0,0,2020,2020,1,https://github.com/jagucheski/designpatterns
Decorator,simplemarket,"Simple Java Market as demonstration of Design patterns like the Builder, Singleton, Decorator and Sorting Strategy",0,0,2023,2023,1,https://github.com/codemara/simplemarket
Decorator,Design-Patterns---Software-Architecture,"I explain 3 design patterns in Java with examples: Singleton, Strategy, and Decorator. These patterns help in efficient software design and problem-solving.",0,0,2024,2024,1,https://github.com/Heshara13/Design-Patterns---Software-Architecture
Decorator,decorator-pattern-typescript,"Decorator Design Pattern through a relatable car assembly analogy, realized in TypeScript. This repo provides a step-by-step implementation, showcasing how we can dynamically enhance objects with additional functionalities. ",0,0,2023,2023,1,https://github.com/ricofritzsche/decorator-pattern-typescript
Decorator,awesomeshop_api-restful_dps-decorator_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPS (Design Pattern Strutuctural) Decorator, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dps-decorator_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Decorator,decorator-pattern,"In object-oriented programming, the decorator pattern is a design pattern that allows behavior to be added to an individual object, dynamically, without affecting the behavior of other objects from the same class.",0,0,2020,2020,1,https://github.com/am-singh/decorator-pattern
Decorator,design-patterns-fitness,"This is a solution of a problem i had to solve at university using the design patterns Singleton, Observer, Decorator, Strategy. It involves a simulation of a fitness hall.",0,0,2024,2024,1,https://github.com/SotirShterev/design-patterns-fitness
Decorator,design-patterns,"Application containing a pizza shop (developed by using Factory and Decorator design patterns), where the client is able to choose the desired pizza and also adding a different topping on it. Technologies use: Plain Java",0,0,2023,2023,1,https://github.com/ionutmuresan15/design-patterns
Decorator,Design_Patterns_in_Java,"Common software design patterns, including Creational patterns (singleton, abstract factory, builder), Behavioral patterns (strategy, template method), Structural patterns(adapter pattern, decorator pattern) and dependency injection",0,0,2022,2022,1,https://github.com/GuoCong1881/Design_Patterns_in_Java
Decorator,Design-Patterns,"Explore key software design patterns including Inheritance, Singleton, Adapter, Composite, Observer, Command, State, Decorator, Strategy, Iterator, and MVC. These patterns offer blueprints to solve common design challenges, focusing on object and class communication, not just implementation. ",0,0,2022,2024,1,https://github.com/radubauzh/Design-Patterns
Decorator,Aquarium,"Aquarium application. Using design pattern(singleton, abstract factory, prototype, listener/observer, decorator, memento,state), MVC and threads",0,1,2018,2018,1,https://github.com/KatrinKroin/Aquarium
Decorator,Structural-DesignPattern-Swift,"This Repository includes structural design pattern in swift which includes Adapter , Bridge , Composite , Decorator , Facade , Flyweight & Proxy .",0,0,2020,2023,2,https://github.com/dvvaliya369/Structural-DesignPattern-Swift
Decorator,Adopting-TDD,A basic app using TDD approach with Adapter and Decorator Design Patterns for testing decoupled threading logic.,0,0,2021,2021,1,https://github.com/Omair31/Adopting-TDD
Decorator,CarrinhoCompras,"Projeto desenvolvido em DotNet Core com propósito de estudar os Design Patterns Strategy, Decorator, Singleton e MonoState",0,0,2022,2022,1,https://github.com/VictorAlvesBug/CarrinhoCompras
Decorator,Blobber,"Blobber game in Java to explore 4 design patterns: Observer, Singleton, Decorator, Abstract Factory during my studies.",0,0,2020,2023,0,https://github.com/TommyQNguyen/Blobber
Decorator,ThermometerDesignPatternSTUDY,"A forced study on different design patterns and their compatability. Namely the Observer-, Decorator- and Strategy pattern.",0,0,2019,2019,1,https://github.com/Kyaria/ThermometerDesignPatternSTUDY
Decorator,MasterMenu,Builds off of TacoStand to create a full menu using Composite and Decorator design patterns in Java.,0,0,2020,2020,1,https://github.com/mbaumaister13/MasterMenu
Decorator,SDP_Final,"A Pizza ordering application with usage of 6 Software design patterns. [ Adapter, Strategy, Observer, Singleton, Factory, Decorator] .",0,0,2023,2023,1,https://github.com/YasarMushtaq1/SDP_Final
Decorator,Introducao_a_DesignPattern_Em_Java,"O Projeto abordará os principais padrões de projetos Design Pattern com Strategy, Template Method, Observer e Decorator",0,0,2022,2022,1,https://github.com/FagnerVJ/Introducao_a_DesignPattern_Em_Java
Decorator,Decorator,"Design Patterns : é um padrão de projeto de software que permite adicionar um comportamento a um objeto já existente em tempo de execução, ou seja, agrega dinamicamente responsabilidades adicionais a um objeto.[1] Decorators oferecem uma alternativa flexível ao uso de herança para estender uma funcionalidade, com isso adiciona-se uma responsabilidade ao objeto e não à classe.",0,0,2021,2021,0,https://github.com/erbson/Decorator
Decorator,Design-Patterns," Design patterns are established solutions for recurring software design issues. They improve code flexibility, reusability, and maintainability. Creational Patterns: Handle object creation (e.g., Singleton, Factory Method). Structural Patterns: Focus on object composition (e.g., Adapter, Decorator). Behavioral Patterns: Deal w",0,0,2024,2024,1,https://github.com/SE-MahmoudAbdelaal/Design-Patterns
Decorator,Project-DesignPatternDecorator,"Este projeto foi criado para a entrega no bootcamp DecolaDev. Com isso foi possível utilizar o design pattern através de um dos seus conceitos, nesse caso, fiz o uso do Decorator Pattern.",0,0,2020,2021,0,https://github.com/vitormatheus-18/Project-DesignPatternDecorator
Decorator,Go_Decorator_Pattern,"A Go project demonstrating the Decorator pattern with a hierarchical structure management system. This repository showcases how to extend the behavior of objects dynamically using decorators, emphasizing best practices in design patterns and unit testing.",0,0,2024,2024,1,https://github.com/arthurfp/Go_Decorator_Pattern
Decorator,cached-repositories,This package provides an abstract structure that uses the Repository design pattern with caching decorators for you application.,0,0,2020,2021,1,https://github.com/alexpilavakis/cached-repositories
Decorator,OOPHP,Bite sized examples of various Object Oriented Principles such as Named Constructors and Design Patterns such as Decorator.,0,0,2015,2015,1,https://github.com/tmanley1985/OOPHP
Decorator,Spellcaster,"Dice rolling, spell incantation generator. DnD hobby influence. Used this project to learn Facade and Decorator design patterns.",0,0,2018,2018,1,https://github.com/Smashar22/Spellcaster
Decorator,RoachMotel,"This is a hotel project that utilizes Java Design Patterns, specifically: Singleton, Decorator, Factory, Observer, Strategy, and Visitor",0,0,2020,2020,1,https://github.com/justingirgis/RoachMotel
Decorator,encrypt-app,Sample Node.js application using Decorator and Dependency Injection design patterns and using JWT tokens to authorize users.,0,0,2022,2022,1,https://github.com/lsmialowski/encrypt-app
Decorator,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Decorator,HardCoding-AntiPattern-Solved,"HardCoding-AntiPattern-Solved, This is an extension of Decorator Design Pattern implementation to solve hard coding Anti-Pattern.",0,0,2021,2021,1,https://github.com/bayele250/HardCoding-AntiPattern-Solved
Decorator,design-patterns,"In this repository, you will find examples of popular design patterns such as Singleton, Factory, Strategy, Decorator, Observer, and many more. Each example comes with a detailed description of how to apply that design pattern in Golang, along with reference materials so that you can better understand them.",0,0,2023,2024,1,https://github.com/gideonlewis/design-patterns
Decorator,4-design-patterns-for-web-development,"This is a careful reading of the article 4 Design Patterns You Should Know for Web Development: Observer, Singleton, Strategy, and Decorator by Milecia McGregor",0,0,2020,2021,1,https://github.com/guilhermebpnr/4-design-patterns-for-web-development
Decorator,DesignPattern-Decorator,"This C# implementation demonstrates the Decorator design pattern, allowing dynamic addition of behavior to an object by wrapping it with decorator classes. It shows how decorators can be combined to extend functionalities without modifying the base component.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Decorator
Decorator,COSC436_Decorator_Design_Pattern,"Decorator Design Pattern Project for COSC436. This program dynamically modifies a Best Buy receipt. It adds the store address information, rebates, and whether or not you are shopping during a tax free holiday. ",0,0,2015,2015,1,https://github.com/chrisbacco/COSC436_Decorator_Design_Pattern
Decorator,ProjectOOD,"A simple milk tea ordering application using Java Swing. Combine design patterns like MVC, Singleton, Observer, Decorator, Factory Method",0,0,2023,2024,1,https://github.com/Gilgamesh-hoang/ProjectOOD
Decorator,WeatherServiceDemo,"Demo weather service coding project. Sprint Boot, Spring MVC, Maven, JUnit, JSON Request/Response, caching and decorator design pattern",0,1,2018,2018,1,https://github.com/alewi13/WeatherServiceDemo
Decorator,Calculator-flutter," A simple Flutter project (Calculator) with the usage of six Software Design Patterns [ Adapter, Strategy, Observer, Singleton, Factory, Decorator] . ",0,0,2023,2023,1,https://github.com/YasarMushtaq1/Calculator-flutter
Decorator,Object-Oriented-Programming-and-Design-Course," implementations of various design patterns such as Visitor, Decorator, and more to demonstrate effective software design and development practices",0,0,2024,2024,2,https://github.com/MiriKanner/Object-Oriented-Programming-and-Design-Course
Decorator,bakery-app,"Bakery console application written in Java. Using different types of software design patterns, such as Decorator, Observer, Factory, Singleton",0,0,2023,2024,1,https://github.com/RashEstebek/bakery-app
Decorator,CasaDasDelicias,"Uso dos Design Patterns Facade, Singleton, Template Method, Adapter e Decorator em projeto que representa a produção de salgados.",0,0,2020,2023,1,https://github.com/Gwolner/CasaDasDelicias
Decorator,Software-design-patterns,"We picked an existing Memory Match game code from the internet, we did some changed on it then we start to figured out for any software design problem that needs to be solved by choosing an appropriate design pattern. finally, we used Decorator, Facade, Memento, State patterns.",0,0,2019,2019,1,https://github.com/wFahad/Software-design-patterns
Decorator,Design-Patterns-CSharpENU,"Explore essential C# design patterns through practical projects, covering Observer, Decorator, Iterator, Factory, Builder, and more. Gain insights into real-world implementations, enhancing your understanding of these foundational concepts. Additionally, discover Azure Service Bus integration for messaging patterns in distributed systems",0,0,2024,2024,1,https://github.com/dazevedo00/Design-Patterns-CSharpENU
Decorator,Java-Design-Patterns-Examples,"This repository contains Java implementations of key design patterns: Singleton, Decorator, and Observer. Each pattern is demonstrated through real-world examples, including a database connection manager, a customizable coffee shop, and a weather monitoring system. Ideal for learning OOP design principles.",0,0,2024,2024,1,https://github.com/MenathNDGD/Java-Design-Patterns-Examples
Decorator,design-patterns-in-java,TR: Java dizayn mimarileri kullanılmış ve UMLleri verilmiştir.  EN: Java design patterns with UML,0,0,2019,2019,1,https://github.com/mertselimb/design-patterns-in-java
Decorator,Cheeseburgers,"Código do artigo ""Cheeseburgers, Decorators e Mocks"" que mostra um exemplo prático de utilização do Design Pattern Decorator, que começa com um design usando herança, desaclopa usando composição e finalmente aplica Decorator. ",0,0,2009,2016,1,https://github.com/prodis/Cheeseburgers
Decorator,Design-Pattern,"Some implementation of design pattern in Java such as: Chain of Responsibility, Decorator, Factory, Generic, Interator, Proxy, Reflection, Singleton, Visitor",0,0,2016,2017,1,https://github.com/luongnv89/Design-Pattern
Decorator,Duck-Simulator,"A console-based duck simulator following design principles. Implemented design patterns- adapter, decorator, factory, abstract factory, composite, and observer pattern",0,0,2024,2024,1,https://github.com/ShoyebWritesCode/Duck-Simulator
Decorator,Arkanoid,"An arkanoid game in Unity2D, following Scrum Agile Development Model and using design patterns like Observer, Factory, Decorator, Command, Strategy.",0,1,2016,2016,0,https://github.com/ArpitKhare/Arkanoid
Decorator,tams,"A TA Management System built with Spring. Utilizes a Microservices architecture and several design patterns like Builder, Decorator, Adapter, etc.",0,0,2022,2022,6,https://github.com/alifarukyucel/tams
Decorator,Action-RPG,"Implemented abstractions and design patterns, such as factory and decorator, in Java to create an Action RPG with various difficulties",0,0,2022,2022,1,https://github.com/ThomasQWang/Action-RPG
Decorator,social-connect-golang-api,"A golang project for practicing design patterns & development best practices. Patterns used: Factory, Decorator, Singleton. Arch: Clean Architecture, Vertical Slice",0,0,2025,2025,1,https://github.com/sayeed1999/social-connect-golang-api
Decorator,Ruby-OOP-Library,"A class based Ruby script using design patterns and practices such as decorators, Associations and module. Built entirely on Ruby",0,0,2022,2022,2,https://github.com/Shedrack-Sunday/Ruby-OOP-Library
Decorator,ArmourGenerator,This was a school assignment that generates armour objects (of an imaginary game) using the Factory and Decorator design patterns,0,0,2023,2023,1,https://github.com/fsolier/ArmourGenerator
Decorator,Image,"Image, an image editor using the decorator design pattern, created for the course Foundations of Programming at UNC-Chapel Hill.",0,0,2024,2024,0,https://github.com/nathann07/Image
Decorator,Design-Patterns-In-Java,This shows 10 types of Design patterns with some projects to execute them. They are as follows: 1. Singleton Pattern 2. Factory Pattern 3. Decorator Pattern 4. Observer Pattern  5. Strategy Pattern 6. Adapter Pattern 7. Facade Pattern 8. Composite Pattern 9. Command Pattern 10. Interpreter Pattern,0,0,2023,2023,1,https://github.com/acshyguy/Design-Patterns-In-Java
Decorator,Library-Management-System,"It is a library management system based on given requirements. It incorporated observer, visitor, singleton, decorator, factory and composite design patterns",0,0,2024,2024,0,https://github.com/JohnRebecca/Library-Management-System
Facade,design_patterns_in_typescript,:triangular_ruler: Design pattern implementations in TypeScript,5272,763,2013,2025,8,https://github.com/torokmark/design_patterns_in_typescript
Facade,DesignPatterns,"Come learn about all the Gang of Four patterns (e.g. Adapter, Facade, Strategy, Mediator, Command and more) with C# and food examples!",643,251,2016,2025,2,https://github.com/exceptionnotfound/DesignPatterns
Facade,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Facade,laravel-smart-facades,"Strategy design pattern in laravel, the easiest way.",132,12,2019,2025,9,https://github.com/imanghafoori1/laravel-smart-facades
Facade,Python-Design-Patterns,Python Design Patterns,87,28,2017,2025,1,https://github.com/rajan2275/Python-Design-Patterns
Facade,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Facade,dotnet-design-patterns-samples,The samples of .NET design patterns,37,11,2017,2025,2,https://github.com/AliakseiFutryn/dotnet-design-patterns-samples
Facade,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Facade,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Facade,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Facade,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Facade,Facade-Design-Pattern,Facade Design Pattern,14,0,2018,2024,1,https://github.com/akshayblevel/Facade-Design-Pattern
Facade,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Facade,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Facade,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Facade,Wholesale_Management_System,"Layered Architecture | Singleton, Facade, Factory Design patterns",5,0,2022,2023,1,https://github.com/chama97/Wholesale_Management_System
Facade,typescript_design_patterns,Implementations of design patterns (GOF) in Typescript,5,0,2018,2022,1,https://github.com/Uncleseneca/typescript_design_patterns
Facade,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Facade,Game-Engine-Design,"A game engine that supports a text based game. This was created as a demonstration of use of multiple design patterns be implemented into a single project but working independently of each other. Includes the State pattern, Factory pattern, basic Facade pattern, Decorator pattern and Observer pattern.",4,5,2018,2024,1,https://github.com/Cermic/Game-Engine-Design
Facade,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Facade,Design-Patterns-en-Pratique,"Ce repository contient des implémentations pratiques de divers Design Patterns (patrons de conception), en commençant par la conception et l'intégration progressive de nouvelles fonctionnalités à travers des patterns comme l'Adaptateur, la Méthode de Factory, la Stratégie, la Façade..",4,0,2024,2025,1,https://github.com/AhmedMaaouia1/Design-Patterns-en-Pratique
Facade,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Facade,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Facade,DesignPatterns-Web.Core,"Including .Net Core 3.1-5.0-6.0, MVC, Layers Architecture, PostgreSQL, Entity Framework Core, Code First, ChainOfResponsibility, CQRS, TemplateMethod, Observer, UnitOfWork, Repository, Composite, Mediator, Iterator, Facade, Decorator Design Patterns Transactions.",3,1,2023,2024,1,https://github.com/erkanbstn/DesignPatterns-Web.Core
Facade,Design-Patterns,Bu repoda Yazılım Tasarımı ve Mimarisi dersi ile paralel yürüttüğüm Desing Patterns ile ilgili çalışmalarım ve patternslar ile ilgili notlarım bulunmaktadır.,3,0,2021,2023,1,https://github.com/emirhandogandemir/Design-Patterns
Facade,core-mvc,"Core is a micro PHP MVC framework. Created as a personal case study for OOP concepts, Facade design pattern, and MVC framework construction from scratch.",3,0,2013,2019,0,https://github.com/tedmdelacruz/core-mvc
Facade,js-patterns,"Some of my favorite JavaScript plugin design patterns: The Facade Pattern, The Revealing Module Pattern, Immediately-invoked Function Expressions (IIFE)s, The Module Pattern imports and exports …",3,1,2017,2022,1,https://github.com/mhulse/js-patterns
Facade,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Facade,POS-System,"This standalone application was developed aiming Layered Architecture. Several Design Patterns were used including Facade, Factory and Singleton. Knowledge of Java (including OOP concepts) and MySQL along with latest trending technological tools were implemented inclusively.",3,0,2022,2023,1,https://github.com/Dazzler123/POS-System
Facade,design-pattern-facade,Here I am with another article on design patterns — Facade Design Pattern. A Facade object is use to provide a simple interface by hiding complexities of a complex system.,2,4,2020,2021,1,https://github.com/BrijeshSaxena/design-pattern-facade
Facade,Facade,Design Pattern implemented in C#,2,0,2020,2024,1,https://github.com/wojciechligeza/Facade
Facade,designPatterns-Java,"practicing singleton, Strategy, Facade and Spring",2,0,2022,2022,1,https://github.com/m-carecho/designPatterns-Java
Facade,DesignPatterns,"Designing and implementing factory ,observer and facade design pattern for phones using java",2,0,2019,2023,1,https://github.com/abdelkaderlagha/DesignPatterns
Facade,SmallerJavaProjects,"Smaller Java Projects including Factory, Singleton, and Facade Design Patterns.",2,0,2015,2016,1,https://github.com/ebanks31/SmallerJavaProjects
Facade,Iki-Tarih-Arasi,Adapter Design Pattern ve Facade Pattern ile hazırlanmış C# Uygulanması,2,0,2020,2021,1,https://github.com/AhmetSaitCalisir/Iki-Tarih-Arasi
Facade,DesignPatterns,"Some design patterns (Singleton, Simple and Abstract Factory, Builder, Facade, Adapter, Chain of Responsibility, Mediator) examples written in C#",2,0,2018,2024,1,https://github.com/alexandra-valkova/DesignPatterns
Facade,WordCreate,iOS application word game designed as Facade design pattern POC app,2,0,2022,2025,1,https://github.com/jon-iger/WordCreate
Facade,design-patterns-builder-facade-factory-etc..,,2,0,2023,2024,1,https://github.com/mgunawardhana/design-patterns-builder-facade-factory-etc..
Facade,designPattern,🧩 Java samples for a popular design pattern.,2,1,2023,2023,1,https://github.com/Haythamasalama/designPattern
Facade,Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF,"In this project; command, factory, singleton, adapter and facade design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2021,2022,1,https://github.com/kamilhan-karaismailoglu/Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF
Facade,php-mvc,A simple blog project based on a custom-created MVC framework using PHP & MySQL. That follows the Facade design pattern.,2,0,2022,2022,1,https://github.com/arafah-dhrubo/php-mvc
Facade,fms,IT System for Managing Control System Faults on the Mining Railways | 🔶🔶🔶 Facade Design Pattern 🔶🔶🔶 ,2,1,2023,2025,1,https://github.com/AndrzejSzelag/fms
Facade,Parking-Lot-OOP,"Parking lot management system demonstrating SOLID principles, Object-Oriented-Programming and Design Patterns (Strategy, Iterator, Static Factory Method, Facade etc.)",2,1,2021,2023,2,https://github.com/israelElad/Parking-Lot-OOP
Facade,Facade-Pattern-Design-WPF-Microsoft-Sample-,Facade pattern hides the complexities of the system and provides an interface to the client using which the client can access the system. This type of design pattern comes under structural pattern as this pattern adds an interface to existing system to hide its complexities. WPF-Samples/Elements/VisibiltyChanges,2,0,2022,2024,1,https://github.com/YusufsKaygusuz/Facade-Pattern-Design-WPF-Microsoft-Sample-
Facade,fynapp_backend,"Python Flask backend for FynApp. It can use DynamoDb or MongoDB. The DynamoDb interaction is made by mongoDb like calls. Software design patterns used: factory method, facade, iterator, template method, decorator.",2,0,2022,2023,1,https://github.com/tomkat-cr/fynapp_backend
Facade,Scraped_News,"Scraped News is backend-oriented project wich ""scrape"" data from a public news page and put it into a better client view using facade as design pattern. Server has been wrote with NodeJs and client with React",2,0,2021,2023,1,https://github.com/yuNNNu/Scraped_News
Facade,L2,"The L2 Project is a collection of twelve programming tasks designed to enhance understanding and implementation of various concepts in Go, including design patterns (such as Facade, Builder, and Strategy), string manipulation, file handling, NTP communication, regular expressions, and the development of basic utilities and custom tools.",2,0,2024,2025,0,https://github.com/mysticalien/L2
Facade,FacadeDesignPattern,Facade Design Pattern Demo,1,0,2012,2014,1,https://github.com/NileshGule/FacadeDesignPattern
Facade,Insurance-Management-System,"A simulation of Insurance Management system using MVC architecture with Facade, Chain of responsibility and Singleton design patterns",1,2,2023,2024,1,https://github.com/Keshavaram/Insurance-Management-System
Facade,FileSystem-as-Facade,Facade + Command Design pattern Implementation,1,0,2016,2021,1,https://github.com/Satyanandana/FileSystem-as-Facade
Facade,FacadePatternExampleApplication,SSE 662 Project 4 Facade Design Pattern Example,1,0,2017,2018,1,https://github.com/GMP-SSE-662/FacadePatternExampleApplication
Facade,DesignPatternFacade,This is Facade Design Pattern Example.,1,0,2021,2021,2,https://github.com/ArchNet-1/DesignPatternFacade
Facade,DesignPattern-Facade,Example implementation of Facade design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Facade
Facade,facade-design-pattern,Facade Design Pattern Implementation in C#,1,0,2024,2024,1,https://github.com/PrashDev425/facade-design-pattern
Facade,angular-facade-pattern,Facade Design Pattern implementation example using Angular,1,0,2021,2021,1,https://github.com/huseink/angular-facade-pattern
Facade,DesignPatterns,Facade and Builder Pattern Examples,1,0,2020,2021,1,https://github.com/ahmetyavuzoruc/DesignPatterns
Facade,facade_design_pattern,Implementation of the facade design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/facade_design_pattern
Facade,DesignPatterns-Facade,,1,0,2022,2022,1,https://github.com/thiagocantero/DesignPatterns-Facade
Facade,facade-design-pattern,See example of facade design pattern in go,1,0,2024,2024,1,https://github.com/bujosa/facade-design-pattern
Facade,DesignPatterns,"Design patterns: Singleton, Builder, Facade, FactoryMethod, Prototype,",1,0,2022,2022,1,https://github.com/heminmoh/DesignPatterns
Facade,rabbitmq-facade,implementing facade design pattern for using rabbitmq in nodejs,1,0,2022,2022,1,https://github.com/amin7ranjbar/rabbitmq-facade
Facade,Frontage,An implementation of the facade design pattern,1,0,2013,2022,1,https://github.com/ChristianGaertner/Frontage
Facade,PhpDesignPatterns-Facade,Facade,1,0,2018,2024,1,https://github.com/Jagepard/PhpDesignPatterns-Facade
Facade,Facade-Design-Pattern-Demo,"As an object-oriented design pattern, the Facade Design Pattern simplifies the interface of complex systems of components. The purpose of this project was to demonstrate a deep understanding of this design pattern.",1,0,2023,2023,1,https://github.com/AhmedMohmd1/Facade-Design-Pattern-Demo
Facade,Ex6-Adapter-Decorator-Facade-Design-Pattern,05506230-Design Patterns In Object-Oriented Programming ,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex6-Adapter-Decorator-Facade-Design-Pattern
Facade,FacadePatternSample,It is simple playground file written in Swift language to demonstrate Facade Design Pattern,1,0,2016,2022,0,https://github.com/prvaghela/FacadePatternSample
Facade,FacadeDesignPrescription,"This is a facade design pattern implementation written by Gwen Massingill, Seth Orvin, and Owen Carptenter as a low-level devliery app system to demonstrate a working knowledge of the Facade Design Pattern.",1,0,2023,2024,2,https://github.com/GwenMass/FacadeDesignPrescription
Facade,Design_Patterns-Tasarim_Desenleri,Tasarım Desenleri / Design Patterns,1,1,2020,2023,1,https://github.com/cantugba/Design_Patterns-Tasarim_Desenleri
Facade,MusicAlbums,"use design patterns ,Abstract Factory , MVC ,Decorator,Adapter,Facade",1,0,2016,2016,1,https://github.com/jobsyu/MusicAlbums
Facade,DesignPatterns02,"Design Patterns -02 "" Padrões Estruturais - Técnicas de (Adpter, Decorator, Composite, Facade e Proxy)",1,0,2021,2021,1,https://github.com/marcello222/DesignPatterns02
Facade,DesignPattern,collection of Java design pattern implementations,1,0,2024,2025,1,https://github.com/bunu23/DesignPattern
Facade,BlueLibrary,"Design pattern illustration: Singleton, MVC, Decorator, Adapter, Facade, Observer, Memento.",1,0,2017,2020,1,https://github.com/ngominhtrint/BlueLibrary
Facade,UnityPatterns,"Unity Design Patterns UPM package (e.g Singleton, Strategy, Facade...)",1,0,2022,2022,1,https://github.com/mfdeveloper/UnityPatterns
Facade,Facade-Adapter-Design-Patterns,,1,0,2021,2023,1,https://github.com/eliangermosen/Facade-Adapter-Design-Patterns
Facade,facade-in-ts,This is simple example of the facade design pattern based on some tut from udemy,1,0,2018,2018,1,https://github.com/mateuszmilewski/facade-in-ts
Facade,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
Facade,patterns,"Design Patterns Sample (Creational[Builder, Factory Method,Singleton], Structural[Adapter, Facade, Proxy] )",1,0,2016,2023,1,https://github.com/asanchezyu/patterns
Facade,patterns2,"Abstract Factory, Adapter, Builder, Façade, and Factory Method Design Patterns sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns2
Facade,trust-freamwork,trust freamwork is mini php freamwork use facades & use package laravel & design pattern,1,0,2022,2022,1,https://github.com/arashdeveloper1380/trust-freamwork
Facade,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Facade,facade-pattern-swift,"Dive into the world of structural design patterns as we demystify how Facade simplifies complex subsystems, provides unified interfaces, and enhances code maintainability",1,0,2023,2025,1,https://github.com/kien-hoangt/facade-pattern-swift
Facade,sms-sender,A Laravel package to handle SMS sending based on Strategy and Facade design patterns,1,0,2023,2024,3,https://github.com/hamid80386/sms-sender
Facade,FacadeTestDemo,"When it come to software development, Facade design pattern is must if we need to develop a proper software application  Sometimes, earlier we used this structure of the facade design pattern while development without know the name of it.  It hides the complexity of the code by providing an easy interface to the user that can access the whole system. A single class provides all the methods required by the user from the system.",1,0,2016,2016,1,https://github.com/kasunbuddhima/FacadeTestDemo
Facade,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Facade,magento-webapp,Luma web-app playwright-cucumber test automation framework created with POM and Facade design pattern.,1,0,2024,2025,1,https://github.com/najeeb1023/magento-webapp
Facade,Design-Patterns,Implementation of some of GOF design patterns using CSharp and DotNetCore,1,2,2017,2021,2,https://github.com/AhmadElsayed/Design-Patterns
Facade,10-design-patterns-in-typescript,"Implementations of Design Patterns in TypeScript for demonstration purposes. Some of them include Facade, Iterator, Factory, etc.",1,0,2022,2025,1,https://github.com/andersonbosa/10-design-patterns-in-typescript
Facade,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Facade,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Facade,Intro-To-Facade-Design-Pattern,"Facade is a struc­tur­al design pattern that pro­vides a sim­pli­fied inter­face to a library, a framework, or any other com­plex set of classes",1,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Facade-Design-Pattern
Facade,EvspoID,"Platform E-commerce perlengkapan olahraga dibangun dengan Java menggunakan design pattern factory, abstract factory, strategy, singleton, facade pattern",1,0,2023,2023,1,https://github.com/malikfajarh/EvspoID
Facade,design-patterns,A GitHub repository providing simple explanations and code snippets for various design patterns in JavaScript and Python.,1,0,2023,2023,1,https://github.com/simon-das/design-patterns
Facade,EsiMealApp,"a flutter mobile app for restaurant management  implementig design patterns (chain of responsibility, decorator, factory method, singleton, strategy and facade).",1,1,2020,2020,2,https://github.com/Sihamtahi/EsiMealApp
Facade,WikiDesignPattern,"Wiki de présentation des Design Pattern : Décorateur et Facade  Membre: Depermentier Thibault,Fabre Luca,Goudezeune Antonin,Lafitte Antoine,Triglia Yanis",1,1,2022,2022,3,https://github.com/Wiki-design-pattern/WikiDesignPattern
Facade,RESTAURANT-MENU-APP,"A restuarant menu java application implementing Object Oriented Design patterns: Observer, Adapter and Facade and implementing SOLID and GRASP principles  ",1,0,2017,2017,1,https://github.com/Maitri-13/RESTAURANT-MENU-APP
Facade,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Facade,BankingFramework,"Banking System: creating and managing customers, accounts, credit cards, interest, deposits and withdrawals. Used Java8, Java Swing, Design Patterns (Command, Factory, Singleton, Template, Façade).",1,0,2016,2021,1,https://github.com/abdullahashik/BankingFramework
Facade,clothestore-v2,Projeto interdisciplinar abordando princípios do paradigma orientado à objeto. Implantado Design Patterns como Facade e Singleton e utilizado DAO para a camada de persistência,1,0,2021,2021,1,https://github.com/bruno-albino/clothestore-v2
Facade,MusicAlbums,"This app shows a Music Album collection and allows you edit the list. It uses different design patterns like Singleton, MVC, Decorator, Adapter, Facade, Observer.",1,0,2017,2018,0,https://github.com/josman185/MusicAlbums
Facade,DesginPatterns,"My GitHub repository showcases JavaScript design patterns including Null Object, Builder, Singleton, Command, and Facade. Learn how to implement these powerful patterns for clean and reusable code. Boost your development skills with concise examples and explanations. Dive into the world of design patterns in JavaScript.",1,0,2023,2023,1,https://github.com/Ankush-ai/DesginPatterns
Facade,three-in-a-row-game-with-design-patterns,"Juego tres en raya, realizado en el lenguaje de programacion JAVA, utilizando el IDE netbeans 8.2. El juego se diseño principalmente para ser aplicado los patrones de diseño los cuales son los siguientes: patron Builder, patron factory, patron singleton, patron observer y patron facade, como resultado final tenemos que el programa tiene funcionalidad optima, trabajando conjuntamente con los patrones de diseño implementados.",1,0,2022,2022,1,https://github.com/bryherna/three-in-a-row-game-with-design-patterns
Facade,desafio-omint,"API Restfull em Java com Spring Boot, Spring Data, Spring Projections, JPA, implementação de design patterns Command, Facade, Dao, utilizando Oracle e JUnit 5 para testes unitários.",1,0,2020,2024,1,https://github.com/acnaweb/desafio-omint
Facade,AMBRequest.swift,Facade class for AFNetworking to simplify setup for sending a request and handling a response from a remote endpoint. Implements the delegate design pattern and is written in Swift,1,0,2014,2023,1,https://github.com/mintuz/AMBRequest.swift
Facade,StockManagement,"Developed a robust stock management application integrating design patterns such as Facade, Builder, MVC, SOLID principles, and Command patterns, focusing on abstraction and code reusability to ensure scalability and extensibility.",1,0,2024,2025,1,https://github.com/pratheeshkumar99/StockManagement
Facade,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Facade,Elegant_API,"Elegant API has been developed with the objective of have  most design patterns posible, using Singleton, Dependencies Injection, Facade, Currying, an adapter in hipothetic case and trying to has clean code.",1,0,2021,2023,1,https://github.com/yuNNNu/Elegant_API
Facade,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Facade,StudentTimetableSystem,"MSc Assignment in Enterprise Software Engineering. Web application using JSP with entity persistence. 3 projects: EJB has the entity classes with factory methods and facades. Library has DTO classes and remotes for facades. Client is 'StudentTimetablingSystem' project. Focus of project is to demonstrate JSP with MVC, some design patterns and entity persistence in Java. The theme is a student timetabling system.",1,0,2019,2020,1,https://github.com/markbennison/StudentTimetableSystem
Facade,Cinema-E-booking-System-,"Designed and developed a web-based application using React JS for the Frontend and Java Spring Boot for the Backend, and designed the database model using MySQL, ensuring efficient management of a theatre's movies and customers. Implemented a multi-layered architecture with Facade and Singleton design patterns, adhering to SOLID principles.",1,0,2024,2024,1,https://github.com/Ruchitha12/Cinema-E-booking-System-
Facade,Facade,this repo contains Facade design pattern implementation using C#,0,44,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/Facade
Facade,srp-facade-lab,CSC 309 Lab on the Single Responsibility Principle and Facade Design Pattern,0,27,2020,2021,1,https://github.com/mlpollar/srp-facade-lab
Facade,srp-facade-lab,CSC 309 Lab on the Single Responsibility Principle and Facade Design Pattern,0,24,2020,2020,2,https://github.com/adrien-chaussabel/srp-facade-lab
Facade,Lgroup.DesignPatterns.Facade,,0,3,2016,2016,1,https://github.com/ErickWendel/Lgroup.DesignPatterns.Facade
Facade,Facade,Structural Design Pattern in C# | Facade Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Facade
Facade,Facade,Design pattern,0,0,2019,2019,1,https://github.com/Majk1989PL/Facade
Facade,FacadeDemo,Structural Design Pattern in C# | Facade Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/FacadeDemo
Facade,Facade,Design Patterns - Facade,0,0,2020,2020,1,https://github.com/euygor/Facade
Facade,Facade-,design pattern,0,0,2023,2023,1,https://github.com/Nazaninns/Facade-
Facade,Facade,Design Pattern Facade,0,0,2022,2022,1,https://github.com/aliounemane2/Facade
Facade,FacadePattern,Facade design pattern.,0,0,2017,2017,0,https://github.com/MikMakMichael/FacadePattern
Facade,FacadePattern,Design pattern - Facade,0,0,2021,2021,1,https://github.com/quocanhh21/FacadePattern
Facade,Facade-Design-Pattern,  Structural Design Patterns: Facade Design Pattern ,0,0,2023,2023,1,https://github.com/samehesmael277/Facade-Design-Pattern
Facade,Facade-Design-Pattern,Design Pattern Struktural : Facade Design Pattern,0,0,2016,2016,0,https://github.com/ramdhanrizki/Facade-Design-Pattern
Facade,FacadeDesignPattern,Facade Design Pattern,0,0,2018,2018,1,https://github.com/ibavli/FacadeDesignPattern
Facade,Facadepattern,Design pattern,0,0,2022,2022,1,https://github.com/kumarij701/Facadepattern
Facade,FacadeDesignPattern,Facade design pattern,0,0,2018,2018,0,https://github.com/h09shais/FacadeDesignPattern
Facade,FacadeDesignPattern,Facade Design Pattern ,0,0,2024,2024,1,https://github.com/bahademircioglu/FacadeDesignPattern
Facade,FacadeDesignPattern,facade design pattern,0,0,2023,2023,1,https://github.com/CodenameOverlord/FacadeDesignPattern
Facade,FacadeDesignPattern,Face design pattern ,0,0,2021,2021,0,https://github.com/semihtr13/FacadeDesignPattern
Facade,FacadeDesignPatternExample,Facade Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/FacadeDesignPatternExample
Facade,facade,Design Pattern - Facade - Exemple,0,0,2024,2024,1,https://github.com/luiz-maehana/facade
Facade,DP_facade,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_facade
Facade,Facade,Design Patterns Bolum 6,0,0,2016,2016,1,https://github.com/caglarturkurka/Facade
Facade,Facade,Implementing design pattern facade,0,0,2018,2018,1,https://github.com/skinex/Facade
Facade,facade,Facade Structural Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/facade
Facade,FacadePattern,Assignment of design pattern,0,0,2018,2018,1,https://github.com/nusratwaheedkhan/FacadePattern
Facade,Facade-Design-Pattern,Facade Design Pattern,0,0,2018,2018,1,https://github.com/klupsch/Facade-Design-Pattern
Facade,facade-pattern,facade design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/facade-pattern
Facade,Fasada_Potvrda_O_Kupovini,Facade-Design Patterns,0,0,2020,2020,1,https://github.com/donat8/Fasada_Potvrda_O_Kupovini
Facade,Codigo-037---Novo-Formas-Coloridas,Design Pattern Facade,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-037---Novo-Formas-Coloridas
Facade,Codigo-038---Novo-Carro,Design Pattern Facade,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-038---Novo-Carro
Facade,DesignPattern-520,Design Pattern Facade,0,0,2017,2022,1,https://github.com/PlumpMath/DesignPattern-520
Facade,Design_pattern-FACADE,Design pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-FACADE
Facade,design-facade,Design Pattern Facade,0,0,2024,2024,1,https://github.com/sofiaclsantos/design-facade
Facade,Atividade-Combo-Facade,Design Patterns,0,0,2024,2024,1,https://github.com/LuizOkumura5/Atividade-Combo-Facade
Facade,java_gof_facade,"design pattern ""facade""",0,0,2015,2015,1,https://github.com/osbominix/java_gof_facade
Facade,Facade_Design_Pattern,Facade Design Pattern,0,0,2025,2025,1,https://github.com/adi501/Facade_Design_Pattern
Facade,Facade-Design-Pattern,Facade Design Pattern,0,0,2024,2024,1,https://github.com/RaghavendraHosad/Facade-Design-Pattern
Facade,Design-Pattern-Facade,Design Pattern,0,0,2016,2016,1,https://github.com/aakash140/Design-Pattern-Facade
Facade,FacadeDesignPattern,Facade Design Pattern Example,0,0,2020,2020,1,https://github.com/aasmc/FacadeDesignPattern
Facade,Facade2024_1,Exemplo Design Pattern Facade,0,0,2024,2024,0,https://github.com/ClaudioNunes/Facade2024_1
Facade,Facade,Facade Structural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Facade
Facade,FacadePatternExample,Facade Design Pattern Example,0,0,2020,2020,1,https://github.com/quedacoder/FacadePatternExample
Facade,facade,Design Pattern Facade usando Java,0,0,2021,2021,1,https://github.com/dev-st4rk/facade
Facade,Facade,Présentation du design pattern Façade,0,1,2023,2023,0,https://github.com/angelocng/Facade
Facade,Facade,Facade design pattern in php,0,0,2015,2015,1,https://github.com/RyanFa/Facade
Facade,Facade,Facade Design Pattern in C#,0,0,2021,2021,1,https://github.com/behnam-mahdavirad/Facade
Facade,Facade,Facade design pattern xamarin MVVM,0,0,2019,2019,1,https://github.com/XamarinCDS/Facade
Facade,FacadePattern,Implements the Facade Design Pattern,0,0,2017,2017,1,https://github.com/TTerry8155/FacadePattern
Facade,FacadePatternDemo,Demo Design Pattern menggunakan Facade,0,0,2020,2020,1,https://github.com/rasyidridha547/FacadePatternDemo
Facade,FacadeDesignPattern,Example for Facade Design Pattern,0,0,2024,2024,1,https://github.com/sonali51/FacadeDesignPattern
Facade,FacadeDesignPattern,LLD for Facade Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/FacadeDesignPattern
Facade,FacadeDesignPattern,facade design pattern with java,0,0,2024,2024,1,https://github.com/ChandimalPriyamantha/FacadeDesignPattern
Facade,design-pattern-facade-design-pattern-c-sharp.net,design-pattern-facade-design-pattern-c-sharp.net,0,0,2017,2017,1,https://github.com/pramodchoudhari/design-pattern-facade-design-pattern-c-sharp.net
Facade,facade,Implementation in Python: Facade Design Pattern,0,0,2014,2014,1,https://github.com/lorie-castillano/facade
Facade,facade,Implementation of Facade - Software Design Pattern,0,0,2015,2015,1,https://github.com/nifrasismail/facade
Facade,-Practice-Design-Pattern-Facade,Design Pattern Practice,0,0,2018,2018,1,https://github.com/Russell-Tsai/-Practice-Design-Pattern-Facade
Facade,go-facade-design-pattern,Facade Design Pattern | Go,0,0,2023,2023,0,https://github.com/loxt/go-facade-design-pattern
Facade,js-facade-design-pattern,JavaScript Facade Design Pattern,0,0,2020,2020,1,https://github.com/mohamedisakr/js-facade-design-pattern
Facade,Facade-Java-,The design pattern - Facade,0,0,2023,2023,1,https://github.com/zhilin1112/Facade-Java-
Facade,design-patterns-facade,C# Design Patterns: Facade,0,0,2021,2023,1,https://github.com/jasarsoft/design-patterns-facade
Facade,Facade-Design-Pattern,Facade Design Pattern example,0,0,2022,2022,1,https://github.com/SachinChivate/Facade-Design-Pattern
Facade,typescript-facade-pattern,Implement Facade Design Pattern,0,0,2021,2021,1,https://github.com/wahyufeb/typescript-facade-pattern
Facade,STRUCTURAL-DESIGN-PATTERN-Facade-,STRUCTURAL DESIGN PATTERN (Facade),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-Facade-
Facade,design-patterns-facade-exemple,design patterns facade exemple,0,0,2024,2024,1,https://github.com/dhia-eddine/design-patterns-facade-exemple
Facade,intelligent-home-system,Uses facade design pattern,0,0,2024,2024,1,https://github.com/KuroXI/intelligent-home-system
Facade,DesignPatternFacade,Implementação Design Pattern: Facade,0,0,2023,2023,1,https://github.com/LuannaFSCamilo/DesignPatternFacade
Facade,facade-design-pattern,C# - Facade Design Pattern,0,0,2023,2023,1,https://github.com/flcristian/facade-design-pattern
Facade,csharp-facade-openweather,Facade Design Pattern practice,0,0,2021,2021,1,https://github.com/DazSanchez/csharp-facade-openweather
Facade,CSharpDP_Structural_Facade,Structural Facade Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Facade
Facade,dp-structural-facade,Design Pattern: Structural - Facade,0,1,2020,2020,1,https://github.com/una-eif204-progra2-master/dp-structural-facade
Facade,PC,Facade Design Pattern Example,0,0,2023,2023,0,https://github.com/VladislavPavlyuk/PC
Facade,FacadeAndProxyDesignPattern,Design Pattern study in .NET,0,0,2024,2024,1,https://github.com/kylegrabski/FacadeAndProxyDesignPattern
Facade,demo_design_pattern,facade demo design pattern,0,0,2019,2019,1,https://github.com/leaderwing/demo_design_pattern
Facade,Combo,Exercicio design patterns - facade,0,0,2024,2024,1,https://github.com/jubrondino/Combo
Facade,facade,To learn Facade design pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/facade
Facade,Facade,A design pattern Facade in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Facade
Facade,FacadeDesign_Pattern-Example,"Projet Design pattern, hotel comme exemple",0,0,2022,2022,1,https://github.com/TMalikiBarry/FacadeDesign_Pattern-Example
Facade,FacadeDIP,Design Pattern Facade com Injeção de Independência,0,0,2017,2017,1,https://github.com/EliPedro/FacadeDIP
Facade,DesignPattern-FacadeDesignPattern,Practical implementation for  façade design pattern,0,0,2020,2022,0,https://github.com/AntarikshVerma/DesignPattern-FacadeDesignPattern
Facade,PadroesDeProjeto-Facade,aprendendo sobre design patterns,0,0,2023,2023,1,https://github.com/Cesarribe/PadroesDeProjeto-Facade
Facade,FacadePattern,The Facade Design Pattern Home Stereo Example,0,0,2016,2016,1,https://github.com/nhamm42/FacadePattern
Facade,3-2-DesignPatterns-Facade,"Design Patterns in Object-Oriented Programming Sixth Tasks ""Facade Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Facade
Facade,facadeDesignPattern,Example to use of Facade design pattern,0,0,2018,2018,1,https://github.com/ketanMuttha/facadeDesignPattern
Facade,Facade-01,"Design Pattern, Facade, example 01",0,0,2016,2025,1,https://github.com/hr-ireh/Facade-01
Facade,FacadeStudentID,This repository covers the Facade design pattern,0,0,2019,2019,1,https://github.com/terryjohnson901/FacadeStudentID
Facade,MAP_Facade,Repository for Facade design pattern,0,0,2021,2021,2,https://github.com/Thiago18l/MAP_Facade
Facade,facade-php,Facade Design Pattern using PHP,0,0,2019,2019,1,https://github.com/florincornea/facade-php
Facade,FacadeDesignPattern,Implementação para testar o Design Pattern Facade.,0,0,2023,2023,1,https://github.com/Carolina0110/FacadeDesignPattern
Facade,Facade,Exemplo de Design Pattern (Facade) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/Facade
Facade,facade-design-pattern,Facade Design Pattern in Angular,0,0,2022,2022,1,https://github.com/pawankv89/facade-design-pattern
Facade,facade,This is an example of facade design pattern,0,0,2022,2022,1,https://github.com/manodyna/facade
Facade,HomeTheaterFacade,Facade Design Pattern - implementation/practice,0,0,2018,2018,1,https://github.com/bwielk/HomeTheaterFacade
Facade,engComp.padroesDeProjeto.facade,Façade design pattern in Java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.facade
Facade,Facade-Design-Pattern,Facade Design Pattern in Java,0,0,2021,2021,1,https://github.com/Kensaigm/Facade-Design-Pattern
Facade,Assignment-3-Facade-Implementation,Implementation of Facade Design Pattern,0,0,2018,2018,1,https://github.com/farrukhafzaal/Assignment-3-Facade-Implementation
Facade,PetKeeper,Facade Design Pattern implementation example,0,0,2021,2021,0,https://github.com/ByAlexCod/PetKeeper
Facade,TicTacToe,tictactoe using facade design  pattern,0,0,2023,2023,1,https://github.com/BHAVESH2311/TicTacToe
Facade,DesignPatternFacade,Présentation du Design Pattern : Façade,0,0,2018,2018,1,https://github.com/arnaudsaulou/DesignPatternFacade
Facade,Laravel_and_InertiaJs_,InertiaJs and Facade Design pattern,0,0,2023,2023,1,https://github.com/Lakshan214/Laravel_and_InertiaJs_
Facade,design-pattern-facade,GOF facade structural design pattern,0,0,2014,2014,1,https://github.com/a-cordier/design-pattern-facade
Facade,DesignPatternDemo,Demo App - Facade Design Pattern,0,0,2016,2016,1,https://github.com/smruti05/DesignPatternDemo
Facade,Laravel-facade-design-pattern,Laravel Facade Design Pattern Tutorial,0,0,2023,2023,1,https://github.com/BabakNiknejad/Laravel-facade-design-pattern
Facade,Design-Patterns-Example,"Singleton, Factory, Facade Design Patterns",0,0,2021,2021,1,https://github.com/mlevanduski/Design-Patterns-Example
Facade,facade-design-pattern,Simple implimentation of design pattern,0,0,2023,2023,1,https://github.com/francis951/facade-design-pattern
Facade,FacadeJM,Aprendendo o design pattern Facade no java :D,0,0,2023,2023,1,https://github.com/bem343/FacadeJM
Facade,facade_and_command_design-pattern,facade and command design pattern,0,0,2018,2024,1,https://github.com/AJEETX/facade_and_command_design-pattern
Facade,FacadePattern,My representation of the GoF Facade design pattern.,0,0,2018,2018,1,https://github.com/j-runser/FacadePattern
Facade,Gurmenler_DesignPatternsAndSolid,"Solid Principles, Facade Design Pattern, Bridge Design Patterns with Example",0,0,2022,2022,1,https://github.com/akdemirsafak/Gurmenler_DesignPatternsAndSolid
Facade,Lab5-Decorator-and-Facade-Pattern,Lab of design patterns,0,0,2024,2024,1,https://github.com/marko-homulak/Lab5-Decorator-and-Facade-Pattern
Facade,FacadeDesignPatternExample-Kotlin,Simple facade design pattern example in Kotlin,0,0,2019,2019,0,https://github.com/rommansabbir/FacadeDesignPatternExample-Kotlin
Facade,FacadePatternPHP,A demonstration of Facade Design Pattern in PHP,0,0,2020,2020,1,https://github.com/bariscimen/FacadePatternPHP
Facade,facade-example,An implementation for 'Facade' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/facade-example
Facade,pattern-facade,Example design pattern facade in java,0,0,2020,2020,1,https://github.com/mariosergiorn/pattern-facade
Facade,facade-pattern,A demo of Facade Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/facade-pattern
Facade,facade-exerc,Atividade implementação de design pattern facade,0,0,2024,2024,1,https://github.com/natanaelsantana/facade-exerc
Facade,facade, Implementando uma classe “Combo” seguindo o design pattern “Facade”,0,0,2023,2023,1,https://github.com/lucaszamorapy/facade
Facade,atividadeFacade,Atividade sobre o Design Pattern Facade.,0,0,2024,2024,1,https://github.com/GuiHeinrich/atividadeFacade
Facade,facade-pattern,Facade Design Pattern demo in C#,0,0,2022,2022,1,https://github.com/jebarcha/facade-pattern
Facade,DesignPatterns,Factory/Facade/Strategy,0,0,2022,2022,1,https://github.com/Auvsexvc/DesignPatterns
Facade,SEW-EK_DesignPatterns,Facade Pattern,0,0,2020,2020,1,https://github.com/jborensky-tgm/SEW-EK_DesignPatterns
Facade,Facade-DesignPattern,Facade Design Pattern Implementation in C#,0,0,2020,2020,1,https://github.com/KJayanthKumar/Facade-DesignPattern
Facade,AdapterFacadePatterns,Head First Design Patterns Chapter 7,0,0,2023,2023,2,https://github.com/DNate9427/AdapterFacadePatterns
Facade,facade-pattern-php,Facade Design Pattern Implementation in PHP,0,0,2017,2019,1,https://github.com/farazjaved/facade-pattern-php
Facade,AdapterFacadePatterns,Head First Design Patterns Chapter 7,0,0,2023,2023,1,https://github.com/DustinNation/AdapterFacadePatterns
Facade,WorkshopFactoryAndFacadePatterns,Demo repos for design patterns,0,0,2021,2021,1,https://github.com/gartee-john-PFG/WorkshopFactoryAndFacadePatterns
Facade,Design-Pattern-Learning-with-Java,"Design Pattern Learning with Java inxcluding Factory, Facade, Template Design Patterns",0,0,2024,2024,1,https://github.com/Hashara13/Design-Pattern-Learning-with-Java
Facade,php-design-patterns-facade,PHP Design Patterns - Facade Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-facade
Facade,FacadeDesignPattern,This example illustrates how to use Facade design pattern.,0,0,2023,2023,1,https://github.com/prabhakarchangala/FacadeDesignPattern
Facade,Design_Patterns,Facade design pattern for Objective C,0,0,2019,2019,0,https://github.com/beats-and-pieces/Design_Patterns
Facade,DesignPattern,Design Pattern de Facade e Proxy,0,0,2025,2025,1,https://github.com/RafaelAlves98/DesignPattern
Facade,BankFacade,Facade design pattern implemented without any module,0,0,2016,2016,1,https://github.com/jpmilhau/BankFacade
Facade,ejemFachada,Code example using facade design pattern,0,0,2017,2017,1,https://github.com/David-Delgadillo/ejemFachada
Facade,car-facade-design-pattern-example,C# - Facade design pattern - Car example,0,0,2023,2023,1,https://github.com/flcristian/car-facade-design-pattern-example
Facade,Bank-Log,Bank Log using Facade Design Pattern,0,0,2019,2019,1,https://github.com/paralkarniki/Bank-Log
Facade,APIFacade,API Calling implementing FACADE Design Pattern,0,0,2025,2025,1,https://github.com/JessIsaac/APIFacade
Facade,FacadePattern,https://app.pluralsight.com/library/courses/csharp-design-patterns-facade/,0,0,2022,2022,0,https://github.com/lunawen/FacadePattern
Facade,Facade-Pattern-Example-C,Implementation Design Pattern Faced in C#,0,0,2018,2018,1,https://github.com/allanjps1/Facade-Pattern-Example-C
Facade,FacadePatternAssignment5,It's assignment 5 that includes Facade Design Pattern,0,0,2021,2021,1,https://github.com/1asset/FacadePatternAssignment5
Facade,dotnet_lab2,Facade design pattern in calorie calculator,0,0,2021,2023,1,https://github.com/nikitabubriak/dotnet_lab2
Facade,designPatterns,"Adapter, Factory, Facade, Singleton",0,0,2020,2020,1,https://github.com/serozhkohannaa/designPatterns
Facade,course-navigator,Facade Design pattern UBC course navigator,0,0,2020,2020,1,https://github.com/BradenMH/course-navigator
Facade,facadePattern,This is an example of Facade Design Pattern in JAVA,0,0,2024,2024,1,https://github.com/ClarkBelen/facadePattern
Facade,FacadeDesignPattern,Simple illustration of the Facade design pattern implemented in Swift.,0,1,2020,2020,1,https://github.com/zafarivaev/FacadeDesignPattern
Facade,BasicFacadeProject,Implementing basic Facade Design Pattern using NgRx.,0,0,2021,2021,1,https://github.com/satayu21/BasicFacadeProject
Facade,FacadeReflectionAutoMapper2,"Project implementing facade design pattern, reflection method and AutoMapper",0,0,2018,2018,1,https://github.com/Fantasmy/FacadeReflectionAutoMapper2
Facade,FacadeMachineACafe,Tiny demo project to introduce the FACADE design pattern [French],0,0,2018,2018,2,https://github.com/ohusser70/FacadeMachineACafe
Facade,facade-pattern-example,Real world example of facade design pattern,0,0,2017,2017,1,https://github.com/dlogchies/facade-pattern-example
Facade,Facade_Project,A repository for the Facade Design Pattern Tutorial,0,0,2015,2015,5,https://github.com/daveogle/Facade_Project
Facade,facade_dp,A short example of the facade design pattern,0,0,2019,2019,1,https://github.com/JohanCederschiold/facade_dp
Facade,DesignPatterns_chapter-7,Facade and Adapter patterns,0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-7
Facade,DesignPatterns-JAVA,Singleton | MVC | Façade | Decorator | Adapter,0,0,2020,2020,1,https://github.com/ShashithAdithyaWijerathne/DesignPatterns-JAVA
Facade,DesignPatterns.Facade,,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.Facade
Facade,Exemplos---Design-Patterns,Facade,0,0,2017,2017,1,https://github.com/Vanessa19/Exemplos---Design-Patterns
Facade,DesignPatterns-Facade,,0,0,2024,2024,1,https://github.com/caiojosef/DesignPatterns-Facade
Facade,DesignPatternsFacade,,0,0,2022,2022,1,https://github.com/GessicaP/DesignPatternsFacade
Facade,designPatternsFacade,,0,0,2024,2024,1,https://github.com/jack23h67/designPatternsFacade
Facade,Facade_Design_Pattern, Implement Facasde Design Pattern On Shopping Basket Scenario,0,0,2023,2023,1,https://github.com/MahmoudAshraf2899/Facade_Design_Pattern
Facade,DesignPatterns-Facade,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Facade
Facade,DesignPatterns-Facade,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Facade
Facade,DesignPatterns_Facade,,0,0,2022,2022,1,https://github.com/viniciusandrade01/DesignPatterns_Facade
Facade,DesignPatterns_Facade,,0,0,2022,2022,1,https://github.com/GabrielePollak/DesignPatterns_Facade
Facade,FacadeDesignPatternExample,An example of the Facade Design Pattern for DE CS II.,0,0,2021,2021,1,https://github.com/critterjohnson/FacadeDesignPatternExample
Facade,DesignPatterns-Facade,,0,0,2023,2023,1,https://github.com/GabrielleAp19/DesignPatterns-Facade
Facade,design-pattern-facade,A review on Design Pattern Facade in Java,0,0,2021,2021,1,https://github.com/marciodegan/design-pattern-facade
Facade,DesignPatterns.Facade,,0,0,2018,2018,1,https://github.com/huanglin1/DesignPatterns.Facade
Facade,DesignPatterns-Facade,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Facade
Facade,DesignPatterns-Facade,,0,0,2023,2023,1,https://github.com/JulianeAndreza/DesignPatterns-Facade
Facade,DesignPatternsFacade,,0,0,2024,2024,1,https://github.com/masfazan/DesignPatternsFacade
Facade,car-showroom,decorator and facade design patterns in java,0,0,2022,2023,1,https://github.com/raise89/car-showroom
Facade,DesignPatterns,"Estudos sobre Design Patterns: Singleton, Strategy, Facade",0,0,2023,2023,1,https://github.com/Vguilhen/DesignPatterns
Facade,Advanced_OOP_Facade_Design_Pattern,Coding bootcamp exercise for facade design pattern,0,0,2017,2017,1,https://github.com/Dimitris-Theodoropoulos/Advanced_OOP_Facade_Design_Pattern
Facade,Bank,Banking System Using Java & Facade Design Pattern,0,0,2019,2019,1,https://github.com/T3Allam/Bank
Facade,java-design-patterns,"Proxy, Facade, Iterator, Template design pattern examples",0,0,2019,2019,10,https://github.com/kumuddhanvijay/java-design-patterns
Facade,Payment-Transactions-Project-with-Facade-Design-Pattern,Payment Transactions Project with Facade Design Pattern,0,0,2023,2023,1,https://github.com/Esma222/Payment-Transactions-Project-with-Facade-Design-Pattern
Facade,DesignPatterns-Facade,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Facade
Facade,DesignPatterns.Facade,,0,0,2022,2022,1,https://github.com/dFarkhod/DesignPatterns.Facade
Facade,Java-springBoot,"Trabalhando com Design Patterns -> Singleton, Strategy, Facade",0,0,2023,2023,1,https://github.com/Hugo83-tecnico/Java-springBoot
Facade,C-Sharp-Design-Pattern-Lab1,This Lab activity is for C#  Adapter Design Pattern and Facade Design Pattern ,0,0,2025,2025,1,https://github.com/Gurjit211/C-Sharp-Design-Pattern-Lab1
Facade,DesignPatterns4Examples,Design Patterns Singleton Factory Method Facade Observer ,0,0,2023,2023,1,https://github.com/AJPTechnology/DesignPatterns4Examples
Facade,DesignPat_FacadeDaos_Template,Template for implementing Facade Design Pattern and Daos in .Net Framework,0,0,2023,2023,1,https://github.com/balcazarium/DesignPat_FacadeDaos_Template
Facade,facade-java,Exemplificação da implementação do Design Pattern Facade em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/facade-java
Facade,FacadeDesignPattern,Learn Facade Design Pattern from https://www.youtube.com/watch?v=fHPa5xzbpaA,0,0,2019,2019,0,https://github.com/markpackham/FacadeDesignPattern
Facade,designPatterns,"Exercise: Abstract Factory, Builder, Singleton, Decorator, Facade",0,0,2019,2019,1,https://github.com/alexandrakurek/designPatterns
Facade,BankFacadeModule,Facade design pattern implemented as a Java 9 module,0,0,2016,2016,1,https://github.com/jpmilhau/BankFacadeModule
Facade,Facade-Design-Pattern,Facade Design Pattern Implementation for a travel itinerary program,0,0,2018,2018,0,https://github.com/JeromeAlve/Facade-Design-Pattern
Facade,sse.facade.DesignPatterns,,0,0,2024,2024,1,https://github.com/marcoscameloxavier/sse.facade.DesignPatterns
Facade,DesignPatternsDoubleFacade,,0,0,2024,2024,1,https://github.com/Kaulina/DesignPatternsDoubleFacade
Facade,facade,Facade pattern described: https://cararuseugeniu.blogspot.co.uk/p/design-patterns-in-images.html,0,0,2016,2016,0,https://github.com/ecararus/facade
Facade,DesignPatterns-Structural-Facade,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Structural-Facade
Facade,DesignPatterns18-Facade,,0,0,2019,2019,1,https://github.com/j4sysiak/DesignPatterns18-Facade
Facade,.NET.DesignPatterns.Facade,,0,0,2019,2020,1,https://github.com/dmitry-zhbankov/.NET.DesignPatterns.Facade
Facade,Bridge-and-Facade-in-Python,Using Design Patterns - Bridge and Facade in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Bridge-and-Facade-in-Python
Facade,design-patterns,🏗️  Design patterns studies,0,0,2021,2021,1,https://github.com/gabrielsanttana/design-patterns
Facade,Structural-Facade,This is a short implementation of the Facade design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Structural-Facade
Facade,FacadeDesignPatterns,,0,0,2019,2019,1,https://github.com/ahmedco82/FacadeDesignPatterns
Facade,DesignPatterns,Singleton Factory Builder Facade Observer Design patterns examples,0,0,2019,2019,1,https://github.com/Sandaka/DesignPatterns
Facade,Design-patterns,Example for facade,0,1,2022,2022,1,https://github.com/Exodya21/Design-patterns
Facade,DesignPatterns-Str-Facade,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Str-Facade
Facade,NodeJS-Facades,Practicing more with design patterns using Node JS / TS How we use design patterns such as facades to write more effective code.,0,0,2019,2019,1,https://github.com/Anthv96A/NodeJS-Facades
Facade,Design-Patterns-Impl,Design Patterns Implementation,0,0,2023,2023,1,https://github.com/TheMIU/Design-Patterns-Impl
Facade,FacadePattern,"Java code and PlantUML diagrams that illustrate the ""Facade"" Design Pattern (+ Builder Pattern bonus)",0,0,2021,2021,1,https://github.com/Alexander-Eck/FacadePattern
Facade,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Facade,OOADP-Assignment,This contains my assignment on Facade Design Pattern ,0,0,2020,2020,1,https://github.com/mvnsia/OOADP-Assignment
Facade,Character-Shell-similar-to-Linux-Shell-,Character-based Shell implementation using Facade design patterns,0,0,2018,2018,1,https://github.com/SunayanShaik/Character-Shell-similar-to-Linux-Shell-
Facade,TicTacToeGameDemo,This program is build using Facade Design Pattern.,0,0,2024,2024,1,https://github.com/Akshay1825/TicTacToeGameDemo
Facade,DesignPattern_Facade,Modelo de Design Pattern: Façade || FATEC || Eng. de Software III,0,0,2023,2023,1,https://github.com/rhayadhzaparoli/DesignPattern_Facade
Facade,Postman,Email SMTP class using basic facade design pattern,0,0,2017,2017,0,https://github.com/codechavez/Postman
Facade,Facade_pattern-26,Implementation of Online Event Management System using Facade Design Pattern,0,0,2024,2024,1,https://github.com/anantha-cauvery/Facade_pattern-26
Facade,DesignPatterns,Programas realizados nos padrões de projeto Composite e Facade,0,0,2022,2022,1,https://github.com/LorenaNuns/DesignPatterns
Facade,DesignPatterns,"Singleton, Decorator, Memento, Adapter, Observer, Delegate, Facade, and MVC",0,0,2017,2017,0,https://github.com/baubrey91/DesignPatterns
Facade,DesignPatterns,"review of memento, observer, adapter (protocol), decorator, facade patterns.",0,0,2016,2016,1,https://github.com/ksatia/DesignPatterns
Facade,5402_Structural_Patterns_1,"Structural Design Patterns Bridge, Proxy, Adapter and Facade",0,0,2021,2021,1,https://github.com/ferdhell/5402_Structural_Patterns_1
Facade,tutorial-3,Behavioral Design Pattern: Facade Pattern and Adapter Pattern.,0,0,2023,2024,2,https://github.com/CSUI-Adpro/tutorial-3
Facade,design-patterns-Facade,Design pattern demo in form of a simple state machine,0,0,2022,2022,3,https://github.com/michal-eclipse/design-patterns-Facade
Facade,design-pattern-facade,Facade design pattern in online payment using java [course assignment] ,0,0,2024,2024,1,https://github.com/Fatema-A-Ferdaus-Ananna/design-pattern-facade
Facade,Facade_Pattern_Demo,A short demo showing how the facade design pattern works,0,0,2015,2015,0,https://github.com/DalderupMaurice/Facade_Pattern_Demo
Facade,projeto-padrao-projeto-spring-java,"Desafio Design Patterns com Singleton, Strategy e Facade",0,0,2023,2023,1,https://github.com/wellingtonamaral/projeto-padrao-projeto-spring-java
Facade,Facade-Pattern-CSharp,Facade Design Pattern - Controlling Dough and Oven in Pizza Creator,0,0,2015,2015,1,https://github.com/wcTGgeek/Facade-Pattern-CSharp
Facade,FacadeExemplo,"Exemplo criado para o trabalho de ""Design Patterns"" da disciplina de Análise Orientada à Objetos",0,0,2018,2019,1,https://github.com/herculesdev/FacadeExemplo
Facade,DesignPatterns-Facede,Exemplo Compara precos de livros usando padrao facade,0,0,2024,2024,0,https://github.com/Diego5496/DesignPatterns-Facede
Facade,JavaHomework_designPatterns_Facade,Решение задачи с использованием паттерна проектирования - Facade,0,0,2023,2023,1,https://github.com/RVR0MAN/JavaHomework_designPatterns_Facade
Facade,Facade-Design-Pattern,Façade-Design-Pattern with real world example done by Java,0,0,2024,2024,1,https://github.com/GANIDU2413/Facade-Design-Pattern
Facade,Design-patterns,Factory-Facade-Observe patterns,0,0,2024,2024,1,https://github.com/Cekopi4a/Design-patterns
Facade,DesignPatterns,"Singleton, Factory method, Adapter, Facade, Command, Mediator, Observer, Repository, Builder",0,0,2022,2022,1,https://github.com/Xakimov1610/DesignPatterns
Facade,ICS372-TheaterFacade,Using the Facade design pattern for a theater management system.,0,0,2017,2017,1,https://github.com/ThomasDCarney/ICS372-TheaterFacade
Facade,cs_design-patterns_facade,Facade design pattern presentation during C++ course at Coders School ,0,1,2020,2020,1,https://github.com/niemarcin/cs_design-patterns_facade
Facade,facade-design-pattern-angular,This is a implementation of FACADE design pattern in Angular.,0,0,2020,2020,1,https://github.com/imonbayazid/facade-design-pattern-angular
Facade,FacadePattern_Example,You can reach the tutorial please visit https://thecodeprogram.com/explanation-of-facade-design-pattern,0,0,2020,2020,1,https://github.com/thecodeprogram/FacadePattern_Example
Facade,FacadePatternDemo_WHMR,An example of the facade design pattern for Fall 2020's CIS-4520 class,0,0,2020,2020,1,https://github.com/wyatthamby/FacadePatternDemo_WHMR
Facade,Design-Patterns-Week11,Singleton and Facade.,0,0,2021,2021,1,https://github.com/m1stertt/Design-Patterns-Week11
Facade,Design_Patterns_Facade,Projeto criado para explorar o Design Patterns Facade em spring boot.,0,0,2024,2024,1,https://github.com/EberteSampaio/Design_Patterns_Facade
Facade,CGW_.NET_DesignPatterns,"Design Patterns (Abstract Factory, Command, Facade, Double-checked locking)",0,0,2024,2024,1,https://github.com/DianaDykoon/CGW_.NET_DesignPatterns
Facade,webApi-AzureFunctions-Facade,Build a web API using Azure Functions (Facade design pattern),0,0,2023,2023,1,https://github.com/gguillencr/webApi-AzureFunctions-Facade
Facade,simple-FacadeDecoration-java,My First Design Pattern using Facade and Decoration Pattern to make a Karaoke resource system,0,0,2017,2017,1,https://github.com/byprakosoo/simple-FacadeDecoration-java
Facade,lab9-design-pattern-facade-team1234,lab9-design-pattern-facade-team1234 created by GitHub Classroom,0,0,2020,2020,2,https://github.com/cs2901-2020-2/lab9-design-pattern-facade-team1234
Facade,AdapterAndFacadePatterns,Head First Design Patterns - Chapter 7 - The Adapter and Facade Patterns,0,0,2019,2019,0,https://github.com/Ruoyu111/AdapterAndFacadePatterns
Facade,TicTacToe-Facade,Simple Tic Tac Toe game implemented by using Facade Design Pattern.,0,0,2024,2024,1,https://github.com/d33raj/TicTacToe-Facade
Facade,ecommerce-angular10-ngrx-facade,"Angular 10 , NgRx, Store, facade design pattern, JSON mock server",0,0,2020,2022,1,https://github.com/ruisunon/ecommerce-angular10-ngrx-facade
Facade,JogoDaForca,"JogoDaForca aplicando design patterns GOF, como Singleton e Facades",0,0,2024,2024,1,https://github.com/Gustavoksbr/JogoDaForca
Facade,TicTacToeGameWithFacadeDesignPattern,Program of tic tac toe with facade design pattern,0,0,2024,2024,1,https://github.com/assistant1277/TicTacToeGameWithFacadeDesignPattern
Facade,Week3,Java Design Patterns Facade and Command Preparing Mixed Drinks,0,0,2022,2022,1,https://github.com/Ashok6666/Week3
Facade,java-design-pattern-api,"Project made with spring boot, using facade design pattern",0,0,2023,2023,1,https://github.com/silvasantosrafael/java-design-pattern-api
Facade,Design-Patterns-Tutorial-Facade,  This project is taken from Derek Banas' Design Patterns Tutorial series.,0,0,2019,2019,1,https://github.com/olosinno/Design-Patterns-Tutorial-Facade
Facade,Python_DesignPatterns,"Python Design Patterns: Command, Facade, Factory, Monostate, Observer, Proxy, Singleton, State",0,0,2018,2018,1,https://github.com/Milstein/Python_DesignPatterns
Facade,StudentApp,"Student app using laravel,facade design pattern and inertia",0,0,2023,2023,1,https://github.com/Maneka123/StudentApp
Facade,FileSystem,File System designed in Java using Facade Design Pattern,0,0,2017,2017,1,https://github.com/Krutikaj/FileSystem
Facade,design-patterns,A project just to use the Facade Design Pattern.,0,0,2022,2022,1,https://github.com/greenlink/design-patterns
Facade,Design-Patterns,Two design patterns implemented in Java like: Memento & Facade,0,0,2021,2021,1,https://github.com/ClaudiuTertiu/Design-Patterns
Facade,Kusal07-CyberElysium-Assigment-FullstackDeveloperInternship,Simple Laravel application using Inertiajs and Facade design pattern,0,0,2022,2022,1,https://github.com/Kusal07/Kusal07-CyberElysium-Assigment-FullstackDeveloperInternship
Facade,javaFileTxt,java txt file handling with singletonand facade design pattern,0,0,2017,2017,1,https://github.com/bhanuka1414/javaFileTxt
Facade,design-patterns-ts,"Examples for Builder, Facade, Visitor and Memento Design Patterns",0,0,2017,2017,1,https://github.com/BlackHarpy/design-patterns-ts
Facade,ToDoList_JAVA_APP, Todo list in JAVA that uses facade design pattern.,0,0,2024,2024,1,https://github.com/fe-fs/ToDoList_JAVA_APP
Facade,RWBlueLibrary-Part1-Starter,"working on design patterns for Decorator, Facade, MVC, Singleton",0,0,2017,2017,1,https://github.com/daver234/RWBlueLibrary-Part1-Starter
Facade,design-pattern,Design Patterns implemented in Java. 1. Factory 2. Facade,0,0,2020,2020,1,https://github.com/sftmaruf/design-pattern
Facade,hotel-simulator,Console application written according to the facade design pattern.,0,0,2021,2021,1,https://github.com/osinkel/hotel-simulator
Facade,DesignPatterns-SpringBoot,"Utilizando design patterns (Singleton, Facade, Strategy) em uma aplicação springboot",0,0,2022,2023,1,https://github.com/Raphael-Pauleschi/DesignPatterns-SpringBoot
Facade,event-bus-java,"A simple design pattern event, facade command bus interface.",0,0,2020,2024,1,https://github.com/noyzys/event-bus-java
Facade,JavaDesignPattern,"Java project on design patterns (Abstract Factory, Decorator, Facade)",0,0,2020,2020,1,https://github.com/27maxou27/JavaDesignPattern
Facade,Design-Patterns,"Testing design patterns, Singleton, Facade, Simple Factory, Factory Method",0,0,2022,2022,1,https://github.com/ThanosMa/Design-Patterns
Facade,srp-facade-lab,CSC 309 Lab on the Single Responsibility Principle and Facade Design Pattern,0,3,2020,2022,1,https://github.com/bcdasilv/srp-facade-lab
Facade,Design_Patterns,"Singleton, Repository, Facade, Proxy, IOC, Iterator",0,0,2020,2020,1,https://github.com/ronaldris21/Design_Patterns
Facade,facade-pattern,"This is a simple app on Facade Pattern, a nice software design pattern",0,0,2014,2014,1,https://github.com/mah1212/facade-pattern
Facade,Exemplo-Facade,"Exemplo de implementação em Java, utilizando Design Pattern Facade. Aula 08/05/2024",0,0,2024,2024,1,https://github.com/mayotavares/Exemplo-Facade
Facade,Design_Patterns-Facade,,0,0,2023,2023,0,https://github.com/GabrielleAp19/Design_Patterns-Facade
Facade,Design-Patterns---Facade,,0,0,2023,2023,1,https://github.com/ccristhianr/Design-Patterns---Facade
Facade,college-project-facade-design-pattern,Project of Design Patterns discipline from UFSM systems for internet course,0,0,2022,2022,1,https://github.com/williamtrindade/college-project-facade-design-pattern
Facade,design-patterns-facade,,0,1,2017,2017,1,https://github.com/monsterlessons/design-patterns-facade
Facade,Design-Patterns-Facade,Showing an example of a facade,0,0,2018,2018,1,https://github.com/dstorrence/Design-Patterns-Facade
Facade,lab9-design-pattern-facade-team-zero,lab9-design-pattern-facade-team-zero created by GitHub Classroom,0,0,2020,2020,4,https://github.com/cs2901-2020-2/lab9-design-pattern-facade-team-zero
Facade,Design-Patterns-Facade,,0,0,2019,2019,1,https://github.com/IamMartinPeek/Design-Patterns-Facade
Facade,design-patterns-facade,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-facade
Facade,Design-Patterns-Facade,,0,0,2024,2024,1,https://github.com/Hovsepyan1/Design-Patterns-Facade
Facade,Design-Patterns-Facade,Created with StackBlitz ⚡️,0,0,2022,2022,1,https://github.com/KleonTsimperis/Design-Patterns-Facade
Facade,Facade-Design-Patterns,,0,0,2023,2023,1,https://github.com/gustavocampelo/Facade-Design-Patterns
Facade,facade-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/facade-design-patterns
Facade,DesignPatternsJavaPuro,"Exemplos de design patterns com Java puro (Singleton, Strategy e Façade",0,0,2024,2024,1,https://github.com/ro85pereira/DesignPatternsJavaPuro
Facade,Design-Patterns--Facade,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--Facade
Facade,lab9-design-pattern-facade-nicho-4,lab9-design-pattern-facade-nicho-4 created by GitHub Classroom,0,0,2020,2020,2,https://github.com/cs2901-2020-2/lab9-design-pattern-facade-nicho-4
Facade,Design_Patterns_Facade,,0,0,2023,2023,1,https://github.com/matheusromeiro/Design_Patterns_Facade
Facade,design_patterns__facade,,0,0,2022,2022,1,https://github.com/catalunha/design_patterns__facade
Facade,Design-Patterns-Facade,,0,0,2023,2023,1,https://github.com/LucsRafa/Design-Patterns-Facade
Facade,design_patterns_facade,,0,0,2024,2024,1,https://github.com/jaimesandim/design_patterns_facade
Facade,lab9-design-pattern-facade-grupo-4,lab9-design-pattern-facade-grupo-4 created by GitHub Classroom,0,0,2020,2020,3,https://github.com/cs2901-2020-2/lab9-design-pattern-facade-grupo-4
Facade,DesignPatterns_2_2_Facade_Binary_fasade,,0,0,2023,2023,1,https://github.com/VioK0709/DesignPatterns_2_2_Facade_Binary_fasade
Facade,Design_Patterns_Facade,,0,0,2020,2020,1,https://github.com/formelaanna/Design_Patterns_Facade
Facade,Texas-Holdem-Angular-Facade,Angular application to check given poker hand combination ( Facade Design Pattern Implemented ).,0,0,2022,2022,0,https://github.com/Hubba2010/Texas-Holdem-Angular-Facade
Facade,Design-Patterns---Facades,,0,0,2017,2017,1,https://github.com/babilon2k/Design-Patterns---Facades
Facade,-JavaHomework-DesignPatterns-Structural-BinaryFacade,,0,0,2022,2022,1,https://github.com/xelarog/-JavaHomework-DesignPatterns-Structural-BinaryFacade
Facade,DesignPattern-Learning-Implementation,"Design Patterns: Bridge pattern, Factory Pattern, Facade pattern, Iterator Pattern, Visitor Pattern, Singleton pattern, Filter Design pattern ",0,0,2019,2021,1,https://github.com/MayankBatra005/DesignPattern-Learning-Implementation
Facade,Week-1-Homework-C-,"This Homework includes 3 projects and these projects about SOLID,  Bridge Design Pattern and Facade Design Pattern",0,0,2022,2022,1,https://github.com/gorkemcngr/Week-1-Homework-C-
Facade,Facade_Design_Pattern,CP_330 - This small application demonstrates the use of the facade design pattern.,0,0,2017,2017,1,https://github.com/Josh-Romito/Facade_Design_Pattern
Facade,design-patterns,"3 simples patterns exercise. Singleton, Facade, Builder.",0,0,2020,2020,1,https://github.com/astachurski-intj/design-patterns
Facade,design-patterns,"An overview of Singleton, Strategy and Facade",0,0,2024,2024,1,https://github.com/mcoldibelli/design-patterns
Facade,Design-Patterns,"implementation of facade, composite and singleton pattern",0,0,2024,2024,1,https://github.com/shariqa31/Design-Patterns
Facade,design_pattern_facade," Develop a system that uses the pattern given in class. ""Facade"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_facade
Facade,Design_patterns_2.2,Двоичный фасад - реализация шаблона Facade,0,0,2023,2023,1,https://github.com/alexeylh/Design_patterns_2.2
Facade,software-design-patterns,Software design patterns,0,0,2019,2020,2,https://github.com/Genuine-Identity/software-design-patterns
Facade,FacadeDesignPattern_BankAccountTest_Java,A little bank account test application using Facade design pattern in Java as an university exercise.,0,0,2020,2024,1,https://github.com/aronmarcus/FacadeDesignPattern_BankAccountTest_Java
Facade,Design_Patterns,"implement singleton , Adapter, Factory, Facade , Chain of Responsibility Design pattern",0,0,2022,2022,1,https://github.com/Shreeabcd/Design_Patterns
Facade,lab-padroes-projeto-spring-main,Projeto exemplo spring boot utilizando design patterns singleton strategy facade,0,0,2023,2023,1,https://github.com/Vguilhen/lab-padroes-projeto-spring-main
Facade,Full-stack-Assignment,Laravel + Vue Curd Application with InertiaJs and Facade Design pattern,0,0,2024,2024,1,https://github.com/sanjudilshan554/Full-stack-Assignment
Facade,product-management,"In practice for using EntityFramework, Repository & Facade design patterns, LINQ",0,0,2017,2017,1,https://github.com/nhathadt11/product-management
Facade,DesignPatterns,"Meerdere design patterns zoals: Adapter Pattern, Decorator Pattern, Observer Pattern, Template Method, Facade Pattern en meer.",0,0,2019,2020,1,https://github.com/TTvdO/DesignPatterns
Facade,cliente-cep,"Aplicação Java/Spring e Design Patterns (Singleton, strategy e facade)",0,0,2023,2023,1,https://github.com/leandrosouzasnts/cliente-cep
Facade,Facade-Design-Pattern,"Using the C# Facade design pattern, the driver's license appointment process was simulated.",0,0,2021,2021,1,https://github.com/tamerbulutt/Facade-Design-Pattern
Facade,Software-Design-and-Architecture,SDA Project | Airline Management System | MVC Architecture | Facade Design Pattern,0,0,2024,2024,0,https://github.com/SeemabAsghar/Software-Design-and-Architecture
Facade,cs202-design-patterns-seminar,CS202 design patterns seminar for the Decorator and Facade pattern,0,0,2024,2025,2,https://github.com/beer-psi/cs202-design-patterns-seminar
Facade,airplaneNavigationSystem,"Implemented the following design patterns:  Proxy, Observer, Façade, and Strategy ",0,0,2023,2023,1,https://github.com/mbhsiddiqui/airplaneNavigationSystem
Facade,DesignerPatternsComJava,"Api com Spring Boot, demonstrando os padrões de projetos com Singletoon, Strategy, Facade.",0,0,2024,2024,1,https://github.com/Luciano1010/DesignerPatternsComJava
Facade,frontgate,A very simplistic implementation of the API Facade Design Pattern,0,0,2019,2023,1,https://github.com/exustash/frontgate
Facade,Chess_Game_LLD,"Simple Two Player Game Handled Singleton, Facade, Command design Pattern.",0,0,2024,2024,1,https://github.com/Sahana-sg/Chess_Game_LLD
Facade,projengenharia_designpatterns,"Projeto de Engenharia III, aplicando Design Patterns (Strategy, Facade, Controller)",0,0,2023,2024,1,https://github.com/mariaaliceog/projengenharia_designpatterns
Facade,assignment4-product-management,"In practice for using EntityFramework, Repository & Facade design patterns, LINQ",0,0,2017,2017,1,https://github.com/nhathadt11/assignment4-product-management
Facade,FACADE-Design-pattern-Transaction-Management-Using-Java,It's a simple java program to describe fascade Design pattern ,0,0,2019,2019,1,https://github.com/arifcseewu/FACADE-Design-pattern-Transaction-Management-Using-Java
Facade,AviaTech,SDA Project | Airline Management System | MVC Architecture | Facade Design Pattern,0,0,2024,2024,1,https://github.com/SeemabAsghar/AviaTech
Facade,Design-Patterns-Uppgift-2,"Inlämningsuppgift 2 av Design Patterns (Abstract Factory, Adapter, Facade, StateCommandMemento)",0,0,2022,2022,1,https://github.com/marcusnilss0n/Design-Patterns-Uppgift-2
Facade,DesignPatternsJavaPuro,"Implementação dos padrões de projeto Singleton, Strategy e Facade em  Java do zero.",0,0,2022,2022,1,https://github.com/d4u0ul/DesignPatternsJavaPuro
Facade,DesignPatternsCSHARP,"Utilização de padrões de projeto, como: Singleton, Repository e Facade, aplicando DDD de forma simples.",0,0,2021,2021,1,https://github.com/josivaldojoao14/DesignPatternsCSHARP
Facade,DesignPatternsRust,"Algunos patrones de diseño en Rust, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,1,https://github.com/Jonathana1106/DesignPatternsRust
Facade,4_DesignPatterns_hw2_2_BinaryFacade,,0,0,2023,2023,1,https://github.com/FoxnArt/4_DesignPatterns_hw2_2_BinaryFacade
Facade,DesignPatterns_C-Sharp_e-commercial_website_Facade,,0,0,2023,2024,1,https://github.com/EsraTosun/DesignPatterns_C-Sharp_e-commercial_website_Facade
Facade,java-design-patterns-facade,Padrão de projeto facade(fachada) em java,0,0,2023,2023,1,https://github.com/felipertec/java-design-patterns-facade
Facade,DesignPatterns,"Solution in C# including most common used design patterns such as: Factory, Adapter, Strategy, Facade and Builder",0,0,2022,2022,1,https://github.com/johann67880/DesignPatterns
Facade,Gomoku,"Personal design pattern project with c++. Developed game 'Gomoku', and 'Paint' by using design patterns 'Facade', and 'Observer'.",0,0,2020,2020,2,https://github.com/TongilKim/Gomoku
Facade,DartDesignPatternsFacade,サンプル：Dart(Flutter)のデザインパターン「ファサード」,0,0,2021,2021,1,https://github.com/rascal9622/DartDesignPatternsFacade
Facade,design-patterns-2-facade,,0,0,2023,2023,1,https://github.com/PavelMart/design-patterns-2-facade
Facade,ts-design-patterns-facade,Esse é um projeto para exemplificar o uso do padrão de projeto chamado Facade. Criei para apresentar no projeto de Dojo que participo.,0,0,2022,2022,0,https://github.com/arianebrandao/ts-design-patterns-facade
Facade,dio-design-patterns-facade,,0,0,2024,2025,1,https://github.com/alexandregomes3112/dio-design-patterns-facade
Facade,Design-Patterns-Facade-CSHARP,,0,0,2023,2023,1,https://github.com/ivnvalxndr/Design-Patterns-Facade-CSHARP
Facade,facade-flyweight-design-patterns,,0,0,2020,2020,1,https://github.com/kubradurus/facade-flyweight-design-patterns
Facade,FacadePattern,Contoh implementasi Facade Design Pattern ke dalam kasus program peminjaman barang. File disini sudag beserta dengan backup databasenya (db_penyewaan.sql),0,0,2021,2021,1,https://github.com/geryfauzi/FacadePattern
Facade,design-patterns-java,This repository explores fundamental concepts that drive the structuring and organization of code in software projects.,0,0,2024,2024,2,https://github.com/jean981/design-patterns-java
Facade,Design-Patterns,"Singleton, Adapter, Factory in C++ & Decorator, Facade in Python.",0,0,2023,2023,1,https://github.com/firatkorkmaz/Design-Patterns
Facade,DesignPatterns,"Algunos ejemplos de algunos patrones de diseño en C++, entre ellos: Abstract Factory, Adapter, Builder, Facade y Observer.",0,0,2018,2018,2,https://github.com/Jonathana1106/DesignPatterns
Facade,Design-Patterns,"Esplorando padrões Singleton, Strategy e Facade com java Puro",0,0,2024,2024,1,https://github.com/Gabriel-Vlas/Design-Patterns
Facade,design-patterns,"Padrões de projeto Bridge, Facade, Strategy, Singleton. Status: Funcionando.",0,0,2019,2020,1,https://github.com/MatheusZakkwylde/design-patterns
Facade,Design-Pattern-Facade,Código da atividade sobre Design Pattern da disciplina de Técnicas Avançadas de Projeto de Software,0,0,2024,2024,1,https://github.com/cvrsebastiany/Design-Pattern-Facade
Facade,design-patterns2,"aplicação dos padrões de projeto:  facade, singleton, factory",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns2
Facade,TicTacToeGameUsingFacade,Console Based Tic Tac Toe Game Implementation Using Facade Design Pattern in C#,0,0,2024,2024,1,https://github.com/Durgeshbeldar/TicTacToeGameUsingFacade
Facade,facadePattern,There are Lots of Design patterns available in Computer Science. One of them Is Facade pattern. Facade pattern is a structural design patternn,0,0,2018,2018,1,https://github.com/Rushabhshah18/facadePattern
Facade,design-patterns,"Singleton, Strategy and Facade patterns in core Java and Spring.",0,0,2023,2023,0,https://github.com/nathanbarrosnt/design-patterns
Facade,Tic-Tac-Toe-Game,Tic Tac Toe game using the Facade design pattern in JavaScript.,0,0,2023,2023,1,https://github.com/priyanshatiwary/Tic-Tac-Toe-Game
Facade,JavaDesignPatterns,Webdriver Automation Framework with design patterns implemented . The following patterns are implemented : 1. Singleton Design Pattern 2. Factory Design Pattern 3. Page Object Model  4. Fluent Page Object Model 5. Facade Design Pattern,0,0,2023,2023,1,https://github.com/suren26/JavaDesignPatterns
Facade,Sorting_Eng108,"Code to compare 3 sorting algorithms, in MVC + Facade Design pattern.",0,0,2022,2022,1,https://github.com/HassanHSaid/Sorting_Eng108
Facade,laravel-student-demo,"Laravel Inertia, vue.js Basic CRUD operations using Facade design pattern",0,0,2024,2024,1,https://github.com/AkilaAnuranga/laravel-student-demo
Facade,reserva-hotel,Repositório para o trabalho de Java sobre o design pattern facade.,0,0,2023,2023,1,https://github.com/gabriel-santi/reserva-hotel
Facade,designPatternExample,"Facade, Observer, and Factory Design Pattern Example from https://refactoring.guru/",0,0,2024,2024,1,https://github.com/luminosityleds/designPatternExample
Facade,ArchitecturalDemo,"A Demo project on design patterns like Singleton, Facade and MVVM",0,0,2018,2018,1,https://github.com/rakeshgujari/ArchitecturalDemo
Facade,drawer_shape_design_patterns,"drawer application where a applied some design patterns;factory,iterator,facade",0,0,2022,2022,1,https://github.com/SamMrach/drawer_shape_design_patterns
Facade,design-patterns-using-java,An simple API using Singleton and Facade as Design Patterns example,0,0,2023,2023,1,https://github.com/WillCoutinho/design-patterns-using-java
Facade,Facade-and-Composite-Design-Patterns,,0,0,2021,2021,1,https://github.com/pwalsh2/Facade-and-Composite-Design-Patterns
Facade,kotlin-patterns,Implementação e resumo de design patterns em kotlin,0,0,2022,2022,1,https://github.com/davidrezende/kotlin-patterns
Facade,design-patterns-and-algorithms,"Implementation of abstract factory, adapter, façade with TypeScript",0,0,2021,2021,0,https://github.com/Pr1sm0/design-patterns-and-algorithms
Facade,N-DesignPatterns-StructuralPatterns-HW-Task2--BinaryFacade,,0,0,2024,2024,1,https://github.com/emrahhakanagan/N-DesignPatterns-StructuralPatterns-HW-Task2--BinaryFacade
Facade,Design-patterns,"C# Beispiele zu den Entwicklungsmustern: Observer, Facade, MVC, Builder und Decorator.",0,0,2022,2022,1,https://github.com/amargapinho/Design-patterns
Facade,Plutus,Desktop wallet graph application using 6 different design patterns,0,1,2021,2021,1,https://github.com/BartoszKlonowski/Plutus
Facade,DesignPatterns,"A program for scheduling appointments to take the car to the mechanic with different design patterns, including adapter, DAO, MVC and facade",0,0,2024,2024,4,https://github.com/flormc/DesignPatterns
Facade,design-patterns,"API Rest desenvolvida seguindo padrões de projeto Singleton, Strategy e Facade",0,0,2021,2021,1,https://github.com/Matheusrdmota/design-patterns
Facade,facade_design_pattern,"The Facade Design Pattern is a structural design pattern that provides a simplified interface to a larger subsystem or complex set of classes. It hides the complexity of the subsystem by exposing a unified, easy-to-use interface",0,0,2024,2024,1,https://github.com/vitkarYallappa/facade_design_pattern
Facade,Design-Patterns-with-.NET,Popular design patterns implemented with .NET technologies.,0,0,2024,2024,1,https://github.com/VasilDimitroff/Design-Patterns-with-.NET
Facade,Codes-of-facade-model-for-design-patterns,Facade model used for generating the components and ready made classes of design patterns,0,0,2019,2023,1,https://github.com/Amal-Zafar/Codes-of-facade-model-for-design-patterns
Facade,design-patterns,"factory, command, composite, decorator, facade, iterator, mvc, observer, proxy, singleton, state, strategy",0,0,2022,2022,1,https://github.com/apkuznetsov/design-patterns
Facade,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Facade,FacadeDesignPattern,"Facade design pattern is a structural design  patter that provides a simplified interface to a library, a framework, or any other complex set of classes",0,0,2021,2021,1,https://github.com/hiumar/FacadeDesignPattern
Facade,Seminario-P.O.O,"seminar on design patterns, with explanation and examples on Facade and Bridge",0,0,2023,2023,1,https://github.com/Filinho/Seminario-P.O.O
Facade,facade,"Design pattern estrutural (gof) Facade para fornecer uma interface unificada para um conjunto de interfaces em um subsistema (Pedido (Facade) - GravarPedido() -> (Subsistemas) Produto - GetProdutoDetalhes(), Pagamento - RealizarPagamento(), NotaFiscal - EnviarNotaFiscal())",0,0,2021,2021,1,https://github.com/Jhow-R/facade
Facade,design_patterns,"Simple demos for Adapter, Composite, Facade, Factory, Observer, Strategy, Template Mehod and Visitor.",0,0,2018,2018,1,https://github.com/j-o-e-d-o-e/design_patterns
Facade,design-patterns,"Praticando um pouco dos design patterns Facade, Strategy e Singleton com Spring Boot",0,0,2023,2023,1,https://github.com/nicolasjandre/design-patterns
Facade,OOP-Design-Pattern,A Design Pattern project with Facade (Structural pattern) and Mediator (Behavioral pattern). ,0,0,2023,2023,2,https://github.com/baolong110904/OOP-Design-Pattern
Facade,lab-pattern-project-java,"Lab where I use three type of design pattern: Singleton, Strategy, Facade",0,0,2024,2024,1,https://github.com/ale-fuentes-ar/lab-pattern-project-java
Facade,TicketTracker,A sample of work that implements the Adapter and Façade design patterns.,0,0,2016,2016,1,https://github.com/JacksonHamner/TicketTracker
Facade,FacebookWindowsApp,"A Facebook Application using Design patterns (Singleton, Strategy, Facade, Command, Adapter, etc..)",0,0,2017,2017,0,https://github.com/eizzo77/FacebookWindowsApp
Facade,Learning_Project_002,Stock Tracking App with N-Tier Architecture Facade Design Pattern & Entity FrameWork,0,0,2023,2023,1,https://github.com/CodeMan971/Learning_Project_002
Facade,FacadePattern,I wrote this C# program to demonstrate the facade design pattern by printing a string from the methods of 7 different classes in a specific order.,0,0,2021,2021,1,https://github.com/Gegabyt3/FacadePattern
Facade,ApkDexExplorer,Library to List out all packages from APK Using Facade Design Pattern,0,0,2024,2024,1,https://github.com/jesro/ApkDexExplorer
Facade,lab5Map,"Repository to laboratory of discipline MAP, referring to the design pattern facade",0,0,2017,2017,1,https://github.com/juakacc/lab5Map
Facade,Design-Patterns-facade-and-flyweight-2-,,0,0,2024,2024,1,https://github.com/Abod550/Design-Patterns-facade-and-flyweight-2-
Facade,designers-patterns-desafio-dio,"Desafio da DIO - sobre designers patterns: singleton, strategy e facade.",0,0,2023,2023,1,https://github.com/hmelo56/designers-patterns-desafio-dio
Facade,HastaneOtomasyonu,"C# Hastane Otomasyonu, OOP, T-SQL, Facade Design Pattern, Singleton Desing Pattern",0,0,2020,2020,1,https://github.com/emrememil/HastaneOtomasyonu
Facade,Eng-Software---07--Design-Patterns---Facade,,0,0,2024,2024,1,https://github.com/Eruhaym/Eng-Software---07--Design-Patterns---Facade
Facade,EngSoftIII-Design.Patterns-Facade,,0,0,2024,2024,1,https://github.com/David-Pinheiro/EngSoftIII-Design.Patterns-Facade
Facade,C_sharp_pluralsight_design_patterns_Facade,Apply Facade Pattern with C# by follow Pluralsight course,0,0,2020,2020,1,https://github.com/ahmed-hamdy90/C_sharp_pluralsight_design_patterns_Facade
Facade,Design-Patterns-facade-and-flyweight-1-,,0,0,2024,2024,1,https://github.com/Abod550/Design-Patterns-facade-and-flyweight-1-
Facade,FacadeDesignPattern,"Facade Design Pattern örnek uygulama; bir müşterinin sıcak yemek, soğuk yemek ve içecek siparişleri için ayrı ayrı bölüme gitmek yerine tek bir yerden sipariş verebilmesini sağlayan program.",0,0,2022,2022,1,https://github.com/gozdesubicici/FacadeDesignPattern
Facade,facade,"Exemplo de aplicação do design pattern facade num problema de ecommerce que envolve complexidade de verificar se o produto está em estoque, permitir fazer a compra e efetuar o pagamento.",0,0,2024,2024,1,https://github.com/pqnoje/facade
Facade,DesignPattern,Implementation of different types of software design pattern,0,0,2022,2023,1,https://github.com/parvez86/DesignPattern
Facade,API_Rest_utilizando_DesignPatterns,"Este foi um desafio proposto pela dio onde era necessario criar um código com eclipse utilizando os padrões Singleton, Stategy e Facade.",0,0,2024,2024,1,https://github.com/PetersonPHC/API_Rest_utilizando_DesignPatterns
Facade,Design-Patterns,"Java implementations of 9 Design Patterns:  Visitor, Factory, State, Strategy, Observer, Singleton, Facade, Composite, Decorator",0,0,2022,2023,1,https://github.com/NLmeng/Design-Patterns
Facade,projeto-design-patterns,Implementação dos padrões Singleton e Facade para a disciplina de Padrões de Projetos,0,0,2022,2022,1,https://github.com/rc-ops/projeto-design-patterns
Facade,DesignPatterns,This project demonstrates the implementation of various design patterns in Java.,0,0,2022,2022,1,https://github.com/jchoker/DesignPatterns
Facade,design-patterns,Desafio em Java com Spring Boot que demonstra os padrões de projeto Strategy e Facade.,0,0,2024,2024,1,https://github.com/inaldoSan/design-patterns
Facade,IT-PHP-Sprint3-Tema1-Design_Patterns,singleton - dependency injection - adapter - facade - strategy - observer,0,0,2024,2024,1,https://github.com/frankpulido/IT-PHP-Sprint3-Tema1-Design_Patterns
Facade,Swift-Facade-Design-Pattern,This Xcode 9 Swift 4 playground demonstrates the facade design pattern as originally defined by the Gang of Four.,0,0,2018,2018,1,https://github.com/iosbrain/Swift-Facade-Design-Pattern
Facade,Spring-framework-design-patterns,"Usa Spring Framework para implementar design patterns em Java:  Singleton, Strategy/Repository, Facade",0,0,2022,2022,1,https://github.com/lohan-ribeiro/Spring-framework-design-patterns
Facade,Design-Patterns,"Simple analogy in C# in Adapter, Decorator and Façade to understand how it can be used",0,0,2023,2023,1,https://github.com/NandaChaves/Design-Patterns
Facade,Calculator,"C++ Calculator utilizing the Command, Abstract Factory, Flyweight, and Wrapper Façade design patterns",0,0,2022,2022,1,https://github.com/kylemblack/Calculator
Facade,lab-padroes-projeto-java,"Study and use of some principles of Design Patterns as Singleton, Strategy, Facade.",0,0,2023,2023,1,https://github.com/denisonkolling/lab-padroes-projeto-java
Facade,StdManagerY,Full_Stack Student management Web Application using Laravel InertiaJs and Facade Design pattern,0,0,2024,2024,1,https://github.com/Dayarat/StdManagerY
Facade,POS-Layered-Architecture-,"Maven POS system use Hibernate , Layered Architecture and Factory , Singleton , Facade Design Pattern  ",0,0,2023,2024,1,https://github.com/Shenmadu/POS-Layered-Architecture-
Facade,TennisPlayerManagement,"Tennis players management implemented with three design patterns: Factory Method, Facade and Strategy",0,0,2021,2021,1,https://github.com/Martin142214/TennisPlayerManagement
Facade,StdManager,Full_Stack Student management Web Application using Laravel InertiaJs and Facade Design pattern,0,0,2024,2024,1,https://github.com/Dayarat/StdManager
Facade,Service-Oriented-Architecture-Laravel-11,"Apply Service-Oriented Architecture, Facade Design Pattern, Data Transfer Object (DTO), Repository pattern ",0,0,2024,2024,1,https://github.com/sowidan1/Service-Oriented-Architecture-Laravel-11
Facade,locadora,"Project to practice some design patterns: Facade, Abstract Factory, Singleton and Template Method",0,0,2022,2022,1,https://github.com/luizcantrella/locadora
Facade,StructuralDesignPatternsDemo,A robot arm project that implements the Structural Design Patterns: Proxy and Facade,0,0,2023,2023,1,https://github.com/itsmemarius/StructuralDesignPatternsDemo
Facade,labwork2,Java implementation of a file and directory manager using the Facade Design Pattern,0,0,2024,2024,1,https://github.com/7910528/labwork2
Facade,GoF-Spring-Boot-Project,Spring boot project using good design pattern practices.  Patterns used:  - Singleton - Strategy - Facade,0,0,2024,2024,1,https://github.com/eliasssantana/GoF-Spring-Boot-Project
Facade,padroes-de-projeto-javapuro-spring,"Study on singleton, strategy and facade design patterns, in pure JAVA and Spring.",0,0,2023,2024,1,https://github.com/augustojulio-code/padroes-de-projeto-javapuro-spring
Facade,clean-architecture-react,"Implementing Clean architecture, TDD and  design patterns like Facade on a React App.",0,0,2022,2024,0,https://github.com/ChrisFrontDev/clean-architecture-react
Facade,StdManagerX,Full_Stack Student management Web Application using Laravel InertiaJs and Facade Design pattern,0,0,2024,2024,1,https://github.com/Dayarat/StdManagerX
Facade,structural-design-patterns,"Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост (Bridge), Легковес (Flyweight), Фасад (Facade)",0,0,2020,2020,1,https://github.com/ann-vicheva/structural-design-patterns
Facade,design-pattern-facade-decorator-example,Modélisation et implémentation d'un processus d'envol d'un oiseau à travers le design pattern façade et decorator,0,0,2022,2023,1,https://github.com/housseinmomo/design-pattern-facade-decorator-example
Facade,MarbleWheels,"Design patterns. Creating a game in C# using different types of design patterns: adapter pattern, bridge pattern, factory method pattern, decorator and facade.",0,0,2015,2017,2,https://github.com/mrgunior/MarbleWheels
Facade,designPatterns,A repo with a collection of design patterns,0,1,2020,2021,1,https://github.com/daniel199410/designPatterns
Facade,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Facade,Android-Design-Patterns,"6 Design pattern every android developer must know Singleton, Factory, Builder, Facade, Dependency Injection, Adapter",0,0,2024,2024,1,https://github.com/abdulappengineer/Android-Design-Patterns
Facade,Facade-Design-Pattern,"The Facade pattern is a structural design pattern that provides a simplified interface to a complex subsystem, making it easier to use.",0,0,2023,2023,1,https://github.com/akifislam/Facade-Design-Pattern
Facade,facade-design-pattern,Usando Facade Design Pattern para simplificar a interface com o cliente e reduzir o acoplamento entre diferentes partes do sistema usando C#,0,0,2024,2024,1,https://github.com/jfs-dev/facade-design-pattern
Facade,Design_Patterns,"This repository contains various low level design patterns such as Strategy, Observer, Factory, Builder, Singleton, Adapter, Facade etc",0,0,2022,2024,1,https://github.com/praveenchiliveri6/Design_Patterns
Facade,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Facade,SoftwareDevelopment_DesignPatterns,"Creating the Customize Development Framework like Spring framework and Spring Boot by applying the design patterns like.....Singleton,Command,Observer,Facade,Factory,Composit,COR,Strategy,State,Iterator,Adapter,Decorator,Builder,Adapter",0,0,2024,2024,1,https://github.com/HsuMinHtet/SoftwareDevelopment_DesignPatterns
Facade,lab-design-patterns-java,"Explorando de forma simplificada a utilização dos padrões de projetos Singleton, Strategy e Facade",0,0,2024,2024,1,https://github.com/luciano-mota/lab-design-patterns-java
Facade,DesignPatterns,"Réalisation des applications Java comme illustration des trois patrons de conception : Facade , Prorotype et Iterator Par l'équipe SM-DesignPatterns constitué de EL AAKKOUCHI SALMA qui a comme pseudo 'Asuna-flipe' et EL YOUNSSI MOUNA qui a comme pseudo 'Mouna-pixel'  ",0,0,2022,2022,1,https://github.com/SM-DesignPatterns/DesignPatterns
Facade,design-patterns,"Creational Design patterns ,Singleton, Builder, Prototype pattern , Structural patterns,  Facade, Proxy, Bridge pattern, Behavioral pattern, Template, Strategy, Iterator pattern",0,0,2023,2023,1,https://github.com/fatimasultanova/design-patterns
Facade,Design_Patterns,"This includes most essential design patterns including singleton, factory, abstract factory, observer, builder, prototype, strategy, template method, adapter, facade, decorator design patterns in java",0,0,2023,2023,1,https://github.com/Ansu-s/Design_Patterns
Facade,ICA-7-Design-Patterns-1225545633,"Implemented five design patterns into the Product Trading and Bidding System (PTBS). The five design patterns are Façade, Bridge, Factory Method, Iterator, and Visitor.",0,0,2022,2022,1,https://github.com/Deven-Prajapati-2/ICA-7-Design-Patterns-1225545633
Facade,checkers,creating a checkers game using javax and design patterns like singletton and facade etc,0,0,2024,2024,1,https://github.com/DevTaissirHammouda/checkers
Facade,facade,"Simple project demonstrating the facade design pattern. For this one I made a Compiler classe that can have multiples front end to compile various languages, then we have a Compiler Facade class to access some funcionalities.",0,0,2022,2022,1,https://github.com/Piazzi/facade
Facade,ZombieSurvivor,A 2D game made with Java and library JPlay using the design-pattern Façade.,0,0,2018,2019,1,https://github.com/matheusladislau/ZombieSurvivor
Facade,javapoz7designpatterns,"Introduction to design patterns - singleton, prototype, hexagonal, facade, factory, dependency injection, chain, builder, adapter",0,0,2018,2018,1,https://github.com/rafinho91/javapoz7designpatterns
Facade,LojaGoF,"Gerenciamento de uma loja de compras simples,utilizando design patterns (singleton, State,Strategy,facade)",0,0,2024,2024,1,https://github.com/MathyLima/LojaGoF
Facade,Java-Design-Patterns,"Singleton,Factory.Builder,Decorator, Facade Design Pattern (Eager, Static Block,Lazy Initilization, ThreadSafe Singleton, Bill Pugh Singleton)",0,0,2021,2021,0,https://github.com/yigitkader/Java-Design-Patterns
Facade,java-structural-design-patterns,"Java implementations of various structural design patterns, including Adapter, Composite, Decorator, Facade, Flyweight, and Proxy.",0,0,2025,2025,1,https://github.com/HajiraGul/java-structural-design-patterns
Facade,3tier,A 3-tier project in C# with ood and design patterns (facade and singleton),0,0,2022,2022,1,https://github.com/herrone/3tier
Facade,Design_Patterns,"Examples of behavioral, creational, and structural design patterns in software development, including Observer, Strategy, Factory, Singleton, Decorator, and Facade patterns.",0,0,2024,2024,1,https://github.com/ManeeshaVR/Design_Patterns
Facade,Crud-MVC-DAO-Java-with-Facade-Pattern,"Project containing a CRUD (create, edit, update, delete) using DAO, MVC and the design pattern Facade. Developed in java",0,0,2019,2019,1,https://github.com/Losantosw/Crud-MVC-DAO-Java-with-Facade-Pattern
Facade,lab-padroes-projeto-java,"Projeto modelo utilizado para estudo de Design Pattern Singleton, Strategy e Facade com Java.",0,0,2023,2023,1,https://github.com/FelipeRibaDev/lab-padroes-projeto-java
Facade,designPatterns,"Projeto em JavaWeb desenvolvido para matéria de Projeto Web (PWE) do curso de Tecnologia em Análise e Desenvolvimento de Sistemas do Instituto Federal de Educação, Ciência e Tecnologia de São Paulo, utilizando JSF com objetivo de implementar os design patterns Facade, Observer e Decorator.",0,0,2018,2018,4,https://github.com/gabrielgasparini/designPatterns
Facade,DesignPatterns,Most common design patterns in software architecture.,0,0,2023,2024,1,https://github.com/staivanov/DesignPatterns
Facade,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Facade,Design-Pattern-Facade,Présentation du design pattern  (patron de conception) façade.  Celui-ci a pour but de cacher une conception et une interface complexe difficile à comprendre.,0,0,2021,2022,1,https://github.com/Cyril87-XYZ/Design-Pattern-Facade
Facade,design-patterns-library3,"Aula sobre Design Patterns: Projeto com Fluent interfaces, Command pattern, Double dispatch pattern, Facade e Flyweight",0,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library3
Facade,design-pattern-playground,"Java project featuring examples of key design patterns like Factory, Singleton, Decorator, Facade, Observer, and Strategy, designed to help developers practice and learn design patterns.",0,0,2024,2024,1,https://github.com/bethmij/design-pattern-playground
Facade,Design_Patterns_Implementation,"""Design Patterns Implementation"" is a project showcasing the implementation of various design patterns.  The project includes the implementation of popular design patterns such as Factory Method, Facade, and Structure, demonstrating their usage and benefits.",0,0,2023,2023,1,https://github.com/B0neS69/Design_Patterns_Implementation
Facade,Hospital-Staff-Management,"This is my 3rd Git repository. It's a console application created by using Java. Here I have applied three design  patterns. They are Proxy Design Pattern, Facade Design Pattern and  Decorator Design patter.",0,0,2024,2024,1,https://github.com/Kazi-Israt-Hassan-Eva/Hospital-Staff-Management
Facade,design_patterns,"Shell for DAW application which includes multiple design petterns, such as: abstract factory, singleton, factory method, adapter, decorator, facade, iterator, observer, strategy.",0,0,2023,2024,1,https://github.com/ruslan1us/design_patterns
Facade,design-patterns-java,"Simple project built for the implementation of the Facade, Strategy and Singleton design patterns, in Java, using Spring Boot.",0,0,2021,2021,1,https://github.com/9Rain/design-patterns-java
Facade,dio-design-patterns,"Projeto pratico da DIO onde praticamos a implementação de 3 design patterns, sendo eles o Singleton, Strategy e Facade.",0,0,2024,2024,1,https://github.com/Eduardo-Vitorino/dio-design-patterns
Facade,barbeariaAndEcommerce-designPatterns-Java,"Este projeto tem por finalidade explora o uso dos padrões de projeto Singleton, Strategy e Facade para implementar um sistema de gerenciamento de uma barbearia e um E-commerce com Spring.",0,0,2024,2025,1,https://github.com/Ki3lMigu3l/barbeariaAndEcommerce-designPatterns-Java
Facade,Payment-System-Design-Patterns,"Exemplo prático de sistema de pagamento utilizando os padrões de projeto Singleton, Strategy e Facade em Java.",0,0,2024,2024,1,https://github.com/reulissontorres/Payment-System-Design-Patterns
Facade,design-patterns-gof-java,"Praticando padrões de projeto (destacados no livro Gang of Four), com foco em singleton, strategy e facade.",0,0,2024,2024,1,https://github.com/mpnmateus/design-patterns-gof-java
Facade,JavaDesignPatterns-DesafioDIO,"Implementação de conceitos de Padrões de Projeto utilizando o Spring Framework (Singleton, Strategy/Repository, Facade).",0,0,2024,2024,1,https://github.com/gyselle-marques/JavaDesignPatterns-DesafioDIO
Facade,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Facade,Facade,"Implementação do Design Pattern Estrutural Facade em .net Core 3.1, simulando um Pagamento de Pedidos com seus produtos e meios de pagamentos, aplicando o Facade na realização de pagamento com um exemplo e uma simulação do Gateway de pagamentos do PayPal",0,0,2021,2021,1,https://github.com/rafaelraah/Facade
Facade,dio-design-patterns,"Criação de uma api rest de consumo de cep implementando os seguintes padrões de projeto: Singleton, Strategy/Repository e Facade",0,0,2024,2024,1,https://github.com/joas-barros/dio-design-patterns
Facade,Blog,📰 Blog business logic written in PHP with facade design pattern and Doctrine ORM (UUIDs),0,0,2019,2020,1,https://github.com/Rixafy/Blog
Facade,StockTracking,"C# Practice with N-Tier Architecture, Facade Design Pattern, Entity Framework with ADO.NET, LINQ.",0,0,2022,2022,0,https://github.com/RicardoSaRo/StockTracking
Facade,Localiza.Frotas,"API- Criada durante curso ""Introdução a Design Patterns com .NET"" , Utilizando (Singleton, Repository e Facade)",0,0,2022,2022,1,https://github.com/HeMarchioni/Localiza.Frotas
Facade,Laravel10---FullStack,"I have done this project for the internship - FullStack - Laravel v10, vue, Facade Design pattern ",0,0,2023,2023,1,https://github.com/IT20469900/Laravel10---FullStack
Facade,cs4773-hw4,"Assignment to create a javafx project that implements mvvm, facade, and observer/mediator design patterns.",0,0,2022,2022,1,https://github.com/sampleauto/cs4773-hw4
Facade,lab-padroes-projeto-java,"API para praticas de de padrões de projeto utilizando Design Patterns Singleton, Strategy e Facade",0,0,2024,2024,1,https://github.com/AlexandreGarciaJr/lab-padroes-projeto-java
Facade,Banking-System,A small banking system in Java using OOP principles and implementing the Facade design pattern,0,0,2022,2022,1,https://github.com/BODY1998/Banking-System
Facade,Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento,,0,0,2022,2022,1,https://github.com/ZaraBaghdasaryan/Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento
Facade,Design-Patterns," The GitHub repository consists of separate implementations of various design patterns, including Adapter, Command, Decorator, Facade, Observer, Prototype, Proxy, Singleton, and Strategy, in Java.",0,0,2021,2023,1,https://github.com/mozammalrahat/Design-Patterns
Facade,addCliente-api,"A simple api that add a client using the design patterns  singleton, strategy and facade",0,0,2022,2022,1,https://github.com/maxProgrammer/addCliente-api
Facade,desafio-design-patterns-spring,"Desafio com exemplos de Design Patterns (Singleton, Strategy e Facade) em Spring, utilizando OpenAPI (Swagger), Feign e H2.",0,0,2022,2022,1,https://github.com/marcosnakahara/desafio-design-patterns-spring
Facade,Design-Patterns-Java,"Detail implementation of all design patterns in java ( creational(builder , prototype, abstract factory, singleton), structural (decorator, composite, adapter, facade)  and behavioural )",0,0,2025,2025,1,https://github.com/CynthiaAbi03/Design-Patterns-Java
Facade,Dessign_Pattern,"This repository's branches each implement a specific design pattern: Adapter, Factory, Facade, and Observer.",0,0,2024,2024,1,https://github.com/MMuzykant00/Dessign_Pattern
Facade,Design-Patterns,"implementation of design patterns (such as builder, decorator, facade, factory, strategy, singleton), covering with Unit Tests, using: .Net Framework 4.6.1 Library, Console projects",0,0,2019,2019,1,https://github.com/AKamieniak/Design-Patterns
Facade,Capstone-Project-Design-Patterns,This repository is for the Capstone AP CSA Project Mid I Performance assignment. I implemented the Facade Design Pattern.,0,0,2024,2024,1,https://github.com/ardaedil/Capstone-Project-Design-Patterns
Facade,kodilla-design-patterns2_mod_20,"Facade (also in repo_mod_13), Decorator, Observer, Adapter AND about  AOP - aspect oriented programming ",0,0,2018,2018,1,https://github.com/paulina-bukowska/kodilla-design-patterns2_mod_20
Facade,Design-Patterns-and-Examples,"Project in which some Design Patterns (Singleton, Factory, Adapter, Facade, Observer and Strategy) are explained and illustrated with examples.",0,0,2024,2024,1,https://github.com/osmantunahanincirkus/Design-Patterns-and-Examples
Facade,dioDesignPatterns,Explorando Padrões de Projetos na Prática com Java,0,0,2022,2022,1,https://github.com/tarcnux/dioDesignPatterns
Facade,design-patterns,"The repository covers fundamental design patterns such as the Factory Pattern, Singleton Pattern, Facade Pattern, Adapter Pattern, Strategy Pattern, Command Pattern, and Observer Pattern, among others.",0,0,2024,2024,1,https://github.com/Pathum-Vimukthi/design-patterns
Facade,Design_Patterns,"Implementation of design patterns (such as builder, abstract factory, decorator, facade, singleton, strategy)  covered with Unit Tests, using .Net Framework 4.6.1 Library and Console projects.",0,0,2020,2020,1,https://github.com/AleksandraRzezniewska/Design_Patterns
Facade,design-patterns,"A collection of typescript code examples demonstrating various design patterns used in software development. Includes implementations of creational, structural, and behavioral patterns such as Singleton, Facade, Observer.",0,0,2024,2024,1,https://github.com/lalithaVidhara/design-patterns
Facade,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Facade,Most-Common-Design-Patterns,"The most commonly used Builder, Decorator, Facade, Factory, Singleton design patterns in projects were repeated and their advantages were tested practically.",0,0,2024,2024,1,https://github.com/yunuspektass/Most-Common-Design-Patterns
Facade,design-patterns-term-project,"A Java command-line program exploring factory, singleton, strategy, observer, composite, and façade design patterns in a university department use-case.",0,0,2022,2022,1,https://github.com/hneels/design-patterns-term-project
Facade,Beds-and-Pillows,A simple algorithm demonstratin facade design pattern on a fictional store that sells beds and pillows.,0,0,2016,2016,1,https://github.com/victorffernandes/Beds-and-Pillows
Facade,Fast_Food_Restaurant_API,"A flexible API opened for modification. Used design patterns like Abstract Fabric, Decorator, Command and Facade.",0,0,2023,2024,1,https://github.com/Kuba2903/Fast_Food_Restaurant_API
Facade,EngAppPatterns,"Second version of EngApp aplication - this time with using design patterns: Singleton, Command, Strategy and Facade.",0,0,2016,2016,1,https://github.com/raczkowskir/EngAppPatterns
Facade,Laravel-version-10-project,I used the Facade design pattern in conjunction with the InertiaJs technology during the development process.,0,0,2024,2024,1,https://github.com/keshan4/Laravel-version-10-project
Facade,Kill_Doctor_Lucky_Game,"Designed turn-based RPG game, implementing OOP, MVC, and SOLID principles, deploying design patterns (command, façade). ",0,0,2024,2024,1,https://github.com/parikhmili9/Kill_Doctor_Lucky_Game
Facade,design-patterns-tree-based-infix-to-postfix-calculator,"Tree based infix to postfix calculator demonstrating the Command, Abstract Factory, Wrapper Facade software design patterns",0,0,2022,2022,1,https://github.com/winkingcatstudios/design-patterns-tree-based-infix-to-postfix-calculator
Facade,Design-Patterns,A. Structural  1. Adapter - correct  2. Facade - corrected  3. Proxy - correct    B. Creational  1. Singleton  2. Factory  3. Builder    C. Behavioural  1. Chain of responsibility  2. Memento 3. Observer,0,0,2024,2024,1,https://github.com/NehaAgrawal-git/Design-Patterns
Facade,clients-api-springBoot-design-patterns,"API representando clientes desenvolvida em Java com Spring Boot aplicando padrões de projeto Singleton, Strategy e Facade",0,0,2024,2024,1,https://github.com/guilhermemon18/clients-api-springBoot-design-patterns
Facade,Typescript-Design-Patterns,"Object oriented design patterns in pure Typescript. Patterns: Decorator pattern, Observer pattern, Facade pattern, Adapter pattern, State pattern; 2020 Edition - SOLID and all the other patterns",0,0,2017,2020,1,https://github.com/stefantrajkovic7/Typescript-Design-Patterns
Facade,spring-design-patterns,"Estudo sobre Design Patterns realizado durante o Bootcamp Santander Java Backend promovido pela Dio. O código a seguir implementa os conceitos de Singleton, Strategy e Facade",0,0,2023,2023,1,https://github.com/silviorneto/spring-design-patterns
Facade,design-patterns-with-spring,"In this project, the Singleton, Strategy, and Facade design patterns were explored. These patterns were implemented using the Java language with the Spring Framework.",0,0,2024,2024,1,https://github.com/LuisVynicius/design-patterns-with-spring
Facade,awesomeshop_api-restful_dps-facade_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPS (Design Pattern Strutuctural) Facade, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dps-facade_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Facade,Advance-JAVA-OOP,"in this project I use abstract class , interface , generics , design patterns (singleton , factory and facade) , GUI , SQLite ",0,0,2022,2022,1,https://github.com/Fahad-Aljneibi/Advance-JAVA-OOP
Facade,java-design-patterns,"Project made in the Santander-DIO Bootcamp(Fullstack Java+Angular). This project has the goal to explore the design patterns in Java such as Singleton, Strategy, Facade and more.",0,0,2023,2023,1,https://github.com/escandiel/java-design-patterns
Facade,cloud-storage-module,"Cloud Storage Module based on facade design pattern for uploading and fetching objects, generating signed urls etc.",0,0,2022,2024,0,https://github.com/husain-b/cloud-storage-module
Facade,greentfoot-splash-game,"A hit target game developed using Greentfoot tool. Implemented GoF design patterns: Factory method, Strategy, Observer, Facade.",0,0,2014,2014,0,https://github.com/logicgraphy/greentfoot-splash-game
Facade,Structural-DesignPattern-Swift,"This Repository includes structural design pattern in swift which includes Adapter , Bridge , Composite , Decorator , Facade , Flyweight & Proxy .",0,0,2020,2023,2,https://github.com/dvvaliya369/Structural-DesignPattern-Swift
Facade,dio-exploring-design-patterns-with-java,"REST API to exercise some Design Patterns (Singleton, Strategy and Facade).  Created with Java, Spring Boot and built with Gradle.",0,0,2022,2024,1,https://github.com/gabrielcoelhodacunha-old/dio-exploring-design-patterns-with-java
Facade,DesignPattern-Facade,"This C# implementation demonstrates the Facade design pattern, providing a unified and simplified interface to a complex subsystem. It shows how the facade class can encapsulate subsystems to streamline interactions for the client.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Facade
Facade,Desafio-Design-Patterns,"Desafio do bootcamp ""Santander 2024 - Backend com Java"" oferecido pela DIO. O objetivo é explorar os conceitos dos padrões Singleton, Strategy e Facade por meio da implementação de uma API Rest",0,0,2024,2024,1,https://github.com/pauloV-Angelo/Desafio-Design-Patterns
Facade,Design-Patterns,"Design patterns in system ensure efficient and scalable code. Singleton manages configuration; Factory creates public/private repositories; Observer notifies users of changes; Facade simplifies complex operations. These patterns enhance maintainability, readability, and reuse of code in repository management systems",0,0,2024,2024,1,https://github.com/rhythm10/Design-Patterns
Facade,Go_Facade_Pattern,"A Go project demonstrating the Facade pattern with a hierarchical structure management system. This repository showcases how to provide a simplified interface to complex subsystems, emphasizing best practices in design patterns and unit testing.",0,0,2024,2024,1,https://github.com/arthurfp/Go_Facade_Pattern
Facade,Implementing-Facade-design-pattern,This solution helps you to understand the facade design pattern with the help of car showroom and different customers how they approach the showroom and also the list of operations the showroom provides.,0,0,2022,2022,0,https://github.com/ArunKumar2331996/Implementing-Facade-design-pattern
Facade,TUIPaint,"A text user interface game which was coded by C++. Implementing Singleton, Facade, Command, Observer, MVC design patterns ",0,0,2019,2019,1,https://github.com/Luke97030/TUIPaint
Facade,Facebook_app_Design_Pattern_CS,"Facebook app using different design patterns (Singelton, Facade, Proxy, Observer, Iterator, Strategy, Command) and working with Facebook API ",0,0,2019,2019,1,https://github.com/itsikh100/Facebook_app_Design_Pattern_CS
Facade,api-registro-ponto," Sistema de Registro e Controle de Ponto, utilizando Java, Spring, Hibernate, Teste Unitário, Feign e Design Pattern Facade.",0,0,2020,2020,1,https://github.com/gisellykds/api-registro-ponto
Facade,Command,Show the Usage of facade and command design patterns in Java using mixed drinks as a problem space,0,0,2022,2022,1,https://github.com/Ashok6666/Command
Facade,Student_Manager, Laravel version 10 project.Facade design pattern for the development process along with the InertiaJs  technology. Breeze authentication,0,0,2024,2024,1,https://github.com/TheshikaSamaraweera/Student_Manager
Facade,Desafio-de-Projeto-Design-Pattern-java-dio,"Desafio da plataforma dio, em java usando o framework SpringWeb e os design patterns: Singleton, Strategy e Facade. ",0,0,2024,2024,1,https://github.com/IgorCauanAl/Desafio-de-Projeto-Design-Pattern-java-dio
Facade,DemoProj,"This a BDD framework developed with Java, Selenium and Cucumber. Applied design patterns like POM, Singleton and Facade.",0,0,2023,2023,1,https://github.com/Mohideen444/DemoProj
Facade,Spellcaster,"Dice rolling, spell incantation generator. DnD hobby influence. Used this project to learn Facade and Decorator design patterns.",0,0,2018,2018,1,https://github.com/Smashar22/Spellcaster
Facade,Grocery-Store-Front-End,This is the front end for the Grocery Store Back End Repository. Facade design pattern. Uses a GUI. ,0,0,2024,2024,1,https://github.com/M-Shai/Grocery-Store-Front-End
Facade,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Facade,Intern--Assignment,"Full Stack Developer Internship - Assignment using Laravel Vesrion 10 , Facade Design Pattern, InertiaJs and login feature using Breeze authentication",0,0,2024,2024,1,https://github.com/SharmiIIT/Intern--Assignment
Facade,CasaDasDelicias,"Uso dos Design Patterns Facade, Singleton, Template Method, Adapter e Decorator em projeto que representa a produção de salgados.",0,0,2020,2023,1,https://github.com/Gwolner/CasaDasDelicias
Facade,spring-design-pattern,"Small project to test and train design patterns such as Singleton, Strategy/Repository and Facade using the Spring framework.",0,0,2021,2021,1,https://github.com/matheusbragatti/spring-design-pattern
Facade,hw10_Novak,"Implemented five design patterns—Facade, Factory, Memento, Singleton, and State—using JavaScript to illustrate their practical applications and benefits.",0,0,2023,2023,1,https://github.com/AntoninaNov/hw10_Novak
Facade,genetic-algorithm-project,"A genetic algorithm system for solving the travelling salesperson problem, using Singleton, Facade, and Chain of Command design patterns.",0,0,2025,2025,3,https://github.com/oceaan-pendharkar/genetic-algorithm-project
Facade,desafio-dio-java-bootcamp-design-patterns,"Repositório criado para envio de desafio de API criada exemplificando o o use dos design patterns Singleton, Strategy e Facade, para o Bootcamp de Java na DIO.",0,0,2024,2024,1,https://github.com/giselle-ferreira/desafio-dio-java-bootcamp-design-patterns
Facade,TUIGomoku,"A text user interface Gomoku game which was coded by C++. Implementing Singleton, Facade, Command, Observer, MVC design patterns",0,0,2019,2019,1,https://github.com/Luke97030/TUIGomoku
Facade,DesignPattern,"SER515 - Implementation of Product Trading and Bidding System using the following Design Patterns:  Facade, Bridge, Factory Method, Iterator, Visitor",0,0,2022,2024,1,https://github.com/snerall1/DesignPattern
Facade,Software-design-patterns,"We picked an existing Memory Match game code from the internet, we did some changed on it then we start to figured out for any software design problem that needs to be solved by choosing an appropriate design pattern. finally, we used Decorator, Facade, Memento, State patterns.",0,0,2019,2019,1,https://github.com/wFahad/Software-design-patterns
Facade,Facade-Design-Pattern-,"The facade pattern (also spelled façade) is a software-design pattern commonly used in object-oriented programming. Analogous to a facade in architecture, a facade is an object that serves as a front-facing interface masking more complex underlying or structural code.",0,0,2021,2021,1,https://github.com/mahmoud3030arafat/Facade-Design-Pattern-
Facade,Basic-Calculator-Software-Design,"Basic calculator using software design patterns such as abstract factory, composition, template method, visitor, builder, command, wrapper facade, and iterator",0,0,2018,2019,1,https://github.com/Pboruff/Basic-Calculator-Software-Design
Facade,BasketApplication,"Katmanli mimaride UnitOfWork, Singleton, Facade, Factory gibi Design Patterns kullanilan, SOLID Prenciples kullanilmasi amaclanmis olan basit anlamda bir Sepet Uygulamasi.",0,0,2020,2020,1,https://github.com/Hamzacebi/BasketApplication
Facade,Ammit,Ammit is a project that implements a generic iterator for containers with a facade design pattern using C++ 20 language.,0,0,2022,2022,1,https://github.com/BryanProg/Ammit
Facade,openweathermap,Consumo de Api do openweathermap.org para visualizar temperatura de uma cidade usando alguns design patterns como Singleton e Facade,0,0,2019,2019,1,https://github.com/willbigas/openweathermap
Facade,Sokoban,"A Sokoban game that uses Hibernate to get data from SQL database, mvc design pattern, javaFx, facade design pattern In the future: the Sokoban game will use the searchLib + stripsLib to solve Sokoban problem",0,0,2017,2017,1,https://github.com/Netanel1126/Sokoban
Facade,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Facade,design-patterns-java-spring,"É um projeto de um CRUD de Cliente e Endereço, para praticar os conceitos de padrões de projeto Strategy, Singleton, e Facade. Foi utilizando o banco de dados em memória H2 e foi realizado integração com API do ViaCEP através da utilização do OpenFeignClient.",0,0,2021,2021,1,https://github.com/lucaslgr/design-patterns-java-spring
Facade,Design-Patterns-In-Java,This shows 10 types of Design patterns with some projects to execute them. They are as follows: 1. Singleton Pattern 2. Factory Pattern 3. Decorator Pattern 4. Observer Pattern  5. Strategy Pattern 6. Adapter Pattern 7. Facade Pattern 8. Composite Pattern 9. Command Pattern 10. Interpreter Pattern,0,0,2023,2023,1,https://github.com/acshyguy/Design-Patterns-In-Java
Facade,tetris-game,"Tetris game which is a homework project of Object Oriented Analysis and Design course, uses Singleton, Factory and Facade design patterns.",0,0,2019,2025,1,https://github.com/semih/tetris-game
Facade,ECommerece,"An e-commerce API that utilizes nine design patterns: FACTORY METHOD, PROTOTYPE, BUILDER, PROXY, FACADE, ADAPTER, CHAIN OF RESPONSABILITY, MEDIATOR, COMMAND",0,0,2024,2024,1,https://github.com/MunMihai/ECommerece
Facade,DessignPatterns,"For this assignment, you are required to use 3 different design patterns.   If your system doesn't look like it will use design patterns, create three Python examples using the following patterns:  Factory, Facade, and Singleton.",0,0,2023,2023,1,https://github.com/cristianferreira13/DessignPatterns
Facade,Organizasyon_Yonetim,"Çeşitli etkinlikler ile farklı türde organizasyonların tek proje altında satış,biletleme  gibi şeklinde opsiyonların bulunduğu projem. Burada 3 adet tasarım kalıbı kullanmaya özen gösterdim. Bunlardan ilki Cretional tasarım kalıbı altında Factory Design Pattern, ikinicisi Structural tasarım kalıbı altında Facade Design Pattern, üçüncüsü Behavioral tasarım kalıbı altında Observer Design Pattern olacak şeklindedir.",0,0,2021,2021,1,https://github.com/Bekir-gy/Organizasyon_Yonetim
Facade,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
Facade,ser-515-fall-22-private-repo,"A console-based Product Trading and Bidding System (PTBS) implemented using the 5 design patterns: Facade, Bridge, Iterator, Factory Method and Visitor",0,0,2022,2024,1,https://github.com/amitnoelasu/ser-515-fall-22-private-repo
Facade,Literalura,"Third project assigned by Oracle ONE Next Education, developed using the MVC and Facade design patterns, as well as Service-Repository layers.",0,0,2024,2024,1,https://github.com/pinktaty/Literalura
Facade,ludoDistribuido,"Jogo Ludo implementado em Java com uso de Java2D, arquitetura cliente/servidor via Socket e os Design Patterns Singleton, Observer e Façade.",0,0,2017,2017,1,https://github.com/ingridcoda/ludoDistribuido
Facade,upgrad-patterns,"Implement an application using Spring Boot that uses five design patterns, which are as follows:  Singleton Adapter Factory Facade Chain of Responsibility",0,0,2024,2024,2,https://github.com/binhle3920/upgrad-patterns
Facade,Game,"Polymorphism, Inheritance, Pointers, Input Output Operations, Function Overloading, Arrays, Dynamic Memory Allocation, Multi tasking, Design Pattern (Façade), UML Modelling, Timing Wheel concepts.",0,0,2018,2018,1,https://github.com/Tanveen/Game
Facade,Car-Rental-System,"Java-based Car Rental System using JavaFX, JDBC, MySQL. Features: Customer, Car Category, Car, and Rent Management. Design Patterns: Singleton, Factory, Facade.""",0,0,2023,2023,1,https://github.com/Rukshan1999/Car-Rental-System
Facade,GoDesignPatterns,"Go, a multi-paradigm programming language, features design patterns that allow developers to address common problems efficiently. In this course, senior developer advocate Joe Marini covers creation, structural, and behavioral design patterns. Joe begins with an overview of design patterns and design pattern categories. Then he gives you overviews and examples of several creational patterns, including builder pattern, factory pattern, and singleton pattern. He does the same for structural patterns, covering adapter patterns and facade patterns. Joe concludes with behavioral patterns such as an observer pattern and an iterator pattern.",0,0,2021,2021,1,https://github.com/cyadav18/GoDesignPatterns
Facade,pokedex,"A Pokedex app I made in Python that uses RESTful APIs. It uses many design patterns including chain of responsibility, factory, and facade.",0,0,2023,2023,2,https://github.com/Syte1/pokedex
Facade,TheDarkTowerMVC,"A game card game project using ASP.NET and a layered + MVC architecture that also features design patterns such as Facade, Builder, Strategy.",0,0,2022,2022,1,https://github.com/ioana-anton/TheDarkTowerMVC
Facade,Student-Management,"A Student Management System built with Laravel 10, Inertia.js, and the Facade design pattern for efficient CRUD operations and user-friendly interface.",0,0,2024,2024,1,https://github.com/Sachiya2000/Student-Management
Facade,Design-Pattern-Project-Of-OOARD-2.0,"I have enhance my OOARD project and apply design patterns on it (Façade, Singleton, Builder, Factory, Abstract Factory and other patterns also included).",0,0,2024,2024,1,https://github.com/Muzamilofficial/Design-Pattern-Project-Of-OOARD-2.0
Facade,digitalinnovation-padroes-de-projeto,"Pequeno projeto executado durante o curso sobre Padrões de Projeto na DIO, exemplificando com o uso dos Design Patterns Singleton, Strategy, e Facade.",0,0,2022,2022,1,https://github.com/soaresluana/digitalinnovation-padroes-de-projeto
Facade,Facebook-desktop-app,"A Facebook desktop application using Facebook Graph API implementing 6 different design patterns such as Template Method, Observer, Strategy, Factory Method, Proxy, Facade.",0,0,2022,2022,2,https://github.com/yuvalbader/Facebook-desktop-app
Facade,Fa-ade,"Facade is a structural design pattern that provides a simplified interface to a library, a framework, or any other complex set of classes.",0,0,2019,2019,1,https://github.com/amandalsaboia/Fa-ade
Facade,Diseno2020,"Software engineering project, containing both design and code for a wine store. Design patterns such as Singleton, Facade, Layers or DAO/DTO are applied.",0,0,2021,2021,1,https://github.com/HylianPablo/Diseno2020
Facade,DesignPatternSwift,"Most common Cocoa design patterns: Creational: Singleton. Structural: MVC, Decorator, Adapter, Facade. Behavioral: Observer, and, Memento has been implemented in this Music Album App",0,0,2016,2016,1,https://github.com/omarfaruqe/DesignPatternSwift
Facade,Car_Rental_Management,"Exercise for design patterns (Singleton, Builder, Factory Method, Abstract Factory; Adapter, Decorator, Facade, Proxy; Iterator, Observer, State, Strategy), clean code, SOLID, DRY, KISS, YAGNI",0,0,2024,2024,2,https://github.com/19pawel970415/Car_Rental_Management
Facade,FacebookDesktopApp,"C# .Net Applicative Programming using Design Patterns - Course Project. We were asked to use Facebook API to implement 2 new features using 6 different design patterns, Threads, and Data Binding, accompanied by diagrams and an emphasis on clean, readability, and reusability code. We have chosen Singleton, Factory Method, Facade, Iterator, Observer, and Strategy design patterns in our solution.",0,0,2020,2021,1,https://github.com/sagiselag/FacebookDesktopApp
Facade,Introduction-to-software-engineering,practice the integration of your code with an existing class work with the Façade design pattern. Implement a class template and overloaded operators in C++.,0,0,2019,2019,1,https://github.com/Simonmon06/Introduction-to-software-engineering
Facade,ToDoList,"Ogretici olmasi amaciyla yazilmis olan, icerisinde Singleton - Facade - Factory - UnitOfWork - Generic Repository Design Pattern'leri iceren ve EntityFrameworkCore ile yazilmis bir .Net Core 2.2 projesidir",0,0,2020,2020,1,https://github.com/Hamzacebi/ToDoList
Facade,ATL-Software,ATL-Sofware is a web application with the purpose of a job vacancy. It has been developed in several layers using a facade as design pattern.,0,0,2022,2022,0,https://github.com/felixmpa/ATL-Software
Facade,album-store,"album store is an app which implements Singleton, MVC, Delegation, Protocols, Facade, Observer, and Memento patterns. source : http://www.raywenderlich.com/86477/introducing-ios-design-patterns-in-swift-part-1 and http://www.raywenderlich.com/90773/introducing-ios-design-patterns-in-swift-part-2",0,0,2015,2015,0,https://github.com/sergioestebance/album-store
Facade,NFC-Application,"I have created a NFC system at my university. My aim in my project is to design a university system using design patterns. I used a total of 6 design patterns in my Java project. These are composite, observer, singleton, command, iterator, and facade respectively.",0,0,2022,2022,1,https://github.com/berkinozturk/NFC-Application
Facade,Beibe,"Beibe é um serviço de atendimento e reclamações desenvolvido em Java, utilizando arquitetura MVC e Design Pattern FACADE, com banco de dados PostgreSQL conectado via JDBC ao projeto.",0,0,2022,2022,1,https://github.com/luis19nn/Beibe
Facade,Millionaire,"Android app, a trivia game known as Who Wants to Be a Millionaire, Written in Java, Using Design Patterns Like Singleton, FACADE and Using Server Side in FIREBASE",0,0,2020,2020,1,https://github.com/idans5/Millionaire
Facade,Hotel-Room-Reservation-System,"The system is developed using Java and Swing Designer, with the implementation of design patterns: the singleton, factory, facade, and strategy design patterns to improve the efficiency of data management and to simplify the system's complexity. Available in two versions: a UI version and a console-based version.  ",0,0,2023,2023,1,https://github.com/HM3IT/Hotel-Room-Reservation-System
Facade,StranglerFigPatternExample,This project demonstrates the Strangler Fig Pattern using Facade Design Pattern in C#. It simulates a phased migration from an old legacy order management system to a new one.,0,0,2024,2024,2,https://github.com/tolgatandogan/StranglerFigPatternExample
Facade,Emergency-Department-Simulator," Text based game in which you are an Emergency Medicine Physician who has to evaluate patients. Used Swift to implement Design Patterns such as Singleton, Observer, Façade, and Composite.",0,0,2019,2019,1,https://github.com/mmoore96/Emergency-Department-Simulator
Facade,java-desing-patterns-II-loja,Repositório do curso Jornada do Conhecimento de Back-End Java (Nível Intermediário) - Design Patterns em Java II: avançando nas boas práticas de programação da plataforma Alura.,0,0,2024,2024,1,https://github.com/Robson-Teixeira/java-desing-patterns-II-loja
Facade,Facebook-features-app-using-Facebook-API,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.  ",0,1,2019,2019,1,https://github.com/AndrewSergeev/Facebook-features-app-using-Facebook-API
Facade,structural_design_pattern,"This repository contains materials and examples for an advanced Java lecture focusing on the Facade design pattern. The Facade pattern is a structural pattern that provides a simplified interface to a set of interfaces in a subsystem, making it easier to use.",0,0,2024,2024,1,https://github.com/Pathum-Vimukthi/structural_design_pattern
Facade,Java-MachineLender-Application-Refactor,"Machine rental system. Implemented a One Time Password(OTP) security feature along with refactoring of code to reduce duplication and adding some design patterns such as facade, builder and adapter pattern",0,0,2021,2021,5,https://github.com/CantonCode/Java-MachineLender-Application-Refactor
Facade,mvc-java,"This project is built using Java and Gradle. It is an intermediate level Java assignment which focuses on the design pattern model-view-controller and aside from that covers subject such as enums to avoid hidden dependencies, immutable objects, the structural design pattern ""facade"" as well as class-, object-, and sequence diagrams.",0,0,2023,2023,2,https://github.com/violacaroline/mvc-java
Facade,Pizza-Ordering-System,"This Java project is a ""Restaurant Ordering System"". It includes features like user sign-up, menu display, and order processing. Design patterns like Singleton, Template, and Facade are utilized for efficient functionality.",0,0,2022,2024,1,https://github.com/zohanzafar/Pizza-Ordering-System
Facade,Data_Structer_and_Algorithms---HASH_TABLE,"In this project, i also try to implement a general design patterns which are known as Facade and Singleton. But the main working task in here still is using for  hash table",0,0,2023,2023,1,https://github.com/NguyenPLK/Data_Structer_and_Algorithms---HASH_TABLE
Facade,CyberElysium-Test,"This Project was creted as a part of the CyberElysium's Interview process. This project iis developed with Laravel 10, InertiaJS, and CRUD. operations. Additionally, Breeze Authentication and Facade design patterns are used.",0,0,2023,2024,1,https://github.com/lankeshhalangoda/CyberElysium-Test
Facade,BlackJack-Game,"Written in Java using Object-Oriented Programming methodologies, generics, and Java design patterns such as singleton and facade. This card game automates a game of black while meeting the constraints of the rules.",0,0,2017,2017,1,https://github.com/FerraraNicholas/BlackJack-Game
Facade,AzureStorageHelper,"Azure Storage Helper is an open-source lightweight package that you can include in your .NET projects. The package functions as a facade ([see facade pattern](https://refactoring.guru/design-patterns/facade)) between _Your Application_ and ""Azure Storage"". This package provides an interface that can be used to perform all the actions you need in a simple way.",0,0,2022,2022,2,https://github.com/NielsEngelhard/AzureStorageHelper
Facade,dotnetcore-api-architecture,"An sketch to develop applications using Fowler N-Tier architecture with Transaction Script organization. This project uses ASP .NET Core as a framework and some Design Patterns such as Repository, DI, Facade and Adapters.",0,0,2020,2021,2,https://github.com/luafalcaocode/dotnetcore-api-architecture
Facade,Dictionary,"Arabic to generic language dictionary (any language meaning can be provided). Coded in JAVA language using singleton, Façade design pattern and three layer architecture. PHPmyadmin SQL used as database. JDBC as well as swing implemented.",0,0,2023,2023,1,https://github.com/LaibaIdreees/Dictionary
Facade,Instapay-Application,"A console application that provides a service for transferring money from one user to another, similar to the InstaPay application. We have applied various design patterns in our code, such as facade, factory, and strategy.",0,0,2023,2024,4,https://github.com/aamirazaynn/Instapay-Application
Facade,ElectroTech-Management-System,"""ElectroTech Management System: JavaFX app with Hibernate & MySQL. Employs layered architecture & design patterns (Factory, Facade, Strategy, Observer, Singleton). Features secure authentication, user-friendly UI, automated inventory. Achievements: 30% error reduction, robust architecture. Open for community contributions.""",0,0,2024,2024,1,https://github.com/Dinil-Lamahewa/ElectroTech-Management-System
Facade,Register-Of-Address,"This is a Springboot project that explore the design pattern Singleton, Strategy and Facade, registering a user with only name and cep, and a api will be consumed for get the address and save in a database",0,0,2022,2022,1,https://github.com/S4nt1ag0/Register-Of-Address
Facade,Animal-Care-Shelter-System,"Programmed in C++ using the Linux distribution on the Virtual Box. Multiple data structures involved such as linked list, vectors (array lists) and more. 3-Tier architecture style and observer, factory and facade design patterns were implemented. ",0,0,2019,2019,1,https://github.com/SalimErradi/Animal-Care-Shelter-System
Facade,trivia-game,"This project is a single-player true or false trivia game developed using a Java Command Line Application. The game serves as an exercise in implementing six different design patterns: Singleton and Factory (creational patterns), Decorator and Facade (structural patterns), and Command and Observer (behavioral patterns).",0,0,2023,2024,1,https://github.com/alessandroryo/trivia-game
Facade,EmployeePortal-MVC,"An Employee management portal based on ASP.NET MVC with many features like Issue management, Notice management, User management etc. Some salient features used were Unity Framework, Layered Architecture, Factory Methods, Reflection, Facade Design Pattern, LINQ, Collection Framework etc.",0,0,2018,2018,1,https://github.com/pulkitent/EmployeePortal-MVC
Facade,Creme,"A customer relationship management application built with JSP, Servlet, XML, HTML, CSS, Spring MVC and Hibernate. I also used MySql database and Tomcat server, while DAO, Service Facade and MVC design patterns were used to implement the business logic.",0,0,2020,2020,1,https://github.com/Iredafe/Creme
Facade,weather-snap,"Shows weather snapshot by forecasting different cities with different versions of weather. It uses facade design pattern, reusable components. TechStack used asset inventory system focusing basic tech inventories in a company. TechStack: Angular, Typescript, HTML5, CSS3/SCSS, Weather API.",0,0,2019,2019,1,https://github.com/kumarsundeep/weather-snap
Facade,BusRouteFinderApplication,Bus Route Finder Application that connects to an online bus schedule and uses regex to retrieve information regarding schedule and routes. Facade design pattern was used to provide a user-friendly interface while masking the more complex underlying code,0,0,2019,2019,1,https://github.com/jerryzhu94/BusRouteFinderApplication
Facade,Cyber-Rosa-Integrative-Software-Project,"A Java-based stationery management system using a layered architecture and design patterns like Singleton, Factory, and Facade. Developed by Team 4 (names pending), where each member applied their analysis, design, and development skills to build an efficient and scalable solution.",0,0,2025,2025,1,https://github.com/JoseJesusOH/Cyber-Rosa-Integrative-Software-Project
Facade,Uber-App-java,"this is an application done as a faculty project (in software 2) using different design patterns like facade, strategy, singleton and observer patterns to achieve an application that works like the popular application (uber) by using some api's as well",0,0,2023,2023,1,https://github.com/Youssef-Ayoub/Uber-App-java
Facade,StockTracking,"A windowsform application. Built using C#, .NET with N-Tier Architecture Facade Design Pattern, using Entity Framework, using ADO.net, it contains folders named, BLL, DAL and inside DAL we have DAO and DTO folders, it uses MSSQL and Visual Studio",0,0,2024,2024,1,https://github.com/AbrahamNobleOX/StockTracking
Facade,FacebookApp,"The Facebook Desktop App is a Windows Forms application that provides a desktop-friendly interface for using Facebook features. This project showcases the implementation of several design patterns such as Singleton, Facade, and Strategy, which improve the application's maintainability, flexibility, and structure.",0,0,2023,2023,1,https://github.com/SivanOp/FacebookApp
Facade,logistica-golada,"O Sistema de Logística é uma aplicação que utiliza Design Patterns para a gestão de pedidos. Com diferentes padrões, como o Strategy, Command, Observer e Facade, a arquitetura é flexível e extensível. O projeto pode ser utilizado como base para aplicações similares.",0,0,2023,2024,1,https://github.com/genesis-crypto/logistica-golada
Facade,GestionGarage,"Projet d'architecture logicielle visant à l'utilisation de divers Design Pattern tels que l'utilisation de : Factory, Facade, Visiteur, Observer, Delegator et mise en place d'un modèle MVC. L'application permet la gestion d'une liste de voiture d'un garage.",0,0,2022,2022,1,https://github.com/jonathanBayle0/GestionGarage
Facade,PizzaDeliverySystem,"In a pizza delivery system, I have implemented the Facade design pattern to provide a simplified interface for client to order a pizza allowing them to input only essential details (card information, security PIN, payment amount, and operation type) to complete the ordering process.",0,0,2025,2025,1,https://github.com/ahmed-hasin-neehal/PizzaDeliverySystem
Facade,LLD,"Low-level design (LLD) in a GitHub-like system involves defining detailed class structures and interactions. It uses design patterns like Singleton, Factory, Observer, and Facade to create maintainable, scalable, and efficient code. LLD translates high-level concepts into concrete implementations, ensuring robust & functional repository management.",0,0,2024,2024,1,https://github.com/rhythm10/LLD
Facade,ByteLivros,"Projeto realizado para a matéria de LES, e-commerce para a venda de livros, utilizando Java Servlet e JSP, banco de dados PostgreSql, com design patterns DAO, Facade e Strategy, arquitetura MVC. Adm, possui pagina de analise de vendas utilizando Chart.js, pagina de recomendações com ChatGPT API.",0,0,2024,2024,1,https://github.com/IsacHenri/ByteLivros
Facade,IT-Equipment-Purchasing-Console-Application,"An application where user can make individual/mass IT equipment purchase (laptop, monitor plus randomly generated accessories) based on the type(gaming/office) that is chosen by the user. The project used various data structures(hashtable, dictionary, queue, list, array) and design patterns(abstract factory, factory, flyweight, singleton, facade).",0,0,2022,2022,1,https://github.com/simulbista/IT-Equipment-Purchasing-Console-Application
Facade,Survey-Test-Program,"This project allows the user to create, modify, take, and delete surveys/tests. This was created for a class to teach the different forms of abstraction and design patterns. This program demonstrates the use of structural patterns like the facade and bridge, and behavioral patterns such as template methods.",0,0,2019,2019,1,https://github.com/btmosher1/Survey-Test-Program
Facade,Banking-System,"A banking system is a group or network of institutions that provide financial services for us. These institutions are responsible for  operating a payment system, providing loans, taking deposits, and helping with investments. In this project, we use simple design patterns (singleton , factory, facade) to facilitate handling customer's information",0,0,2023,2023,0,https://github.com/Norhan-gamal/Banking-System
Facade,SVG-Manipulator,"Project is based on  MVI architecture to form a communication channel between View and Model.This project is capable of manipulating basic SVG images. Users can add multiple SVG shapes and they can perform various features like scaling, attaching and grouping, to achieve this I also used design patterns like composite and factory and facade.",0,0,2020,2020,1,https://github.com/AbdeAliSomesar/SVG-Manipulator
Facade,HotelAutomationCSharp,Base erp software for hotels with entity and facade business layers which communicates with database. Can be applied to web ui or winform etc.  You can see usage of ORM and singleton design pattern. As I mentioned this is a base version of the programme maybe you can built on this by  designing new user interface.,0,0,2023,2023,1,https://github.com/tarikasci/HotelAutomationCSharp
Facade,Medical-app,"built with Laravel (PHP),it's a medical app uses from doctors and patients, it built in MVC and used multi mysql databases and blade engine to build simple views. In addition , there are many design patterns in, like Facade ,Decorator, and Strategy .And it works on Dijkstra to find the nearest illness for the symptoms",0,0,2021,2022,1,https://github.com/22Bassel/Medical-app
Facade,BankingFramework,"This is a simple Banking Spring MVC application  in which I applied several design patterns(factory, command, facade, etc). In the project, I developed a framework from which two applications extend. the framework is under framework package. The two applications that extend features provided in the framework are Bank and Credit Card. they reside in their respective packages in the source folders. ",0,0,2017,2023,1,https://github.com/ridwantahir/BankingFramework
Facade,Tema2-PAO," Please choose 2 of the following design patterns to implement in java: 1. factory method 2. strategy  3. proxy 4. adapter 5. facade  You can choose whichever objects you like to implement it.(Cats, Dogs, Cars, Employers, A, B, C,...) Create a command line interface to showcase the usage of the implementation.  Google is your friend and will explain each of the patterns(we did builder in class). However, please try to understand how they work.   Deadline: April 6th",0,0,2022,2022,1,https://github.com/alexion2001/Tema2-PAO
Facade,RMI-Chat-Server,"This system provides the facility to chat among clients who are connected to the server. The Registered clients can make their own private chat list and they can share files or documents. Clients who do not have a registered account has the access only to the public chat, but has to get a valid name. For the registered clients can see their chat history too. Java SE, Java Swing, RMI technologies and Jasper Reporting is used to generate reports of this system. DAO, Observer-Observable, MVC, Singleton, Façade, & Factory design patterns are used to develop this system for an efficient way.",0,0,2017,2017,1,https://github.com/SandamalWijeweera/RMI-Chat-Server
Facade,Advanced-Software-Development---JAVA-MICROSERVICES,"The course target:: Advanced Software Development JAVA MICROSERVICES Course To cover the gap between the academia and the industry in Israel high-tech industry market 1. To give the relevant tools to build and develop an E2E application ( RPC - Application Servers (web application server ) , Docker , K8, Mongo DB ,Postman ) 2. To provide a serious and a heavy programming background ( Java language) ,the newest technologies (Java 8 & 9, Maven ,Jenkins , Restful , JPA , ORM , HTML ,CSS , JS) and the latest frameworks which are used in the industry (Spring , NoSQL , Swagger, Angular/React ,Lombok) 3. To implement the relevant Programming Design patterns like Singleton ,MVC, Factory , Abstract , Adapter , Facade , Composite , Visitor ,Proxy ,Iterator and the newest programming concepts & architectures (modularity , loose coupling, Microservices )",0,0,2022,2023,1,https://github.com/ahmadsb/Advanced-Software-Development---JAVA-MICROSERVICES
Flyweight,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Flyweight,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Flyweight,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Flyweight,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Flyweight,dotnet-design-patterns-samples,The samples of .NET design patterns,37,11,2017,2025,2,https://github.com/AliakseiFutryn/dotnet-design-patterns-samples
Flyweight,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Flyweight,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Flyweight,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Flyweight,Maze-Runner," A game close to bomberman, but aim to escaping a maze. Game included random maze generation, nice gui and animation along with a lot other features moreover implemented bunch of Design patterns such as Singleton, Flyweight, Factory, Command and much more.",8,3,2017,2023,4,https://github.com/youssefAli11997/Maze-Runner
Flyweight,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Flyweight,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Flyweight,Fly-Weight,"This repository contains a Java implementation demonstrating the Flyweight design pattern, which is used to minimize memory usage and improve performance by sharing as much data as possible with related objects. ",3,0,2024,2024,1,https://github.com/samyam81/Fly-Weight
Flyweight,FlyweightDesignPattern,Flyweight Design Pattern,2,0,2018,2022,1,https://github.com/mtnaln/FlyweightDesignPattern
Flyweight,FlyweightPatternImplementation,"An implementation of Flyweight design pattern, using an example of characters.",2,0,2018,2018,1,https://github.com/SihemBouhenniche/FlyweightPatternImplementation
Flyweight,Design-Patterns,All the design patterns which i know,2,0,2021,2023,1,https://github.com/thirtwo/Design-Patterns
Flyweight,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Flyweight,design-pattern-flyweight,"In this article, explore the Flyweight design pattern in Java.",1,2,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-flyweight
Flyweight,flyweight,Flyweight design pattern description / Description du design pattern Poids Mouche,1,0,2017,2017,1,https://github.com/choubidouap/flyweight
Flyweight,WordProcessor,WordProcessor_Flyweight_Design_Pattern,1,0,2019,2023,1,https://github.com/jackTylerDurden/WordProcessor
Flyweight,Flyweight-Balls,FlyWeight Design Pattern Implementation,1,0,2023,2024,1,https://github.com/Syjhert/Flyweight-Balls
Flyweight,flyweght_pattern,Flyweight Design Pattern in Java,1,0,2018,2019,1,https://github.com/parsa-JPM/flyweght_pattern
Flyweight,FlyWeightDesignPattern,fly weight design pattern,1,0,2023,2023,1,https://github.com/CodenameOverlord/FlyWeightDesignPattern
Flyweight,DesignPattern-Flyweight,Example implementation of Flyweight design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Flyweight
Flyweight,flyweightdesignpattern,Flyweight Design Pattern sample implementation using C#,1,0,2020,2023,1,https://github.com/technicalbundle/flyweightdesignpattern
Flyweight,cs757_DesignPattern_Flyweight,Design patterns implementations are there,1,0,2024,2025,2,https://github.com/sammagnet7/cs757_DesignPattern_Flyweight
Flyweight,flyweight-design-pattern,See example of flyweight design pattern in go,1,0,2024,2024,1,https://github.com/bujosa/flyweight-design-pattern
Flyweight,flyweight.hpp,Single header implementation of the Flyweight design pattern for C++11,1,0,2024,2024,1,https://github.com/gilzoide/flyweight.hpp
Flyweight,coffee-shop-flyweight,This is just a repository test to try out the Flyweight Design Pattern,1,0,2021,2021,1,https://github.com/JD1927/coffee-shop-flyweight
Flyweight,design-patterns,"Practicing design patterns like Command, Flyweight and Observer in Unity.",1,0,2021,2021,1,https://github.com/carreraSilvio/design-patterns
Flyweight,Snake-Game,Ssssnake game where i had to use FlyWeight & Observer design pattern,1,0,2022,2022,1,https://github.com/Keydouu/Snake-Game
Flyweight,Unity-DesignPatterns,"Udemy course where i learned about Object Pool, Flyweight and Command design patterns applied in basic games.",1,1,2018,2022,1,https://github.com/BurningAl15/Unity-DesignPatterns
Flyweight,Design-Patterns-Csharp,Estudo de Design Patterns com C#,1,1,2020,2024,1,https://github.com/thiago-roock/Design-Patterns-Csharp
Flyweight,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Flyweight,unityCodeTests,"Unity code test for lambdas and design patterns like flyweight, object pooling and other game development patterns",1,0,2024,2024,1,https://github.com/melihacil/unityCodeTests
Flyweight,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Flyweight,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Flyweight,DesignPattern_Project,https://youtu.be/bXKfP5Tbnt8 This is a single project where the following design patterns were used: POOL - FACTORY - OBSERVER - STRATEGY - BUILDER - LOOK UP TABLE - MVC - LOCALIZATION MANANGER - SCREEN MANANGER - FLYWEIGHT - PROTOTYPE - EVENT MANANGER,1,0,2021,2022,1,https://github.com/Gmorenoprat/DesignPattern_Project
Flyweight,lab-07,Lab 7: The flyweight design pattern ,0,10,2023,2024,2,https://github.com/cpit252/lab-07
Flyweight,flyweight,A C++11 library implementing the flyweight design pattern,0,3,2015,2015,1,https://github.com/hjanetzek/flyweight
Flyweight,flyweight,design pattern,0,0,2024,2024,0,https://github.com/EmanuelSoft/flyweight
Flyweight,Flyweight,Structural Design Pattern in C# | Flyweight Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Flyweight
Flyweight,FlyweightDesignPattern,Flyweight Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/FlyweightDesignPattern
Flyweight,DPFlyweight,Flyweight  design pattern,0,0,2017,2017,1,https://github.com/chandrakantnitt/DPFlyweight
Flyweight,flyweight,flyweight design pattern,0,0,2019,2019,1,https://github.com/AllanMLeite/flyweight
Flyweight,Codigo-039---Cafeteria-Leve,Design Pattern FlyWeight,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-039---Cafeteria-Leve
Flyweight,flyweight-design-pattern-demo,Flyweight Design Pattern,0,0,2024,2024,1,https://github.com/OsmiumCoder/flyweight-design-pattern-demo
Flyweight,flyweight_design_pattern,flyweight_design_pattern,0,0,2022,2022,1,https://github.com/ksatksat/flyweight_design_pattern
Flyweight,Flyweight,Design Pattern Flyweight,0,0,2022,2022,1,https://github.com/aliounemane2/Flyweight
Flyweight,structural-pattern,flyweight design pattern ,0,0,2024,2024,0,https://github.com/EmanuelSoft/structural-pattern
Flyweight,flyweightdesign,Flyweight design pattern ,0,0,2024,2024,0,https://github.com/coldnights1/flyweightdesign
Flyweight,flyweight,flyweight design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/flyweight
Flyweight,Chess-Game,Flyweight Design Pattern,0,0,2019,2019,0,https://github.com/ryanvickr/Chess-Game
Flyweight,FLYWEIGHT,flyweight design pattern,0,0,2020,2020,1,https://github.com/faycalcode/FLYWEIGHT
Flyweight,PatternFlyweight,Design Pattern Flyweight,0,0,2020,2020,1,https://github.com/VinCleanCode/PatternFlyweight
Flyweight,FlyweightDemo,C# Flyweight design pattern,0,0,2016,2016,1,https://github.com/mahboobgit/FlyweightDemo
Flyweight,padrao_flyweight,Design Pattern,0,0,2019,2019,1,https://github.com/suzysouto/padrao_flyweight
Flyweight,DP_flyweight,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_flyweight
Flyweight,flyweight,Flyweight Structural Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/flyweight
Flyweight,FlyweightPattern,Flyweight Software Design Pattern demo,0,0,2013,2013,1,https://github.com/leroyvaughan/FlyweightPattern
Flyweight,dp_flyweight_exo,Flyweight design pattern exercice,0,0,2016,2019,0,https://github.com/nbourre/dp_flyweight_exo
Flyweight,MilitaryBase,Flyweight design pattern example,0,0,2023,2023,0,https://github.com/VladislavPavlyuk/MilitaryBase
Flyweight,BackPackFlyWeight,"TDD, Flyweight Design Pattern",0,0,2017,2017,1,https://github.com/zubra5/BackPackFlyWeight
Flyweight,STRUCTURAL-DESIGN-PATTERN-Flyweight-,STRUCTURAL DESIGN PATTERN (Flyweight),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-Flyweight-
Flyweight,Unity-Flyweight-Design-Pattern,Unity Flyweight Design Pattern,0,0,2024,2024,1,https://github.com/adag21044/Unity-Flyweight-Design-Pattern
Flyweight,FlyWeight,FlyWeight Structural Design Pattern,0,0,2016,2016,1,https://github.com/vgasparyan1995/FlyWeight
Flyweight,25_06_20_FlightWeight_Design_pattern,Flyweight design pattern example,0,0,2020,2020,0,https://github.com/GilMuzika/25_06_20_FlightWeight_Design_pattern
Flyweight,CSharpDP_Structural_Flyweight,Structural Flyweight Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Flyweight
Flyweight,Flyweight,Flyweight Structural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Flyweight
Flyweight,Flyweight,Implementation of Flyweight design pattern.,0,0,2019,2019,0,https://github.com/eulersexception/Flyweight
Flyweight,FlyWeight,Flyweight design pattern in Java,0,1,2021,2021,1,https://github.com/in8bit/FlyWeight
Flyweight,DP_FlyweightPattern,Small Project using FlyWeight Design Pattern.,0,0,2024,2024,1,https://github.com/iAmSidh108/DP_FlyweightPattern
Flyweight,FlyweightPattern,"Study repository about the Design Pattern ""Flyweight""",0,0,2020,2020,1,https://github.com/GQBrendel/FlyweightPattern
Flyweight,flyweight,Gang of Four design pattern: Flyweight,0,0,2018,2018,0,https://github.com/markKL1/flyweight
Flyweight,FlyweightDP,Simple project that implements Flyweight design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/FlyweightDP
Flyweight,FlyWeight,Demonstration the FlyWeight Design Pattern,0,0,2017,2019,1,https://github.com/alexandra142/FlyWeight
Flyweight,java_gof_flyweight,"design pattern ""flyweight"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_flyweight
Flyweight,FlyWeightPatternDemo,Demo for FlyWeight Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/FlyWeightPatternDemo
Flyweight,FlyweightDesignPattern,Application d'un design pattern sous unity,0,0,2018,2018,1,https://github.com/kesylo/FlyweightDesignPattern
Flyweight,FlyWeightPatternDemo,Demo for FlyWeight design pattern,0,0,2023,2023,1,https://github.com/nideez45/FlyWeightPatternDemo
Flyweight,FlyWeight,Sample Implementation for FlyWeight design Pattern,0,1,2014,2015,2,https://github.com/therightengineer/FlyWeight
Flyweight,Flyweight,A design pattern Flyweight in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Flyweight
Flyweight,flyweight,To learn Flyweight design pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/flyweight
Flyweight,FlyweightDesignPattern,A Simple example of the Flyweight design pattern.,0,0,2022,2022,1,https://github.com/nickeax/FlyweightDesignPattern
Flyweight,FlyweightDesignPattern,An example implementation of the Flyweight design pattern.,0,0,2023,2023,0,https://github.com/LiamGiiV/FlyweightDesignPattern
Flyweight,FlyweightDesignPattern,A Simple Insight Into The Flyweight Design Pattern.,0,0,2020,2020,1,https://github.com/venkatrsrinivas/FlyweightDesignPattern
Flyweight,FlyWeightpattern,C# example for flyweight design pattern,0,0,2016,2016,1,https://github.com/ViduWij/FlyWeightpattern
Flyweight,Flyweight-Pattern,Simple example illustrating flyweight design pattern.,0,0,2016,2016,1,https://github.com/LailaMaher/Flyweight-Pattern
Flyweight,Flyweight,Exemplo de Design Pattern (Flyweight) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/Flyweight
Flyweight,flyweight-python,Flyweight design pattern demonstration in python,0,0,2019,2020,1,https://github.com/Iduoad/flyweight-python
Flyweight,Flyweight,design pattern associated with the software architecture discipline,0,0,2023,2023,1,https://github.com/alvaro-veiga/Flyweight
Flyweight,Simple-Flyweight,Repository ini digunakan untuk menyimpan tugas besar Clean Code dan Design Pattern. Pada repository ini menggunakan design pattern structural Flyweight design pattern pada domain kasus Chatbot.,0,0,2020,2020,1,https://github.com/satadii11/Simple-Flyweight
Flyweight,CS3398-A17,Unit Testing with Flyweight Design Pattern,0,0,2018,2018,1,https://github.com/dac183/CS3398-A17
Flyweight,flyweight,Overly contrived example of the flyweight design pattern,0,0,2012,2014,1,https://github.com/dpatti/flyweight
Flyweight,php-design-patterns-flyweight,PHP Design Patterns - Flyweight Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-flyweight
Flyweight,YetiJokes,Flyweight Pattern by Design Patterns - Tutorials,0,0,2020,2020,1,https://github.com/Armandocarrillo/YetiJokes
Flyweight,FlyWeight_Example_01,FlyWeight Design Pattern Simple by eZer,0,0,2020,2020,0,https://github.com/Eshanezer/FlyWeight_Example_01
Flyweight,Design-Patterns2-Assi1,"Demonstrates Design Patterns flyweight, aggregate, strategy",0,0,2021,2021,1,https://github.com/soniafriesen/Design-Patterns2-Assi1
Flyweight,oxygen,Project to explain Design Pattern Flyweight.,0,0,2017,2017,1,https://github.com/sidneynakatani/oxygen
Flyweight,PRU221m_DemoFlyweight,PRU221m - SU22 Demo Flyweight Design Pattern,0,0,2022,2022,2,https://github.com/annthe150432/PRU221m_DemoFlyweight
Flyweight,FlyweightPatternExample1,Code to go with software design patterns module CA,0,0,2020,2020,1,https://github.com/Mahoney0101/FlyweightPatternExample1
Flyweight,Flyweight-Design-Pattern-ClothStore,Demo Flyweght Design Pattern- ClothStore,0,0,2018,2019,1,https://github.com/natavy/Flyweight-Design-Pattern-ClothStore
Flyweight,TransporteFlyweight,An example of the Flyweight design pattern.,0,0,2023,2023,1,https://github.com/emacabrera/TransporteFlyweight
Flyweight,flyweight_pattern,A demo on flyweight design pattern java,0,0,2021,2021,1,https://github.com/Nii-Addo/flyweight_pattern
Flyweight,FlyweightDesignPattern,Demo fuer Fliegengewicht Design Mustar(demo for flyweight design pattern),0,0,2021,2021,1,https://github.com/rajan4study/FlyweightDesignPattern
Flyweight,PhpDesignPatterns-Flyweight,Flyweight,0,0,2018,2024,1,https://github.com/Jagepard/PhpDesignPatterns-Flyweight
Flyweight,flyweight-design-pattern,Example implementation of the flyweight design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/flyweight-design-pattern
Flyweight,FlyWeight,Software project (P3) of design patterns about FlyWeight pattern,0,0,2018,2018,1,https://github.com/mrr00b00t/FlyWeight
Flyweight,flyweight-design-pattern,A java implementation of Flyweight design pattern,0,0,2017,2017,1,https://github.com/igor-couto/flyweight-design-pattern
Flyweight,Flyweight-Practice,Project to practice implimenting the flyweight design pattern,0,0,2023,2023,1,https://github.com/tdtrevathan/Flyweight-Practice
Flyweight,pylek,https://refactoring.guru/pl/design-patterns/flyweight,0,0,2023,2023,0,https://github.com/SKP-JAVA-lato-2022/pylek
Flyweight,DesignPatternsAndroid,Flyweight and Memento Patterns using android,0,0,2014,2014,1,https://github.com/enriquesoto/DesignPatternsAndroid
Flyweight,DesignPatterns-Flyweight,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Flyweight
Flyweight,FlyWeight,This is an example codes implemented by FlyWeight Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/FlyWeight
Flyweight,DesignPatterns-Flyweight,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Flyweight
Flyweight,DesignPatterns.Flyweight,Sample project of a Flyweight Design pattern implementation,0,0,2019,2019,1,https://github.com/sebainones/DesignPatterns.Flyweight
Flyweight,DesignPatterns-Flyweight,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Flyweight
Flyweight,FlyweightPattern,Contoh implementasi penerapan design pattern Flyweight pada kasus melakukan pencarian data barang sewaan.,0,0,2021,2021,1,https://github.com/geryfauzi/FlyweightPattern
Flyweight,DesignPatternsFlyweight,Projeto utilizando Design Patterns para reproduzir som de notas musicas utilizando framework JFugue.,0,0,2017,2017,1,https://github.com/Irvayne/DesignPatternsFlyweight
Flyweight,flyweight-js,An example of the flyweight design pattern in react,0,0,2018,2018,0,https://github.com/jessharrell/flyweight-js
Flyweight,DesignPatterns-Flyweight,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Flyweight
Flyweight,flyweight-design-pattern,An example of flyweight design pattern with C#,0,0,2021,2021,0,https://github.com/saidtaleb/flyweight-design-pattern
Flyweight,DesignPatterns-Flyweight,Exercito,0,0,2024,2024,0,https://github.com/Diego5496/DesignPatterns-Flyweight
Flyweight,ImageFlyweight,This is an example of the Flyweight design pattern.,0,0,2023,2023,1,https://github.com/emacabrera/ImageFlyweight
Flyweight,Xperiments.DesignPatterns.Flyweight,A litttle implementation of Flyweight pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Flyweight
Flyweight,design-patterns-1,Talking 'bout Flyweights,0,0,2014,2015,0,https://github.com/jcockhren/design-patterns-1
Flyweight,FlyWeight,A basic implementation of FlyWeight Design Pattern using FiveArmies Battle scenario,0,0,2015,2015,1,https://github.com/prmk/FlyWeight
Flyweight,FlyweightPattern,This Java project provides a working example of the memory-saving Flyweight design pattern.,0,0,2015,2015,1,https://github.com/LikeLikeAteMyShield/FlyweightPattern
Flyweight,younup-techtime-pattern-flyweight,Exemple d'application utilisant le Design Pattern Flyweight,0,0,2024,2024,1,https://github.com/Younup/younup-techtime-pattern-flyweight
Flyweight,flyweight-design-pattern,This project is demo for fly weight design pattern.,0,0,2023,2023,1,https://github.com/sazzadgithubalom/flyweight-design-pattern
Flyweight,DESIGN-PATTERNS,FLYWEIGHT PATTERN -VİSİTOR PATTERN,0,0,2021,2021,1,https://github.com/F-Z-T/DESIGN-PATTERNS
Flyweight,Structural-Flyweight,This is a short implementation of the Flyweight design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Structural-Flyweight
Flyweight,DesignPatterns-Str-Flyweight,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Str-Flyweight
Flyweight,c-DesignPatterns_flyweight,,0,0,2023,2023,1,https://github.com/mohamedibrahim1990/c-DesignPatterns_flyweight
Flyweight,br.edu.umfg.prog-tres.flyweight,Design Patterns - Flyweight - 1424 . Diego Garcia Perez Biguette,0,0,2024,2024,1,https://github.com/D1360-64RC14/br.edu.umfg.prog-tres.flyweight
Flyweight,Tetris-Object-Oriented,Flyweight and observer design patterns - Done in Eclipse ,0,0,2017,2017,1,https://github.com/jtraut/Tetris-Object-Oriented
Flyweight,flyweight,"Java project for testing implementing various design patterns including flyweight, factory, and singleton",0,0,2014,2018,1,https://github.com/johnpwillman/flyweight
Flyweight,toolTip,Used as an example of flyweight design pattern,0,0,2015,2015,1,https://github.com/jvmqueue/toolTip
Flyweight,FlyWeightPattern,In this project we practiced Singleton and FlyWeight design patterns,0,0,2021,2021,1,https://github.com/VasamDeepika/FlyWeightPattern
Flyweight,flyweight, Flyweight pattern described: https://cararuseugeniu.blogspot.co.uk/p/design-patterns-in-images.html,0,0,2016,2016,0,https://github.com/ecararus/flyweight
Flyweight,DesignPatterns.FlyWeightExercise,,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.FlyWeightExercise
Flyweight,DesignPatterns-Structural-FlyWeight,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Structural-FlyWeight
Flyweight,flyweight-factory,Two examples of Flyweight and Flyweight Factory design patterns in Java and Python.,0,0,2021,2021,1,https://github.com/jvirico/flyweight-factory
Flyweight,flyweight-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Flyweight em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/flyweight-java
Flyweight,Flyweight-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Flyweight-Pattern
Flyweight,js-oop-structural-desing-patern-flyweight,Example of OOP Flyweight (Structural) Design Pattern in JS,0,0,2019,2019,1,https://github.com/edwards33/js-oop-structural-desing-patern-flyweight
Flyweight,aquarium,This is my aquarium test project. Design pattern == flyweight,0,0,2018,2018,1,https://github.com/samnilsson/aquarium
Flyweight,Software-Design-Project,"Software design patterns with java, implement different design patterns like Iterator, Strategy, flyweight and singleton",0,0,2022,2022,1,https://github.com/Soroyesodiq/Software-Design-Project
Flyweight,FlyweightText,Displaying the memory that can be saved by using the flyweight design pattern when dealing with text and fonts.,0,0,2023,2023,1,https://github.com/EvanMikesell/FlyweightText
Flyweight,design-patterns-flyweight,Demo for flyweight pattern in JS,0,0,2020,2020,1,https://github.com/orjwan98/design-patterns-flyweight
Flyweight,design-patterns-flyweight,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-flyweight
Flyweight,design-patterns-flyweight,,0,0,2022,2022,1,https://github.com/RoniDeringer/design-patterns-flyweight
Flyweight,design-patterns-flyweight,,0,0,2022,2022,1,https://github.com/patrickAbarbosa/design-patterns-flyweight
Flyweight,flyweight-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/flyweight-design-patterns
Flyweight,Flyweight-Design-Pattern,A sample project to learn a implementation of Flyweight Design Pattern in Unity.,0,0,2021,2021,1,https://github.com/Gattai1996/Flyweight-Design-Pattern
Flyweight,DesignPatterns-3,"Save data in document (characters, font and font size) using Flyweight pattern",0,0,2014,2014,0,https://github.com/PayalGodse/DesignPatterns-3
Flyweight,Flyweight-Design-Patterns,,0,0,2024,2024,1,https://github.com/kalana250/Flyweight-Design-Patterns
Flyweight,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Flyweight,design_pattern_flyweight,"Develop a system that uses the pattern given in class. ""Flyweight"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_flyweight
Flyweight,Design-Patterns-on-Unity,"Singleton, Object Pooling, Flyweight and Observer Design Patterns on Unity",0,0,2022,2022,1,https://github.com/thrcnkndmr/Design-Patterns-on-Unity
Flyweight,Structural-Design-Patterns,Bridge and Flyweight Design Patterns - Object Oriented Analysis and Design,0,0,2017,2017,1,https://github.com/ashwath30/Structural-Design-Patterns
Flyweight,flyweight-structural-pattern-ex7-PDC-,"Implementation of the flyweight structural design pattern, exercise 7 td2 PDC",0,0,2017,2017,1,https://github.com/tarekbazine/flyweight-structural-pattern-ex7-PDC-
Flyweight,iGamingPaymentProcessing,iGaming Payment Processing prototype architecture by using Flyweight design pattern,0,0,2020,2022,1,https://github.com/VanchoDimitrov/iGamingPaymentProcessing
Flyweight,dejavu,Template based map editor adhering to the flyweight design pattern.,0,0,2022,2024,1,https://github.com/jbogs/dejavu
Flyweight,strategy_flyweight_demo,Groovy Rest API with Strategy and Flyweight.  A great combination of structural design patterns.,0,0,2019,2020,1,https://github.com/barrosodegas/strategy_flyweight_demo
Flyweight,design-patterns_java,"Exercises in patterns - DAO, FlyWeight, Observer (Pull & Push)",0,0,2018,2020,1,https://github.com/BijuAle/design-patterns_java
Flyweight,facade-flyweight-design-patterns,,0,0,2020,2020,1,https://github.com/kubradurus/facade-flyweight-design-patterns
Flyweight,DesignPatternsSnake,"Snake game developed using multiple Design Patterns like Observer, Flyweight, Command, Singleton, Servant, Factory, State...",0,0,2022,2023,1,https://github.com/Juggler98/DesignPatternsSnake
Flyweight,DesignPatternsProj1,"A project meant to showcase the following design patterns: Iterator, Aggregate, Strategy and Flyweight",0,0,2023,2023,1,https://github.com/Clayton-Pajot/DesignPatternsProj1
Flyweight,BmpImageResizer,.bmp image resizer algorithm written on c++. Design pattern used: Flyweight,0,0,2024,2024,1,https://github.com/MikeV182/BmpImageResizer
Flyweight,JobFinder,playing with flyweight and proxy design patterns to find a job,0,0,2023,2023,1,https://github.com/khalilmissaoui/JobFinder
Flyweight,java_design_patterns_flyweight_pattern,java设计模式_享元模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_flyweight_pattern
Flyweight,designPatterns,"Atividade de sobre Padrões de projetos 05/07/2022. Foi feita uma apresentação sobre três métodos: FlyWeight, Chain of Resposibility e Interpreter.",0,0,2022,2022,0,https://github.com/johnnyAraujo11/designPatterns
Flyweight,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Flyweight,Design-Patterns-facade-and-flyweight-1-,,0,0,2024,2024,1,https://github.com/Abod550/Design-Patterns-facade-and-flyweight-1-
Flyweight,Design-Patterns-facade-and-flyweight-2-,,0,0,2024,2024,1,https://github.com/Abod550/Design-Patterns-facade-and-flyweight-2-
Flyweight,Calculator,"C++ Calculator utilizing the Command, Abstract Factory, Flyweight, and Wrapper Façade design patterns",0,0,2022,2022,1,https://github.com/kylemblack/Calculator
Flyweight,SRE_DesignPattern,"Strategy,Proxy,Iterator,Bridge,Sequence of Responsibility,FlyWeight Design Patterns implemented in c#",0,0,2022,2022,1,https://github.com/UsmannArshad/SRE_DesignPattern
Flyweight,Chukwukaodinaka-Burger-Shack-Design_Patterns_In_Use,"Java Project making use of design patterns such as FlyWeight, Proxy and Adapter",0,0,2020,2020,1,https://github.com/Chukwukaodinaka/Chukwukaodinaka-Burger-Shack-Design_Patterns_In_Use
Flyweight,structural-design-patterns,"Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост (Bridge), Легковес (Flyweight), Фасад (Facade)",0,0,2020,2020,1,https://github.com/ann-vicheva/structural-design-patterns
Flyweight,Burger-Shack_design_patterns_in_use,"Simple Java Project for multi-threading and design patterns like flyweight, proxy, adapter",0,0,2020,2020,1,https://github.com/rafall404/Burger-Shack_design_patterns_in_use
Flyweight,Design-Patterns,"Several small java programs experimenting with design patterns. The design patterns used are the Command, Prototype, Observer, Flyweight, State, and Singleton patterns.",0,0,2019,2019,1,https://github.com/BenDeVries856/Design-Patterns
Flyweight,flyweight,Design pattern estrutural (gof) Flyweight para colocar mais objetos na quantidade de RAM disponível ao compartilhar partes comuns de estado entre os múltiplos objetos ao invés de manter todos os dados em cada objeto,0,0,2021,2021,1,https://github.com/Jhow-R/flyweight
Flyweight,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Flyweight,flyweight-design-pattern,"Usando Flyweight Design Pattern para minimizar o uso de memória ou custo computacional, compartilhando o máximo possível de dados com objetos similares usando C#",0,0,2024,2024,1,https://github.com/jfs-dev/flyweight-design-pattern
Flyweight,design_pattern,"Examples of some of the standard design patterns- factory, builder, singleton, decorator, observer, flyweight.",0,0,2020,2022,1,https://github.com/mayank4519/design_pattern
Flyweight,BugWeight,"2D Vampire Survivors copy, made with the use of object oriented design pattern flyWeight.",0,0,2024,2025,1,https://github.com/ValdemarPospisil/BugWeight
Flyweight,java-structural-design-patterns,"Java implementations of various structural design patterns, including Adapter, Composite, Decorator, Facade, Flyweight, and Proxy.",0,0,2025,2025,1,https://github.com/HajiraGul/java-structural-design-patterns
Flyweight,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Flyweight,piyurisahu-Flyweight-Design-Pattern,Definition:- Flyweignt Design patter is a type of structural design pattern which enables to decrease number of object creation thus improve performance of the program.,0,0,2020,2020,1,https://github.com/piyurisahu/piyurisahu-Flyweight-Design-Pattern
Flyweight,design-patterns-library3,"Aula sobre Design Patterns: Projeto com Fluent interfaces, Command pattern, Double dispatch pattern, Facade e Flyweight",0,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library3
Flyweight,FlyWeight-Text-Editor,It is structural design pattern. We can group all Intrinsic objects in 1 class. For Extrinsic objects create interface and pass these items as a method parameter.,0,0,2023,2023,1,https://github.com/tejasshaha/FlyWeight-Text-Editor
Flyweight,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Flyweight,FlyWeight-Robots-Creation,It is structural design pattern. We can group all Intrinsic objects in 1 class. For Extrinsic objects create interface and pass these items as a method parameter.,0,0,2023,2023,1,https://github.com/tejasshaha/FlyWeight-Robots-Creation
Flyweight,Go_Flyweight_Pattern,A Go project demonstrating the Flyweight pattern with a focus on minimizing memory usage by sharing data among similar objects. This repository showcases best practices in design patterns and unit testing.,0,0,2024,2024,1,https://github.com/arthurfp/Go_Flyweight_Pattern
Flyweight,SP,"Design Patterns in Java - so long here are Composite, Flyweight, Proxy, Strategy, Iterator, Visitor and State",0,0,2017,2017,2,https://github.com/cpetrescu96/SP
Flyweight,DesignPatterns,Most common design patterns in software architecture.,0,0,2023,2024,1,https://github.com/staivanov/DesignPatterns
Flyweight,Structural-DesignPattern-Swift,"This Repository includes structural design pattern in swift which includes Adapter , Bridge , Composite , Decorator , Facade , Flyweight & Proxy .",0,0,2020,2023,2,https://github.com/dvvaliya369/Structural-DesignPattern-Swift
Flyweight,awesomeshop_api-restful_dps-flyweight_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPS (Design Pattern Strutuctural) Flyweight, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dps-flyweight_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Flyweight,Design-Patterns,"This is a game I made in Unity using C# to demonstrate my ability to use design patterns practically. The patterns I use are State, Singleton, Flyweight, Observer, and Simple Factory. ",0,0,2023,2023,1,https://github.com/Dames421/Design-Patterns
Flyweight,flyweight,"Simple project demonstrating the flyweight design pattern. For this one, I created a Game Class that has multiple assets and textures, textures can be used in multiple assets.If 2 assets uses the same texture, intead of creating 2 texture objets, only one object for that texture is really necessary, so the texture object should be referenced in the assets without being duplicated and consume more memory.",0,0,2022,2022,1,https://github.com/Piazzi/flyweight
Flyweight,Intro-To-Flyweight-Design-Pattern,Flyweight is a structural design pattern that lets you fit more objects into the available amount of RAM by sharing common parts of state between multiple objects instead of keeping all of the data in each object.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Flyweight-Design-Pattern
Flyweight,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Flyweight,2D-fighting-game-C-,"Created a 2D 1vs1 fighter game written in C++. Used SDL library for rendering graphics. Used various design patterns to effectively structure the game code. Design patterns used were singleton, observer, factory, flyweight and stratergy. ",0,0,2017,2018,2,https://github.com/Ashwin-Parivallal/2D-fighting-game-C-
Flyweight,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Flyweight,KataDocumentEditor,"The Kata Document Editor is used to practice Flyweight design pattern. For the description of this kata in Chinese, please see http://blog.csdn.net/wubinben28/article/details/11829259",0,0,2013,2013,1,https://github.com/wubin28/KataDocumentEditor
Flyweight,Clown_Circus,"Java. A java game that implements various design patterns (pool, strategy, observer, flyweight etc..) where a clown holding two stick collects various shapes either built into the game or dynamically loaded.",0,0,2018,2018,1,https://github.com/aliaamohamedali/Clown_Circus
Flyweight,2D-game-using-OOP,"Creating a 2D game which uses C++ and STL (Standard template library). The software is data driven using XML. Incorporates various design patterns such as singleton, factory, composite and flyweight. Emphasis was on memory management and modular design.",0,0,2016,2016,0,https://github.com/anshumt/2D-game-using-OOP
Flyweight,IT-Equipment-Purchasing-Console-Application,"An application where user can make individual/mass IT equipment purchase (laptop, monitor plus randomly generated accessories) based on the type(gaming/office) that is chosen by the user. The project used various data structures(hashtable, dictionary, queue, list, array) and design patterns(abstract factory, factory, flyweight, singleton, facade).",0,0,2022,2022,1,https://github.com/simulbista/IT-Equipment-Purchasing-Console-Application
Flyweight,Java-Software-design-music-library,Developed a system for an audio library that stores Songs and Podcasts. Applied design principles for good encapsulation along with Flyweight -to create unique songs- and Singleton – to have a single Library - design patterns. Analyzed different use cases for the code to build adequate solutions. Wrote client code to identify design issues.,0,0,2022,2022,1,https://github.com/tianakk/Java-Software-design-music-library
Flyweight,Drawing-Tool,"The customers of a shop can check the writing style of a particular pen after selecting the required pen type and the required color code from the SE application. So, that the clients doesn't need to waster anymore ink to test the pen. This project was developed with the usage of Java SE technology along with the Flyweight design pattern in Java.",0,0,2023,2023,0,https://github.com/Sisuka2003/Drawing-Tool
Proxy,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Proxy,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Proxy,laravel-large-project,"An example project with detailed documentation created to show how to build large and maintanable projects in laravel/php and use design patterns like decorator, iterator, proxy etc.",180,35,2020,2025,4,https://github.com/stasyanko/laravel-large-project
Proxy,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Proxy,Python-Design-Patterns,Python Design Patterns,87,28,2017,2025,1,https://github.com/rajan2275/Python-Design-Patterns
Proxy,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Proxy,torrents,"Skip to content   Search… All gists Back to GitHub Sign in Sign up Instantly share code, notes, and snippets.  @giansalex giansalex/torrent-courses-download-list.md forked from M-Younus/torrent courses download-list Last active 2 days ago 15188  Code Revisions 15 Stars 151 Forks 88 <script src=""https://gist.github.com/giansalex/4cd3631e94433bbbd71bf07aedb33a7b.js""></script>     torrent-courses-download-list.md Torrent Courses List Download  http://kickass.to/infiniteskills-learning-jquery-mobile-working-files-t7967156.html http://kickass.to/lynda-bootstrap-3-advanced-web-development-2013-eng-t8167587.html http://kickass.to/lynda-css-advanced-typographic-techniques-t7928210.html http://kickass.to/lynda-html5-projects-interactive-charts-2013-eng-t8167670.html http://kickass.to/vtc-html5-css3-responsive-web-design-course-t7922533.html http://kickass.to/10gen-m101js-mongodb-for-node-js-developers-2013-eng-t8165205.html http://kickass.to/cbt-nuggets-amazon-web-services-aws-foundations-t7839734.html http://kickass.to/cbt-nuggets-apache-hadoop-t8027965.html http://kickass.to/cbt-nuggets-backtrack-and-kali-linux-t7677281.html http://kickass.to/cbt-nuggets-ccda-desgn-640-864-t8300917.html http://kickass.to/cbt-nuggets-ccna-wireless-iuwne-640-722-t8300389.html http://kickass.to/cbt-nuggets-cisco-ccna-labs-cisco-for-the-real-world-bonus-t6154766.html http://kickass.to/cbt-nuggets-cisco-ccnp-security-firewall-v2-0-642-618-azazredhat-t6955696.html http://kickass.to/cbt-nuggets-cisco-ccnp-security-secure-642-637-azazredhat-t6955710.html http://kickass.to/cbt-nuggets-comptia-network-videos-2010-gurufuel-t4648514.html http://kickass.to/cbt-nuggets-definitive-guide-to-working-with-gns3-by-keith-bar-t8301349.html http://kickass.to/cbt-nuggets-ec-council-certified-ethical-hacker-v7-0-t6801120.html http://kickass.to/cbt-nuggets-exam-walkthrough-cisco-icnd1ccent-100-101-t8516719.html http://kickass.to/cbt-nuggets-exam-walkthrough-cisco-icnd2ccna-200-101-t8524803.html http://kickass.to/cbt-nuggets-linux-in-the-real-world-with-shawn-powers-t7718107.html http://kickass.to/cbt-nuggets-linux-series-video-tutorial-t485320.html http://kickass.to/cbt-nuggets-lpi-linux-lpic-1-101-and-comptia-linux-t8031864.html http://kickass.to/cbt-nuggets-lpi-linux-lpic-1-102-and-comptia-linux-t8031871.html http://kickass.to/cbt-nuggets-mastering-vmware-view-5-and-preparing-for-the-vcp510-dt-exam-t8301829.html http://kickass.to/cbt-nuggets-vmware-virtualization-vcp-vsphere-5-t8300512.html http://kickass.to/cbt-nuggets-wireshark-with-keith-barker-t8040855.html http://kickass.to/comptia-network-n10-005-collection-t8319928.html http://kickass.to/developing-in-html5-with-javascript-and-css3-jump-start-t8277565.html http://kickass.to/eli-the-computer-guy-linux-t8647714.html http://kickass.to/foundations-of-programming-test-driven-development-t7522376.html http://kickass.to/infiniteskills-advanced-html5-programming-t7463355.html http://kickass.to/infiniteskills-cisco-ccna-certification-bundle-2013-t7645010.html http://kickass.to/infiniteskills-css3-transformations-and-animations-t7930047.html http://kickass.to/infiniteskills-learning-javascript-programming-t7625039.html http://kickass.to/infiniteskills-learning-python-programming-t7107001.html http://kickass.to/infiniteskills-learning-regular-expressions-t8028765.html http://kickass.to/infiniteskills-learning-whitehat-hacking-and-penetration-testing-t8303725.html http://kickass.to/infiniteskills-microsoft-windows-server-2012-certification-training-exam-70-410-t7379360.html http://kickass.to/infiniteskills-php-security-t8046511.html http://kickass.to/learning-vmware-esxi-and-vsphere-5-1-administration-training-t8030885.html http://kickass.to/linuxcbt-basic-security-edition-d3x-t7650913.html http://kickass.to/linuxcbt-config-mgmt-edition-d3x-t7650929.html http://kickass.to/linuxcbthttpdxil-edition-d3x-t7653897.html http://kickass.to/linuxcbt-vbox-edition-d3x-t7653916.html http://kickass.to/linuxcbt-webscan-edition-d3x-t7653922.html http://kickass.to/linuxcbt-winpython-edition-d3x-t7653942.html http://kickass.to/linuxcbt-xenvm-edition-d3x-t7653948.html http://kickass.to/lynda-com-foundations-of-programming-code-efficiency-t8604312.html http://kickass.to/lynda-com-foundations-of-programming-databases-t8596357.html http://kickass.to/lynda-com-foundations-of-programming-design-patterns-t8692867.html http://kickass.to/lynda-com-foundations-of-programming-fundamentals-t7600288.html http://kickass.to/lynda-com-foundations-of-programming-web-services-including-exercise-files-torrenters-t7797117.html http://kickass.to/lynda-com-ruby-on-rails-4-essential-training-dec-2013-t8438392.html http://kickass.to/lynda-foundations-of-programming-refactoring-code-t7524343.html http://kickass.to/lynda-foundations-of-programming-software-quality-assurance-sum1-here-silverrg-t8043799.html http://kickass.to/lynda-javascript-events-t7893809.html http://kickass.to/lynda-leading-with-emotional-intelligence-t8157240.html http://kickass.to/lynda-management-tips-t8154761.html http://kickass.to/mysql-database-tutorials-by-bucky-thenewboston-org-1-33-t8224550.html http://kickass.to/packtpub-advanced-penetration-testing-for-highly-secured-environments-t8300620.html http://kickass.to/pluralsight-mysql-query-optimization-and-performance-tuning-with-pinal-dave-t8553369.html http://kickass.to/pluralsight-relational-database-design-t8551479.html http://kickass.to/ruby-tutorial-bucky-totally-for-beginner-t8699509.html http://kickass.to/trainsignal-vmware-vcloud-director-5-1-essentials-t7495660.html http://kickass.to/trainsignal-vmware-vsphere-optimize-and-scale-vcap5-dca-t7495659.html http://kickass.to/trainsignal-vmware-workstation-9-for-the-it-admin-t7495658.html http://kickass.to/tutsplus-advanced-command-line-techniques-t7632228.html http://kickass.to/tutsplus-advanced-javascript-fundamentals-t6739742.html http://kickass.to/tutsplus-agile-design-patterns-2012-t6992118.html http://kickass.to/tutsplus-cleaner-code-with-coffeescript-t6741625.html http://kickass.to/tutsplus-detecting-code-smells-t8128341.html http://kickass.to/tutsplus-firebug-white-to-black-belt-v413hav-t7154501.html http://kickass.to/tutsplus-foundational-flask-creating-your-own-static-blog-generator-t8356996.html http://kickass.to/tutsplus-freelance-bootcamp-t6832678.html http://kickass.to/tutsplus-premium-e-book-mega-pack-v413hav-t7178526.html http://kickass.to/tutsplus-pro-workflow-for-web-designers-t6854268.html http://kickass.to/tutsplus-riding-ruby-on-rails-t6728201.html http://kickass.to/tutsplus-sql-essentials-t6746851.html http://kickass.to/tutsplus-tools-of-the-modern-web-developer-t8107617.html http://kickass.to/tutsplus-video-fundamentals-t6752217.html http://kickass.to/ine-ccna-wireless-640-722-iuwne-t8301376.html http://kickass.to/learn-metasploit-t8174472.html http://kickass.to/lynda-ruby-on-rails-essential-training-t7630711.html http://kickass.to/lynda-up-and-running-with-python-2013-eng-t8167709.html http://kickass.to/build-flat-responsive-website-from-scratch-complete-course-t8604527.html http://kickass.to/canvas-essentials-t8550909.html http://kickass.to/cbt-nuggets-70-331-microsoft-sharepoint-server-2013-x264-mkv-encod3r-t8595423.html http://kickass.to/cbt-nuggets-98-365-windows-server-admin-fundamentals-encod3r-t8613009.html http://kickass.to/cbt-nuggets-ccie-combo-pack-t271107.html http://kickass.to/cbt-nuggets-ccna-certification-videos-material-2010-gurufu-t4648321.html http://kickass.to/cbt-nuggets-juniper-networks-certified-specialist-security-jncis-sec-jn0-332-t8028083.html http://kickass.to/cehv7-cbt-nuggets-instructor-slides-tools-video-tools-study-guide-rar-t8705752.html http://kickass.to/cisco-ccna-initial-router-and-switch-configuration-t8648377.html http://kickass.to/cisco-ccna-security-aaa-and-ip-security-t8648378.html http://kickass.to/cisco-ccna-security-introduction-to-network-security-t8648381.html http://kickass.to/cisco-ccna-voice-configuration-and-advanced-features-t8648387.html http://kickass.to/cisco-ccna-voice-voice-overview-and-lab-setup-t8648386.html http://kickass.to/cisco-press-ccna-security-640-554-official-cert-guide-videos-t8648384.html http://kickass.to/coursera-neural-networks-and-machine-learning-geoffrey-hinton-university-of-toronto-t8568642.html http://kickass.to/eli-the-computer-guy-hacking-t8647661.html http://kickass.to/ine-ccie-data-center-storage-t8029396.html http://kickass.to/infinite-skills-learning-cloud-computing-with-amazon-web-services-2013-eng-t8703045.html http://kickass.to/infiniteskills-learning-tcp-ip-t8303739.html http://kickass.to/lynda-bootstrap-3-new-features-and-migration-t7958409.html http://kickass.to/lynda-bootstrap-adding-interactivity-to-your-site-t7519306.html http://kickass.to/lynda-com-jquery-ui-widgets-t8172743.html http://kickass.to/lynda-essential-training-t8157222.html http://kickass.to/lynda-foundation-incorporating-sass-and-compass-t7953037.html http://kickass.to/lynda-html5-projects-advanced-to-do-list-t7855578.html http://kickass.to/lynda-html5-projects-creating-a-responsive-presentation-2013-eng-t8167660.html http://kickass.to/lynda-online-presentations-with-reveal-js-2013-eng-t8167575.html http://kickass.to/lynda-teacher-tips-t8157202.html http://kickass.to/lynda-up-and-running-with-angularjs-t7982840.html http://kickass.to/lynda-up-and-running-with-bootstrap-3-t8011198.html http://kickass.to/lynda-up-and-running-with-cakephp-t7963854.html http://kickass.to/lynda-up-and-running-with-google-apps-script-t7917458.html http://kickass.to/lynda-up-and-running-with-php-codeigniter-t7849968.html http://kickass.to/lynda-web-semantics-t7899223.html http://kickass.to/lynda-wordpress-essential-training-2013-tutorial-t8270624.html http://kickass.to/pluralsight-aws-developer-fundamentals-2013-eng-t8703013.html http://kickass.to/pluralsight-bootstrap-3-t8214168.html http://kickass.to/pluralsight-cisco-ccie-routing-and-switching-implement-bgp-t8648391.html http://kickass.to/pluralsight-cisco-ccna-advanced-ethernet-and-file-management-t8051456.html http://kickass.to/pluralsight-cisco-ccna-security-firewalls-and-vpns-t8648393.html http://kickass.to/pluralsight-cisco-ccna-wan-technologies-learn-wide-area-network-wan-technologies-and-configuration-t7882351.html http://kickass.to/pluralsight-javascript-from-scratch-t7612372.html http://kickass.to/pluralsight-sublime-text-3-from-scratch-2013-eng-t8153034.html http://kickass.to/ten-ton-wordpress-mastery-video-t8452016.html http://kickass.to/trainsignal-microsoft-network-monitoring-t8028791.html http://kickass.to/tuts-plus-2013-bdd-in-rails-psiclone-t8474590.html http://kickass.to/tutsplus-advanced-css3-animations-t7791566.html http://kickass.to/tutsplus-an-introduction-to-node-js-t6744596.html http://kickass.to/tutsplus-better-statistics-with-google-charts-t7983386.html http://kickass.to/tutsplus-bootstrap-for-web-design-t8210956.html http://kickass.to/tutsplus-com-advanced-ui-techniques-2013-t7072722.html http://kickass.to/tutsplus-com-build-a-cms-in-codeigniter-2013-t7072644.html http://kickass.to/tutsplus-com-learning-mongodb-2013-t7072653.html http://kickass.to/tutsplus-computer-networks-distilled-v413hav-t7630795.html http://kickass.to/tutsplus-css-3d-essentials-t8027191.html http://kickass.to/tutsplus-css-noob-to-ninja-v413hav-t7475010.html http://kickass.to/tutsplus-css-tips-and-tricks-t8292119.html http://kickass.to/tutsplus-css3-essentials-t6608214.html http://kickass.to/tutsplus-css3-typography-techniques-t7882076.html http://kickass.to/tutsplus-design-patterns-in-ruby-t8354740.html http://kickass.to/tutsplus-fundamentals-of-design-t6645691.html http://kickass.to/tutsplus-fundamentals-of-print-design-t6667261.html http://kickass.to/tutsplus-fundamentals-of-ux-design-t6710443.html http://kickass.to/tutsplus-html-kickstart-essentials-t7969388.html http://kickass.to/tutsplus-html-tips-and-tricks-t8224648.html http://kickass.to/tutsplus-introduction-to-web-typography-t6662386.html http://kickass.to/tutsplus-javascript-fundamentals-101-t6738976.html http://kickass.to/tutsplus-jquery-ui-101-the-essentials-2013-eng-t8165125.html http://kickass.to/tutsplus-jquery-ui-101-the-essentials-t7791579.html http://kickass.to/tutsplus-jquery-ui-201-beyond-the-basics-t7791583.html http://kickass.to/tutsplus-jquery-ui-301-the-widget-factory-2013-eng-t8165109.html http://kickass.to/tutsplus-jquery-ui-301-the-widget-factory-working-files-2013-eng-t8180547.html http://kickass.to/tutsplus-laravel-essentials-t6722386.html http://kickass.to/tutsplus-logo-design-fundamentals-with-gary-simon-swatiate-t7867377.html http://kickass.to/tutsplus-mastering-corporate-design-v413hav-t7586047.html http://kickass.to/tutsplus-mastering-flat-design-v413hav-t7781777.html http://kickass.to/tutsplus-mastering-retro-web-design-v413hav-t7343186.html http://kickass.to/tutsplus-object-oriented-javascript-t6863065.html http://kickass.to/tutsplus-perfect-workflow-in-sublime-text-2-t6794850.html http://kickass.to/tutsplus-php-fundamentals-t6671312.html http://kickass.to/tutsplus-php-security-pitfalls-t7835091.html http://kickass.to/tutsplus-relational-databases-t8023530.html http://kickass.to/tutsplus-responsive-web-design-for-beginners-v413hav-t7385876.html http://kickass.to/tutsplus-responsive-web-design-techniques-t8103476.html http://kickass.to/tutsplus-responsive-web-design-with-foundation-t8103477.html http://kickass.to/tutsplus-simple-development-with-jquery-mobile-t6735499.html http://kickass.to/tutsplus-solid-design-patterns-t8208974.html http://kickass.to/tutsplus-test-driven-php-in-action-t6851704.html http://kickass.to/tutsplus-testing-tricks-for-php-and-laravel-developers-t7844807.html http://kickass.to/tutsplus-web-form-design-and-development-t8020800.html http://kickass.to/tutsplus-wordpress-plugin-development-essentials-t6615050.html http://kickass.to/udemy-build-an-instantly-updating-dynamic-website-with-jquery-ajax-t8415746.html http://kickass.to/udemy-psd-to-html5-css3-hand-code-a-beautiful-website-in-4-hours-t7740752.html http://kickass.to/video2brain-drupal-power-workshop-t6811365.html http://kickass.to/video2brain-exploring-css-positioning-t6683727.html http://kickass.to/video2brain-getting-started-with-joomla-t6600909.html http://kickass.to/video2brain-html5-for-beginners-learn-by-video-t6686185.html http://kickass.to/video2brain-html5-power-workshop-t6689166.html http://kickass.to/video2brain-php-5-3-advanced-web-application-programming-t6681560.html http://kickass.to/vtc-mysql-5-development-part-1-of-2-t7502575.html http://kickass.to/vtc-mysql-5-development-part-2-of-2-t7502576.html  https://thepiratebay.se/torrent/6113010/Linux_CBT_Scripting_BASH__PERL__PYTHON__PHP https://thepiratebay.se/torrent/7667241/CBT.Nuggets.Python.Programming.Python.Language-PLATO https://thepiratebay.se/torrent/8608894/InfiniteSkills_-_Web_Programming_With_Python https://thepiratebay.se/torrent/7838122/Lynda.com_-_Python_3_Essential_Training https://thepiratebay.se/torrent/7837732/python_book_collection https://thepiratebay.se/torrent/9549614/Pluralsight.com_-_Python_Fundamentals https://thepiratebay.se/torrent/5134755/LiveLessons.Python.Fundamentals.DVDR-HELL https://thepiratebay.se/torrent/7112525/The_New_Boston_-_Python_Programming_Tutorials http://kickass.to/lynda-up-and-running-with-python-2013-eng-t8167709.html  http://www.seedpeer.me/details/5730405/CBT-Nuggets---COMPTIA-SECURITY-SY0-201-WITH-SY0-301,-JK0-018-UPDATES.html http://www.seedpeer.me/details/6411686/CBT.Nuggets----IPv6.html http://www.seedpeer.me/details/6421814/CBT-Nuggets---Ubuntu.html http://www.seedpeer.me/details/6107414/LinuxCBT.Awk.Sed.Edition.html http://www.seedpeer.me/details/6107522/LinuxCBT-BASH-II-Edition-d3x.html http://www.seedpeer.me/details/4799869/LinuxCBT---Berkeley-Packet-Filters-BPF-Edition.html http://www.seedpeer.me/details/6881816/LinuxCBT--HTTPD-Edition.html http://www.seedpeer.me/details/6559038/LinuxCBT-Key-Files-edition.html http://www.seedpeer.me/details/6107600/LinuxCBT.MemCacheD.Edition-d3x.html http://www.seedpeer.me/details/5870507/LinuxCBT-Monitoring-Edition-feat-Nagios.html http://www.seedpeer.me/details/6107677/LinuxCBT-NIDS-Edition-d3x.html http://www.seedpeer.me/details/5925487/LinuxCBT-OpenLDAP-Edition.html http://www.seedpeer.me/details/6107558/LinuxCBT.OpenPGP.Edition-d3x.html http://www.seedpeer.me/details/6107692/LinuxCBT-OpenSSHv2-Edition-d3x.html http://www.seedpeer.me/details/6107699/LinuxCBT-PDNS-Edition-d3x.html http://www.seedpeer.me/details/2595080/LinuxCBT-Proxy-Edition-Feat-Squid-AG-torrent-[twistedtorrents2-com].html http://www.seedpeer.me/details/6110590/LinuxCBT-Samba-Edition-d3x.html http://www.seedpeer.me/details/6110595/LinuxCBT-SELinux-Edition-d3x.html http://www.seedpeer.me/details/4799871/LinuxCBT---SFTP-Edition.html http://www.seedpeer.me/details/6110602/LinuxCBT-SQLite-Edition-d3x.html http://www.seedpeer.me/details/5408265/LinuxCBT---Ubuntu-12.04-LTS.html http://www.seedpeer.me/details/4799857/LinuxCBT---UnixCBT-BSD8x-Edition-FreeBSD-8.2.html http://www.seedpeer.me/details/6110504/LinuxCBT.WinPerl.Edition-d3x.html http://www.seedpeer.me/details/6562861/Lynda-com---CMS-Fundamentals.html http://www.seedpeer.me/details/5247098/Lynda.com---Creating-an-Effective-Resume.html http://www.seedpeer.me/details/4989808/Lynda.com---CSS-with-LESS-and-SASS.html http://www.seedpeer.me/details/5340566/Lynda.com---Fundamentals-of-Software-Version-Control-Nov.-2012.html http://www.seedpeer.me/details/5569955/Lynda.com-GMail-For-Power-Users-V413HAV.html http://www.seedpeer.me/details/4631148/Lynda.com-Invaluable-Becoming-a-Leading-Authority.html http://www.seedpeer.me/details/4631108/Lynda.com-Invaluable-Building-Professional-Connections.html http://www.seedpeer.me/details/4623697/Lynda.com---Managing-a-Hosted-Website.html http://www.seedpeer.me/details/5236946/Lynda.com---PayPal-Essential-Training.html http://www.seedpeer.me/details/4596519/Lynda.com---PostgreSQL-9-With-PHP-Essential-Training-iRONiSO.html http://www.seedpeer.me/details/5016023/Lynda.com---Ruby-Essential-Training-with-Kevin-Skoglund.html http://www.seedpeer.me/details/4931186/Lynda.com---Using-Regular-Expressions.html http://www.seedpeer.me/details/6675342/Lynda---Git-Essential-Training.html http://www.seedpeer.me/details/6698556/Lynda---Leading-Change.html http://www.seedpeer.me/details/6973932/PluralSight-Refactoring-Fundamentals.html http://www.seedpeer.me/details/6661700/Tutsplus---Building-Ribbit-in-Rails.html http://www.seedpeer.me/details/6101172/Tutsplus---Cross-Platform-Browser-Testing-V413HAV.html http://www.seedpeer.me/details/5266314/TutsPlus---Git-Essentials.html http://www.seedpeer.me/details/4848412/TutsPlus---How-to-Be-a-Terminal-Pro.html http://www.seedpeer.me/details/4848374/TutsPlus---How-To-Customize-Your-Terminal.html http://www.seedpeer.me/details/4848299/TutsPlus---Maintainable-CSS-With-Sass-and-Compass.html http://www.seedpeer.me/details/4856068/TutsPlus---Regular-Expressions---Up-and-Running.html http://www.seedpeer.me/details/4816386/TutsPlus---The-Fundamentals-of-Ruby.html http://www.seedpeer.me/details/4848281/TutsPlus---The-Ultimate-Guide-for-Learning-Mootools.html http://www.seedpeer.me/details/4935147/CBT-Nuggets---Intermediate-to-Advanced-Linux-Series.html http://www.seedpeer.me/details/6251428/CBT-Nuggets---IPv6gidbcn.html http://www.seedpeer.me/details/5124174/CBT-Nuggets---LINUX-SERIES.html http://www.seedpeer.me/details/2891954/LinuxCBT-Deb5x-Edition-DVD-YUM.html http://www.seedpeer.me/details/4799921/LinuxCBT---Enterprise-Linux-4-Edition.html http://www.seedpeer.me/details/6290791/LinuxCBT-Network-Intrusion-Detection-System.html http://www.seedpeer.me/details/6107569/LinuxCBT.PackCapAnal.Edition-d3x.html http://www.seedpeer.me/details/6107588/LinuxCBT.PAM.Edition-d3x.html http://www.seedpeer.me/details/6110616/LinuxCBT-Win-Awk-Sed-Edition-d3x.html http://www.seedpeer.me/details/6666824/Packtpub-BackTrack-5-Wireless-Penetration-Testing-[Video].html http://www.seedpeer.me/details/6668649/Packtpub-Getting-started-with-Apache-Solr-Search-Server-[Video].html http://www.seedpeer.me/details/6668652/Packtpub-Getting-Started-with-Citrix-XenApp-6.5-[Video].html http://www.seedpeer.me/details/6668669/Packtpub-Kali-Linux---Backtrack-Evolved-Assuring-Security-by-Penetration-Testing.html http://www.seedpeer.me/details/6415199/Pluralsight-com-Installing-and-Configuring-Apache-Web-Server-iNKiSO.html http://www.seedpeer.me/details/6271468/Pluralsight---MySQL-Indexing-for-Performance-2013.html http://www.seedpeer.me/details/6228283/Pluralsight---Web-Performance-Course.html http://www.seedpeer.me/details/6376899/TutsPlus---Documentation-in-Ruby.html http://www.seedpeer.me/details/5661723/CBT-Nuggets-&acirc;%EF%BF%BD%EF%BF%BD-Cisco-CCENT-CCNA-ICND1-100-101.html http://www.seedpeer.me/details/5825975/CBT-Nuggets-CCNA-200-101-mp4.html http://www.seedpeer.me/details/5513622/CBT-Nuggets---Cisco-CCNA-Security-640-554.html http://www.seedpeer.me/details/5890097/CBT-Nuggets---Citrix-XenApp-6.5.html http://www.seedpeer.me/details/6187994/CBT-Nuggets----CompTIA-A-220-801-&amp;-220-802-Update-2012-iso.html http://www.seedpeer.me/details/6353101/CBT-Nuggets---CompTIA-Security.rar.html http://www.seedpeer.me/details/5243830/CBT-Nuggets---Oracle-Certified-Professional-1Z0-053-OCP.html http://www.seedpeer.me/details/4935122/CBT-Nuggets---Oracle-Database-11g-DBA-1-1Z0-052.html http://www.seedpeer.me/details/7222524/CBT.Nuggets----Oracle.Database.11G.DBA.1Z0-053-EnCod3r.html http://www.seedpeer.me/details/4935128/CBT-Nuggets---Oracle-Database-11g-SQL-Fundamentals-1-1Z0-051.html http://www.seedpeer.me/details/5863952/CBTNuggets-VMware-View-5.iso.html http://www.seedpeer.me/details/6199576/CBT-Nuggets---Web-Development.html http://www.seedpeer.me/details/4825729/LinuxCBT---CentOS6x-Edition.html http://www.seedpeer.me/details/1520287/linuxCBT---DBMS-mysql-5-Training.html http://www.seedpeer.me/details/4799864/LinuxCBT---Deb6x-Edition.html http://www.seedpeer.me/details/4799881/LinuxCBT---Debian-Edition.html http://www.seedpeer.me/details/1548037/LINUXCBT-FEAT-SUSE-10-ENTERPRISE-EDITION-JGTiSO[www.thepeerhub.com].html http://www.seedpeer.me/details/6107551/LinuxCBT-KornShell-Edition-d3x.html http://www.seedpeer.me/details/4261635/Linuxcbt-Redhat-6-Enterprise-Tutorials.html http://www.seedpeer.me/details/1662106/LinuxCBT---RHEL5.html http://www.seedpeer.me/details/6110601/LinuxCBT-SLES-10-Edition-d3x.html http://www.seedpeer.me/details/4799923/LinuxCBT---SLES-11-Edition-SUSE-11-Enterprise.html http://www.seedpeer.me/details/6964916/Lynda---ASP.NET-MVC-4-Essential-Training.html http://www.seedpeer.me/details/7253647/Lynda---Building-Facebook-Applications-with-PHP-and-MySQL.html http://www.seedpeer.me/details/5552857/Lynda.com---Applied-Responsive-Design-Mar,-2013.html http://www.seedpeer.me/details/4657790/Lynda.com-Building-Facebook-Applications-with-HTML-and-JavaScript.html http://www.seedpeer.me/details/4986911/Lynda.com---C&amp;C-Essential-Training.html http://www.seedpeer.me/details/4504272/Lynda.com-Choosing-Using-Web-Fonts.html http://www.seedpeer.me/details/6554622/Lynda.com---Designing-Resume.html http://www.seedpeer.me/details/5332552/Lynda.com---Drupal-7-Advanced-Training---TestOrToast.html http://www.seedpeer.me/details/7051972/Lynda.com---Drupal-7--Creating-and-Editing-Custom-Themes---with-Chaz-Chumley[Isaac-9].html http://www.seedpeer.me/details/5565633/Lynda.com---JavaScript-and-JSON-Mar,-2013.html http://www.seedpeer.me/details/6664728/Lynda.com-JavaScript-for-Web-Designers[2013].html http://www.seedpeer.me/details/6664733/Lynda.com-Node.js-Essential-Training[2013].html http://www.seedpeer.me/details/4591597/Lynda.com---Practical-and-Effective-JavaScript.html http://www.seedpeer.me/details/5256920/Lynda.com-Responsive-Design-with-Joomla--Exercice-Files.html http://www.seedpeer.me/details/5374680/Lynda.com---Simplified-Drupal-Sites-with-Drush---TestOrToast.html http://www.seedpeer.me/details/4795822/Lynda.com---Unix-for-Mac-OS-X-Users.html http://www.seedpeer.me/details/6716808/[Lynda.com]-Up-and-Running-with-Amazon-Web-Services-[2013,-ENG].html http://www.seedpeer.me/details/4593746/Lynda.com-Web-Form-Design-Best-Practices.html http://www.seedpeer.me/details/4850397/Lynda---Create-Your-First-Online-Store-with-Drupal-Commerce.html http://www.seedpeer.me/details/4850389/Lynda---Drupal-7-:-Essential-Training.html http://www.seedpeer.me/details/4850540/Lynda---Drupal-7-New-Features.html http://www.seedpeer.me/details/4850393/Lynda---Drupal-7-:-Reporting-and-Visualizing-Data.html http://www.seedpeer.me/details/5996422/Lynda---Up-and-Running-with-Backbone.js.html http://www.seedpeer.me/details/6971211/Lynda---Up-and-Running-with-CakePHP.html http://www.seedpeer.me/details/6666828/Packtpub-Beginning-Yii-[Video].html http://www.seedpeer.me/details/6666832/Packtpub-Building-a-Website-with-Drupal-[Video].html http://www.seedpeer.me/details/6668107/Packtpub-Drupal-7-Module-Development-[Video].html http://www.seedpeer.me/details/6668679/Packtpub-Learning-Joomla-3-Extension-Development-[Video].html http://www.seedpeer.me/details/7101071/Pluralsight---AngularJS-Fundamentals-[OGNADROL].html http://www.seedpeer.me/details/7268422/[Pluralsight]-AWS-Developer-Fundamentals-[2013,-ENG].html http://www.seedpeer.me/details/6695354/Pluralsight---Beginning-HTML5-Game-Development-With-Quintus.html http://www.seedpeer.me/details/6370939/Pluralsight---Cisco-CCNA-WAN-Technologies---Learn-wide-area-network-WAN-technologies-and-configuration.html http://www.seedpeer.me/details/6383616/Pluralsight-Introduction-to-Spring-MVC2013.html http://www.seedpeer.me/details/6228297/Pluralsight---Introduction-to-the-Facebook-Graph-API.html http://www.seedpeer.me/details/6294391/Pluralsight---Optimizing-and-Managing-Distributed-Systems-on-AWS-2013.html http://www.seedpeer.me/details/6698563/[Pluralsight]-Sublime-Text-3-From-Scratch-[2013,-ENG].html http://www.seedpeer.me/details/5056370/Tutsplus---Advanced-Backbone-Patterns-and-Techniques-2012.html http://www.seedpeer.me/details/7233352/Tutsplus---Become-a-Professional-JavaScript-Developer-Basics.html http://www.seedpeer.me/details/4848277/TutsPlus---Build-Web-Apps-in-Node-and-Express.html http://www.seedpeer.me/details/5683153/Tutsplus---Catch-Up-with-Ruby-on-Rails-4.html http://www.seedpeer.me/details/4918947/TutsPlus---CodeIgniter-Essentials.html http://www.seedpeer.me/details/5069781/TutsPlus---Connected-to-the-Backbone.html http://www.seedpeer.me/details/5513056/Tutsplus---Designing-Professional-Resumes.html http://www.seedpeer.me/details/5706815/Tutsplus-Easier-JavaScript-Apps-with-AngularJS.html http://www.seedpeer.me/details/6462415/TutsPlus---Easier-JavaScript-with-TypeScript.html http://www.seedpeer.me/details/5868293/TutsPlus---Getting-Started-With-Windows-8-Development-Using-HTML,-CSS-&amp;-JavaScript-V413HAV.html http://www.seedpeer.me/details/6150521/TutsPlus-HTML5-Video-Essentials-PRODEV.html http://www.seedpeer.me/details/4841911/TutsPlus---JavaScript-Testing-With-Jasmine.html http://www.seedpeer.me/details/6593486/TutsPlus---Less-is-More.html http://www.seedpeer.me/details/6571637/TutsPlus---Modern-Testing-in-PHP-with-Codeception.html http://www.seedpeer.me/details/6095651/Tutsplus---Parallax-Scrolling-for-Web-Design.html http://www.seedpeer.me/details/6574591/TutsPlus---Say-Yo-to-Yeoman.html http://www.seedpeer.me/details/4811335/Tutsplus---Test-Driven-Development-in-Ruby.html http://www.seedpeer.me/details/6268980/TutsPlus-Test-Driven-Development-With-CoffeeScript-and-Jasmine.html http://www.seedpeer.me/details/6185755/TutsPlus---The-MVC-Mindser-Jeffery-Way---ICARUS.html http://www.seedpeer.me/details/5024493/TutsPlus---Venture-Into-Vim.html http://www.seedpeer.me/details/6286416/Tutsplus---Vim-for-Advanced-Users.html http://www.seedpeer.me/details/6585031/Tutsplus---WordPress-Hackers-Guide-to-the-Galaxy.html http://www.seedpeer.me/details/4848477/TutsPlus---Writing-Modular-JavaScript.html  @giansalex Owner Author giansalex commented on 26 Feb 2018 •  SOLID http://www.allitebooks.com/beginning-solid-principles-and-design-patterns-for-asp-net-developers/  @giansalex Owner Author giansalex commented on 7 Mar 2018 Udemy: AWS Arquitecto de Soluciones Certificado Asociado  https://mega.co.nz/#!ZzhGWSAL!wuthFca0SdJBjmaP5lFX0QF6PeMsrdclKFXlZL1Rsi4 Pass: gratismas.org  @giansalex Owner Author giansalex commented on 7 Mar 2018 Go lang Complete https://www.freetutorials.us/wp-content/uploads/2017/11/FreeTutorials.Us-Udemy-go-the-complete-developers-guide.torrent  @GCPBigData GCPBigData commented on 15 Jul 2018 go books https://drive.google.com/open?id=1d6OsFAn8kpHCXtw0bcoYuyHqrAdGZva0  @freisrael freisrael commented on 14 Aug 2018 giansalex thanks for sharing. I am looking for learning phython with Joe Marini. It would be great if you post it.  @FirstBoy1 FirstBoy1 commented on 25 May 2019 Can anyone provide this book ""Getting started with Spring Framework: covers Spring 5"" by "" J Sharma (Author), Ashish Sarin "". Thanks in advance  @okreka okreka commented on 31 May 2019 Can anyone provide ""Windows Presentation Foundation Masterclass"" course from Udemy. Thanks in advance  @singhaltanvi singhaltanvi commented on 8 Aug 2019 can anyone provide 'sedimentology and petroleum geology' course from Udemy. Thanks in advance.  @kumarsreenivas051 kumarsreenivas051 commented on 9 Sep 2019 Can anyone provide ""Programming languages A,B and C"" course from Coursera. Thanks in advance.  @BrunoMoreno BrunoMoreno commented on 11 Sep 2019 The link for the torrents in piratebay, now is .org to the correct url.  @sany2k8 sany2k8 commented on 24 Sep 2019 Can anyone add this The Complete Hands-On Course to Master Apache Airflow  @pharaoh1 pharaoh1 commented on 30 Sep 2019 can you pls add this course to your list https://www.udemy.com/course/advanced-python3/  @SushantDhote936 SushantDhote936 commented on 1 Oct 2019 Can you add Plural Sight CISSP  @allayGerald allayGerald commented on 1 Oct 2019 open directive for lynda courses: https://drive.google.com/drive/folders/1zQan1cq1ZnqXmueRF5IqKoOtpFxl6Y4G  @ezekielskottarathil ezekielskottarathil commented on 3 Oct 2019 can anyone provide 'sedimentology and petroleum geology' course from Udemy. Thanks in advance.  ""wrong place boy""  @pulkitd2699 pulkitd2699 commented on 8 Oct 2019 Does anyone has a link for 'Cyber security: Python and web applications' course? Thanks  @mohanrajrc mohanrajrc commented on 19 Oct 2019 •  Can anyone provide torrent file for Mastering React By Mosh Hamedani. Thanks https://codewithmosh.com/p/mastering-react  @evilprince2009 evilprince2009 commented on 27 Oct 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  @nunusandio nunusandio commented on 30 Oct 2019 Can anyone post torrent file for ASP.NET Authentication: The Big Picture https://app.pluralsight.com/library/courses/aspdotnet-authentication-big-picture/table-of-contents  @EslamElmadny EslamElmadny commented on 9 Dec 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  @Genius-K-SL Genius-K-SL commented on 14 Dec 2019 hay brother! do you have html5 game development with javascript course ?  @Genius-K-SL Genius-K-SL commented on 14 Dec 2019 This link is not working brother! http://www.seedpeer.me/details/4657790/Lynda.com-Building-Facebook-Applications-with-HTML-and-JavaScript.html  @smithtuka smithtuka commented on 20 Dec 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  @AbdOoSaed AbdOoSaed commented on 22 Dec 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff  @EslamElmadny EslamElmadny commented on 23 Dec 2019 •  Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  @jedi2610 jedi2610 commented on 27 Dec 2019 Can anyone provide me with Code with Mosh's Ultimate Java Mastery Series link? plis  @InnocentZaib InnocentZaib commented on 31 Dec 2019 Please provide the link of codewithmosh The ultimate data structures and algorithms Bundle the link is given below. Please give me the torrnet file or link to download https://codewithmosh.com/p/data-structures-algorithms  @edward-teixeira edward-teixeira commented on 1 Jan 2020 Please provide the link of codewithmosh The ultimate data structures and algorithms Bundle the link is given below. Please give me the torrnet file or link to download https://codewithmosh.com/p/data-structures-algorithms  Yea i'm looking for it too  @kaneyxx kaneyxx commented on 1 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  could you please share the part-1 & part-3?  @edward-teixeira edward-teixeira commented on 2 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  @ravisharmaa ravisharmaa commented on 7 Jan Please add this . https://www.letsbuildthatapp.com/course/AppStore-JSON-APIs  @WaleedAlrashed WaleedAlrashed commented on 13 Jan This one kindly. https://www.udemy.com/course/flutter-build-a-complex-android-and-ios-apps-using-firestore/  @Sopheakmorm Sopheakmorm commented on 19 Jan Anyone have this course: https://www.udemy.com/course/mcsa-web-application-practice-test70-480-70-483-70-486  @EslamElmadny EslamElmadny commented on 19 Jan Anyone have this course: https://www.udemy.com/course/mcsa-web-application-practice-test70-480-70-483-70-486  +1  @EslamElmadny EslamElmadny commented on 20 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  https://vminhsang.name.vn/category/it-courses/codewithmosh/ this link includes almost all mosh courses  @mohanrajrc mohanrajrc commented on 22 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  https://vminhsang.name.vn/category/it-courses/codewithmosh/ this link includes almost all mosh courses  Yes. Java mastery and Data Structures 1, 2, 3 are available in this site. free download.  @shihab122 shihab122 commented on 22 Jan Please give me the torrnet file or link to download The Ultimate Design Patterns  @EslamElmadny EslamElmadny commented on 22 Jan •  Please give me the torrnet file or link to download The Ultimate Design Patterns  Waiting for it also :D  @K-wachira K-wachira commented on 23 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  https://vminhsang.name.vn/category/it-courses/codewithmosh/ this link includes almost all mosh courses  Yes. Java mastery and Data Structures 1, 2, 3 are available in this site. free download.  You are a saviour .. Altho i feel bad i cant really buy the course... its really good  @msdyn95 msdyn95 commented 25 days ago •  Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  @K-wachira K-wachira commented 23 days ago This one kindly. https://www.udemy.com/course/flutter-build-a-complex-android-and-ios-apps-using-firestore/  Hey did you find this one?  @edward-teixeira edward-teixeira commented 22 days ago Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  Did you find those?  @msdyn95 msdyn95 commented 21 days ago Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  Did you find those?  unfortunately not.  @edward-teixeira edward-teixeira commented 20 days ago Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  Did you find those?  unfortunately not.  Found it !  https://vminhsang.name.vn/category/it-courses/codewithmosh/  @ZainA14 ZainA14 commented 16 days ago •  Can someone please link me to this mosh course for torrent or direct download link https://codewithmosh.com/p/the-ultimate-full-stack-net-developer-bundle  @khushiigupta khushiigupta commented 9 days ago Can any one please provide me link for jenkins so that I can learn as al as possible   to join this conversation on GitHub. Already have an account? Sign in to comment © 2020 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing API Training Blog About",61,0,2020,2025,0,https://github.com/swati1024/torrents
Proxy,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Proxy,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Proxy,MultithreadedWebserver,A multi-threaded proxy web server that uses factory design pattern to support different caching strategies and  server implementations.,31,0,2024,2024,1,https://github.com/omsurase/MultithreadedWebserver
Proxy,proxy_tools,Simple (hopefuly useful) Proxy (as in the GoF design pattern) implementation for Python ,29,4,2014,2025,1,https://github.com/jtushman/proxy_tools
Proxy,autoproxy,"Annotation Processing Library. Generates proxy class on top of interface/abstract class, that allows to intercept calls. Also known as a design pattern: proxy, delegate, interceptor.",20,3,2017,2025,4,https://github.com/OleksandrKucherenko/autoproxy
Proxy,Solidity-Design-Patterns,"A collection of best practices and design patterns for writing secure and efficient Solidity smart contracts. Covers upgradeability, proxy patterns, and gas optimization.",18,0,2025,2025,0,https://github.com/ViktorVL584/Solidity-Design-Patterns
Proxy,javadesignpatterns,Java Design Patterns. Factory Method Pattern Abstract Factory Pattern Singleton Pattern Prototype Pattern Builder Pattern Object Pool Pattern. Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern proxy Pattern,17,2,2021,2024,1,https://github.com/tmehta813/javadesignpatterns
Proxy,produce-by-path,"Produce By Path is a design pattern, which is used to dynamically produce values by using the path to which it is applied. This package helps us easily create and define producer instances.",15,1,2021,2025,1,https://github.com/Ruben-Arushanyan/produce-by-path
Proxy,DesignPatterns,Design Patterns using C++,14,3,2020,2023,1,https://github.com/jayavardhanravi/DesignPatterns
Proxy,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Proxy,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Proxy,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Proxy,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Proxy,Next.JS-14-Boilerplate,"Next.JS-14, Ant-design, Typescript, Server Side Multi-Language, Docker File, Styled Component with SSR config, Codegen, Atomic Design Pattern, Theme, BreakPoint for Mobile and Desktop, All Colors, Font, Utils, Proxy Server, Storybook, Cypress, Eslint, Husky, Prettier",6,0,2023,2024,1,https://github.com/metin-irtemek-jscoding/Next.JS-14-Boilerplate
Proxy,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Proxy,Design-Patterns-Dart,This repository contains sample code and explanations for various Object-Oriented Programming Design Patterns implemented in Dart language.,4,0,2023,2023,1,https://github.com/iampranabray/Design-Patterns-Dart
Proxy,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Proxy,go-user-api,"A RESTFul API build using Go to demonstrate basic CRUD, authentication, and authorization. Code organized using Clean Architecture and Proxy Design Pattern.",4,0,2022,2023,1,https://github.com/guntoroyk/go-user-api
Proxy,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Proxy,Proxy-Design-Pattern-Low-Level-Design-,Hey everyone here is the implementation of Proxy Design Pattern ,3,1,2023,2023,1,https://github.com/akshatsh0610/Proxy-Design-Pattern-Low-Level-Design-
Proxy,DesignPatterns.Proxy,Proxy Design Pattern,2,0,2023,2023,1,https://github.com/dFarkhod/DesignPatterns.Proxy
Proxy,designPattern,🧩 Java samples for a popular design pattern.,2,1,2023,2023,1,https://github.com/Haythamasalama/designPattern
Proxy,DesignPattern,"Design pattern ""Gang of Four"" : Proxy, Composite, Decorator, Strategy, Observer, Adapter, Builder, Factory, FactoryAbstract.",2,0,2021,2021,1,https://github.com/belaid1993/DesignPattern
Proxy,proxy-query,"With updates to Web APIs like .querySelector() and JavaScript syntax improvements, I felt that the core functionality of jQuery could now use native browser code - the only thing missing was the composite design pattern. Thus, Proxy Query was born.",2,0,2019,2023,1,https://github.com/bcdewitt/proxy-query
Proxy,Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF,"In this project; composite, iterator, proxy, template method and state design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2022,2022,1,https://github.com/kamilhan-karaismailoglu/Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF
Proxy,medical_clinic_system_SW,"A Java-based desktop application designed to manage patient records, doctor schedules, and appointments. This system utilizes multiple design patterns, including Singleton, Factory, Builder, Adapter, Proxy, and Prototype, ensuring scalability, maintainability, and code reusability.",2,0,2024,2025,1,https://github.com/mohamedmagdy2301/medical_clinic_system_SW
Proxy,design-pattern-proxy,"Today, I will discuss another structural design pattern - Proxy Design Pattern. Proxy means an object functioning as another object.",1,2,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-proxy
Proxy,Proxy,Proxy Design Pattern,1,0,2020,2021,1,https://github.com/BerkGrbzSoftEng/Proxy
Proxy,dp_proxy,Proxy design pattern example.,1,0,2016,2022,1,https://github.com/nick79/dp_proxy
Proxy,Dynamic-Proxy-With-Autofac,proxy design pattern demo,1,0,2023,2023,1,https://github.com/MBurakKesen/Dynamic-Proxy-With-Autofac
Proxy,Proxy,This is a sample for implementing Proxy design pattern,1,0,2024,2024,1,https://github.com/bluescreen1999/Proxy
Proxy,ProxyPattern,Example for Proxy Design Pattern in C++,1,0,2019,2019,1,https://github.com/hkg1512/ProxyPattern
Proxy,DesignPattern-Proxy,Example implementation of Proxy design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Proxy
Proxy,Proxy-Design-Pattern,An example for the Proxy Design Pattern,1,0,2013,2013,1,https://github.com/moztro/Proxy-Design-Pattern
Proxy,proxygen,Tracing Generator for that comply proxy design pattern,1,1,2021,2022,1,https://github.com/egon12/proxygen
Proxy,proxy-design-pattern,See example of proxy design pattern in go,1,0,2024,2024,1,https://github.com/bujosa/proxy-design-pattern
Proxy,proxy_design_pattern,Implementation of the proxy design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/proxy_design_pattern
Proxy,Ex7-Virtual-Proxy-and-Composite-Design-Pattern,05506230-Design Patterns In Object-Oriented Programming ,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex7-Virtual-Proxy-and-Composite-Design-Pattern
Proxy,Dynamic-Proxy-and-Reflection,Java dynamic proxy and reflection with strategy design pattern,1,0,2016,2016,0,https://github.com/hprem991/Dynamic-Proxy-and-Reflection
Proxy,DesignPatterns02,"Design Patterns -02 "" Padrões Estruturais - Técnicas de (Adpter, Decorator, Composite, Facade e Proxy)",1,0,2021,2021,1,https://github.com/marcello222/DesignPatterns02
Proxy,Protection-Proxy-Pattern,Example protection proxy pattern use for Hacettepe University BBM486 Design Patterns class.,1,0,2021,2022,1,https://github.com/panicwithme/Protection-Proxy-Pattern
Proxy,got-builder-proxy,Wrapper around GOT using builder design pattern with support for express proxy,1,0,2020,2020,2,https://github.com/josezone/got-builder-proxy
Proxy,proxyHeadFirstDesignPatterns,,1,0,2024,2025,1,https://github.com/xuruilong100/proxyHeadFirstDesignPatterns
Proxy,DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA,"JAVA project to design a Generic Library for Serializing and De-serializing Objects (Check-pointing Objects) using Dynamic Proxy, Java Reflection, and Strategy Pattern",1,0,2017,2020,1,https://github.com/shahnish009/DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA
Proxy,DecoratorPattern,"My take on Kotlin YouTube Design Patterns series, Decorator and Proxy",1,0,2022,2022,1,https://github.com/marenovakovic/DecoratorPattern
Proxy,Facebook-App-using-Design-Patterns,"Facebook app using 3 design patterns (cache Proxy, Factory Method, Builder)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-using-Design-Patterns
Proxy,DesignPatterns,"Structural Design Patterns in Java ( with some code examples ) :Adapter Design Pattern , Bridge Design Pattern  , Composite Pattern ,Proxy Pattern  ,Flyweight Pattern  ,Facade Pattern  ,Decorator Pattern .Creational Design Patterns : Singleton Pattern  ,Builder Pattern  ,Factory Method Pattern  ,AbstractFactory Pattern   ,Prototype Pattern",1,0,2020,2020,1,https://github.com/alina-olaru/DesignPatterns
Proxy,hibernate-proxy,How Hibernate load() method internally work's with proxy and javaassist library. Also about Proxy Design Pattern.,1,0,2020,2020,1,https://github.com/Abhishek-Talekar/hibernate-proxy
Proxy,patterns,"Design Patterns Sample (Creational[Builder, Factory Method,Singleton], Structural[Adapter, Facade, Proxy] )",1,0,2016,2023,1,https://github.com/asanchezyu/patterns
Proxy,design-patterns,"Mise en oeuvre des design patterns Adapter, Observer, State, Decorator, Proxy, Command et Factory",1,0,2017,2023,3,https://github.com/cdevy/design-patterns
Proxy,ProxyPattern,The Proxy Design Pattern provides a surrogate (act on behalf of another) or placeholder for another object to control access to it.,1,0,2023,2023,1,https://github.com/lechitho/ProxyPattern
Proxy,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Proxy,Xonix,"Java game using Model-view-controller, singleton, proxy, strategy and iterator Design Patterns",1,0,2015,2017,1,https://github.com/davidsaechao/Xonix
Proxy,Facebook-App-DP,"Facebook app using 6 design patterns (cache Proxy, Factory Method, Builder, Strategy, Observer, Decorator)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-DP
Proxy,design-patterns,"Demonstrates the creational, structural, and behavioral design patterns in C# and .NET 8",1,0,2023,2024,1,https://github.com/nurfarazi/design-patterns
Proxy,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Proxy,design-patterns-library2,"Sistema bibliotecário com padrões de projetos: Composite, Chain of responsibility, Decorator, Proxy, Static factory method e Singleton",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library2
Proxy,ExercicioProxy,"Exercício de Design Pattern envolvendo o padrão Proxy, esse exercício simula as operações que um usuário logado pode ter na sua conta corrente.",1,0,2025,2025,1,https://github.com/Tetzdesen/ExercicioProxy
Proxy,MicroService-Design-Patterns-use-case-Stock-Prices,"This repository contains a use-case of fetching Stock prices Microservice Architecture which is builded using Aggregator & Proxy & Chained & Scatter & Gather Design pattern & Async Microservice Design Patterns, more specifically these come under the category of Integration Patterns of Microservice Design Patterns",1,1,2021,2023,1,https://github.com/sam253narula/MicroService-Design-Patterns-use-case-Stock-Prices
Proxy,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Proxy,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Proxy,neoflex_patterns,"Assignment from the lecturer of the Neoflex training center on the topic of Design patterns (singleton, factory, proxy, adapter).",1,0,2021,2021,1,https://github.com/stasbaglaev/neoflex_patterns
Proxy,Intro-To-Proxy-Design-Pattern,"Proxy is a structural design pattern that lets you provide a substitute or placeholder for another object. A proxy controls access to the original object, allowing you to perform something either before or after the request gets through to the original object.",1,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Proxy-Design-Pattern
Proxy,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Proxy,World-Data-UI,"A user-interactive model which utilizes multiple design patterns, API generated data, and data-visual display through charts, graphs, and viewers. The UI includes a proxy-design login system and the main UI is designed with a Factory Method design pattern. For the data, our team streamed API-generated data into the UI with whitelisted data for error-tracking, creating a functioning World Data UI which displays user-specified data through user selected viewers.",1,0,2021,2022,1,https://github.com/oelsaye/World-Data-UI
Proxy,cs342-hw-4,"You will chose one of the following design patterns: Template Method, Proxy, Adapter or Abstract Factory. Using the Maven JavaFX Project template in the sample code section of our BB course page, you will write a JavaFX program that highlights the functionality of the design pattern you chose. This does not need to be a lot of code and the GUI does not need to be extensive. You can not simply copy and paste an example from the web. You must also include a single page describing how the design pattern works in your program and what the benefits and/or drawbacks of using it are. Format this page as a PDF.",1,0,2022,2023,1,https://github.com/GGsource/cs342-hw-4
Proxy,DesignPatterns-PhonePushNotification,Fake command line Phone push notification (Mostly to practice observer/factory/proxy design patterns),0,2,2015,2015,1,https://github.com/mkohlmann-he/DesignPatterns-PhonePushNotification
Proxy,Proxy,Structural Design Pattern in C# | Proxy Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Proxy
Proxy,proxy,Design Pattern Proxy,0,0,2020,2023,1,https://github.com/mydesignpatters/proxy
Proxy,Proxy,Proxy design pattern,0,0,2024,2024,1,https://github.com/OctavioCastillo/Proxy
Proxy,Proxy,Design pattern :: Proxy,0,0,2019,2019,1,https://github.com/onsaurav/Proxy
Proxy,Proxy,Design Patterns - Proxy,0,0,2020,2020,1,https://github.com/euygor/Proxy
Proxy,Proxy,proxy design pattern,0,0,2023,2023,1,https://github.com/Hamada-Ali/Proxy
Proxy,Proxy,Design Pattern Proxy,0,0,2022,2022,1,https://github.com/aliounemane2/Proxy
Proxy,proxy,Proxy Structural Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/proxy
Proxy,Proxy-Design-Pattern,Structural Design Patterns: Proxy Design Pattern ,0,0,2023,2025,1,https://github.com/samehesmael277/Proxy-Design-Pattern
Proxy,Proxy,Proxy design pattern Xamarin MVVM,0,0,2019,2019,1,https://github.com/XamarinCDS/Proxy
Proxy,Proxy,Proxy Structural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Proxy
Proxy,proxy,Library for Proxy Design Pattern,0,0,2024,2025,1,https://github.com/web-fu/proxy
Proxy,PatternProxy,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/PatternProxy
Proxy,padrao_proxy,Design Pattern,0,0,2019,2019,1,https://github.com/suzysouto/padrao_proxy
Proxy,DP_proxy,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_proxy
Proxy,proxy,Exemplo de Código - Design Pattern Proxy,0,0,2023,2023,1,https://github.com/vitorbalsanello/proxy
Proxy,proxydesign,Proxy Design Pattern ,0,0,2022,2022,1,https://github.com/jmuyimbwa/proxydesign
Proxy,training-task10,design patterns  | Proxy,0,0,2021,2021,1,https://github.com/maiqamaj/training-task10
Proxy,EgsTrab2,Design Pattern Proxy,0,0,2021,2021,1,https://github.com/livribeiro/EgsTrab2
Proxy,DPProxy,Proxy design pattern,0,0,2017,2017,1,https://github.com/chandrakantnitt/DPProxy
Proxy,proxy-pattern,Design patterns - Proxy.,0,0,2022,2022,1,https://github.com/m4t3u2/proxy-pattern
Proxy,ProxyDesignPattern,Working with design patterns,0,0,2019,2019,1,https://github.com/Dorlan25/ProxyDesignPattern
Proxy,OOD-Week-6,Proxy Design Pattern ,0,0,2020,2022,1,https://github.com/snquick/OOD-Week-6
Proxy,proxy-design-pattern,proxy-design-pattern,0,0,2023,2023,1,https://github.com/MabutoT/proxy-design-pattern
Proxy,vitual-proxy-design-patten,Proxy Design Pattern,0,0,2023,2023,1,https://github.com/MabutoT/vitual-proxy-design-patten
Proxy,Codigo-040---Magos-e-Torres,Design Pattern Proxy,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-040---Magos-e-Torres
Proxy,DesignPatterns_ProxyPrototype,Experimenting w/ Design Patterns,0,0,2020,2023,1,https://github.com/samodle/DesignPatterns_ProxyPrototype
Proxy,proxy,Simple project demonstrating the Proxy design pattern.,0,0,2022,2022,1,https://github.com/Piazzi/proxy
Proxy,reminder-whatsapp-proxy,Connector design pattern,0,0,2022,2022,1,https://github.com/SamuelDino/reminder-whatsapp-proxy
Proxy,Proxy,Exemplo de Design Pattern (Proxy) em Java.,0,0,2018,2018,1,https://github.com/Renan4783/Proxy
Proxy,Proxy,A design pattern Proxy in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Proxy
Proxy,EmployeeStore_ProxyDesignPattern,Proxy Design Pattern implementation,0,0,2021,2021,1,https://github.com/VaibhavBhapkar/EmployeeStore_ProxyDesignPattern
Proxy,ProxyPattern,Java Design Patterns - Proxy Pattern,0,0,2024,2024,1,https://github.com/ashishpatel007/ProxyPattern
Proxy,ProxyDesignPattern,LLD for Proxy Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/ProxyDesignPattern
Proxy,Proxy,toggle group of leds using Proxy design pattern,0,0,2023,2023,2,https://github.com/ZalmaMohamedd/Proxy
Proxy,proxy-pattern,Design pattern: Proxy pattern,0,0,2021,2021,1,https://github.com/TomSawyer404/proxy-pattern
Proxy,proxy-pattern,Java Design Patterns - proxy,0,0,2022,2022,1,https://github.com/kari-osk/proxy-pattern
Proxy,PatternProxy,Design Pattern Proxy Pattern,0,0,2019,2019,1,https://github.com/VinCleanCode/PatternProxy
Proxy,proxy-pattern,C# - Proxy design pattern.,0,0,2023,2023,1,https://github.com/flcristian/proxy-pattern
Proxy,Proxy-Design-Pattern,proxy design pattern implementation,0,0,2024,2024,1,https://github.com/Saher-debug/Proxy-Design-Pattern
Proxy,design-pattern-proxy,design pattern proxy sample,0,0,2023,2023,1,https://github.com/Jamshidiyan/design-pattern-proxy
Proxy,PaintPalleteProxy,"TDD, Proxy Design Pattern",0,0,2017,2017,1,https://github.com/zubra5/PaintPalleteProxy
Proxy,PadroesProjetoProxy,Studying Design Patterns - Proxy,0,0,2024,2024,1,https://github.com/ODAGAMMXIX/PadroesProjetoProxy
Proxy,DPProxy,Design Pattern Structural Proxy,0,0,2020,2020,1,https://github.com/panji140299/DPProxy
Proxy,DPProxy,Design Patterns Proxy Implementation,0,0,2022,2022,1,https://github.com/Medkaffouh/DPProxy
Proxy,wb-design-pattern-proxy,wb-design-pattern-proxy,0,0,2019,2019,1,https://github.com/yuebuqun123321/wb-design-pattern-proxy
Proxy,Design_Pattern_2,"Design_Pattern - Proxy, Decorate",0,0,2024,2024,1,https://github.com/Dongwoongkim/Design_Pattern_2
Proxy,CSharpDP_Structural_Proxy,Structural Proxy Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharpDP_Structural_Proxy
Proxy,crispy-guide,Studying Proxy design Pattern,0,0,2024,2024,1,https://github.com/ODAGAMMXIX/crispy-guide
Proxy,ProxyPattern,One of the Java design patterns,0,0,2016,2016,0,https://github.com/WY08271/ProxyPattern
Proxy,Proxy,Example of the Structural design pattern Proxy in Java.,0,0,2016,2016,1,https://github.com/levyoav/Proxy
Proxy,3-2-DesignPatterns-VirtualProxy,"Design Patterns in Object-Oriented Programming Seventh Tasks ""Proxy Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-VirtualProxy
Proxy,Design-Pattern,Design Pattern Sample,0,0,2017,2017,1,https://github.com/kevin5778/Design-Pattern
Proxy,ProxyDesignPattern,Basic implementation of Proxy design pattern ,0,0,2020,2020,1,https://github.com/GhlijyanVahagn/ProxyDesignPattern
Proxy,ProxyDesignPattern,explain proxy design pattern with example .,0,0,2023,2023,0,https://github.com/MDSUHAIL786/ProxyDesignPattern
Proxy,ProxyDesignPattern,a simple proxy design pattern example,0,0,2023,2023,1,https://github.com/iremKUTLUCA/ProxyDesignPattern
Proxy,Proxy-design,Prezentacija proxy design pattern-a,0,0,2017,2017,1,https://github.com/MarioKrcelic/Proxy-design
Proxy,Proxy-01,"Design Pattern, Proxy, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/Proxy-01
Proxy,java_proxy,the java proxy design pattern,0,0,2021,2021,0,https://github.com/igdnss/java_proxy
Proxy,TStack.Proxy,"Dynamic proxy library, proxy design pattern",0,0,2019,2019,1,https://github.com/ferhatcandas/TStack.Proxy
Proxy,designPatternProxy,exemple de design pattern proxy,0,0,2022,2022,1,https://github.com/Nzonbi/designPatternProxy
Proxy,Proxy-design-pattern,Prezentacija proxy design pattern-a,0,0,2017,2017,0,https://github.com/MarioKrcelic/Proxy-design-pattern
Proxy,Proxy_Design_Pattern,Contains the design pattern implementation,0,0,2021,2021,1,https://github.com/prantacse4/Proxy_Design_Pattern
Proxy,DesignPattern_Proxy,Java design pattern: proxy pattern,0,0,2013,2013,1,https://github.com/tomxuetoy/DesignPattern_Proxy
Proxy,Proxy-Design-Pattern,Simple Proxy Design Pattern Example,0,0,2018,2019,1,https://github.com/ibavli/Proxy-Design-Pattern
Proxy,Proxy-Design-Pattern,Demo for proxy Design pattern,0,0,2021,2021,1,https://github.com/rajan4study/Proxy-Design-Pattern
Proxy,proxy-pattern-example,Proxy Design Pattern java implementation,0,0,2019,2019,1,https://github.com/daggerok/proxy-pattern-example
Proxy,design-pattern-proxy,example of design pattern proxy,0,0,2022,2022,1,https://github.com/andonary/design-pattern-proxy
Proxy,design-pattern-proxy,Atividade sobre design pattern - proxy,0,0,2023,2023,1,https://github.com/guilhermeviso/design-pattern-proxy
Proxy,DesignPatterns_Proxy,Design Patterns: Proxy pattern sample. ,0,0,2017,2017,1,https://github.com/dyamaletdinova/DesignPatterns_Proxy
Proxy,Remote-Data-Java-dynamic-proxy,Use dynamic proxy design pattern ,0,0,2015,2015,1,https://github.com/aashay91/Remote-Data-Java-dynamic-proxy
Proxy,engComp.padroesDeProjeto.proxy,Proxy design pattern in /java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.proxy
Proxy,Design-Pattern,Strategy and Proxy Design Pattern,0,0,2022,2022,1,https://github.com/UsmannArshad/Design-Pattern
Proxy,Design-Pattern-Demo-Proxy-Pattern,Design Pattern Demo : Proxy Pattern,0,0,2019,2019,0,https://github.com/DavidJMartinProjects/Design-Pattern-Demo-Proxy-Pattern
Proxy,designptn,"The 23 design pattern, proxy...",0,0,2017,2017,0,https://github.com/xxzhky/designptn
Proxy,spring-core-advanced-2,"Design Pattern, Proxy(JDK, CGLIB)",0,0,2021,2022,1,https://github.com/Rio-Kyeong/spring-core-advanced-2
Proxy,FacadeAndProxyDesignPattern,Design Pattern study in .NET,0,0,2024,2024,1,https://github.com/kylegrabski/FacadeAndProxyDesignPattern
Proxy,ProxyDesignPatternTester,Esercizi di utilizzo del Proxy Design Pattern,0,0,2016,2016,1,https://github.com/falcopellegrino/ProxyDesignPatternTester
Proxy,ProxyDesignPatternExample,Proxy Design Pattern Example written in Java,0,0,2019,2020,1,https://github.com/Adamantia/ProxyDesignPatternExample
Proxy,api-design-patterns,Apigee API proxy design patterns.,0,0,2016,2019,2,https://github.com/kurtkanaskie/api-design-patterns
Proxy,pattern-proxy,Design pattern proxy implemented by java,0,0,2022,2022,1,https://github.com/Java-Design-Pattern/pattern-proxy
Proxy,proxy-pattern,A demo of Proxy Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/proxy-pattern
Proxy,DesignPatterns-Proxy,Atividade de Design Patterns sobre Proxy,0,0,2024,2024,1,https://github.com/MattRez/DesignPatterns-Proxy
Proxy,proxy-design-pattern,Project Proxy Design Pattern in Java,0,0,2017,2019,1,https://github.com/david-luk4s/proxy-design-pattern
Proxy,ecam_archi_proxy,ECAM: Work on proxy design pattern,0,0,2017,2017,1,https://github.com/remytms/ecam_archi_proxy
Proxy,design-pattern-proxy,A review on design pattern Proxy,0,0,2021,2021,1,https://github.com/marciodegan/design-pattern-proxy
Proxy,proxy-design-pattern,Initial release of proxy design pattern,0,0,2024,2024,1,https://github.com/hellloim/proxy-design-pattern
Proxy,ProxyDP,exemplo de uso para o design patterns proxy,0,0,2015,2015,1,https://github.com/sroczynski/ProxyDP
Proxy,proxy,Spring proxy project for design patterns in a lecture by Kim younghan,0,0,2023,2023,1,https://github.com/laughcryrepeat/proxy
Proxy,ProxyDP_Static,Simple project that implements static proxy design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/ProxyDP_Static
Proxy,ProxyDP_Dynamic,Simple project that implements dynamic proxy design pattern.,0,0,2020,2020,0,https://github.com/uros-veljkovic/ProxyDP_Dynamic
Proxy,php-design-patterns-proxy,PHP Design Patterns - Proxy Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-proxy
Proxy,proxy-directory-design-pattern,nodejs library proxy directory design pattern,0,0,2020,2020,1,https://github.com/Himenon/proxy-directory-design-pattern
Proxy,book-proxy-pattern-example,C# - Book proxy design pattern example,0,0,2023,2023,1,https://github.com/flcristian/book-proxy-pattern-example
Proxy,design-pattern,Design pattern,0,0,2021,2021,1,https://github.com/ThanhPhiNgo/design-pattern
Proxy,Proxy-Design-Pattern-ATM-Case,Proxy Design Pattern with ATM Case,0,0,2024,2024,1,https://github.com/juanSunitsuga/Proxy-Design-Pattern-ATM-Case
Proxy,proxy-demo,Python script demonstrating the Proxy design pattern.,0,0,2015,2015,0,https://github.com/moeabdol/proxy-demo
Proxy,proxy-example,An example of 'Proxy' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/proxy-example
Proxy,consoleProxy,Console with proxy design pattern in C,0,0,2017,2017,0,https://github.com/eliaskanelis/consoleProxy
Proxy,DesignPattern2-Assi2,"Using design patterns, proxy, template, prototype",0,0,2021,2021,1,https://github.com/soniafriesen/DesignPattern2-Assi2
Proxy,Seminario-POO,Design Patterns - Como funciona um Proxy,0,0,2022,2022,1,https://github.com/FilipeAbner/Seminario-POO
Proxy,designPatterns_proxyPattern,,0,0,2020,2020,1,https://github.com/SanjayaLH/designPatterns_proxyPattern
Proxy,DesignPattern,Design Pattern de Facade e Proxy,0,0,2025,2025,1,https://github.com/RafaelAlves98/DesignPattern
Proxy,DesignPattern-Proxy,A Simple Proxy design pattern in PHP,0,0,2020,2020,1,https://github.com/helmis123/DesignPattern-Proxy
Proxy,lab-08,Lab 8: The Proxy Design Pattern,0,1,2023,2024,1,https://github.com/cpit252/lab-08
Proxy,proxy-example2,An example of 'Proxy' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/proxy-example2
Proxy,Proxy_DesignPattern,Web example with Proxy as Design Pattern,0,0,2024,2024,1,https://github.com/Djtv1304/Proxy_DesignPattern
Proxy,design-pattern-proxy,GOF proxy structural design pattern simple example,0,0,2014,2014,1,https://github.com/a-cordier/design-pattern-proxy
Proxy,Proxy-Design-Pattern,Proxy Design Pattern code example (by geekific),0,0,2023,2023,1,https://github.com/Asyay86/Proxy-Design-Pattern
Proxy,proxy-design-pattern,Example implementation of the proxy design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/proxy-design-pattern
Proxy,ProxyDesignPattern,A simple Repo to illustrate the Proxy design pattern,0,0,2017,2017,1,https://github.com/Reidweb1/ProxyDesignPattern
Proxy,ProxyDesignPattern,This is an example of the Proxy Design Pattern.,0,0,2021,2021,1,https://github.com/aykutengin/ProxyDesignPattern
Proxy,ProxyPatternImages,https://www.tutorialspoint.com/design_pattern/proxy_pattern.htm,0,0,2021,2021,1,https://github.com/rominamenacho/ProxyPatternImages
Proxy,DesignPatterns,"Bridge, Flyweiht, Proxy",0,0,2020,2020,0,https://github.com/thomascanal/DesignPatterns
Proxy,dynamic-proxy,Proxy design pattern and Java's dynamic proxy,0,0,2019,2019,1,https://github.com/it-academy-pl/dynamic-proxy
Proxy,DesignPatterns.Proxy,Examples and exercises for the Proxy design pattern from: https://www.udemy.com/course/design-patterns-csharp-dotnet,0,0,2020,2020,1,https://github.com/WillReichl/DesignPatterns.Proxy
Proxy,Proxy-Design-Pattern-Java-,Implementation of Proxy Design Pattern In Java,0,0,2023,2023,1,https://github.com/eliblurr/Proxy-Design-Pattern-Java-
Proxy,Proxy-Strategy-DesignPattern,Proxy and Strategy Design Patterns in JAVA.,0,0,2016,2016,1,https://github.com/vishvas/Proxy-Strategy-DesignPattern
Proxy,CS-5800-proxy-assignment,Proxy design pattern assignment for CS-5800.,0,0,2023,2024,1,https://github.com/CristopherH95/CS-5800-proxy-assignment
Proxy,ZTP_4_Adapter_Proxy,Design Pattern - Structural patterns: Adapter and Proxy,0,0,2016,2016,0,https://github.com/Radekov/ZTP_4_Adapter_Proxy
Proxy,proxy,Proxy pattern described: https://cararuseugeniu.blogspot.co.uk/p/design-patterns-in-images.html,0,0,2016,2016,0,https://github.com/ecararus/proxy
Proxy,proxy_fibo,fibo calculations that utilizes a proxy design pattern,0,0,2016,2016,0,https://github.com/jessegzhang/proxy_fibo
Proxy,proxy_excercise,Just showing how the proxy design pattern works,0,0,2024,2024,1,https://github.com/pehgamarra/proxy_excercise
Proxy,Proxy_Pattern,small projects for practics with Proxy design pattern,0,0,2024,2024,1,https://github.com/Roman-Svyshch/Proxy_Pattern
Proxy,AbstractFactory-Proxy,Implementation of Abstract Factory and Proxy design patterns.,0,0,2019,2019,0,https://github.com/eulersexception/AbstractFactory-Proxy
Proxy,DesignPatterns-Proxy,,0,0,2018,2018,1,https://github.com/brianstoiber/DesignPatterns-Proxy
Proxy,DesignPatterns-Proxy,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Proxy
Proxy,DesignPatterns-Proxy,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Proxy
Proxy,DesignPatternsProxy,,0,0,2023,2023,1,https://github.com/JhonWSilva/DesignPatternsProxy
Proxy,DesignPatterns-Proxy,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Proxy
Proxy,DesignPatterns-Proxy,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Proxy
Proxy,DesignPatterns_Proxy,,0,0,2024,2024,1,https://github.com/claudiovdev/DesignPatterns_Proxy
Proxy,Proxy-Design-Pattern,Proxy design pattern to speed up your applications!,0,0,2018,2018,0,https://github.com/devlob/Proxy-Design-Pattern
Proxy,DesignPatterns-Proxy,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Proxy
Proxy,Proxy-Design-Pattern,This code contains example of Proxy Design Pattern,0,0,2023,2023,0,https://github.com/white-rabbit10/Proxy-Design-Pattern
Proxy,upgrades,Proxy design pattern for upgrading smart contracts,0,0,2022,2022,1,https://github.com/Python-David/upgrades
Proxy,integral-hamster,Example of Adapter and Proxy design patterns,0,0,2020,2020,1,https://github.com/dcc-cc3002/integral-hamster
Proxy,GameEngLab1,"Abstract Factory, Bridge and Proxy design patterns.",0,0,2019,2019,1,https://github.com/dionb112/GameEngLab1
Proxy,ProxyPMDP,This is an example codes implemented by Protection Model Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/ProxyPMDP
Proxy,UpgradeableSmartContract,Upgradable Smart Contract using Proxy design pattern,0,0,2024,2024,1,https://github.com/marc23gold/UpgradeableSmartContract
Proxy,java-design-patterns,"Proxy, Facade, Iterator, Template design pattern examples",0,0,2019,2019,10,https://github.com/kumuddhanvijay/java-design-patterns
Proxy,Proxy-Trinity,"Training exercise on Design Patterns: Adapter, Proxy, and Decorator",0,0,2024,2024,0,https://github.com/SergiiKravchuk/Proxy-Trinity
Proxy,C-DesignPatterns_Proxy,,0,0,2023,2023,1,https://github.com/mohamedibrahim1990/C-DesignPatterns_Proxy
Proxy,DesignPatterns-Str-Proxy,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Str-Proxy
Proxy,.NET.DesignPatterns.Proxy,,0,0,2019,2020,1,https://github.com/dmitry-zhbankov/.NET.DesignPatterns.Proxy
Proxy,DesignPatterns_Proxy_WCF,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_Proxy_WCF
Proxy,DesignPatterns-Structural-Proxy,,0,0,2023,2023,0,https://github.com/poula-atef/DesignPatterns-Structural-Proxy
Proxy,Proxy-Design-Pattern,Implementation of Prototype Design Pattern in Java using Eclipse.,0,0,2019,2019,2,https://github.com/noor-binte-amir/Proxy-Design-Pattern
Proxy,proxy-design-pattern,The funny and easy example with proxy design pattern,0,0,2021,2021,1,https://github.com/icarojobs/proxy-design-pattern
Proxy,AS3-Dev-DesignPatterns-ProxyPattern,,0,0,2016,2016,0,https://github.com/VladimirCores/AS3-Dev-DesignPatterns-ProxyPattern
Proxy,singleton-proxy-pattern,Project showcasing the SIngleton and the Proxy Design Patterns,0,0,2023,2023,1,https://github.com/franciscoioconnect/singleton-proxy-pattern
Proxy,DesignPatterns_Task4,DesignPatterns - Task With Proxy Pattern,0,0,2022,2024,1,https://github.com/aykhan019/DesignPatterns_Task4
Proxy,ProxySMDP,This is an example codes implemented by Proxy Smart Model Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/ProxySMDP
Proxy,ProxyVMDP,This is an example codes implemented by Proxy Virtual Mode Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/ProxyVMDP
Proxy,ProxyRMDP,This is an example codes implemented by Proxy Remote Model Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/ProxyRMDP
Proxy,DesignPatterns,Combinação de 3 design patterns: Factory/Strategy/Proxy,0,1,2019,2019,3,https://github.com/josecarlosolju/DesignPatterns
Proxy,ProxyDesignPattern,Proxy Design Pattern criado para a aula de Topicos Avancados em Informatica,0,0,2019,2019,1,https://github.com/JoaoPauloF/ProxyDesignPattern
Proxy,ProxyInNotification,To learn how to use Design Patterns in program (Proxy and Decorate),0,0,2016,2016,0,https://github.com/xcc3641/ProxyInNotification
Proxy,DesignPatterns_chapter-11,"Proxy pattern, summarision of OO principles",0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-11
Proxy,C-Sharp-DesignPatterns-Proxy,"Voici un exemple de programme avec des formules mathématiques utilisant le Design Pattern ""Proxy"".",0,0,2018,2018,1,https://github.com/Andree-AnneRoy/C-Sharp-DesignPatterns-Proxy
Proxy,java_proxies,"implementation of the design pattern ""proxy"" with java",0,0,2020,2020,2,https://github.com/delitonjr/java_proxies
Proxy,Design-patterns,"Realization of design patterns Singleton, Factory, Adapter, Proxy",0,0,2022,2022,0,https://github.com/BNBStudy/Design-patterns
Proxy,design-pattern-2,"-- DESIGN PATTERNS USED  -- Composition, Decorator, Proxy, Builder, Singleton",0,0,2022,2022,0,https://github.com/yhann0695/design-pattern-2
Proxy,Design-Pattern,Simple Example for Singleton / Proxy / Observer Design Pattern,0,0,2017,2017,1,https://github.com/ognale88/Design-Pattern
Proxy,springframeworkfundamentalsproxy,Proxy Design pattern in Spring application by example,0,0,2022,2022,1,https://github.com/Tamal2017/springframeworkfundamentalsproxy
Proxy,ProxyDesignPatterns,Proxy Tasarım Kalıbı Kullanımı ve örnek,0,0,2022,2022,1,https://github.com/UmutBilgen/ProxyDesignPatterns
Proxy,ProxyDesignPatterns,,0,0,2019,2019,1,https://github.com/ahmedco82/ProxyDesignPatterns
Proxy,ProxyPattern,This Java project provides a working example of the Proxy class design pattern.,0,0,2015,2015,1,https://github.com/LikeLikeAteMyShield/ProxyPattern
Proxy,5402_Structural_Patterns_1,"Structural Design Patterns Bridge, Proxy, Adapter and Facade",0,0,2021,2021,1,https://github.com/ferdhell/5402_Structural_Patterns_1
Proxy,Proxy-Design-Pattern,A Proxy Design Pattern provides a way to represent a different object and allows to access its functionality through it. Here the object representing the functionality is called the Proxy object and the object whose functionality is being represented via Proxy Object is called the “Real Subject” or “Real Object”.,0,2,2021,2021,1,https://github.com/raigenics/Proxy-Design-Pattern
Proxy,Design-Patterns-Proxy,Proxy,0,0,2024,2024,1,https://github.com/miguel9neto2/Design-Patterns-Proxy
Proxy,Proxy_Design_Pattern_JAVA,A design pattern study to information system course - UNIVAS 2020,0,0,2020,2020,1,https://github.com/MisaelKelviny/Proxy_Design_Pattern_JAVA
Proxy,useProxy,React custom hook that manages global state via proxy design pattern.,0,0,2022,2022,1,https://github.com/ogodeverest/useProxy
Proxy,ProxyDesignPattern,This repository consists of simple java code that demonstrates the Proxy Design Pattern,0,0,2017,2017,1,https://github.com/Divyankitha/ProxyDesignPattern
Proxy,hardwareProxy,Hardware low level driver in C with the proxy design pattern,0,0,2017,2017,0,https://github.com/eliaskanelis/hardwareProxy
Proxy,Proxy-Pattern-Slide,Proxy design pattern slideshow and sample code prepared by me for the lecture I've given to the class as a Design Patterns course assignment.,0,0,2022,2022,1,https://github.com/sec1911/Proxy-Pattern-Slide
Proxy,DesignPatterns,"Single Responsibibility Principle, Factory, Strategy, Command, Template Method, Proxy and Decorator Pattern",0,0,2020,2020,1,https://github.com/IgorFerro/DesignPatterns
Proxy,DesignPatternsCourse-TP3-Proxy,,0,0,2025,2025,1,https://github.com/aimaad/DesignPatternsCourse-TP3-Proxy
Proxy,ProxyTutorial,"Tutorial design pattern Proxy in four language, avaliable also on technical bog devman.pl",0,0,2017,2018,1,https://github.com/Slaw145/ProxyTutorial
Proxy,Design-Patterns-in-Java-The-Proxy-Pattern-Demonstration,Design Pattern Project in Java : The Proxy Pattern Demonstration,0,1,2016,2016,1,https://github.com/DavidJMartinProjects/Design-Patterns-in-Java-The-Proxy-Pattern-Demonstration
Proxy,cch2-proxy-design-pattern,A simple project to demonstrate the proxy design pattern implementation,0,0,2023,2023,1,https://github.com/Daniel-Fonseca-S/cch2-proxy-design-pattern
Proxy,DesignPattern,A project with examples of design patterns,0,0,2020,2021,1,https://github.com/aliyildizoz/DesignPattern
Proxy,Design-Patterns---Dynamic-Proxy,Proxy Pattern - Java Dynamic Proxy,0,0,2015,2015,0,https://github.com/TakLun/Design-Patterns---Dynamic-Proxy
Proxy,Proxy-Design-Pattern,A simple implementation to explain the Structural Design Pattern: Proxy Pattern,0,0,2018,2018,1,https://github.com/mhtmalpani/Proxy-Design-Pattern
Proxy,Python_DesignPatterns,"Python Design Patterns: Command, Facade, Factory, Monostate, Observer, Proxy, Singleton, State",0,0,2018,2018,1,https://github.com/Milstein/Python_DesignPatterns
Proxy,ProxyDesignPattern,This is a simple Proxy Design Pattern for Calling a time consuming process asynchronously.,0,0,2017,2017,0,https://github.com/alaa-m/ProxyDesignPattern
Proxy,PhpDesignPatterns-Proxy,Proxy,0,0,2018,2024,1,https://github.com/Jagepard/PhpDesignPatterns-Proxy
Proxy,ProxyDesignPattern,Proxy design pattern created for submission as part of the final exam for CS372,0,0,2018,2018,1,https://github.com/DuaneShaffer/ProxyDesignPattern
Proxy,Design-Patterns-DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA,,0,0,2018,2018,1,https://github.com/HarshGajraSUNY/Design-Patterns-DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA
Proxy,udemy-proxy,Practising the Proxy design pattern as discussed in the Gang of Four,0,0,2017,2017,1,https://github.com/ilking/udemy-proxy
Proxy,CoreJava_DesignPatterns,"Core Java Design Patterns including Singleton, Factory and Proxy patterns.",0,0,2020,2020,1,https://github.com/ashishshelke99/CoreJava_DesignPatterns
Proxy,upgradeable-solidity-contract,Alchemy University - Vending Machine Solidity Proxy Contract Design Pattern,0,0,2024,2024,1,https://github.com/treebearjason/upgradeable-solidity-contract
Proxy,proxy-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Proxy em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/proxy-java
Proxy,SE310-Seminar-Example-Code,"Code example of design pattern: Circuit breaker, Adapter, Proxy",0,0,2024,2024,1,https://github.com/ThanhDong00/SE310-Seminar-Example-Code
Proxy,Lab1_DesignPatterns,"An implementation of the abstract factory, bridge and proxy design patterns",0,0,2019,2019,1,https://github.com/MartinFarrell24/Lab1_DesignPatterns
Proxy,proxy-e-factory,Exploração dos Design Patterns Proxy e Factory com apis de clima atual,0,0,2023,2023,1,https://github.com/Catalisa-T5/proxy-e-factory
Proxy,DesignPatterns2-Assi3,"Design Patterns using proxy, command, chain of responsibility, and visitor,",0,0,2021,2021,1,https://github.com/soniafriesen/DesignPatterns2-Assi3
Proxy,Proxy-Trabalho,Trabalho sobre o design pattern Proxy em como pode ser utilizado em jogo.,0,0,2024,2024,1,https://github.com/RogerGPacheco/Proxy-Trabalho
Proxy,Decorator-and-Proxy-pattern,Decorator and proxy design patterns on java in person and authorization example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Decorator-and-Proxy-pattern
Proxy,DesignPatterns_Course,"Facebook WPF application implementing various design patterns such as Factory, Adapter, Proxy, Singleton, and more.",0,0,2018,2019,2,https://github.com/TheDechev/DesignPatterns_Course
Proxy,PROXY_PATTERN,IMPLEMENTS THE DESIGN PATTERN PROXY BY COMPARING YOUTUBE CACHE AND YOUTUBE SERVICE DIRECTLY,0,0,2020,2020,1,https://github.com/EdgarEmmanuel/PROXY_PATTERN
Proxy,design_patterns__proxy,,0,0,2022,2022,1,https://github.com/catalunha/design_patterns__proxy
Proxy,Design-Patterns-Proxy,Calculo de tempo com e sem proxy ,0,0,2023,2023,1,https://github.com/jairodornel/Design-Patterns-Proxy
Proxy,Design-Patterns-Proxy,,0,0,2023,2023,1,https://github.com/roman-lehendzevych-vitech/Design-Patterns-Proxy
Proxy,Design-Patterns-Proxy,,0,0,2024,2024,1,https://github.com/Kelvyn2707/Design-Patterns-Proxy
Proxy,designer_patterns_proxy,,0,0,2023,2023,1,https://github.com/MarcosPauloMacedo/designer_patterns_proxy
Proxy,Design_patterns_proxy,,0,0,2022,2022,1,https://github.com/AnnaGawrysiak/Design_patterns_proxy
Proxy,Design-Patterns-Proxy,,0,0,2024,2024,0,https://github.com/Kayque0v/Design-Patterns-Proxy
Proxy,Design_Patterns_Proxy,,0,0,2023,2023,1,https://github.com/MarceloTomaz666/Design_Patterns_Proxy
Proxy,Design-Patterns-proxy,,0,0,2020,2020,0,https://github.com/RashidNoor42/Design-Patterns-proxy
Proxy,Design-Patterns-Proxy,,0,0,2019,2019,1,https://github.com/IamMartinPeek/Design-Patterns-Proxy
Proxy,design-patterns-proxy,,0,0,2024,2024,1,https://github.com/yurirobert34/design-patterns-proxy
Proxy,design-patterns-proxy,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-proxy
Proxy,proxy-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/proxy-design-patterns
Proxy,-Design-Patterns-Proxy,,0,0,2024,2024,1,https://github.com/brenoerikk/-Design-Patterns-Proxy
Proxy,DesignPatternsProj2,"A project meant to showcase the following Design Patterns: Post, Proxy, Prototype, and Template",0,0,2023,2023,1,https://github.com/Clayton-Pajot/DesignPatternsProj2
Proxy,design-pattern-proxy,"Develop a system that uses the pattern given in class. ""Proxy"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design-pattern-proxy
Proxy,Design_Patterns,"Singleton, Repository, Facade, Proxy, IOC, Iterator",0,0,2020,2020,1,https://github.com/ronaldris21/Design_Patterns
Proxy,airplaneNavigationSystem,"Implemented the following design patterns:  Proxy, Observer, Façade, and Strategy ",0,0,2023,2023,1,https://github.com/mbhsiddiqui/airplaneNavigationSystem
Proxy,Corporate-Manager,An example implementation in Java of the Proxy Design Pattern,0,0,2021,2021,1,https://github.com/ElijahAhianyo/Corporate-Manager
Proxy,basicDP,"4 of basic design patterns: bridge, builder, adapter and proxy.",0,0,2018,2018,1,https://github.com/gevorgsukias/basicDP
Proxy,ColorGame-DesignPattern,created a Colour Game using  Design Pattern - Strategy and Proxy,0,0,2022,2022,1,https://github.com/aasthabhardwaj/ColorGame-DesignPattern
Proxy,proxyonedrivegoogledrive,Implementação do design pattern Proxy utilizando a API do googleDrive e do Onedrive (nao oficial),0,0,2016,2016,1,https://github.com/MiqueiasFernandes/proxyonedrivegoogledrive
Proxy,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Proxy,Use-4-design-patterns,"MVC,Factory,Adapter,Proxy",0,0,2016,2016,1,https://github.com/traviszhong/Use-4-design-patterns
Proxy,Design-Patterns-7---Proxy,,0,0,2018,2018,1,https://github.com/sakarisson/Design-Patterns-7---Proxy
Proxy,design-patterns-pattern_proxy,,0,0,2022,2022,1,https://github.com/CapataEugen/design-patterns-pattern_proxy
Proxy,designPatternsAuction,"Automated auction where the bidders are bots. There are several design patterns used in this auction: factory, observer, decorator and virtual proxy.",0,0,2017,2020,2,https://github.com/JennoVink/designPatternsAuction
Proxy,solidity-proxy-design-patterns,,0,1,2021,2021,1,https://github.com/0xisk/solidity-proxy-design-patterns
Proxy,ProxyDesignPatternLogin,Project of creating software for image access based on registered users in database using proxy design pattern ,0,0,2020,2020,1,https://github.com/Ivan1910/ProxyDesignPatternLogin
Proxy,design-pattern-proxy-example,Deux exemple qui illustre le fonctionnement du design pattern proxy avec le langage JAVA,0,0,2023,2023,1,https://github.com/housseinmomo/design-pattern-proxy-example
Proxy,Design-Patterns,"Java program for Fascade Pattern, Proxy Pattern, Adapter Pattern",0,0,2024,2024,1,https://github.com/Prabhulakshman/Design-Patterns
Proxy,designpatern,"Examples to show some design patterns like factory, dynamic proxy, etc.",0,0,2018,2018,1,https://github.com/tyrone1979/designpatern
Proxy,php-proxy-pattern,Beispiele für das Proxy-Entwurfsmuster in PHP (examples of the proxy design pattern in php),0,0,2018,2018,1,https://github.com/it4need/php-proxy-pattern
Proxy,Proxy-design-pattern-in-Python,Sample code prepared for the class to demonstrate the proxy design pattern in practice.,0,0,2023,2023,1,https://github.com/hubertkubis/Proxy-design-pattern-in-Python
Proxy,JobFinder,playing with flyweight and proxy design patterns to find a job,0,0,2023,2023,1,https://github.com/khalilmissaoui/JobFinder
Proxy,ProxyDesignPattern_RpgArmor,"This is a Proxy Design Pattern for the 6th week of Object Oriented Programming, continuing the RPG theme.",0,0,2021,2021,1,https://github.com/nathanelvfawcett/ProxyDesignPattern_RpgArmor
Proxy,TrainingForProxyPattern,Mise en place d'une design pattern proxy pour renforcer les competences en conception logiciels,0,0,2024,2024,1,https://github.com/TANTELY00/TrainingForProxyPattern
Proxy,Design-Patterns-Factory-Proxy-Bridge,,0,0,2021,2021,1,https://github.com/Richard-Fleming/Design-Patterns-Factory-Proxy-Bridge
Proxy,java_design_patterns_proxy_mode,java设计模式_代理模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_proxy_mode
Proxy,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Proxy,FoodMenuProxy,This Program returns Menu Properties i.e dimensions at run-time using the Proxy Design Pattern.,0,0,2020,2020,1,https://github.com/atiftirmizi/FoodMenuProxy
Proxy,design-patterns,"factory, command, composite, decorator, facade, iterator, mvc, observer, proxy, singleton, state, strategy",0,0,2022,2022,1,https://github.com/apkuznetsov/design-patterns
Proxy,DesignPatterns,Most common design patterns in software architecture.,0,0,2023,2024,1,https://github.com/staivanov/DesignPatterns
Proxy,pricelabel,"a simple case using 3 kinds of design pattern: singleton, proxy, observer",0,0,2017,2017,1,https://github.com/Sayes/pricelabel
Proxy,LoginManager,Have created a LoginManager with implementation of Proxy and Observer design pattern.,0,0,2018,2018,1,https://github.com/caren1/LoginManager
Proxy,ProxyDesignPattern,"Implementação do Design Pattern Estrutural Proxy em .net Core 3.1, simulando uma classe Proxy para realização das operações matemáticas básicas",0,0,2021,2021,1,https://github.com/rafaelraah/ProxyDesignPattern
Proxy,TCP-IP-Chat-Application-,"TCP/IP Chat Application. An application built in a graduation project of Design Patterns. Implementation of Proxy, Command, State and more design Patterns",0,0,2023,2023,1,https://github.com/AharonMaor/TCP-IP-Chat-Application-
Proxy,TCP-IP-Chat-Application,"TCP/IP Chat Application. An application built in a graduation project of Design Patterns. Implementation of Proxy, Command, State and more design Patterns ",0,0,2023,2023,1,https://github.com/Or-Jerbi/TCP-IP-Chat-Application
Proxy,Proxy-Design-Pattern,Proxy is a structural design pattern that lets you provide a substitute or placeholder for another object.,0,1,2022,2022,2,https://github.com/feyyyzza/Proxy-Design-Pattern
Proxy,DesignPatterns_Simple-Load-Balancer,"For the final project of the Design Patterns course, I developed a simple load balancer using Java threads and 3 design patterns: Proxy, Chain of Responsibility and Singleton.",0,0,2020,2020,1,https://github.com/alejandro-lobato/DesignPatterns_Simple-Load-Balancer
Proxy,lab_6_design_patterns-1_proxy,"Лабораторная работа № 6 ""Паттерны-1""",0,0,2016,2016,1,https://github.com/m-chrome/lab_6_design_patterns-1_proxy
Proxy,Design-Patterns,"Solution to general problems using software design with use of Visitor, Strategy, Dynamic Proxy, Observer patterns",0,0,2017,2017,1,https://github.com/ritesh-verma/Design-Patterns
Proxy,design-pattern-proxy-design-pattern-c-sharp.net,This repository explains what is proxy design pattern and its example in c-sharp .net,0,0,2016,2016,1,https://github.com/pramodchoudhari/design-pattern-proxy-design-pattern-c-sharp.net
Proxy,Hospital-Staff-Management,"This is my 3rd Git repository. It's a console application created by using Java. Here I have applied three design  patterns. They are Proxy Design Pattern, Facade Design Pattern and  Decorator Design patter.",0,0,2024,2024,1,https://github.com/Kazi-Israt-Hassan-Eva/Hospital-Staff-Management
Proxy,proxy-chaining,Using the proxy design pattern for method invocation redirection. Useful for asynchronous operations without the need for callback functions.,0,0,2013,2023,0,https://github.com/overheadhunter/proxy-chaining
Proxy,Ejemplo-Proxy,Ejemplo Proxy... Open source tomando como base el código original: https://refactoring.guru/es/design-patterns/proxy/python/example,0,0,2022,2022,1,https://github.com/dragon-014/Ejemplo-Proxy
Proxy,GE-Design-Patterns,"Lab 2 for Games Engineering, focused on using the Factory, Proxy, and Bridge pattern.",0,0,2021,2021,1,https://github.com/MichaelRRyan/GE-Design-Patterns
Proxy,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Proxy,structural-design-patterns,"Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост (Bridge), Легковес (Flyweight), Фасад (Facade)",0,0,2020,2020,1,https://github.com/ann-vicheva/structural-design-patterns
Proxy,Chukwukaodinaka-Burger-Shack-Design_Patterns_In_Use,"Java Project making use of design patterns such as FlyWeight, Proxy and Adapter",0,0,2020,2020,1,https://github.com/Chukwukaodinaka/Chukwukaodinaka-Burger-Shack-Design_Patterns_In_Use
Proxy,SRE_DesignPattern,"Strategy,Proxy,Iterator,Bridge,Sequence of Responsibility,FlyWeight Design Patterns implemented in c#",0,0,2022,2022,1,https://github.com/UsmannArshad/SRE_DesignPattern
Proxy,Burger-Shack_design_patterns_in_use,"Simple Java Project for multi-threading and design patterns like flyweight, proxy, adapter",0,0,2020,2020,1,https://github.com/rafall404/Burger-Shack_design_patterns_in_use
Proxy,StructuralDesignPatternsDemo,A robot arm project that implements the Structural Design Patterns: Proxy and Facade,0,0,2023,2023,1,https://github.com/itsmemarius/StructuralDesignPatternsDemo
Proxy,day-21-design-patterns-exercise-proxy-pattern,[Bài tập] Triển khai Proxy Pattern,0,0,2020,2020,1,https://github.com/anhnbt/day-21-design-patterns-exercise-proxy-pattern
Proxy,design-patterns,"Creational Design patterns ,Singleton, Builder, Prototype pattern , Structural patterns,  Facade, Proxy, Bridge pattern, Behavioral pattern, Template, Strategy, Iterator pattern",0,0,2023,2023,1,https://github.com/fatimasultanova/design-patterns
Proxy,java-design-pattern,常用的 Java 设计模式 (design patterns for java),0,0,2018,2020,1,https://github.com/zivszheng/java-design-pattern
Proxy,lab_7_design_patterns-2_proxy-again,"Лабораторная работа № 7 ""Паттерны-2""",0,0,2016,2016,1,https://github.com/m-chrome/lab_7_design_patterns-2_proxy-again
Proxy,Design-Patterns-Spring-Boot,"Simple project with spring boot, explain the difference between design patterns (Proxy,Builder,Decorator...)",0,0,2024,2024,1,https://github.com/imadett88/Design-Patterns-Spring-Boot
Proxy,Design-Patterns,"Introduction to design patterns: Strategy, Observer, Factory, Singleton, Command, Adapter, Faade, Template Method, Iterator, Composite, State, Proxy. Object Oriented design principles, Java/UML. ",0,0,2019,2021,1,https://github.com/YifengQ/Design-Patterns
Proxy,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Proxy,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Proxy,Design-Patterns," The GitHub repository consists of separate implementations of various design patterns, including Adapter, Command, Decorator, Facade, Observer, Prototype, Proxy, Singleton, and Strategy, in Java.",0,0,2021,2023,1,https://github.com/mozammalrahat/Design-Patterns
Proxy,Game-Design-Patterns,"Developed a 3 level game using PhaserJS to get hands on State, Command, factory, Proxy and Decorator design pattern.",0,0,2018,2018,6,https://github.com/sricheta92/Game-Design-Patterns
Proxy,java-structural-design-patterns,"Java implementations of various structural design patterns, including Adapter, Composite, Decorator, Facade, Flyweight, and Proxy.",0,0,2025,2025,1,https://github.com/HajiraGul/java-structural-design-patterns
Proxy,sproxy.js,A simple Javascript library that allows you to implement the proxy object design pattern.,0,0,2014,2014,1,https://github.com/joebuschmann/sproxy.js
Proxy,pproxy,This Flutter application demonstrates the Proxy design pattern using an ice cream production scenario.,0,0,2024,2024,1,https://github.com/somosaleteo/pproxy
Proxy,TechNetWiki-ProxyDesignPattern,Companion project for https://social.technet.microsoft.com/wiki/contents/articles/53829.handling-different-levels-of-entity-visibility-proxy-design-pattern-in-net-core,0,0,2020,2020,1,https://github.com/chilberto/TechNetWiki-ProxyDesignPattern
Proxy,Design-Patterns,"Applied various design principles to build software systems using Java. Projects included observer pattern, state pattern, working with threads and locks, visitor pattern, understanding proxy and reflection.",0,0,2017,2018,1,https://github.com/Sethucb/Design-Patterns
Proxy,KTU_T120B516_Proxy_Design-Patterns,,0,0,2022,2023,1,https://github.com/LukNav/KTU_T120B516_Proxy_Design-Patterns
Proxy,Design-Patterns---Teachers,"Final student project for my university course “Design Patterns”. Used technologies: Java, Swing. Used patterns: Singleton, Factory Method, Adapter, Proxy, Decorator ",0,0,2016,2016,1,https://github.com/itplamen/Design-Patterns---Teachers
Proxy,Design-Patterns,A. Structural  1. Adapter - correct  2. Facade - corrected  3. Proxy - correct    B. Creational  1. Singleton  2. Factory  3. Builder    C. Behavioural  1. Chain of responsibility  2. Memento 3. Observer,0,0,2024,2024,1,https://github.com/NehaAgrawal-git/Design-Patterns
Proxy,Auth-Based-Socks-Proxy,"Yet Another Socks5 Proxy. But we offer Authentication, Auditorium and Access Control. Design Pattern Reference from 15-440 Bank Concurrency Model.",0,0,2022,2022,1,https://github.com/rayguo17/Auth-Based-Socks-Proxy
Proxy,design-patterns-examples,"Small projects made to study the use of diferents design patterns.  Some patterns present are: Abstract factory, adapter, builder, decorator, proxy and others.",0,0,2021,2022,1,https://github.com/guihensn/design-patterns-examples
Proxy,Design-Patterns-in-Java,"In this training, I reviewed somme design patterns such as strategy, adapter, decorator, composite, proxy, builder, singleton and prototype.",0,0,2023,2023,1,https://github.com/ClaudEbro/Design-Patterns-in-Java
Proxy,.github,"Implementation de 7 Design Pattern avec java :P.proxy,P.Decorator,P.Observer,P.Adapter...",0,0,2022,2022,1,https://github.com/Java-Design-Pattern/.github
Proxy,60-Proxy-design-pattern,Proxy-design-pattern-静态代理设计模式和jdk、cglib动态代理设计模式,0,0,2020,2020,1,https://github.com/xoste/60-Proxy-design-pattern
Proxy,BinaryFileSorter,A Java program that sorts binary files using heap sort algorithm and the Proxy design pattern,0,0,2023,2025,1,https://github.com/thienan11/BinaryFileSorter
Proxy,File-system,"Basic file system allowing to use ls, tree, more methods. Implementing Composite and Proxy design pattern",0,0,2020,2021,1,https://github.com/smasiek/File-system
Proxy,BlogApp,"A simple Java app showing MYSQL connection along with the proxy, strategy, and observer design patterns.",0,0,2017,2017,0,https://github.com/karlmorris/BlogApp
Proxy,WeakRef,This project is a sample app to complement the post about Proxy design pattern in iOS,0,0,2021,2022,1,https://github.com/AlfredoHernandez/WeakRef
Proxy,SP,"Design Patterns in Java - so long here are Composite, Flyweight, Proxy, Strategy, Iterator, Visitor and State",0,0,2017,2017,2,https://github.com/cpetrescu96/SP
Proxy,java-4h-5h-design-patterns-2,"Creational (Singleton, Prototype, etc) and Structural (Proxy, Composite, Decorator, Adapter and Bridge)",0,0,2020,2020,1,https://github.com/edwardKatsCourse/java-4h-5h-design-patterns-2
Proxy,Protection-Proxy-Design-Pattern,"The repository contains an implementation of the Proxy design pattern. Proxy is a structural design pattern that lets you provide a substitute or placeholder for another object. A proxy controls access to the original object, allowing you to perform something either before or after the request gets through to the original object.",0,0,2020,2021,1,https://github.com/mehboobali98/Protection-Proxy-Design-Pattern
Proxy,SimpleRMIATM,Simple Example of proxy design pattern with java RMI simulating a ATM pin number validating process,0,0,2017,2023,1,https://github.com/dilantha111/SimpleRMIATM
Proxy,UniversityListServe,"it is a listserve project developed using design patterns like composite, proxy, observer, factory, singleton etc",0,0,2022,2023,1,https://github.com/05satyam/UniversityListServe
Proxy,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Proxy,Proxy,"The proxy pattern is a design pattern that allows for the creation of a proxy object that controls access to a real service object. This implementation includes user validation and usage tracking, which limits service usage to three times per day. The usage information is stored in a JSON file.",0,0,2023,2023,1,https://github.com/Orjuelalaley/Proxy
Proxy,awesomeshop_api-restful_dps-proxy_course-luisdev-architecture_dotnet-7.0.2_csharp-11,"Este repositório é dedicado para se aprofundar no DPS (Design Pattern Strutuctural) Proxy, utilizando a linguagem de programação C#.",0,0,2023,2023,1,https://github.com/danieldantasdev/awesomeshop_api-restful_dps-proxy_course-luisdev-architecture_dotnet-7.0.2_csharp-11
Proxy,Structural-DesignPattern-Swift,"This Repository includes structural design pattern in swift which includes Adapter , Bridge , Composite , Decorator , Facade , Flyweight & Proxy .",0,0,2020,2023,2,https://github.com/dvvaliya369/Structural-DesignPattern-Swift
Proxy,strzelaczinho-Spring_Hibernate_Projekt_01,"Projekt w springu . Zawiera podstawy komunikacji z bazą , przykladowe adnotacje , Proxy design pattern, Pointcuty ,Hibernate + mase jarów ",0,0,2018,2018,1,https://github.com/strzelaczinho/strzelaczinho-Spring_Hibernate_Projekt_01
Proxy,LaboratorSP,"Here are basic implementations in C# for three design patterns: the Strategy Pattern, Proxy Pattern, and Composite Pattern.",0,0,2023,2024,2,https://github.com/negreacristian/LaboratorSP
Proxy,Facebook_app_Design_Pattern_CS,"Facebook app using different design patterns (Singelton, Facade, Proxy, Observer, Iterator, Strategy, Command) and working with Facebook API ",0,0,2019,2019,1,https://github.com/itsikh100/Facebook_app_Design_Pattern_CS
Proxy,Bank,A banking application has been developed using the Proxy design pattern to manage access control and optimize operations.,0,0,2025,2025,0,https://github.com/AdeliyaK/Bank
Proxy,design-pattern-example,"Explore and implement popular design patterns in Java! This repository includes examples of Singleton, Factory, Proxy, Bridge, Prototype, Abstract-Factory, and Proxy patterns with clear explanations and code samples. Perfect for learning and applying design patterns in real-world projects.""",0,0,2024,2024,1,https://github.com/togrul01/design-pattern-example
Proxy,request-service-architecture,"It is a project using design pattern to implement proxy service architecture concept, which design idea come from dependency injection and proxy pattern.",0,0,2022,2023,1,https://github.com/eastmoon/request-service-architecture
Proxy,Hotel-System,"Hotel Management System by (Java , Php my admin , Gui for interface ) and design patterns [ Proxy , Prototype , Factory, Singleton , Builder ].",0,0,2024,2024,1,https://github.com/KariemHatem/Hotel-System
Proxy,Array_Stack_Queue,"An Array, Stack, and Queue made from scratch using the Proxy Design Pattern as well as Templates in C++. ",0,0,2021,2021,1,https://github.com/Sivi-i/Array_Stack_Queue
Proxy,Go_Proxy_Pattern,A Go project demonstrating the Proxy pattern by providing a surrogate or placeholder for another object to control access to it. This repository showcases best practices in design patterns and unit testing.,0,0,2024,2024,1,https://github.com/arthurfp/Go_Proxy_Pattern
Proxy,NS_Backend_engineering_demo,"This repo consists of demos of Nasser Hussain's course Understanding backend communication design patterns ,protocols, executions and proxying",0,0,2022,2022,1,https://github.com/sarannng/NS_Backend_engineering_demo
Proxy,Printer_Proxy_Design_Pattern,Users write to a proxy printer class that only sends data to the printer when there is enough to make a page. This is done to demonstrate the Proxy Design Pattern.,0,0,2018,2018,1,https://github.com/RyanStonebraker/Printer_Proxy_Design_Pattern
Proxy,backend-engineering,"My studies related to backend engineering related to: backend communication design patterns, protocols, https, backend execution patterns, proxying and others. ",0,0,2023,2023,0,https://github.com/dancorreia-swe/backend-engineering
Proxy,Design-Pattern,"Some implementation of design pattern in Java such as: Chain of Responsibility, Decorator, Factory, Generic, Interator, Proxy, Reflection, Singleton, Visitor",0,0,2016,2017,1,https://github.com/luongnv89/Design-Pattern
Proxy,BankAccountProxyApp,This C# project demonstrates the implementation of the Proxy Design Pattern using a simple bank account application. The project includes a user interface built with WPF and unit tests to ensure correct functionality.,0,0,2024,2024,1,https://github.com/yash-mittal-2003/BankAccountProxyApp
Proxy,RestaurantManagementSystem,"Design Pattern project on C# Console Application which includes Builder Pattern, Factory Pattern, Proxy Pattern, Strategy Pattern, and Composite Pattern.",0,0,2022,2022,1,https://github.com/asadsheikh1/RestaurantManagementSystem
Proxy,DesignPattern-Proxy,"This C# implementation demonstrates the Proxy design pattern, providing a placeholder for an object to control access and add additional logic. It showcases how the Proxy class manages permissions and delegates operations to the RealSubject.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Proxy
Proxy,ProxyPattern,"The ProxyPattern project demonstrates the use of the Proxy design pattern in C#. It includes a virtual proxy that defers expensive image operations until needed. The app displays images and related information from local folders, using a proxy to optimize memory usage by loading images only when required.",0,0,2024,2024,1,https://github.com/tunkashwinraj/ProxyPattern
Proxy,CRM---Spring-Hibernate-App,"First web project using Spring MVC, Hibernate (CRUD App), AOP, HTML and CSS. Using DAO, Service Facad and Proxy Design Patterns.",0,0,2017,2017,1,https://github.com/Lechu67/CRM---Spring-Hibernate-App
Proxy,proxy-pattern,Design pattern estrutural (gof) Proxy para fornecer um objeto que atua como um substituto para um objeto de serviço real usado por um cliente para para controlar o acesso a ele (cheque como invólucro do dinheiro na conta bancário),0,0,2021,2021,1,https://github.com/Jhow-R/proxy-pattern
Proxy,java-design-pattern,"This repository is some sample about java-design-pattern,including factory pattern , singleton pattern ,observer pattern,proxy pattern and so on.",0,0,2018,2019,1,https://github.com/lgf-Allen/java-design-pattern
Proxy,ECommerece,"An e-commerce API that utilizes nine design patterns: FACTORY METHOD, PROTOTYPE, BUILDER, PROXY, FACADE, ADAPTER, CHAIN OF RESPONSABILITY, MEDIATOR, COMMAND",0,0,2024,2024,1,https://github.com/MunMihai/ECommerece
Proxy,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
Proxy,MicroService-Design-Patterns-use-case-Amazon-Shopping-Payment,"This repository contains a use-case of Amazon Shopping Payment Microservice Architecture which is builded using Client Server Pattern, Proxy Pattern, ASYNC and SYNC Pattern, Ports and Adapter Pattern, ASYNC Messaging Pattern,  Discovery Service, Health Check Pattern, Performance Metrics pattern",0,0,2021,2025,1,https://github.com/sam253narula/MicroService-Design-Patterns-use-case-Amazon-Shopping-Payment
Proxy,javascript-mvc-proxy-factory,in this training/project: - Combine the object-oriented paradigm with the functional to solve problems - Apply new features of ECMASCRIPT 6 - Structure your application in the MVC model - Program asynchronously with promises - Use design patterns - Implement a data binding solution,0,0,2020,2020,1,https://github.com/jjuniorvieira/javascript-mvc-proxy-factory
Proxy,Facebook-desktop-app,"A Facebook desktop application using Facebook Graph API implementing 6 different design patterns such as Template Method, Observer, Strategy, Factory Method, Proxy, Facade.",0,0,2022,2022,2,https://github.com/yuvalbader/Facebook-desktop-app
Proxy,Virtual-Proxy-Design-Pattern,"The virtual proxy design pattern is used to preserve memory from being allotted to an object that may not be used in the future. Until the object is not used, a light copy of the object is created and shown to the user.",0,0,2020,2021,1,https://github.com/mehboobali98/Virtual-Proxy-Design-Pattern
Proxy,Example-Java-Reflection-Serialize-Deserialize,"Final project for a design patterns course. Use the dynamic proxy, Java reflection, and strategy patterns to serialize and then deserialize two dummy objects.",0,0,2016,2016,1,https://github.com/eyoung8/Example-Java-Reflection-Serialize-Deserialize
Proxy,Car_Rental_Management,"Exercise for design patterns (Singleton, Builder, Factory Method, Abstract Factory; Adapter, Decorator, Facade, Proxy; Iterator, Observer, State, Strategy), clean code, SOLID, DRY, KISS, YAGNI",0,0,2024,2024,2,https://github.com/19pawel970415/Car_Rental_Management
Proxy,CS372_Design_Pattern_Assignment,Repo for CS372 Assignment 4. The idea is to do something in C++ using eiher the Proxy Design pattern or Chain of Reponsiblity pattern ,0,1,2016,2016,1,https://github.com/Arsh25/CS372_Design_Pattern_Assignment
Proxy,Gourmand-Restaurant-App,"Gourmand is a restaurant management and food ordering app. This repository contains the complete Design Document for the app along with UML artifacts like Domain Model, Design Model, Sequence Diagrams, Activity Diagrams, State Diagrams, Design Patterns (Observer, State, Abstract Factory, Decorator, Composite, Iterator, Template Method, Singleton, Adapter and Proxy). The MVC architecture also has been applied to the design",0,2,2017,2017,1,https://github.com/mohammedshethwala/Gourmand-Restaurant-App
Proxy,Lambda-API-Proxy,"This is a project I am using to act as a backend proxy to my API requests. Its intended goal is to receive incoming API requests, fetch the associated API key, then forward the request before returning the response back to the caller. It uses the singleton design pattern to keep the secrets between simultaneous invocations of the lambda.",0,0,2024,2024,1,https://github.com/joshuagourlay/Lambda-API-Proxy
Proxy,NewspaperApp,"News feed application to manage editorial feeds for a newspaper agency using Spring MVC, JQuery, Bootstrap, MySQL database and design patterns like Singleton, Decorator, Factory and Proxy.",0,0,2015,2015,1,https://github.com/milindhg/NewspaperApp
Proxy,java-desing-patterns-II-loja,Repositório do curso Jornada do Conhecimento de Back-End Java (Nível Intermediário) - Design Patterns em Java II: avançando nas boas práticas de programação da plataforma Alura.,0,0,2024,2024,1,https://github.com/Robson-Teixeira/java-desing-patterns-II-loja
Proxy,javascript-in-action-course,"The course make some aspects clear such as Model-View-Controller (MVC) model, apply design patterns, program asynchronously with promises, render templates, and work with proxies, among other things.",0,0,2019,2019,1,https://github.com/jjuniorvieira/javascript-in-action-course
Proxy,LibraShare,"LibraShare is a community-driven book-sharing system designed to simplify book borrowing, returning, and management while ensuring efficient user role-based access. It integrates multiple design patterns for scalability, maintainability, and reusability.",0,0,2025,2025,1,https://github.com/hadialshaer/LibraShare
Proxy,Weather-Monitoring,"Java-based weather monitoring system with a GUI, implementing Singleton, Factory, Adapter, Builder, and Proxy design patterns for efficient data management, object creation, source integration, report construction, and access control.",0,0,2024,2025,1,https://github.com/MariamIsmaeil/Weather-Monitoring
Proxy,Facebook-features-app-using-Facebook-API,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.  ",0,1,2019,2019,1,https://github.com/AndrewSergeev/Facebook-features-app-using-Facebook-API
Proxy,Pizza-Delivery-DP,"A website that provides pizza customizing and delivery_using JSP and servlets - CSS and JavaScript + AJAX Technology for interface and interactivity - MySQL for relational database - Java Builder, Proxy, and Singleton Design Patterns",0,0,2024,2025,3,https://github.com/PizzaDeliveryDP/Pizza-Delivery-DP
Proxy,Library-management,"A library management system using design patterns such as State and Proxy. The system allows users to manage book collections, borrow and return books, and handle reservations with different user roles (premium and non-premium)",0,0,2024,2025,1,https://github.com/Princegabz/Library-management
Proxy,JavaSpringAPI,"This is a RESTful API built using Java with Spring Boot framework. It includes various design patterns, middleware for JWT authentication, and uses PostgreSQL as the database. Nginx is used as a reverse proxy server.",0,0,2024,2024,1,https://github.com/devlooppear/JavaSpringAPI
Proxy,Santorini.ts,"Santorini board game. Implements the proxy design pattern to interroperate easily between local and networked instances of game Players, via an agreed-upon JSON-based interface. Written in Typescript. An artifact of Software Construction Course F18 at Northwestern",0,0,2019,2019,2,https://github.com/youralien/Santorini.ts
Proxy,Tugas-Besar-CCDP-10116073-10116076,"Repository ini digunakan untuk menyimpan file atau project dari tugas besar clean code dan design pattern. Pada repository ini ada 3 tipe design pattern yang diimplementasikan yaitu creational, structural, dan behavioral pattern. Dimana diambil dua contoh pattern dari ketiga tipe tersebut. Dimana untuk creational dipilih abstrac factory pattern dan prototype pattern, untuk structural dipilih proxy pattern dan composite pattern, dan untuk behavioral dipilih mediator pattern dan iterator pattern.",0,0,2020,2020,1,https://github.com/fritsonagung/Tugas-Besar-CCDP-10116073-10116076
Proxy,MavAppoint,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust.  Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/aishiyer18/MavAppoint
Proxy,MavAdvisingSystem,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust. Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/gurleenkaur793/MavAdvisingSystem
Proxy,module-federation,"Webpack 5 Module Federation with 3 applications sharing and consuming modules, asynchronous and resilent. Higher Order Functions, Suspense, Error handling, dynamic and resilient imports of functions, classes, values & React Components, Proxy design pattern with cache, queue wrapper function for dynamically imported functions",0,0,2020,2023,1,https://github.com/AbbeBlubb/module-federation
Proxy,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Proxy,Actor-Communication-Program,"This is a program in Java where is developed a communication between actors system. It includes several design patterns as Singleton, Proxy, Observer, Decorator and MVC. It also incorporates reflection programming, an unit testing framework (JUnit) and a GUI framework to monitor the system (Swing).",0,0,2023,2023,1,https://github.com/xavierlpz/Actor-Communication-Program
Proxy,Library-mangment-system-pattern-educational-demo,"This project is a Library Management System utilizing various design patterns like Singleton (for database connection and logging), Prototype (for cloning books), Factory (for book creation), Adapter (for integrating external books), Builder (for constructing books), Proxy (for adding security and logging), and Command (for book transactions).",0,0,2024,2024,1,https://github.com/mohammedsalama0/Library-mangment-system-pattern-educational-demo
Proxy,Chat-Application,"A robust Java-based chat application featuring user authentication, real-time messaging, group and contact management, and support for multimedia messages. Built with scalable design patterns like MVC, DAO, Singleton, Factory, Observer, and Proxy for maintainability and performance. Ideal for developers looking to explore advanced Java application ",0,0,2024,2024,1,https://github.com/am94an/Chat-Application
Proxy,LogCastle,"LogCastle is a .NET library designed to simplify and enhance logging operations in projects. Utilizing Aspect-Oriented Programming (AOP), it enables logging based on class, interface, and method. Built on the proxy design pattern, it logs the runtime behavior of specific methods. It serves as an alternative to PostSharp for logging functionalities.",0,0,2024,2024,1,https://github.com/sametkayikci/LogCastle
Proxy,Race-Car,"A 2D class project game using Java with swing and awt packages along with animation using a Timer. Increased ease of maintainability using Object Oriented Design and an MVC (Model-View-Controller) architecture. Further increased ease of maintainability by learning and implementing design patterns including Proxy, Observer/Observable, Command, Strategy, Singleton, Iterator and Factory.",0,0,2017,2017,1,https://github.com/MJohnson9303/Race-Car
Proxy,Online-Marketplace,"The main objective of this project is to implement a software design pattern and framework to create an online marketplace. Following software design patterns were used for the implementation purpose: Abstract Factory, Command, Front Controller, Role Based Access Control, Authorization, Proxy, Reflection, Monitor Object, Future, Guarded Suspension, Scope Locking, Thread-Safe Interface. Additionally, I will make use of Java Annotation to perform Role Based Access Control and MySQL for Database related tasks. To maintain several versions of the project I'm making use of Github environment. I have made use of Agile Methodologies through out in the project.",0,0,2018,2018,1,https://github.com/anushkaaaa/Online-Marketplace
Proxy,Jewel-Game,"A 2D  gem matching game I wanted to try making after starting to play Puzzle and Dragons on my phone in January. I have been making the game in Java using swing and awt packages. To make the project more maintainable I have been using Object Oriented Design and MVC (Model-View-Controller) architecture learned while in college. Design patterns including Proxy, Observer/Observable and Command were used as well.",0,0,2017,2017,1,https://github.com/MJohnson9303/Jewel-Game
Proxy,Tema2-PAO," Please choose 2 of the following design patterns to implement in java: 1. factory method 2. strategy  3. proxy 4. adapter 5. facade  You can choose whichever objects you like to implement it.(Cats, Dogs, Cars, Employers, A, B, C,...) Create a command line interface to showcase the usage of the implementation.  Google is your friend and will explain each of the patterns(we did builder in class). However, please try to understand how they work.   Deadline: April 6th",0,0,2022,2022,1,https://github.com/alexion2001/Tema2-PAO
Proxy,Advanced-Software-Development---JAVA-MICROSERVICES,"The course target:: Advanced Software Development JAVA MICROSERVICES Course To cover the gap between the academia and the industry in Israel high-tech industry market 1. To give the relevant tools to build and develop an E2E application ( RPC - Application Servers (web application server ) , Docker , K8, Mongo DB ,Postman ) 2. To provide a serious and a heavy programming background ( Java language) ,the newest technologies (Java 8 & 9, Maven ,Jenkins , Restful , JPA , ORM , HTML ,CSS , JS) and the latest frameworks which are used in the industry (Spring , NoSQL , Swagger, Angular/React ,Lombok) 3. To implement the relevant Programming Design patterns like Singleton ,MVC, Factory , Abstract , Adapter , Facade , Composite , Visitor ,Proxy ,Iterator and the newest programming concepts & architectures (modularity , loose coupling, Microservices )",0,0,2022,2023,1,https://github.com/ahmadsb/Advanced-Software-Development---JAVA-MICROSERVICES
Chain of Responsibility,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Chain of Responsibility,Swift-Chain-Of-Responsibility,Design Patterns in Swift: Chain Of Responsibility,32,1,2016,2024,1,https://github.com/kingreza/Swift-Chain-Of-Responsibility
Chain of Responsibility,co-compose,Implementation of the chain of responsibility design pattern,30,2,2016,2024,4,https://github.com/poppinss/co-compose
Chain of Responsibility,SequentialRules,10larca If-Else'in kullanıldığı bir kurallar silsilesinden Chain of Responsibility ve Strategy Design Pattern kullanarak nasıl Single Responsibility'nin sağlanacağını ve kod okunaklığının arttırılabileceğini gösteren bir örnektir.,25,2,2022,2023,1,https://github.com/borakasmer/SequentialRules
Chain of Responsibility,ChainOfResponsibility-Design-Pattern,Chain of Responsibility Design Pattern,15,0,2018,2024,1,https://github.com/akshayblevel/ChainOfResponsibility-Design-Pattern
Chain of Responsibility,middleware,Implementation of the chain of responsibility design pattern.,15,2,2022,2024,1,https://github.com/poppinss/middleware
Chain of Responsibility,ux-dataflow,UX-Dataflow is a streaming capable data multiplexer that allows you to aggregate data and then process it using a Chain of Responsibility design pattern.,9,2,2021,2024,1,https://github.com/angular-rust/ux-dataflow
Chain of Responsibility,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Chain of Responsibility,chain_of_responsibility,"Symfony implementation of design pattern ""Chain of responsibility""",7,1,2021,2024,1,https://github.com/Cap-Coding/chain_of_responsibility
Chain of Responsibility,design-pattern-chain-of-responsibility,⛓ Project created to study Chain of Responsibility Design Pattern ⛓,6,1,2020,2022,2,https://github.com/talitaoliveira/design-pattern-chain-of-responsibility
Chain of Responsibility,ChainOfResponsibility,Design Pattern - Chain of Responsibility,5,2,2020,2024,1,https://github.com/dotnet-labs/ChainOfResponsibility
Chain of Responsibility,Patterns-ChainOfResponsibility,A perlish variation on the classic Gang of Four design pattern: Chain of Responsibility,5,2,2010,2023,1,https://github.com/jjn1056/Patterns-ChainOfResponsibility
Chain of Responsibility,economy,Economy handler using Chain of Responsibility Design Pattern to handle transactions,5,2,2022,2024,1,https://github.com/pixeldev/economy
Chain of Responsibility,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Chain of Responsibility,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Chain of Responsibility,ChainOfResponsibility,Design Patterns,3,0,2023,2023,1,https://github.com/zehrasbr/ChainOfResponsibility
Chain of Responsibility,PhpDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,3,0,2017,2023,1,https://github.com/Jagepard/PhpDesignPatterns-ChainOfResponsibility
Chain of Responsibility,Logger-LLD,Logger LLD implementation using Chain of Responsibility design pattern,3,0,2022,2023,1,https://github.com/arpit20adlakha/Logger-LLD
Chain of Responsibility,metachainer,Simple implementation of chain of responsibility design pattern using annotations,3,1,2011,2020,2,https://github.com/jolisper/metachainer
Chain of Responsibility,dnn,"deep feedforward neural network with graceful layered OOD,  according to design pattern chain of responsibilities",3,0,2019,2019,1,https://github.com/debridge/dnn
Chain of Responsibility,UdemyCarBook,Asp .Net Core Web API 8.0 - Onion Architecture - CQRS - Mediator -Repository - Unit Of Work - Chain of Responsibility Design Patterns ,3,0,2024,2024,1,https://github.com/sulecelep/UdemyCarBook
Chain of Responsibility,ChainOfResponsibility-Pets,A lighthearted codebase to remind you what a Chain Of Responsibility design pattern looks like,2,3,2022,2023,1,https://github.com/emilybache/ChainOfResponsibility-Pets
Chain of Responsibility,FlyGon.ChainOfResponsibility,Easily use the Chain of Responsibility design pattern.,2,1,2021,2023,1,https://github.com/grecojoao/FlyGon.ChainOfResponsibility
Chain of Responsibility,chain_of_responsibility_pattern,Chain of Responsibility Design Pattern in Java,2,1,2019,2019,1,https://github.com/parsa-JPM/chain_of_responsibility_pattern
Chain of Responsibility,laravel-chain-of-responsibility-example,"Very simple project to show how to use design pattern ""Chain of responsibility""",2,0,2018,2023,1,https://github.com/nkusibojoski/laravel-chain-of-responsibility-example
Chain of Responsibility,Chain-Of-Responsibility,This is a chain of responsibility design pattern. It was designed using Asp.Net Core MVC 6.0 and Microsoft SQL server.,2,0,2024,2025,1,https://github.com/ozangulll/Chain-Of-Responsibility
Chain of Responsibility,Chain-of-Responsibility-pattern-implemention.,"The Chain of Responsibility pattern is one of the twenty-three well-known ""GoF design patterns"" ASP.NET Core applications uses ""The Middleware Pipeline"". The term “pipeline” implies that requests enter one end, are processed by each middleware component in turn, and exit the other end. In reality, the run-time behavior is a variation of the Chain of Responsibility design pattern",2,0,2017,2025,1,https://github.com/atillatan/Chain-of-Responsibility-pattern-implemention.
Chain of Responsibility,DesignPatterns,"DesignPatterns - Padrões Comportamentais - Técnicas de (Strategy, Chain of Responsibility, Template Method, State, Command e Observer)",2,0,2021,2025,1,https://github.com/marcello222/DesignPatterns
Chain of Responsibility,DesignPatterns,"Some design patterns (Singleton, Simple and Abstract Factory, Builder, Facade, Adapter, Chain of Responsibility, Mediator) examples written in C#",2,0,2018,2024,1,https://github.com/alexandra-valkova/DesignPatterns
Chain of Responsibility,WordCounter,"Simple code file analyzer and counter based on Chain of Responsibility Design Pattern,. ",2,0,2018,2023,1,https://github.com/jordonyang/WordCounter
Chain of Responsibility,design-patterns,"This repository was created to study all variations of design patterns existent. Among the design patterns studied are: Strategy, Chain of Responsibility and others  :mortar_board:",2,0,2016,2023,1,https://github.com/carloslimasis/design-patterns
Chain of Responsibility,Advanced_OOP_Cinema_ConsoleApp_FallProject,"The Cinema Management System is a Java-based application that demonstrates the use of key design patterns such as Abstract Factory, Builder, Chain of Responsibility, and Singleton. It simulates interactions between customers, employees, and a cinema database system to manage movie screenings, customer reservations, and employee tasks.",2,0,2024,2024,1,https://github.com/tuanh00/Advanced_OOP_Cinema_ConsoleApp_FallProject
Chain of Responsibility,Serververse,"A server program which can flexibly run an Echo Server or HTTP Server application. Created in Java using test-driven development with a heavy focus on OOP Design including SOLID principles and the Chain of Responsibility design pattern. Previously deployed to AWS AppRunner via Docker, Amazon ECR, and GitHub actions.",2,0,2022,2024,1,https://github.com/karen-olson/Serververse
Chain of Responsibility,ChainOfResponsibility,Design Pattern Chain of Responsibility,1,0,2020,2020,0,https://github.com/bsntas/ChainOfResponsibility
Chain of Responsibility,chainOfResponsibility,A design pattern in Java.,1,1,2017,2018,2,https://github.com/zoeleesss/chainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityPattern,Behavioral Design Pattern in C#,1,0,2020,2022,1,https://github.com/J0rgeSerran0/ChainOfResponsibilityPattern
Chain of Responsibility,ChainOfResponsibility,Get easily started using the ChainOfResponsibility Design Pattern,1,0,2020,2022,1,https://github.com/wireless90/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,A Simple Calculator using Chain Of Responisibility Design Pattern,1,0,2021,2021,1,https://github.com/ArmanZiaei83/ChainOfResponsibility
Chain of Responsibility,DesignPattern_ChainOfResponsibility,Chain of Responsibility Design pattern in Java with examples.,1,0,2023,2023,1,https://github.com/moaydogdu/DesignPattern_ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility-DesignPatterns-,https://refactoring.guru/pt-br/design-patterns/chain-of-responsibility,1,0,2022,2022,1,https://github.com/CesarChiodi/ChainOfResponsibility-DesignPatterns-
Chain of Responsibility,chain-of-responsibility,Chain Of Responsibility design pattern.,1,0,2020,2020,1,https://github.com/plvhx/chain-of-responsibility
Chain of Responsibility,ChainOfResponsibility,This is a sample for implementing Chain Of Responsibility Design Pattern using C#,1,0,2023,2024,1,https://github.com/bluescreen1999/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityImplementation,Learn the Chain of Responsibility Design Pattern in .NET C# with enhancements.,1,1,2021,2023,1,https://github.com/AhmedTarekHasan/ChainOfResponsibilityImplementation
Chain of Responsibility,UnityDesignPatterns-ChainOfResponsibility,A simple example on the chain of responsibility design pattern.,1,0,2019,2022,1,https://github.com/Lootheo/UnityDesignPatterns-ChainOfResponsibility
Chain of Responsibility,chain-of-responsibility,Chain of Responsibility Design Pattern Example,1,0,2021,2021,1,https://github.com/jorgecortesdev/chain-of-responsibility
Chain of Responsibility,MyAcademy_DesignPattern_ChainOfResponsibility,Design Patterns-Chain of Responsibility  Asp .Net Core 6.0,1,0,2023,2024,1,https://github.com/saadetcatak/MyAcademy_DesignPattern_ChainOfResponsibility
Chain of Responsibility,Insurance-Management-System,"A simulation of Insurance Management system using MVC architecture with Facade, Chain of responsibility and Singleton design patterns",1,2,2023,2024,1,https://github.com/Keshavaram/Insurance-Management-System
Chain of Responsibility,Ex10-Chain-of-Responsibility,05506230-Design Patterns In Object-Oriented Programming,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex10-Chain-of-Responsibility
Chain of Responsibility,DesignPattern-Chain-of-Responsibility,Example implementation of Chain of Responsibility design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Chain-of-Responsibility
Chain of Responsibility,Chain_of_Responsibility_design_pattern,Chain of Responsibility Design Pattern for shopign basket,1,0,2023,2023,1,https://github.com/AliYazdanifar/Chain_of_Responsibility_design_pattern
Chain of Responsibility,Chain-Of-Responsibility,*** IN PROGRESS *** Demonstration of the Chain of Responsibility Behavioral Design Pattern in C#.,1,0,2020,2022,1,https://github.com/Ashley-Gibson/Chain-Of-Responsibility
Chain of Responsibility,DesignPatterns,Strategy & Chain Of Responsibility,1,0,2024,2024,1,https://github.com/kaanberatt/DesignPatterns
Chain of Responsibility,chain_of_responsibility_design_pattern,Implementation of the chain of responsibility design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/chain_of_responsibility_design_pattern
Chain of Responsibility,InspimoDesignPattern1,Chain of Responsibility Design Pattern Sample ,1,0,2023,2023,1,https://github.com/erhangndz/InspimoDesignPattern1
Chain of Responsibility,Asp-Net-Core-Chain-Of-Responsibility-Design-Pattern,Asp Net Core Chain Of Responsibility Design Pattern,1,0,2024,2024,1,https://github.com/muratbodur/Asp-Net-Core-Chain-Of-Responsibility-Design-Pattern
Chain of Responsibility,Chain-of-Responsibility-Design-Patterns,Implementação do Design Pattern Chain of Responsibility feito na Cadeira de Análise e Projeto de Sistemas II da UNI7 - Documentação e Apresentação: https://void-space.gitbook.io/chain-of-responsibility,1,0,2024,2024,1,https://github.com/mathewvieira/Chain-of-Responsibility-Design-Patterns
Chain of Responsibility,chain,Kidding with  chain of responsibility design pattern,1,0,2021,2022,1,https://github.com/phlllpe/chain
Chain of Responsibility,MiddlewarePipelineDemo,Chain of Responsibility Design Pattern Demo in C#,1,0,2023,2023,1,https://github.com/AndrewRober/MiddlewarePipelineDemo
Chain of Responsibility,Design-Pattern-Chain_Of_Resosibility_Demo,Implementation of chain of responsibility design pattern in C#,1,0,2020,2022,0,https://github.com/AntarikshVerma/Design-Pattern-Chain_Of_Resosibility_Demo
Chain of Responsibility,Chaine_Responsabilite,Roguelike dungeon crawler showcasing the Chain of Responsibility design pattern,1,0,2024,2024,4,https://github.com/Neroil/Chaine_Responsabilite
Chain of Responsibility,pipeline,An implementation based on the Chain of Responsibility (aka CoR) design pattern,1,0,2023,2025,1,https://github.com/stonemjs/pipeline
Chain of Responsibility,OSI-model-implementation,OSI model implementation in java language using chain of responsibility design pattern,1,0,2022,2022,1,https://github.com/Sardarwali123/OSI-model-implementation
Chain of Responsibility,COR_Design_Pattern_Swift,This is a Swift 3.0 implementation of the Chain of Responsibility design pattern ,1,0,2016,2017,1,https://github.com/talezion/COR_Design_Pattern_Swift
Chain of Responsibility,go-configurable-chain,Use the Chain of Responsibility design pattern to modify app behavior based on configuration changes,1,0,2021,2021,1,https://github.com/bygui86/go-configurable-chain
Chain of Responsibility,chain-of-responsability,"chain of responsibility is a design pattern, often used to create classes with unique responsibilities",1,0,2021,2021,1,https://github.com/devjosecarlosteles/chain-of-responsability
Chain of Responsibility,File-Upload-Download-Microservice-using-Asp-Net-Core-Web-APi,Implemented File Uplaod/Download functionality and Done File Validations using Chain-Of-Responsibility Design Pattern,1,0,2024,2024,1,https://github.com/krishnasonune/File-Upload-Download-Microservice-using-Asp-Net-Core-Web-APi
Chain of Responsibility,Game_Server-MMO_TCP_Lightweight_Concurrent_Server_Framework-Zinx,【Linux+ Oracle + C/Cpp + Design Pattern: Chain of Responsibility】A TCP Lightweight Concurrent Server Framework,1,0,2023,2024,1,https://github.com/Chufeng-Jiang/Game_Server-MMO_TCP_Lightweight_Concurrent_Server_Framework-Zinx
Chain of Responsibility,design-patterns-library2,"Sistema bibliotecário com padrões de projetos: Composite, Chain of responsibility, Decorator, Proxy, Static factory method e Singleton",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library2
Chain of Responsibility,Car-Book,"Project Using CQRS, Mediator, .Net8, Onion Architecture, Repository, Unit of Work, Chain of Responsibility Design Patterns.",1,1,2023,2023,1,https://github.com/enessariyildiz/Car-Book
Chain of Responsibility,workflow-engine,"Simple workflow engine implemented in Java by utilizing several design patterns like Chain Of Responsibility, Strategy, Criteria",1,0,2019,2019,1,https://github.com/nimvb/workflow-engine
Chain of Responsibility,EsiMealApp,"a flutter mobile app for restaurant management  implementig design patterns (chain of responsibility, decorator, factory method, singleton, strategy and facade).",1,1,2020,2020,2,https://github.com/Sihamtahi/EsiMealApp
Chain of Responsibility,desktop-application-for-quick-customer-handle,"This is a desktop application (Java) that can handle customer food orders quickly. This application is made using 6 different design patterns. Such as builder, decorator, fly-weight, interpreter, chain of responsibility and mediator design patterns.",1,0,2024,2024,1,https://github.com/Varnitha12345/desktop-application-for-quick-customer-handle
Chain of Responsibility,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Chain of Responsibility,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Chain of Responsibility,ChainOfResponsibility,Design Pattern,0,0,2024,2024,1,https://github.com/elfrkn/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/ChainOfResponsibility
Chain of Responsibility,DP_chainOfResponsibility2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_chainOfResponsibility2
Chain of Responsibility,ChainOfResponsibility,design pattern----COR,0,0,2019,2019,1,https://github.com/wyhuiii/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Behavioral Design Pattern in C# | Chain Of Responsibility Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/ChainOfResponsibility
Chain of Responsibility,DP_chainOfResponsibility1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_chainOfResponsibility1
Chain of Responsibility,ChainOfResponsibility-3,Behavioral Design Pattern in C# | Chain Of Responsibility Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/ChainOfResponsibility-3
Chain of Responsibility,ChainOfResponsibility-2,Behavioral Design Pattern in C# | Chain Of Responsibility Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/ChainOfResponsibility-2
Chain of Responsibility,ChainOfResponsibility,Design pattern Chain Responsibility,0,0,2022,2022,1,https://github.com/fagenius/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Design Patterns: Chain of Resposibility,0,0,2022,2022,1,https://github.com/blaquekaktus/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Chain of Responsibility Design Pattern,0,0,2021,2021,1,https://github.com/PrafulSrivastava/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Project for Design Pattern Course,0,0,2020,2020,1,https://github.com/Rinatum/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Chain Of Responsibility Design Pattern Example,0,0,2020,2020,1,https://github.com/ParthContractor/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,uses iterator and other design patterns,0,0,2018,2018,1,https://github.com/pikede/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityDesignPattern,Chain Of Responsibility Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/ChainOfResponsibilityDesignPattern
Chain of Responsibility,dcc078_chainOfResponsibility,Design Pattern - Chain of Responsibility,0,0,2019,2019,0,https://github.com/gabrielnascimento95/dcc078_chainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,A design pattern ChainOfResponsability in java implementation,0,0,2016,2016,0,https://github.com/sinzen/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityDP,Chain of Responsibility Design Pattern Example,0,0,2022,2023,1,https://github.com/themervez/ChainOfResponsibilityDP
Chain of Responsibility,ChainOfResponsibility,Design Patterns - Chain of Responsibility in C#,0,1,2024,2024,1,https://github.com/Juanrii/ChainOfResponsibility
Chain of Responsibility,chain-of-responsibility,design pattern ,0,0,2020,2020,1,https://github.com/parshev/chain-of-responsibility
Chain of Responsibility,ChainOfResponsibility,Chain of Responsibility Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Implementation of Chain Of Responsibility Design Pattern,0,0,2023,2023,1,https://github.com/genpactgithub/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityDesign,LLD for Chain of Responsibility Design Pattern,0,0,2022,2023,1,https://github.com/abhishekjais-124/ChainOfResponsibilityDesign
Chain of Responsibility,DesingPattern_ChainOfResponsibility,Exemplo Design Pattern Chain Of responsibility,0,0,2021,2021,1,https://github.com/MarcoADeCSilva/DesingPattern_ChainOfResponsibility
Chain of Responsibility,3-2-DesignPatterns-ChainOfResponsibility,"Design Patterns in Object-Oriented Programming tenth Tasks ""Chain Of Responsibility Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityDemo,Demo of Chain of Responsibility Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/ChainOfResponsibilityDemo
Chain of Responsibility,ChainOfResponsibility-01,"Design Pattern, Chain of Responsibility, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/ChainOfResponsibility-01
Chain of Responsibility,ChainsOfResponsibilityExample,Design patterns: Simple Chanis of Responsibility Example ,0,0,2020,2020,1,https://github.com/pkarparov/ChainsOfResponsibilityExample
Chain of Responsibility,ChainOfResponsibility,Chain of Responsibility Design Pattern example with Builder,0,0,2019,2019,1,https://github.com/bonggalshn/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Getting started with behavioral design patterns using C#,0,0,2019,2019,1,https://github.com/MarcinSredzinski/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Academic project presenting  design pattern chain of responsibility. ,0,0,2021,2021,1,https://github.com/WojciechKrawczyk/ChainOfResponsibility
Chain of Responsibility,padrao_chain_of_responsibility,Design Pattern,0,0,2019,2019,1,https://github.com/suzysouto/padrao_chain_of_responsibility
Chain of Responsibility,java_gof_chainOfResponsibility,"design pattern ""chain of responsibility"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_chainOfResponsibility
Chain of Responsibility,CSR-2_ChainOfResponsibility,The specification for the ChainOfResponsibility design pattern,0,1,2017,2017,1,https://github.com/cscfaCsrDivision/CSR-2_ChainOfResponsibility
Chain of Responsibility,Chain-Of-Responsibility,Design Pattern - Behavioural,0,0,2017,2017,1,https://github.com/mhtmalpani/Chain-Of-Responsibility
Chain of Responsibility,ChainOfResponsibility,C# Implementation of the Chain of Responsibility Design Pattern,0,0,2023,2023,0,https://github.com/slomangino123/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,An implementation of the Chain Of Responsibility design pattern,0,0,2019,2019,1,https://github.com/J-Jardine/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,3 Different Examples about Chain Of Responsibility Design pattern,0,0,2023,2023,0,https://github.com/TheAbdulkadir27/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,C#  project to demonstrate Chain of Responsibility Design pattern,0,0,2018,2018,0,https://github.com/sunnymehra10/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Short usage demo of the design pattern 'Chain of Responsibility',0,0,2021,2021,1,https://github.com/arcenon/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityDP,Simple project that implements chain of responsibility design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/ChainOfResponsibilityDP
Chain of Responsibility,ChainOfResponsibilityExample,An example of the Chain Of Responsibility Design Pattern.,0,0,2019,2019,1,https://github.com/KobeVsPortfolio/ChainOfResponsibilityExample
Chain of Responsibility,CodingShikshak-ChainOfResponsibility,Chain of Responsibility design pattern implementation using C#,0,0,2020,2020,1,https://github.com/ashishKumarAgarwal/CodingShikshak-ChainOfResponsibility
Chain of Responsibility,chainOfResponsibility-design-pattern,Sample java project for chain of responsibility design pattern,0,0,2024,2024,0,https://github.com/zuzusann/chainOfResponsibility-design-pattern
Chain of Responsibility,ChainOfResponsibility,Repo for chain of responsibility design pattern tutorial  from tutorialspoint.com,0,0,2021,2021,1,https://github.com/glennfrutizHCL/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,A simple C# implementation of the Chain of Responsibility design pattern.,0,0,2018,2021,0,https://github.com/philjohnson74/ChainOfResponsibility
Chain of Responsibility,chainOfResponsibility,Basic implementation of the Chain Of Responsibility design pattern in C++.,0,0,2022,2022,0,https://github.com/BenjaminDls/chainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityProject,I learned chain of responsibility design pattern with Murat Yücedağ,0,0,2024,2024,1,https://github.com/Kadirgvn92/ChainOfResponsibilityProject
Chain of Responsibility,DesignPatterns_ChainOfResponsibility,,0,0,2025,2025,1,https://github.com/Freedom-Coding/DesignPatterns_ChainOfResponsibility
Chain of Responsibility,DesignPatterns-ChainOfResponsibility,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-ChainOfResponsibility
Chain of Responsibility,DesignPatterns-ChainOfResponsibility,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-ChainOfResponsibility
Chain of Responsibility,DesignPatterns.ChainOfResponsibility,,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.ChainOfResponsibility
Chain of Responsibility,designPatterns-chainOfResponsibility,,0,0,2016,2016,1,https://github.com/i78/designPatterns-chainOfResponsibility
Chain of Responsibility,DesignPatterns_ChainOfResponsibility,,0,0,2022,2023,1,https://github.com/GioGKS/DesignPatterns_ChainOfResponsibility
Chain of Responsibility,DESIGN_PATTERN_ChainOfResponsibility, Source code demo cho Design Pattern Chain of Responsibility,0,0,2021,2021,1,https://github.com/mirushi/DESIGN_PATTERN_ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Simple model of regisration / authentication that follows Chain of Responsibility design pattern.,0,0,2023,2024,1,https://github.com/cuprum-acid/ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibility,Estudos relacionados a C# - Design Patterns: (Chain Of Responsibility). Projeto Console Application,0,0,2021,2021,1,https://github.com/JTBCode86/ChainOfResponsibility
Chain of Responsibility,Chain_of_Responsibility,Design Pattern - Chain of responsibility,0,0,2020,2020,1,https://github.com/ShardulAswale/Chain_of_Responsibility
Chain of Responsibility,Chain-of-Responsibility,Chain of Responsibility (design pattern),0,0,2020,2020,1,https://github.com/KorneliaJagodzinska/Chain-of-Responsibility
Chain of Responsibility,chain-of-responsibility,Design Patterns - Chain of Responsibility,0,0,2015,2015,1,https://github.com/hzuim/chain-of-responsibility
Chain of Responsibility,chainOfResponsibility_java,A simple program to demonstrate the Chain of Responsibility Design Pattern.,0,0,2015,2015,1,https://github.com/RichJones22/chainOfResponsibility_java
Chain of Responsibility,chainOfResponsibility_cpp,A simple program to demonstrate the Chain of Responsibility Design Pattern.,0,0,2015,2015,1,https://github.com/RichJones22/chainOfResponsibility_cpp
Chain of Responsibility,chainOfResponsibility_php,A simple program to demonstrate the Chain of Responsibility Design Pattern. ,0,0,2015,2015,1,https://github.com/RichJones22/chainOfResponsibility_php
Chain of Responsibility,Chain-of-Responsibility,Design patterns et architectures logicielles,0,0,2021,2021,1,https://github.com/mahdimoussafia/Chain-of-Responsibility
Chain of Responsibility,ChainOfResponsibility490,A project demonstrating the chain of responsibility design pattern for CSC-490.,0,0,2020,2020,2,https://github.com/tylerastraub/ChainOfResponsibility490
Chain of Responsibility,Xperiments.DesignPatterns.ChainOfResponsibility,A little implementation of Chain Of Responsibility pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.ChainOfResponsibility
Chain of Responsibility,DesignPatterns-Behavioral-ChainOfResponsibility,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-ChainOfResponsibility
Chain of Responsibility,DesignPatterns-ChainOfResponsibility2,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-ChainOfResponsibility2
Chain of Responsibility,DesignPatterns-Beh-ChainOfResponsibility,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Beh-ChainOfResponsibility
Chain of Responsibility,ChainOfResponsibilityDP,This is an example codes implemented by Chain Of Responsibility Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/ChainOfResponsibilityDP
Chain of Responsibility,chain-of-responsibility,Chain of Responsibility design pattern presentation,0,0,2015,2015,0,https://github.com/developerdizzle/chain-of-responsibility
Chain of Responsibility,ChainOfResponsibility-DesignPattern,This repository contains an implementation of Chain of Responsibilty design pattern.,0,0,2020,2021,1,https://github.com/alcebiadesogamas/ChainOfResponsibility-DesignPattern
Chain of Responsibility,chain-of-responsibility,Chain of Responsibility Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/chain-of-responsibility
Chain of Responsibility,put-miasi-chain-of-responsibility,Design pattern for MiASI,0,0,2017,2017,1,https://github.com/marcin-jablonski/put-miasi-chain-of-responsibility
Chain of Responsibility,chain_of_responsibility-pattern,Design pattern: Chain of Responsibility ,0,0,2021,2021,1,https://github.com/TomSawyer404/chain_of_responsibility-pattern
Chain of Responsibility,Chain-of-Responsibility,Behavioral Design Patterns: Chain of Responsibility,0,0,2023,2023,1,https://github.com/samehesmael277/Chain-of-Responsibility
Chain of Responsibility,laravel-ChainOfResponsibility,Implementation of chain of responsibility design pattern for an online shop in laravel,0,0,2022,2022,1,https://github.com/alipileforooshha/laravel-ChainOfResponsibility
Chain of Responsibility,Chain-of-Responsibility,Implementation of design pattern Chain of Responsibility,0,0,2018,2018,1,https://github.com/muska2203/Chain-of-Responsibility
Chain of Responsibility,chain-of-responsibility,A Behavioural Design Pattern : Chain of Responsibility,0,0,2019,2020,1,https://github.com/chandan-n-bhat/chain-of-responsibility
Chain of Responsibility,ChainOfResponsibility,M&Y Yazılım Eğitim Akademi Danışmanlık bünyesinde Chain of Responsibility Design Pattern öğrenmek için yapılan Proje,0,1,2024,2024,1,https://github.com/busenurdmb/ChainOfResponsibility
Chain of Responsibility,Chain-Of-Responsibility,Implementation of Chain Of Responsibility design pattern.,0,0,2019,2019,0,https://github.com/eulersexception/Chain-Of-Responsibility
Chain of Responsibility,PatternChainOfResponsibility,"Design Pattern, Chain Of Responsibility pattern",0,0,2020,2020,1,https://github.com/VinCleanCode/PatternChainOfResponsibility
Chain of Responsibility,Chain-Of-Responsibility,Represents using design pattern the Chain of Responsibility,0,0,2017,2018,1,https://github.com/AndriyGd/Chain-Of-Responsibility
Chain of Responsibility,chain_of_responsibility,impltmentation of chain of responsibility design pattern C#,0,0,2021,2021,1,https://github.com/causesauce/chain_of_responsibility
Chain of Responsibility,ChainOfResponsibilityTutorial,"Source code examples describes design pattern Chain of responsibility, also is describe in blog devman.pl",0,0,2017,2017,1,https://github.com/Slaw145/ChainOfResponsibilityTutorial
Chain of Responsibility,chain-of-responsibility,"design pattern: chain-of-responsibility, implements in rust.",0,0,2020,2020,1,https://github.com/yuer1727/chain-of-responsibility
Chain of Responsibility,chain-of-responsibility,Extendable class for Chain of Responsibility design pattern.,0,0,2017,2021,1,https://github.com/houdini22/chain-of-responsibility
Chain of Responsibility,engComp.padroesDeProjeto.chainOfResponsibility,Chain of Reposibility design pattern in java based on Derek Banas video,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.chainOfResponsibility
Chain of Responsibility,chain-of-responsibility,Projeto simples para mostrar design pattern chain of responsability,0,0,2024,2024,1,https://github.com/iagoholekdev/chain-of-responsibility
Chain of Responsibility,chain-of-responsibility,A basic example of chain of responsibility design pattern,0,0,2024,2024,1,https://github.com/0cto-pus/chain-of-responsibility
Chain of Responsibility,Chain-of-Responsibility,Class Structure explaining the Chain of Responsibility Design Pattern,0,0,2016,2016,1,https://github.com/fpanico/Chain-of-Responsibility
Chain of Responsibility,chain-of-responsibility-improved,Chain of responsibility design pattern - payment demo improved,0,0,2022,2022,1,https://github.com/jebarcha/chain-of-responsibility-improved
Chain of Responsibility,chain-of-responsibility-pattern,Chain of responsibility design pattern demo in C#,0,0,2022,2022,1,https://github.com/jebarcha/chain-of-responsibility-pattern
Chain of Responsibility,symfony-chain-of-responsibility,Illustrating Chain of resposibility design pattern using symfony,0,0,2024,2024,2,https://github.com/mrbahadoor/symfony-chain-of-responsibility
Chain of Responsibility,design_patterns_Chain_Of_Responsibility_Pattern,Design Patterns - Chain Of Responsibility Pattern,0,0,2024,2024,1,https://github.com/kevintsengtw/design_patterns_Chain_Of_Responsibility_Pattern
Chain of Responsibility,JavaDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,0,0,2020,2020,1,https://github.com/Jagepard/JavaDesignPatterns-ChainOfResponsibility
Chain of Responsibility,design-pattern-chain-of-responsibility,GOF Chain Of Responsibility behavorial design pattern,0,0,2014,2020,1,https://github.com/a-cordier/design-pattern-chain-of-responsibility
Chain of Responsibility,PyDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,0,0,2020,2020,1,https://github.com/Jagepard/PyDesignPatterns-ChainOfResponsibility
Chain of Responsibility,RbDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,0,0,2020,2020,1,https://github.com/Jagepard/RbDesignPatterns-ChainOfResponsibility
Chain of Responsibility,JsDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,0,0,2020,2020,1,https://github.com/Jagepard/JsDesignPatterns-ChainOfResponsibility
Chain of Responsibility,CsDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,0,0,2020,2020,1,https://github.com/Jagepard/CsDesignPatterns-ChainOfResponsibility
Chain of Responsibility,CppDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,0,0,2020,2020,1,https://github.com/Jagepard/CppDesignPatterns-ChainOfResponsibility
Chain of Responsibility,chain_of_responsibility_E1,example of chain of responsibility design pattern ,0,0,2023,2023,1,https://github.com/SajithSUA/chain_of_responsibility_E1
Chain of Responsibility,Chain-of-Responsibility-design-pattern,Usage of Chain of Responsibility design pattern,0,0,2022,2022,0,https://github.com/hazeemcool/Chain-of-Responsibility-design-pattern
Chain of Responsibility,GoDesignPatterns-ChainOfResponsibility,ChainOfResponsibility,0,0,2020,2020,1,https://github.com/Jagepard/GoDesignPatterns-ChainOfResponsibility
Chain of Responsibility,chain_of_responsibility,Implementation of the design pattern chain of responsibility in Java,0,0,2019,2019,1,https://github.com/cherifyounouss/chain_of_responsibility
Chain of Responsibility,chain-of-responsibility,C++ library that implements chain of responsibility design pattern template,0,0,2023,2023,1,https://github.com/konstantin89/chain-of-responsibility
Chain of Responsibility,PatternChainOfResponsibility,🎓Project: Chain of responsability design pattern in Java,0,0,2017,2019,1,https://github.com/Jeremy38100/PatternChainOfResponsibility
Chain of Responsibility,poc-chain-of-responsibility,A simple poc about chain of responsibility design pattern,0,0,2024,2024,1,https://github.com/matheuscarv69/poc-chain-of-responsibility
Chain of Responsibility,Behavioral-Chain-of-Responsibility,Short implementation of Behavioral Design Pattern: Chain of Responsibility,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Chain-of-Responsibility
Chain of Responsibility,java-chain-of-responsibility,This Project Implementation the Chain of Responsibility Design Patterns,0,0,2020,2021,1,https://github.com/phelliperodrigues/java-chain-of-responsibility
Chain of Responsibility,DesignPatterns,Chain Of Responsibility ,0,0,2020,2020,0,https://github.com/mkashef88/DesignPatterns
Chain of Responsibility,chain-of-responsibility-pattern-payments,Chain of responsibility design pattern - a Payment demo,0,0,2022,2022,1,https://github.com/jebarcha/chain-of-responsibility-pattern-payments
Chain of Responsibility,chain-of-responsibility-design-pattern,Implement chain of responsibility design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/chain-of-responsibility-design-pattern
Chain of Responsibility,Chain-of-Responsibility-design-pattern-PHP-,Chain of Responsibility design pattern  PHP  Example ,0,0,2018,2018,0,https://github.com/sahedsawon/Chain-of-Responsibility-design-pattern-PHP-
Chain of Responsibility,chain.of.responsibility,This app describe how to use chain of responsibility design pattern ,0,0,2023,2023,1,https://github.com/ttemurtas/chain.of.responsibility
Chain of Responsibility,chainofresponsibility,Design Pattern Chain of Responsibility,0,0,2020,2020,1,https://github.com/mydesignpatters/chainofresponsibility
Chain of Responsibility,ChainofResponsibilityDesignPattern,Chain of responsibility Design Pattern,0,0,2019,2019,1,https://github.com/massecre2/ChainofResponsibilityDesignPattern
Chain of Responsibility,ChainOfResp,Chain of responsibility design pattern,0,0,2016,2016,0,https://github.com/rameshsanap/ChainOfResp
Chain of Responsibility,Chain-Of-Responsibility-Pattern,The Chain Of Responsibility pattern is a software design pattern.,0,0,2016,2016,1,https://github.com/cuiwl/Chain-Of-Responsibility-Pattern
Chain of Responsibility,chain_of_responsibility,Application of the Design Pattern Chain of Responsibillity in a banking validation,0,0,2024,2024,1,https://github.com/nellystanford/chain_of_responsibility
Chain of Responsibility,Chain-of-responsibility-pattern-example,Chain of Responsiblity Design pattern example by Java9s.com,0,1,2016,2016,1,https://github.com/java9s/Chain-of-responsibility-pattern-example
Chain of Responsibility,Chain-of-Responsibility-Design-Pattern,Implementation of chain of responsibility design pattern in Python,0,0,2024,2024,1,https://github.com/kumarshantam99/Chain-of-Responsibility-Design-Pattern
Chain of Responsibility,Design-Pattern-Chain-Of-Responsibility,implemented chain of responsibility design pattern for file processing,0,0,2023,2023,1,https://github.com/krishnasonune/Design-Pattern-Chain-Of-Responsibility
Chain of Responsibility,ChainOfResponsibilityInPractice,A code sample which applies Chain of Responsibility design pattern to enable decoupling configuration from programming (decoupling organizing from doing per GTD),0,0,2018,2018,1,https://github.com/son-nd-niteco/ChainOfResponsibilityInPractice
Chain of Responsibility,chain-of-responsibility-design-pattern,Example implementation of the chain of responsibility design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/chain-of-responsibility-design-pattern
Chain of Responsibility,php-design-patterns-chain-of-responsibility,PHP Design Patterns - Chain of Responsibility Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-chain-of-responsibility
Chain of Responsibility,ChainOfResponsibility,"""Please write a program in Java demonstrating the usage of chain of responsibility design pattern and submit the code to GitHub and send us back the solution (GitHub link).""",0,0,2023,2023,1,https://github.com/tlovrekovic/ChainOfResponsibility
Chain of Responsibility,poker-chain-of-responsibility,"JAVA CML Poker game, using the chain of responsibility design pattern",0,0,2022,2022,1,https://github.com/sam-nazarian/poker-chain-of-responsibility
Chain of Responsibility,Chain-of-Responsibility-Design-Pattern,Chain of Responsibility Design Pattern in Java using purchase authorization,0,0,2021,2021,1,https://github.com/Kensaigm/Chain-of-Responsibility-Design-Pattern
Chain of Responsibility,Chain-Of-Responsibility-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Chain-Of-Responsibility-Pattern
Chain of Responsibility,chain-of-responsibility,Chain Of Responsibility Design Pattern'i bir banka şubesi simülasyonu ile özetlediğim mini proje.,0,0,2024,2024,1,https://github.com/metav1sion/chain-of-responsibility
Chain of Responsibility,chain-of-responsibility-design-pattern-php,Simple implementation of chain of responsibility design pattern in PHP,0,0,2019,2019,1,https://github.com/bdaler/chain-of-responsibility-design-pattern-php
Chain of Responsibility,PokemonChainOfResponsibility,This exercise is to implement chain of responsibility design pattern implementing linked lists,0,0,2023,2023,1,https://github.com/laqg/PokemonChainOfResponsibility
Chain of Responsibility,chain_of_responsibility_design_pattern_implementation,Implementation of the chain of responsibility design pattern in Java,0,0,2024,2024,1,https://github.com/juancamilocorralesosvath/chain_of_responsibility_design_pattern_implementation
Chain of Responsibility,CS372Final,Chain Of Responsibility Design Pattern Example,0,0,2018,2018,1,https://github.com/cjlasley/CS372Final
Chain of Responsibility,chain-of-responsibility-go,Source: https://refactoring.guru/design-patterns/chain-of-responsibility/go/example#example-0,0,0,2022,2022,1,https://github.com/fabiorubim/chain-of-responsibility-go
Chain of Responsibility,chainofresponsibilitydp,design pattern of chain of responsibility,0,0,2021,2021,1,https://github.com/kumarbariks/chainofresponsibilitydp
Chain of Responsibility,week11Ex3,Demonstrates Chain of responsibility Design Pattern,0,0,2022,2022,1,https://github.com/gsiguenza12/week11Ex3
Chain of Responsibility,chain_of_responsibility_design_pattern_flutter,Chain of Responsibility Design Pattern in Flutter 18 June 2023,0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/chain_of_responsibility_design_pattern_flutter
Chain of Responsibility,MimariTasarimlarFinal,Chain of Responsibility Design Pattern Example,0,0,2021,2021,1,https://github.com/mustafaArik/MimariTasarimlarFinal
Chain of Responsibility,chain-of-responsability,Chain of Responsibility Design Pattern Example,0,0,2023,2023,1,https://github.com/tbdbatista/chain-of-responsability
Chain of Responsibility,ATMDispenser,Java design pattern (chain of responsibility),0,0,2023,2023,1,https://github.com/Siddhartha-Shaw/ATMDispenser
Chain of Responsibility,Chain-of-Responsibility-Iterator-patterns,Chain of responsibility and iterator design patterns on java in restaurant example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Chain-of-Responsibility-Iterator-patterns
Chain of Responsibility,Chain-Of-Responsibility-Example,This repository contains an example of chain of responsibility design pattern developed with Java.,0,0,2022,2023,1,https://github.com/masoudmahmoodzadeh/Chain-Of-Responsibility-Example
Chain of Responsibility,DelegateEvent1,Behavioral Design Pattern in C# | Chain Of Responsibility Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/DelegateEvent1
Chain of Responsibility,java-simple-chain-of-responsibility-design-pattern,A simple implementation of the chain of responsibility design pattern,0,0,2022,2022,1,https://github.com/Buncarski/java-simple-chain-of-responsibility-design-pattern
Chain of Responsibility,chain-of-responsibility-sample,This is a tutorial project for implementing the Chain of Responsibility design pattern in PHP,0,0,2016,2016,1,https://github.com/rakista112/chain-of-responsibility-sample
Chain of Responsibility,chain-of-responsibility-pattern,Simple React app that implements the Chain of Responsibility design pattern to render chat components.,0,0,2024,2024,1,https://github.com/kenn7575/chain-of-responsibility-pattern
Chain of Responsibility,BehavioralDesignPatterns,Chain of Responsibility,0,0,2020,2020,0,https://github.com/smeghnathi/BehavioralDesignPatterns
Chain of Responsibility,chain_of_responsibility,"Trabalho de Programação usando design patterns e a pedido do professor , realizei o padrão de cadeias de responsabilidades  ",0,0,2023,2023,1,https://github.com/beto-ads/chain_of_responsibility
Chain of Responsibility,chain_of_responsibility_pattern,Chain of responsibility design pattern implemented in Java with an example of different checks during login.   ,0,0,2024,2024,1,https://github.com/SarvarVanoo/chain_of_responsibility_pattern
Chain of Responsibility,Design_patterns_chain_of_responsibility,,0,0,2022,2022,1,https://github.com/AnnaGawrysiak/Design_patterns_chain_of_responsibility
Chain of Responsibility,Design-Patterns-Chain-of-Responsibility,,0,0,2023,2023,1,https://github.com/roman-lehendzevych-vitech/Design-Patterns-Chain-of-Responsibility
Chain of Responsibility,design_patterns__chain_of_responsibility,,0,0,2022,2022,1,https://github.com/catalunha/design_patterns__chain_of_responsibility
Chain of Responsibility,design_pattern_chain_of_responsibility,"Develop a system that uses the pattern given in class. ""Chain of responsibility"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_chain_of_responsibility
Chain of Responsibility,design-patterns-chain-of-responsibility,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-chain-of-responsibility
Chain of Responsibility,BYT-TASK-1,Calculator using chain of responsibility design pattern,0,0,2023,2023,1,https://github.com/Lena0020/BYT-TASK-1
Chain of Responsibility,calculator-python,Calculator with Chain of Responsibility design pattern,0,1,2017,2017,1,https://github.com/michal93cz/calculator-python
Chain of Responsibility,Simple_local_server,Implementation of Chain of responsibility design pattern,0,0,2019,2020,1,https://github.com/Pietrov98/Simple_local_server
Chain of Responsibility,cashregister,Chain of Responsibility Design Pattern in Typescript,0,0,2021,2021,1,https://github.com/letsandeepio/cashregister
Chain of Responsibility,go-chainofresponsibility,chain of responsibility design pattern in go,0,0,2020,2020,1,https://github.com/SrmHitter9062/go-chainofresponsibility
Chain of Responsibility,ImageFileValidation,Implementation of Chain of Responsibility design pattern,0,0,2023,2023,1,https://github.com/Leni52/ImageFileValidation
Chain of Responsibility,Chain-Of-Responsibility-Desing-Pattern, An example of a design pattern to be used in systems where chained transactions are made,0,0,2024,2024,1,https://github.com/yunusyiilmaz/Chain-Of-Responsibility-Desing-Pattern
Chain of Responsibility,CS5800_HW8_StateAndChainOfResponsibility,CS5800 HW 8 Representing State and Chain of Responsibility Design Patterns,0,0,2024,2024,1,https://github.com/DanielVAppel/CS5800_HW8_StateAndChainOfResponsibility
Chain of Responsibility,netty-design-patterns-chain-of-responsibility,,0,1,2020,2022,3,https://github.com/surandor/netty-design-patterns-chain-of-responsibility
Chain of Responsibility,DesignPatterns,Padrão de Projeto  Strategy e  Chain of Responsibility,0,0,2014,2014,1,https://github.com/BrunoBS/DesignPatterns
Chain of Responsibility,atm,Project to study Chain of Responsibility Design Pattern,0,0,2018,2018,1,https://github.com/sidneynakatani/atm
Chain of Responsibility,Logger,Designed Logger with Chain of Responsibility Design Pattern,0,0,2024,2024,1,https://github.com/kanaparthiphani1/Logger
Chain of Responsibility,ElectroShp,"Example of the ""Chain of Responsibility"" design pattern",0,0,2022,2022,1,https://github.com/sergeshein/ElectroShp
Chain of Responsibility,ChainOfResponsiblitiesDemo,Chain of Responsibility Design Pattern demo in Java,0,0,2020,2020,1,https://github.com/etEthiopia/ChainOfResponsiblitiesDemo
Chain of Responsibility,Virtualdars.DesignPatterns.ChainOfResp,Chain Of Responsibility Design Pattern implementation in C#,0,0,2022,2023,1,https://github.com/dFarkhod/Virtualdars.DesignPatterns.ChainOfResp
Chain of Responsibility,NodeSet,Java Implementation Example Chain of Responsibility Design Pattern,0,0,2018,2018,1,https://github.com/Ribeiro/NodeSet
Chain of Responsibility,DesignPattern-ChainOfResponsibility,"This C# implementation demonstrates the Chain of Responsibility design pattern, where a series of handlers process a request in sequence, each deciding whether to handle it or pass it along. It shows how to set up a flexible chain for handling different types of requests, allowing for a clear and scalable request-processing structure.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-ChainOfResponsibility
Chain of Responsibility,DesignPatterns,"Adapter, Builder, Decorator, Chain of Responsibility, Factory, Observer, Singleton",0,0,2022,2022,0,https://github.com/KarynaAliushkevich14/DesignPatterns
Chain of Responsibility,PJATK_BYT_DESIGN_PATTERNS,"Bulider, Mediator, Chain Of Responsibility",0,0,2017,2017,0,https://github.com/qubuss/PJATK_BYT_DESIGN_PATTERNS
Chain of Responsibility,java_design_patterns_chain_of_responsibility_model,java设计模式_责任链模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_chain_of_responsibility_model
Chain of Responsibility,FizzBuzz,An example with the Design Pattern Chain of Responsibility,0,0,2019,2020,1,https://github.com/rhuangabrielsantos/FizzBuzz
Chain of Responsibility,MiniLinux,Learning chain of responsibility and template method design patterns,0,0,2022,2022,1,https://github.com/dolooo/MiniLinux
Chain of Responsibility,cor,An implement of the design pattern Chain of Responsibility.,0,0,2021,2021,1,https://github.com/wacly/cor
Chain of Responsibility,ChainCalc,BYT Task (Calculator with chain of responsibility design pattern),0,0,2018,2018,1,https://github.com/Asmodeios/ChainCalc
Chain of Responsibility,designpatternskata,kata for design patterns: strategy and chain of responsibility ,0,0,2020,2020,1,https://github.com/adelinast/designpatternskata
Chain of Responsibility,ChainOfRespDesignPatternTester,Esercizi di utilizzo dell' Chain Of Responsibility Design Pattern,0,0,2016,2016,1,https://github.com/falcopellegrino/ChainOfRespDesignPatternTester
Chain of Responsibility,Design-Patterns-Project,ATM Money Handler Using Chain of Responsibility Design Pattern,0,0,2020,2020,1,https://github.com/ManoBalaR/Design-Patterns-Project
Chain of Responsibility,DesignPatterns2-Assi3,"Design Patterns using proxy, command, chain of responsibility, and visitor,",0,0,2021,2021,1,https://github.com/soniafriesen/DesignPatterns2-Assi3
Chain of Responsibility,design-patterns,Behavioral Patterns - Chain of Responsibility Pattern -user check,0,0,2023,2023,1,https://github.com/nebiguldev/design-patterns
Chain of Responsibility,composite-controller,RestAPI controller module using composite design pattern for structure and chain of responsibility design pattern,0,0,2023,2023,2,https://github.com/hooman-the1/composite-controller
Chain of Responsibility,Design_Patterns,"implement singleton , Adapter, Factory, Facade , Chain of Responsibility Design pattern",0,0,2022,2022,1,https://github.com/Shreeabcd/Design_Patterns
Chain of Responsibility,flightBooking202_personal,"flightBooking202_personal -> design pattern chain of responsibility , builder pattern , singleton ",0,0,2022,2022,1,https://github.com/satishkkk/flightBooking202_personal
Chain of Responsibility,DesignPatternsProject,Simulation of Baggage tracking system using Chain of Responsibility and Callback patterns,0,0,2021,2021,1,https://github.com/ichervachidze/DesignPatternsProject
Chain of Responsibility,ATM-Using-JS,This ATM Project completed using chain of responsibility (design pattern ) ,0,0,2020,2020,1,https://github.com/Maramahmad93/ATM-Using-JS
Chain of Responsibility,Go_Chain-Of-Responsibility_Pattern,A Go project demonstrating the Chain of Responsibility pattern by creating a chain of handler objects to process requests. This repository showcases best practices in design patterns and unit testing.,0,0,2024,2024,1,https://github.com/arthurfp/Go_Chain-Of-Responsibility_Pattern
Chain of Responsibility,cordetector,JavaScript Design Patterns studies. Chain of Responsibility and Revealing Module,0,0,2012,2014,1,https://github.com/williamrjribeiro/cordetector
Chain of Responsibility,Tp-chain-observer,Tp using design patterns chain of responsibility and observer pattern ,0,0,2020,2020,1,https://github.com/HalaSafiya/Tp-chain-observer
Chain of Responsibility,Learn-Chain-of-Responsibility-With-Puppies,"Explore the Chain of Responsibility design pattern through Java tutorials with a puppy theme. Simplified examples help you master concepts, supported by guides from Baeldung and Refactoring Guru.",0,0,2024,2025,1,https://github.com/turnerturn/Learn-Chain-of-Responsibility-With-Puppies
Chain of Responsibility,Design-Patterns,"Padrão de projeto, strategy e  Chain of Responsibility com Csharp",0,0,2021,2021,0,https://github.com/erbson/Design-Patterns
Chain of Responsibility,DesignPatternsDemo,"Little examples about Abstract Factory, Strategy, Command, Chain of Responsibility and  Observer Design Patterns",0,0,2022,2022,1,https://github.com/elifnurafsar/DesignPatternsDemo
Chain of Responsibility,Logger-LLD,Low Level Design of Logger using Chain of Responsibility Design Pattern,0,0,2023,2023,0,https://github.com/white-rabbit10/Logger-LLD
Chain of Responsibility,lazy-evaluation,"a simple lazy-evaluation implementation,using design pattern,Chain of Responsibility.",0,0,2017,2017,1,https://github.com/seulike/lazy-evaluation
Chain of Responsibility,design-patterns,"Simple php design pattern. Memento, State, Strategy, Chain of Responsibility & Decorator",0,0,2021,2021,1,https://github.com/teodoroleckie/design-patterns
Chain of Responsibility,console-chain-of-reponsability,This project is an application of Chain of Responsibility Design Pattern,0,0,2022,2022,1,https://github.com/mvbasuli/console-chain-of-reponsability
Chain of Responsibility,java-design-patterns,"Implementation of design patterns in Java, like 'Chain of responsibility' etc.",0,0,2021,2021,1,https://github.com/a1mond/java-design-patterns
Chain of Responsibility,demo,DIO Desafio de Projeto - Design Patterns com Java - Chain of Responsibility,0,0,2024,2024,1,https://github.com/mauromortoni/demo
Chain of Responsibility,CoRSP,Design Pattern For AI Backend: Chain of Responsibility Pattern & Strategy Pattern,0,0,2024,2024,1,https://github.com/manojkumarredbus/CoRSP
Chain of Responsibility,design-pattern-alura-course,A project to study the application of Design Pattern Chain of Responsibility,0,0,2021,2022,1,https://github.com/Henrique-rr-Martins/design-pattern-alura-course
Chain of Responsibility,economy,a economy handler using Chain of Responsibility Design Pattern to handle transactions,0,0,2023,2023,1,https://github.com/normalhuman01/economy
Chain of Responsibility,CRDP,This is an example codes implemented by Chain of Responsibility Design Pattern,0,0,2017,2017,0,https://github.com/tonyseo7/CRDP
Chain of Responsibility,aps-patterns,Exemplo de cenário usando 3 Design Patterns - State/Observer/Chain of Responsibility,0,0,2019,2019,1,https://github.com/Claudyelle/aps-patterns
Chain of Responsibility,JavaDesignPatterns,Java App with implementation of builder and chain of responsibility design patterns.,0,0,2017,2017,1,https://github.com/gkostkowski/JavaDesignPatterns
Chain of Responsibility,java-cor,#A Java program that utilizes the Chain Of Responsibility Behavioral Design Pattern,0,0,2021,2021,1,https://github.com/daveasiamah/java-cor
Chain of Responsibility,Generic-Handlers-Chain-of-Responsibility-Pattern,This Repo shows how to apply chain of reponsibility design pattern by making the incomming request traverse through a chain of handlers each handler in the chain decides whether it can handle the request or pass it on to the next handler in the chain,0,0,2023,2024,1,https://github.com/NetNinjaEngineer/Generic-Handlers-Chain-of-Responsibility-Pattern
Chain of Responsibility,Kitchen-Chain-of-Responsibility,"In order to make a dish, you have to use a number of appliances and tools to turn raw ingredients into something edible. Using the chain of responsibility design pattern, raw ingredients act as input, while appliances and tools that can handle the ingredient act as states. If an appliance can not or should not handle an ingredient, it passed on to the next state until it can be handled.",0,0,2018,2018,1,https://github.com/Grubbly/Kitchen-Chain-of-Responsibility
Chain of Responsibility,Intro-To-Chain-Of-Responsibility-Design-Pattern,"Chain of Responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.",0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Chain-Of-Responsibility-Design-Pattern
Chain of Responsibility,design-patterns,"implementação dos design patterns: strategy, chain of responsibility, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns
Chain of Responsibility,chain-of-responsability,Example code for Chain of Responsibility design pattern to my students at DigitalHouse,0,0,2021,2022,1,https://github.com/lslm/chain-of-responsability
Chain of Responsibility,CoR-pattern,"Design pattern comportamental Chain of Responsibility (corrente de handlers, ex.: manipulador de cédulas)",0,0,2021,2021,1,https://github.com/Jhow-R/CoR-pattern
Chain of Responsibility,ChainOfResposibility,An example implementation of the design pattern Chain of Responsibility (CoR) in C#,0,0,2023,2023,1,https://github.com/AndreasGkizis/ChainOfResposibility
Chain of Responsibility,FruitBasket,Chain of Responsibility design pattern practice. Treat the fruit bag with specific sievs.,0,0,2024,2024,1,https://github.com/MarianCypher/FruitBasket
Chain of Responsibility,chain-of-responsability-example,Kotlin Project to exemplify the use of the chain of responsibility design pattern,0,0,2020,2020,1,https://github.com/barrosodegas/chain-of-responsability-example
Chain of Responsibility,design-patterns,"Padrão criacional: Factory method, Abstract factory e Builder.  Padrão estrutural: Brigde.  Padrão comportamental: Chain Of Responsibility.",0,0,2024,2024,1,https://github.com/rafaelzanella27/design-patterns
Chain of Responsibility,Csharp-Some-Design-Patterns,"Some patterns for C# projects: Abstract Factory, Chain of Responsibility, Decorator, Factory, Observer, Repository.",0,0,2020,2020,1,https://github.com/MaximCastornyi/Csharp-Some-Design-Patterns
Chain of Responsibility,HotelBiddingSystem,Implementation of Chain-Of-Responsibility pattern (Design Pattern) in a hotel room bidding system,0,0,2024,2024,1,https://github.com/aidilnajmir/HotelBiddingSystem
Chain of Responsibility,ChainOfResponsiblitiesPattern-Doors,This is an example of how does works the chain of responsibilities design pattern,0,0,2022,2022,0,https://github.com/Tritoni24/ChainOfResponsiblitiesPattern-Doors
Chain of Responsibility,ed_logic_handler,It carries out asynchronous operations in accordance with the Chain of Responsibility design pattern.,0,0,2024,2024,1,https://github.com/endmr11/ed_logic_handler
Chain of Responsibility,OrderProcessingService,"This is an application to demonstrate Chain of Responsibility, Factory and Strategy design patterns",0,0,2024,2024,1,https://github.com/The-Real-Tim-Kelly/OrderProcessingService
Chain of Responsibility,Design_Pattern,"Design patterns project using C# using only chain of responsibility, singleton and decorator pattern",0,0,2022,2022,1,https://github.com/jeanpaulghoussoub/Design_Pattern
Chain of Responsibility,CoR-csharp-example,Приклад патерну проєктування https://refactoring.guru/uk/design-patterns/chain-of-responsibility/java/example,0,0,2024,2024,1,https://github.com/arakviel/CoR-csharp-example
Chain of Responsibility,CIS566_P2,This project demonstrates use of the Chain of Responsibility Design Pattern with a GUI,0,0,2020,2020,1,https://github.com/tjrees/CIS566_P2
Chain of Responsibility,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Chain of Responsibility,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
Chain of Responsibility,Design-Patterns-Java-I,"Curso realizado na plataforma alura,  padrões apreendidos strategy, chain of responsibility, template Method, state, command, Observer",0,0,2023,2023,1,https://github.com/Marcelo-F/Design-Patterns-Java-I
Chain of Responsibility,ChainOfResponsibiliyImpl,"Chain of Responsibility design pattern implementation with Unity Container, AutoMapper and (Service and Repository) patterns.",0,0,2017,2017,1,https://github.com/ndroussi/ChainOfResponsibiliyImpl
Chain of Responsibility,Estoque.UI,Implementing the design pattern chain of responsibility and the template method in Windows forms app,0,0,2021,2021,1,https://github.com/pedrovitorrs/Estoque.UI
Chain of Responsibility,fizz-buzz,"FizzBuzz as a Service, Demonstrating use of a design pattern.  Chain of Responsibility is used. ",0,0,2018,2018,2,https://github.com/bbelanger-ca/fizz-buzz
Chain of Responsibility,Conjugueur_client-serveur,"Projet en Java avec l'utilisation du design pattern ""chain of responsibility"" et interface graphique",0,0,2017,2017,1,https://github.com/ArkhaLime/Conjugueur_client-serveur
Chain of Responsibility,MySampleCode,"Domain Driven Design Architecture, Chain of responsibility and Factory design patterns, Local and Redis cache",0,0,2022,2022,1,https://github.com/PooyaAlamirpour/MySampleCode
Chain of Responsibility,Libreria,This is a project developed to implement the chain of responsibility design pattern in C#,0,0,2024,2024,0,https://github.com/Sebazt/Libreria
Chain of Responsibility,automatic-machine-project,This is a project developed to implement the chain of responsibility design pattern in java.,0,0,2023,2023,1,https://github.com/Sebazt/automatic-machine-project
Chain of Responsibility,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Chain of Responsibility,java-design-patterns,"Design Patterns em Java I: boas práticas de programação. Strategy, Chain of Responsibility, Template Method, State, Command, Observer",0,0,2023,2023,1,https://github.com/Pybony/java-design-patterns
Chain of Responsibility,DesignPatternsGoF,"Solucionar situações utilizando alguns dos Design Patterns mais conhecidos do Gang of Four (GoF), sendo eles: Abstract Factory, Factory, Builder, Bridge, Adapter e Chains of Responsibility",0,0,2024,2024,1,https://github.com/CaueCG/DesignPatternsGoF
Chain of Responsibility,Byt4,"Calculator (at least 4 operations) or a similar example, using the chain of responsibility design pattern.",0,0,2020,2020,1,https://github.com/s19239/Byt4
Chain of Responsibility,Flashcard,"The Flashcard system based on MySql. Using several design pattern (MVC, Strategies and Chain of Responsibility...) ",0,0,2020,2020,1,https://github.com/dryadd44651/Flashcard
Chain of Responsibility,credit_card_design_pattern_implementation,Factory and Chain of Responsibility Design Pattern Implementation for CMPE 202 Class at SJSU Spring 2020,0,0,2020,2020,1,https://github.com/plodha/credit_card_design_pattern_implementation
Chain of Responsibility,ATM_LLD,    Implemented the ATM LLD using the state design pattern and the chain of responsibility for CashDispense,0,0,2024,2024,0,https://github.com/terror26/ATM_LLD
Chain of Responsibility,designpatterns,"Example of use Design Patterns (Strategy, Chain of Responsibility, Template Method, Decorator, State, Builder and Observer)",0,0,2020,2020,1,https://github.com/jagucheski/designpatterns
Chain of Responsibility,Design-patterns-strategy-CoR,Projeto em C# praticando S.O.L.I.D. e os Design Patterns Strategy e Chain of Responsibility.,0,0,2022,2022,0,https://github.com/newhobbye/Design-patterns-strategy-CoR
Chain of Responsibility,DesignPatterns_Simple-Load-Balancer,"For the final project of the Design Patterns course, I developed a simple load balancer using Java threads and 3 design patterns: Proxy, Chain of Responsibility and Singleton.",0,0,2020,2020,1,https://github.com/alejandro-lobato/DesignPatterns_Simple-Load-Balancer
Chain of Responsibility,Design-patterns,"Implementation of the structural pattern ""Composite"" and the behavioral patterns ""Chain of responsibility"" and ""Interpreter"". The goal - to parse text from the file.",0,0,2018,2018,1,https://github.com/Encories/Design-patterns
Chain of Responsibility,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Chain of Responsibility,Converter,"Units converter that implements several design patterns like Factory, Singleton and Chain Of Responsibility, written on JS",0,0,2019,2019,1,https://github.com/StanislavByzov/Converter
Chain of Responsibility,BasicPokerProject,Poker project in java in which I had to implement design patterns such as chain of responsibility,0,0,2021,2021,1,https://github.com/KookyEddie/BasicPokerProject
Chain of Responsibility,APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS,"Irei estar mostrando na pratica 6 designs patterns na pratica. (Strategy, Chain of responsibility, Template method, State, Command, Observer)",0,0,2021,2021,0,https://github.com/guimeiradev/APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS
Chain of Responsibility,The_Adapter_and_COR_Design_Patterns,This repository contains implementations of two commonly used design patterns: Chain of Responsibility and Adapter. Each design pattern is implemented in separate folders within the repository.,0,0,2023,2023,1,https://github.com/TebogoYungMercykay/The_Adapter_and_COR_Design_Patterns
Chain of Responsibility,cs372-spring2015-washowalter-final,Final exam take home section - implement example of Chain of Responsibility Design Pattern. Implementation example is firewall filtering.,0,1,2015,2015,1,https://github.com/UAF-WilliamShowalter/cs372-spring2015-washowalter-final
Chain of Responsibility,DesignPatternFinalAssignment,"Design Pattern Assignment implemented with strategy,singleton,bridge,mediator,observer,abstract factory,command,composite,chain of responsibility patterns",0,0,2019,2019,1,https://github.com/fahmidf3053/DesignPatternFinalAssignment
Chain of Responsibility,Command-Pattern,"Implementation of the command, chain of responsibility, and memento design patterns to simulate a draw board of shapes",0,0,2023,2024,1,https://github.com/JaydenPal/Command-Pattern
Chain of Responsibility,Design-Patterns,A. Structural  1. Adapter - correct  2. Facade - corrected  3. Proxy - correct    B. Creational  1. Singleton  2. Factory  3. Builder    C. Behavioural  1. Chain of responsibility  2. Memento 3. Observer,0,0,2024,2024,1,https://github.com/NehaAgrawal-git/Design-Patterns
Chain of Responsibility,LCP,This problem demonstrates the use of the chain of responsibility (COR) design patterns on a Length converter program (LCP),0,0,2023,2023,1,https://github.com/KhanolkarArati/LCP
Chain of Responsibility,LoginChain,A logging program project implementing the behavioral design pattern - Chain of Responsibility - written in the object-oriented C# language.,0,0,2024,2024,1,https://github.com/Mathias007/LoginChain
Chain of Responsibility,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Chain of Responsibility,Design-Pattern,"Some implementation of design pattern in Java such as: Chain of Responsibility, Decorator, Factory, Generic, Interator, Proxy, Reflection, Singleton, Visitor",0,0,2016,2017,1,https://github.com/luongnv89/Design-Pattern
Chain of Responsibility,design-patterns,"Este é um repositório de estudo sobre design patterns, que são soluções testadas para problemas comuns de design de software. Você encontrará exemplos de design patterns, como o padrão Strategy, Chain of Responsibility entre outros",0,0,2023,2023,1,https://github.com/NewLeonardooliv/design-patterns
Chain of Responsibility,Humber-Design-Pattern-c-Sharp-Lab5-and-Lab6,"Humber College North Campus , C-Sharp Design Pattern Lab5 and Lab6  for STRATEGY PATTERN, Chain Of Responsibility Pattern and  State Pattern",0,0,2025,2025,1,https://github.com/Gurjit211/Humber-Design-Pattern-c-Sharp-Lab5-and-Lab6
Chain of Responsibility,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
Chain of Responsibility,upgrad-patterns,"Implement an application using Spring Boot that uses five design patterns, which are as follows:  Singleton Adapter Factory Facade Chain of Responsibility",0,0,2024,2024,2,https://github.com/binhle3920/upgrad-patterns
Chain of Responsibility,pokedex,"A Pokedex app I made in Python that uses RESTful APIs. It uses many design patterns including chain of responsibility, factory, and facade.",0,0,2023,2023,2,https://github.com/Syte1/pokedex
Chain of Responsibility,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Chain of Responsibility,Logger_System_LLD,Logger System made using Low-Level-Design. Chain of Responsibility Design Pattern is used. This question was asked in Amazon System Design interview.,0,0,2024,2024,0,https://github.com/samruddhiselukar/Logger_System_LLD
Chain of Responsibility,password,A simple WPF application that allows the user to register details and simulate the password validations checking using the Chain of Responsibility design pattern.,0,0,2024,2024,1,https://github.com/Badhansen/password
Chain of Responsibility,LogParserService,"A back-end service for log parsing utilizing the Chain of Responsibility design pattern to parse logs and generate application, request, and APM metrics.",0,0,2024,2024,1,https://github.com/adityarao97/LogParserService
Chain of Responsibility,Online-Food-Ordering-System,"This online food ordering system was built with Java and this application applied design patterns like (Observer, Strategy, Chain of Responsibility, Read Only, SingleTon).",0,0,2022,2023,1,https://github.com/AhmedDesouki/Online-Food-Ordering-System
Chain of Responsibility,RestAssuredApiFW_ServiceNow,RestAssured Automation Framework  | API  | Java | OOPS | RestAssured  | TestNG | Maven | ExtentReport | Java mail API | Design Patterns (Chain of Responsibility) | Jenkins | Data-Driven Testing using JSON file,0,0,2024,2024,1,https://github.com/ShivaaramPrasad/RestAssuredApiFW_ServiceNow
Chain of Responsibility,AffiliateProgram,"Olá mundo! Bem vindos ao projeto AffiliateProgram, uma plataforma EAD com filiações usando as melhores práticas de programação (design pattern, MVC e rotas, Chain of Responsibility).",0,0,2021,2021,1,https://github.com/Raiane-Dev/AffiliateProgram
Chain of Responsibility,leave-request-form,"This project involves creating a Leave Request Form for a specific company, and we've chosen to implement it using the Chain of Responsibility Design Pattern.",0,0,2023,2023,1,https://github.com/ovinduuu/leave-request-form
Chain of Responsibility,System-Design,This Repository contains different projects using different design patterns: 1: Log Processor System - Chain of Responsibility Pattern 2: File Design System - Composite Pattern 3: Calculator - Composite Pattern,0,0,2024,2024,0,https://github.com/aameen07/System-Design
Chain of Responsibility,rust-low-pass-filter,"Implementation of a Low Pass Filter (LPF) in Rust, utilizing decoupled design patterns. This project showcases the power of the Rust programming language in systems programming and details the application of the Chain of Responsibility design pattern for creating a multi-stage LPF.",0,0,2023,2025,1,https://github.com/jakub-michalik/rust-low-pass-filter
Chain of Responsibility,CheckFileEncoding,A nuget package that will help you determine the encoding of a file. Written in C# using design patterns Factory and Chain-Of-Responsibility. Created for a school project.,0,0,2022,2022,1,https://github.com/ItsSteph/CheckFileEncoding
Chain of Responsibility,E-Banking_System,"The Online Banking System, built with Java and SQL, employs design patterns like chain of responsibility, singleton, DAO and factory. It facilitates users in creating account and performing transactions.",0,0,2024,2024,1,https://github.com/akshaya-610/E-Banking_System
Chain of Responsibility,If-Else-Replacement-Pattern,"Tutorial for replacement of if-else construct in C#. You have to program that replacement into objects, using a blend of template & chain-of-responsibility design pattern.  Advanced topic for devs",0,0,2023,2023,1,https://github.com/josephedwardchang/If-Else-Replacement-Pattern
Chain of Responsibility,GumballSurfer,"Developed a 3D game in which player has to collect coins to get gumballs. Implemented software design patterns like Observer, State, Prototype, Factory and Chain of Responsibility pattern. Followed Scrum Agile practices.",0,0,2014,2014,1,https://github.com/ankitd89/GumballSurfer
Chain of Responsibility,MyAcademy_DesignPattern_ChainofResponsibilty,"Chain of Responsibility Design Pattern (Sorumluluk zinciri modeli), müşteriden gelen bir talebin bunları işlemek için bir nesneler zincirine iletildiği yazılım tasarımında gevşek bağlantı (loose coupling) elde etmek için kullanılır. Bu projede bunun birörneğini kullandım",0,0,2024,2024,0,https://github.com/eyupogluuu/MyAcademy_DesignPattern_ChainofResponsibilty
Chain of Responsibility,chain-of-responsibilities-example,Implements an example of the Design Pattern Chain of Responsibilities to calculate the sales commission according to some rules that involves Total Value for a Sale and Average Price for Items of a Sale.,0,0,2021,2021,1,https://github.com/aledelima/chain-of-responsibilities-example
Chain of Responsibility,file-monitoring,"This application monitors events such as create, update, delete, etc. on a file/directory and then for each triggered event a series of actions/tasks are executed using the chain of responsibility design pattern.",0,0,2021,2022,1,https://github.com/sriram-ponangi/file-monitoring
Chain of Responsibility,ATMDispenser,A small approach to demonstrate chain of responsibility Design pattern. Here it shows how denominations of currency are getting selected based on the customer's input amount. Also here denominations are given in INR formatted.,0,0,2019,2021,1,https://github.com/prantick4u/ATMDispenser
Chain of Responsibility,text-handler,"This application parses the input text into its component parts, down to letters and punctuation marks. Examples of input data in the resources package. Composite and chain of responsibility design patterns were used here and also regex. ",0,0,2023,2024,1,https://github.com/Kovvvalski/text-handler
Chain of Responsibility,SmartCity-ApPost,"A web application for managing smart parking that utilizes the AStar algorithm to suggest parking spots along a chosen route. Integration of design patterns such as Chain of Responsibility, Strategy, MVC, and Command for a scalable and modular system.",0,0,2023,2024,2,https://github.com/vincenzobucciero/SmartCity-ApPost
Chain of Responsibility,enquiry-handler_machine_coding,"Enquiry Handler's Low Level Design. Equiry is passed to the chain. Whatever node it matches the enquiry, the log handler logs the enquiry type. It demostrates the maninly Chain of Responsibility Design Patten along with Factory Design Pattern.",0,0,2024,2024,1,https://github.com/pradipdharam/enquiry-handler_machine_coding
Chain of Responsibility,ATM-Design,"To design the ATM I have made use of state design pattern for managing the multiple user operation such as inserting card ,cash withdrawl , deposit amount and to handle the cash processing part i have implemented the chain of responsibility desing pattern.",0,0,2024,2024,1,https://github.com/mkhulbe5/ATM-Design
Chain of Responsibility,smart-logger-system-lld,"A highly extensible and scalable logging system built with Java Spring Boot, implementing advanced design patterns such as Singleton, Strategy, Factory, and Chain of Responsibility. This application is designed to provide efficient logging, support dynamic log levels, and handle concurrency for high-throughput microservices.",0,0,2024,2024,0,https://github.com/Ayushi40/smart-logger-system-lld
Chain of Responsibility,DemoShop,"Application that replicates real world app structure, behavior and design. Made to learn MVC, Repository and Singleton, Chain of Responsibility design patterns, tier and layer separation of software components, Docker, Single Page and Multi Page app versions, Routing, Dependency Injection, Composer dependency manager with auto-loading and more. With underlying Framework, Frontend MVC in JavaScript and ORM.",0,0,2022,2022,1,https://github.com/StefanThadeus/DemoShop
Chain of Responsibility,Django-Webapp,"This is a scalable web application which supports an online booking and payment system and uses Django, SQLite, Stripe & Google Analytics. The purpose of this project is to showcase the use of the listed software design patterns. 1. Observer 2. Decorator 3. State Design 4. MVT 5. Factory Method 6. Template Method 7. Iterator Method 8 Adapter Method 9. Chain of Responsibility",0,0,2020,2020,1,https://github.com/David-Bromell/Django-Webapp
Command,design_patterns_in_typescript,:triangular_ruler: Design pattern implementations in TypeScript,5272,763,2013,2025,8,https://github.com/torokmark/design_patterns_in_typescript
Command,DesignPatterns,"Come learn about all the Gang of Four patterns (e.g. Adapter, Facade, Strategy, Mediator, Command and more) with C# and food examples!",643,251,2016,2025,2,https://github.com/exceptionnotfound/DesignPatterns
Command,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Command,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Command,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Command,torrents,"Skip to content   Search… All gists Back to GitHub Sign in Sign up Instantly share code, notes, and snippets.  @giansalex giansalex/torrent-courses-download-list.md forked from M-Younus/torrent courses download-list Last active 2 days ago 15188  Code Revisions 15 Stars 151 Forks 88 <script src=""https://gist.github.com/giansalex/4cd3631e94433bbbd71bf07aedb33a7b.js""></script>     torrent-courses-download-list.md Torrent Courses List Download  http://kickass.to/infiniteskills-learning-jquery-mobile-working-files-t7967156.html http://kickass.to/lynda-bootstrap-3-advanced-web-development-2013-eng-t8167587.html http://kickass.to/lynda-css-advanced-typographic-techniques-t7928210.html http://kickass.to/lynda-html5-projects-interactive-charts-2013-eng-t8167670.html http://kickass.to/vtc-html5-css3-responsive-web-design-course-t7922533.html http://kickass.to/10gen-m101js-mongodb-for-node-js-developers-2013-eng-t8165205.html http://kickass.to/cbt-nuggets-amazon-web-services-aws-foundations-t7839734.html http://kickass.to/cbt-nuggets-apache-hadoop-t8027965.html http://kickass.to/cbt-nuggets-backtrack-and-kali-linux-t7677281.html http://kickass.to/cbt-nuggets-ccda-desgn-640-864-t8300917.html http://kickass.to/cbt-nuggets-ccna-wireless-iuwne-640-722-t8300389.html http://kickass.to/cbt-nuggets-cisco-ccna-labs-cisco-for-the-real-world-bonus-t6154766.html http://kickass.to/cbt-nuggets-cisco-ccnp-security-firewall-v2-0-642-618-azazredhat-t6955696.html http://kickass.to/cbt-nuggets-cisco-ccnp-security-secure-642-637-azazredhat-t6955710.html http://kickass.to/cbt-nuggets-comptia-network-videos-2010-gurufuel-t4648514.html http://kickass.to/cbt-nuggets-definitive-guide-to-working-with-gns3-by-keith-bar-t8301349.html http://kickass.to/cbt-nuggets-ec-council-certified-ethical-hacker-v7-0-t6801120.html http://kickass.to/cbt-nuggets-exam-walkthrough-cisco-icnd1ccent-100-101-t8516719.html http://kickass.to/cbt-nuggets-exam-walkthrough-cisco-icnd2ccna-200-101-t8524803.html http://kickass.to/cbt-nuggets-linux-in-the-real-world-with-shawn-powers-t7718107.html http://kickass.to/cbt-nuggets-linux-series-video-tutorial-t485320.html http://kickass.to/cbt-nuggets-lpi-linux-lpic-1-101-and-comptia-linux-t8031864.html http://kickass.to/cbt-nuggets-lpi-linux-lpic-1-102-and-comptia-linux-t8031871.html http://kickass.to/cbt-nuggets-mastering-vmware-view-5-and-preparing-for-the-vcp510-dt-exam-t8301829.html http://kickass.to/cbt-nuggets-vmware-virtualization-vcp-vsphere-5-t8300512.html http://kickass.to/cbt-nuggets-wireshark-with-keith-barker-t8040855.html http://kickass.to/comptia-network-n10-005-collection-t8319928.html http://kickass.to/developing-in-html5-with-javascript-and-css3-jump-start-t8277565.html http://kickass.to/eli-the-computer-guy-linux-t8647714.html http://kickass.to/foundations-of-programming-test-driven-development-t7522376.html http://kickass.to/infiniteskills-advanced-html5-programming-t7463355.html http://kickass.to/infiniteskills-cisco-ccna-certification-bundle-2013-t7645010.html http://kickass.to/infiniteskills-css3-transformations-and-animations-t7930047.html http://kickass.to/infiniteskills-learning-javascript-programming-t7625039.html http://kickass.to/infiniteskills-learning-python-programming-t7107001.html http://kickass.to/infiniteskills-learning-regular-expressions-t8028765.html http://kickass.to/infiniteskills-learning-whitehat-hacking-and-penetration-testing-t8303725.html http://kickass.to/infiniteskills-microsoft-windows-server-2012-certification-training-exam-70-410-t7379360.html http://kickass.to/infiniteskills-php-security-t8046511.html http://kickass.to/learning-vmware-esxi-and-vsphere-5-1-administration-training-t8030885.html http://kickass.to/linuxcbt-basic-security-edition-d3x-t7650913.html http://kickass.to/linuxcbt-config-mgmt-edition-d3x-t7650929.html http://kickass.to/linuxcbthttpdxil-edition-d3x-t7653897.html http://kickass.to/linuxcbt-vbox-edition-d3x-t7653916.html http://kickass.to/linuxcbt-webscan-edition-d3x-t7653922.html http://kickass.to/linuxcbt-winpython-edition-d3x-t7653942.html http://kickass.to/linuxcbt-xenvm-edition-d3x-t7653948.html http://kickass.to/lynda-com-foundations-of-programming-code-efficiency-t8604312.html http://kickass.to/lynda-com-foundations-of-programming-databases-t8596357.html http://kickass.to/lynda-com-foundations-of-programming-design-patterns-t8692867.html http://kickass.to/lynda-com-foundations-of-programming-fundamentals-t7600288.html http://kickass.to/lynda-com-foundations-of-programming-web-services-including-exercise-files-torrenters-t7797117.html http://kickass.to/lynda-com-ruby-on-rails-4-essential-training-dec-2013-t8438392.html http://kickass.to/lynda-foundations-of-programming-refactoring-code-t7524343.html http://kickass.to/lynda-foundations-of-programming-software-quality-assurance-sum1-here-silverrg-t8043799.html http://kickass.to/lynda-javascript-events-t7893809.html http://kickass.to/lynda-leading-with-emotional-intelligence-t8157240.html http://kickass.to/lynda-management-tips-t8154761.html http://kickass.to/mysql-database-tutorials-by-bucky-thenewboston-org-1-33-t8224550.html http://kickass.to/packtpub-advanced-penetration-testing-for-highly-secured-environments-t8300620.html http://kickass.to/pluralsight-mysql-query-optimization-and-performance-tuning-with-pinal-dave-t8553369.html http://kickass.to/pluralsight-relational-database-design-t8551479.html http://kickass.to/ruby-tutorial-bucky-totally-for-beginner-t8699509.html http://kickass.to/trainsignal-vmware-vcloud-director-5-1-essentials-t7495660.html http://kickass.to/trainsignal-vmware-vsphere-optimize-and-scale-vcap5-dca-t7495659.html http://kickass.to/trainsignal-vmware-workstation-9-for-the-it-admin-t7495658.html http://kickass.to/tutsplus-advanced-command-line-techniques-t7632228.html http://kickass.to/tutsplus-advanced-javascript-fundamentals-t6739742.html http://kickass.to/tutsplus-agile-design-patterns-2012-t6992118.html http://kickass.to/tutsplus-cleaner-code-with-coffeescript-t6741625.html http://kickass.to/tutsplus-detecting-code-smells-t8128341.html http://kickass.to/tutsplus-firebug-white-to-black-belt-v413hav-t7154501.html http://kickass.to/tutsplus-foundational-flask-creating-your-own-static-blog-generator-t8356996.html http://kickass.to/tutsplus-freelance-bootcamp-t6832678.html http://kickass.to/tutsplus-premium-e-book-mega-pack-v413hav-t7178526.html http://kickass.to/tutsplus-pro-workflow-for-web-designers-t6854268.html http://kickass.to/tutsplus-riding-ruby-on-rails-t6728201.html http://kickass.to/tutsplus-sql-essentials-t6746851.html http://kickass.to/tutsplus-tools-of-the-modern-web-developer-t8107617.html http://kickass.to/tutsplus-video-fundamentals-t6752217.html http://kickass.to/ine-ccna-wireless-640-722-iuwne-t8301376.html http://kickass.to/learn-metasploit-t8174472.html http://kickass.to/lynda-ruby-on-rails-essential-training-t7630711.html http://kickass.to/lynda-up-and-running-with-python-2013-eng-t8167709.html http://kickass.to/build-flat-responsive-website-from-scratch-complete-course-t8604527.html http://kickass.to/canvas-essentials-t8550909.html http://kickass.to/cbt-nuggets-70-331-microsoft-sharepoint-server-2013-x264-mkv-encod3r-t8595423.html http://kickass.to/cbt-nuggets-98-365-windows-server-admin-fundamentals-encod3r-t8613009.html http://kickass.to/cbt-nuggets-ccie-combo-pack-t271107.html http://kickass.to/cbt-nuggets-ccna-certification-videos-material-2010-gurufu-t4648321.html http://kickass.to/cbt-nuggets-juniper-networks-certified-specialist-security-jncis-sec-jn0-332-t8028083.html http://kickass.to/cehv7-cbt-nuggets-instructor-slides-tools-video-tools-study-guide-rar-t8705752.html http://kickass.to/cisco-ccna-initial-router-and-switch-configuration-t8648377.html http://kickass.to/cisco-ccna-security-aaa-and-ip-security-t8648378.html http://kickass.to/cisco-ccna-security-introduction-to-network-security-t8648381.html http://kickass.to/cisco-ccna-voice-configuration-and-advanced-features-t8648387.html http://kickass.to/cisco-ccna-voice-voice-overview-and-lab-setup-t8648386.html http://kickass.to/cisco-press-ccna-security-640-554-official-cert-guide-videos-t8648384.html http://kickass.to/coursera-neural-networks-and-machine-learning-geoffrey-hinton-university-of-toronto-t8568642.html http://kickass.to/eli-the-computer-guy-hacking-t8647661.html http://kickass.to/ine-ccie-data-center-storage-t8029396.html http://kickass.to/infinite-skills-learning-cloud-computing-with-amazon-web-services-2013-eng-t8703045.html http://kickass.to/infiniteskills-learning-tcp-ip-t8303739.html http://kickass.to/lynda-bootstrap-3-new-features-and-migration-t7958409.html http://kickass.to/lynda-bootstrap-adding-interactivity-to-your-site-t7519306.html http://kickass.to/lynda-com-jquery-ui-widgets-t8172743.html http://kickass.to/lynda-essential-training-t8157222.html http://kickass.to/lynda-foundation-incorporating-sass-and-compass-t7953037.html http://kickass.to/lynda-html5-projects-advanced-to-do-list-t7855578.html http://kickass.to/lynda-html5-projects-creating-a-responsive-presentation-2013-eng-t8167660.html http://kickass.to/lynda-online-presentations-with-reveal-js-2013-eng-t8167575.html http://kickass.to/lynda-teacher-tips-t8157202.html http://kickass.to/lynda-up-and-running-with-angularjs-t7982840.html http://kickass.to/lynda-up-and-running-with-bootstrap-3-t8011198.html http://kickass.to/lynda-up-and-running-with-cakephp-t7963854.html http://kickass.to/lynda-up-and-running-with-google-apps-script-t7917458.html http://kickass.to/lynda-up-and-running-with-php-codeigniter-t7849968.html http://kickass.to/lynda-web-semantics-t7899223.html http://kickass.to/lynda-wordpress-essential-training-2013-tutorial-t8270624.html http://kickass.to/pluralsight-aws-developer-fundamentals-2013-eng-t8703013.html http://kickass.to/pluralsight-bootstrap-3-t8214168.html http://kickass.to/pluralsight-cisco-ccie-routing-and-switching-implement-bgp-t8648391.html http://kickass.to/pluralsight-cisco-ccna-advanced-ethernet-and-file-management-t8051456.html http://kickass.to/pluralsight-cisco-ccna-security-firewalls-and-vpns-t8648393.html http://kickass.to/pluralsight-cisco-ccna-wan-technologies-learn-wide-area-network-wan-technologies-and-configuration-t7882351.html http://kickass.to/pluralsight-javascript-from-scratch-t7612372.html http://kickass.to/pluralsight-sublime-text-3-from-scratch-2013-eng-t8153034.html http://kickass.to/ten-ton-wordpress-mastery-video-t8452016.html http://kickass.to/trainsignal-microsoft-network-monitoring-t8028791.html http://kickass.to/tuts-plus-2013-bdd-in-rails-psiclone-t8474590.html http://kickass.to/tutsplus-advanced-css3-animations-t7791566.html http://kickass.to/tutsplus-an-introduction-to-node-js-t6744596.html http://kickass.to/tutsplus-better-statistics-with-google-charts-t7983386.html http://kickass.to/tutsplus-bootstrap-for-web-design-t8210956.html http://kickass.to/tutsplus-com-advanced-ui-techniques-2013-t7072722.html http://kickass.to/tutsplus-com-build-a-cms-in-codeigniter-2013-t7072644.html http://kickass.to/tutsplus-com-learning-mongodb-2013-t7072653.html http://kickass.to/tutsplus-computer-networks-distilled-v413hav-t7630795.html http://kickass.to/tutsplus-css-3d-essentials-t8027191.html http://kickass.to/tutsplus-css-noob-to-ninja-v413hav-t7475010.html http://kickass.to/tutsplus-css-tips-and-tricks-t8292119.html http://kickass.to/tutsplus-css3-essentials-t6608214.html http://kickass.to/tutsplus-css3-typography-techniques-t7882076.html http://kickass.to/tutsplus-design-patterns-in-ruby-t8354740.html http://kickass.to/tutsplus-fundamentals-of-design-t6645691.html http://kickass.to/tutsplus-fundamentals-of-print-design-t6667261.html http://kickass.to/tutsplus-fundamentals-of-ux-design-t6710443.html http://kickass.to/tutsplus-html-kickstart-essentials-t7969388.html http://kickass.to/tutsplus-html-tips-and-tricks-t8224648.html http://kickass.to/tutsplus-introduction-to-web-typography-t6662386.html http://kickass.to/tutsplus-javascript-fundamentals-101-t6738976.html http://kickass.to/tutsplus-jquery-ui-101-the-essentials-2013-eng-t8165125.html http://kickass.to/tutsplus-jquery-ui-101-the-essentials-t7791579.html http://kickass.to/tutsplus-jquery-ui-201-beyond-the-basics-t7791583.html http://kickass.to/tutsplus-jquery-ui-301-the-widget-factory-2013-eng-t8165109.html http://kickass.to/tutsplus-jquery-ui-301-the-widget-factory-working-files-2013-eng-t8180547.html http://kickass.to/tutsplus-laravel-essentials-t6722386.html http://kickass.to/tutsplus-logo-design-fundamentals-with-gary-simon-swatiate-t7867377.html http://kickass.to/tutsplus-mastering-corporate-design-v413hav-t7586047.html http://kickass.to/tutsplus-mastering-flat-design-v413hav-t7781777.html http://kickass.to/tutsplus-mastering-retro-web-design-v413hav-t7343186.html http://kickass.to/tutsplus-object-oriented-javascript-t6863065.html http://kickass.to/tutsplus-perfect-workflow-in-sublime-text-2-t6794850.html http://kickass.to/tutsplus-php-fundamentals-t6671312.html http://kickass.to/tutsplus-php-security-pitfalls-t7835091.html http://kickass.to/tutsplus-relational-databases-t8023530.html http://kickass.to/tutsplus-responsive-web-design-for-beginners-v413hav-t7385876.html http://kickass.to/tutsplus-responsive-web-design-techniques-t8103476.html http://kickass.to/tutsplus-responsive-web-design-with-foundation-t8103477.html http://kickass.to/tutsplus-simple-development-with-jquery-mobile-t6735499.html http://kickass.to/tutsplus-solid-design-patterns-t8208974.html http://kickass.to/tutsplus-test-driven-php-in-action-t6851704.html http://kickass.to/tutsplus-testing-tricks-for-php-and-laravel-developers-t7844807.html http://kickass.to/tutsplus-web-form-design-and-development-t8020800.html http://kickass.to/tutsplus-wordpress-plugin-development-essentials-t6615050.html http://kickass.to/udemy-build-an-instantly-updating-dynamic-website-with-jquery-ajax-t8415746.html http://kickass.to/udemy-psd-to-html5-css3-hand-code-a-beautiful-website-in-4-hours-t7740752.html http://kickass.to/video2brain-drupal-power-workshop-t6811365.html http://kickass.to/video2brain-exploring-css-positioning-t6683727.html http://kickass.to/video2brain-getting-started-with-joomla-t6600909.html http://kickass.to/video2brain-html5-for-beginners-learn-by-video-t6686185.html http://kickass.to/video2brain-html5-power-workshop-t6689166.html http://kickass.to/video2brain-php-5-3-advanced-web-application-programming-t6681560.html http://kickass.to/vtc-mysql-5-development-part-1-of-2-t7502575.html http://kickass.to/vtc-mysql-5-development-part-2-of-2-t7502576.html  https://thepiratebay.se/torrent/6113010/Linux_CBT_Scripting_BASH__PERL__PYTHON__PHP https://thepiratebay.se/torrent/7667241/CBT.Nuggets.Python.Programming.Python.Language-PLATO https://thepiratebay.se/torrent/8608894/InfiniteSkills_-_Web_Programming_With_Python https://thepiratebay.se/torrent/7838122/Lynda.com_-_Python_3_Essential_Training https://thepiratebay.se/torrent/7837732/python_book_collection https://thepiratebay.se/torrent/9549614/Pluralsight.com_-_Python_Fundamentals https://thepiratebay.se/torrent/5134755/LiveLessons.Python.Fundamentals.DVDR-HELL https://thepiratebay.se/torrent/7112525/The_New_Boston_-_Python_Programming_Tutorials http://kickass.to/lynda-up-and-running-with-python-2013-eng-t8167709.html  http://www.seedpeer.me/details/5730405/CBT-Nuggets---COMPTIA-SECURITY-SY0-201-WITH-SY0-301,-JK0-018-UPDATES.html http://www.seedpeer.me/details/6411686/CBT.Nuggets----IPv6.html http://www.seedpeer.me/details/6421814/CBT-Nuggets---Ubuntu.html http://www.seedpeer.me/details/6107414/LinuxCBT.Awk.Sed.Edition.html http://www.seedpeer.me/details/6107522/LinuxCBT-BASH-II-Edition-d3x.html http://www.seedpeer.me/details/4799869/LinuxCBT---Berkeley-Packet-Filters-BPF-Edition.html http://www.seedpeer.me/details/6881816/LinuxCBT--HTTPD-Edition.html http://www.seedpeer.me/details/6559038/LinuxCBT-Key-Files-edition.html http://www.seedpeer.me/details/6107600/LinuxCBT.MemCacheD.Edition-d3x.html http://www.seedpeer.me/details/5870507/LinuxCBT-Monitoring-Edition-feat-Nagios.html http://www.seedpeer.me/details/6107677/LinuxCBT-NIDS-Edition-d3x.html http://www.seedpeer.me/details/5925487/LinuxCBT-OpenLDAP-Edition.html http://www.seedpeer.me/details/6107558/LinuxCBT.OpenPGP.Edition-d3x.html http://www.seedpeer.me/details/6107692/LinuxCBT-OpenSSHv2-Edition-d3x.html http://www.seedpeer.me/details/6107699/LinuxCBT-PDNS-Edition-d3x.html http://www.seedpeer.me/details/2595080/LinuxCBT-Proxy-Edition-Feat-Squid-AG-torrent-[twistedtorrents2-com].html http://www.seedpeer.me/details/6110590/LinuxCBT-Samba-Edition-d3x.html http://www.seedpeer.me/details/6110595/LinuxCBT-SELinux-Edition-d3x.html http://www.seedpeer.me/details/4799871/LinuxCBT---SFTP-Edition.html http://www.seedpeer.me/details/6110602/LinuxCBT-SQLite-Edition-d3x.html http://www.seedpeer.me/details/5408265/LinuxCBT---Ubuntu-12.04-LTS.html http://www.seedpeer.me/details/4799857/LinuxCBT---UnixCBT-BSD8x-Edition-FreeBSD-8.2.html http://www.seedpeer.me/details/6110504/LinuxCBT.WinPerl.Edition-d3x.html http://www.seedpeer.me/details/6562861/Lynda-com---CMS-Fundamentals.html http://www.seedpeer.me/details/5247098/Lynda.com---Creating-an-Effective-Resume.html http://www.seedpeer.me/details/4989808/Lynda.com---CSS-with-LESS-and-SASS.html http://www.seedpeer.me/details/5340566/Lynda.com---Fundamentals-of-Software-Version-Control-Nov.-2012.html http://www.seedpeer.me/details/5569955/Lynda.com-GMail-For-Power-Users-V413HAV.html http://www.seedpeer.me/details/4631148/Lynda.com-Invaluable-Becoming-a-Leading-Authority.html http://www.seedpeer.me/details/4631108/Lynda.com-Invaluable-Building-Professional-Connections.html http://www.seedpeer.me/details/4623697/Lynda.com---Managing-a-Hosted-Website.html http://www.seedpeer.me/details/5236946/Lynda.com---PayPal-Essential-Training.html http://www.seedpeer.me/details/4596519/Lynda.com---PostgreSQL-9-With-PHP-Essential-Training-iRONiSO.html http://www.seedpeer.me/details/5016023/Lynda.com---Ruby-Essential-Training-with-Kevin-Skoglund.html http://www.seedpeer.me/details/4931186/Lynda.com---Using-Regular-Expressions.html http://www.seedpeer.me/details/6675342/Lynda---Git-Essential-Training.html http://www.seedpeer.me/details/6698556/Lynda---Leading-Change.html http://www.seedpeer.me/details/6973932/PluralSight-Refactoring-Fundamentals.html http://www.seedpeer.me/details/6661700/Tutsplus---Building-Ribbit-in-Rails.html http://www.seedpeer.me/details/6101172/Tutsplus---Cross-Platform-Browser-Testing-V413HAV.html http://www.seedpeer.me/details/5266314/TutsPlus---Git-Essentials.html http://www.seedpeer.me/details/4848412/TutsPlus---How-to-Be-a-Terminal-Pro.html http://www.seedpeer.me/details/4848374/TutsPlus---How-To-Customize-Your-Terminal.html http://www.seedpeer.me/details/4848299/TutsPlus---Maintainable-CSS-With-Sass-and-Compass.html http://www.seedpeer.me/details/4856068/TutsPlus---Regular-Expressions---Up-and-Running.html http://www.seedpeer.me/details/4816386/TutsPlus---The-Fundamentals-of-Ruby.html http://www.seedpeer.me/details/4848281/TutsPlus---The-Ultimate-Guide-for-Learning-Mootools.html http://www.seedpeer.me/details/4935147/CBT-Nuggets---Intermediate-to-Advanced-Linux-Series.html http://www.seedpeer.me/details/6251428/CBT-Nuggets---IPv6gidbcn.html http://www.seedpeer.me/details/5124174/CBT-Nuggets---LINUX-SERIES.html http://www.seedpeer.me/details/2891954/LinuxCBT-Deb5x-Edition-DVD-YUM.html http://www.seedpeer.me/details/4799921/LinuxCBT---Enterprise-Linux-4-Edition.html http://www.seedpeer.me/details/6290791/LinuxCBT-Network-Intrusion-Detection-System.html http://www.seedpeer.me/details/6107569/LinuxCBT.PackCapAnal.Edition-d3x.html http://www.seedpeer.me/details/6107588/LinuxCBT.PAM.Edition-d3x.html http://www.seedpeer.me/details/6110616/LinuxCBT-Win-Awk-Sed-Edition-d3x.html http://www.seedpeer.me/details/6666824/Packtpub-BackTrack-5-Wireless-Penetration-Testing-[Video].html http://www.seedpeer.me/details/6668649/Packtpub-Getting-started-with-Apache-Solr-Search-Server-[Video].html http://www.seedpeer.me/details/6668652/Packtpub-Getting-Started-with-Citrix-XenApp-6.5-[Video].html http://www.seedpeer.me/details/6668669/Packtpub-Kali-Linux---Backtrack-Evolved-Assuring-Security-by-Penetration-Testing.html http://www.seedpeer.me/details/6415199/Pluralsight-com-Installing-and-Configuring-Apache-Web-Server-iNKiSO.html http://www.seedpeer.me/details/6271468/Pluralsight---MySQL-Indexing-for-Performance-2013.html http://www.seedpeer.me/details/6228283/Pluralsight---Web-Performance-Course.html http://www.seedpeer.me/details/6376899/TutsPlus---Documentation-in-Ruby.html http://www.seedpeer.me/details/5661723/CBT-Nuggets-&acirc;%EF%BF%BD%EF%BF%BD-Cisco-CCENT-CCNA-ICND1-100-101.html http://www.seedpeer.me/details/5825975/CBT-Nuggets-CCNA-200-101-mp4.html http://www.seedpeer.me/details/5513622/CBT-Nuggets---Cisco-CCNA-Security-640-554.html http://www.seedpeer.me/details/5890097/CBT-Nuggets---Citrix-XenApp-6.5.html http://www.seedpeer.me/details/6187994/CBT-Nuggets----CompTIA-A-220-801-&amp;-220-802-Update-2012-iso.html http://www.seedpeer.me/details/6353101/CBT-Nuggets---CompTIA-Security.rar.html http://www.seedpeer.me/details/5243830/CBT-Nuggets---Oracle-Certified-Professional-1Z0-053-OCP.html http://www.seedpeer.me/details/4935122/CBT-Nuggets---Oracle-Database-11g-DBA-1-1Z0-052.html http://www.seedpeer.me/details/7222524/CBT.Nuggets----Oracle.Database.11G.DBA.1Z0-053-EnCod3r.html http://www.seedpeer.me/details/4935128/CBT-Nuggets---Oracle-Database-11g-SQL-Fundamentals-1-1Z0-051.html http://www.seedpeer.me/details/5863952/CBTNuggets-VMware-View-5.iso.html http://www.seedpeer.me/details/6199576/CBT-Nuggets---Web-Development.html http://www.seedpeer.me/details/4825729/LinuxCBT---CentOS6x-Edition.html http://www.seedpeer.me/details/1520287/linuxCBT---DBMS-mysql-5-Training.html http://www.seedpeer.me/details/4799864/LinuxCBT---Deb6x-Edition.html http://www.seedpeer.me/details/4799881/LinuxCBT---Debian-Edition.html http://www.seedpeer.me/details/1548037/LINUXCBT-FEAT-SUSE-10-ENTERPRISE-EDITION-JGTiSO[www.thepeerhub.com].html http://www.seedpeer.me/details/6107551/LinuxCBT-KornShell-Edition-d3x.html http://www.seedpeer.me/details/4261635/Linuxcbt-Redhat-6-Enterprise-Tutorials.html http://www.seedpeer.me/details/1662106/LinuxCBT---RHEL5.html http://www.seedpeer.me/details/6110601/LinuxCBT-SLES-10-Edition-d3x.html http://www.seedpeer.me/details/4799923/LinuxCBT---SLES-11-Edition-SUSE-11-Enterprise.html http://www.seedpeer.me/details/6964916/Lynda---ASP.NET-MVC-4-Essential-Training.html http://www.seedpeer.me/details/7253647/Lynda---Building-Facebook-Applications-with-PHP-and-MySQL.html http://www.seedpeer.me/details/5552857/Lynda.com---Applied-Responsive-Design-Mar,-2013.html http://www.seedpeer.me/details/4657790/Lynda.com-Building-Facebook-Applications-with-HTML-and-JavaScript.html http://www.seedpeer.me/details/4986911/Lynda.com---C&amp;C-Essential-Training.html http://www.seedpeer.me/details/4504272/Lynda.com-Choosing-Using-Web-Fonts.html http://www.seedpeer.me/details/6554622/Lynda.com---Designing-Resume.html http://www.seedpeer.me/details/5332552/Lynda.com---Drupal-7-Advanced-Training---TestOrToast.html http://www.seedpeer.me/details/7051972/Lynda.com---Drupal-7--Creating-and-Editing-Custom-Themes---with-Chaz-Chumley[Isaac-9].html http://www.seedpeer.me/details/5565633/Lynda.com---JavaScript-and-JSON-Mar,-2013.html http://www.seedpeer.me/details/6664728/Lynda.com-JavaScript-for-Web-Designers[2013].html http://www.seedpeer.me/details/6664733/Lynda.com-Node.js-Essential-Training[2013].html http://www.seedpeer.me/details/4591597/Lynda.com---Practical-and-Effective-JavaScript.html http://www.seedpeer.me/details/5256920/Lynda.com-Responsive-Design-with-Joomla--Exercice-Files.html http://www.seedpeer.me/details/5374680/Lynda.com---Simplified-Drupal-Sites-with-Drush---TestOrToast.html http://www.seedpeer.me/details/4795822/Lynda.com---Unix-for-Mac-OS-X-Users.html http://www.seedpeer.me/details/6716808/[Lynda.com]-Up-and-Running-with-Amazon-Web-Services-[2013,-ENG].html http://www.seedpeer.me/details/4593746/Lynda.com-Web-Form-Design-Best-Practices.html http://www.seedpeer.me/details/4850397/Lynda---Create-Your-First-Online-Store-with-Drupal-Commerce.html http://www.seedpeer.me/details/4850389/Lynda---Drupal-7-:-Essential-Training.html http://www.seedpeer.me/details/4850540/Lynda---Drupal-7-New-Features.html http://www.seedpeer.me/details/4850393/Lynda---Drupal-7-:-Reporting-and-Visualizing-Data.html http://www.seedpeer.me/details/5996422/Lynda---Up-and-Running-with-Backbone.js.html http://www.seedpeer.me/details/6971211/Lynda---Up-and-Running-with-CakePHP.html http://www.seedpeer.me/details/6666828/Packtpub-Beginning-Yii-[Video].html http://www.seedpeer.me/details/6666832/Packtpub-Building-a-Website-with-Drupal-[Video].html http://www.seedpeer.me/details/6668107/Packtpub-Drupal-7-Module-Development-[Video].html http://www.seedpeer.me/details/6668679/Packtpub-Learning-Joomla-3-Extension-Development-[Video].html http://www.seedpeer.me/details/7101071/Pluralsight---AngularJS-Fundamentals-[OGNADROL].html http://www.seedpeer.me/details/7268422/[Pluralsight]-AWS-Developer-Fundamentals-[2013,-ENG].html http://www.seedpeer.me/details/6695354/Pluralsight---Beginning-HTML5-Game-Development-With-Quintus.html http://www.seedpeer.me/details/6370939/Pluralsight---Cisco-CCNA-WAN-Technologies---Learn-wide-area-network-WAN-technologies-and-configuration.html http://www.seedpeer.me/details/6383616/Pluralsight-Introduction-to-Spring-MVC2013.html http://www.seedpeer.me/details/6228297/Pluralsight---Introduction-to-the-Facebook-Graph-API.html http://www.seedpeer.me/details/6294391/Pluralsight---Optimizing-and-Managing-Distributed-Systems-on-AWS-2013.html http://www.seedpeer.me/details/6698563/[Pluralsight]-Sublime-Text-3-From-Scratch-[2013,-ENG].html http://www.seedpeer.me/details/5056370/Tutsplus---Advanced-Backbone-Patterns-and-Techniques-2012.html http://www.seedpeer.me/details/7233352/Tutsplus---Become-a-Professional-JavaScript-Developer-Basics.html http://www.seedpeer.me/details/4848277/TutsPlus---Build-Web-Apps-in-Node-and-Express.html http://www.seedpeer.me/details/5683153/Tutsplus---Catch-Up-with-Ruby-on-Rails-4.html http://www.seedpeer.me/details/4918947/TutsPlus---CodeIgniter-Essentials.html http://www.seedpeer.me/details/5069781/TutsPlus---Connected-to-the-Backbone.html http://www.seedpeer.me/details/5513056/Tutsplus---Designing-Professional-Resumes.html http://www.seedpeer.me/details/5706815/Tutsplus-Easier-JavaScript-Apps-with-AngularJS.html http://www.seedpeer.me/details/6462415/TutsPlus---Easier-JavaScript-with-TypeScript.html http://www.seedpeer.me/details/5868293/TutsPlus---Getting-Started-With-Windows-8-Development-Using-HTML,-CSS-&amp;-JavaScript-V413HAV.html http://www.seedpeer.me/details/6150521/TutsPlus-HTML5-Video-Essentials-PRODEV.html http://www.seedpeer.me/details/4841911/TutsPlus---JavaScript-Testing-With-Jasmine.html http://www.seedpeer.me/details/6593486/TutsPlus---Less-is-More.html http://www.seedpeer.me/details/6571637/TutsPlus---Modern-Testing-in-PHP-with-Codeception.html http://www.seedpeer.me/details/6095651/Tutsplus---Parallax-Scrolling-for-Web-Design.html http://www.seedpeer.me/details/6574591/TutsPlus---Say-Yo-to-Yeoman.html http://www.seedpeer.me/details/4811335/Tutsplus---Test-Driven-Development-in-Ruby.html http://www.seedpeer.me/details/6268980/TutsPlus-Test-Driven-Development-With-CoffeeScript-and-Jasmine.html http://www.seedpeer.me/details/6185755/TutsPlus---The-MVC-Mindser-Jeffery-Way---ICARUS.html http://www.seedpeer.me/details/5024493/TutsPlus---Venture-Into-Vim.html http://www.seedpeer.me/details/6286416/Tutsplus---Vim-for-Advanced-Users.html http://www.seedpeer.me/details/6585031/Tutsplus---WordPress-Hackers-Guide-to-the-Galaxy.html http://www.seedpeer.me/details/4848477/TutsPlus---Writing-Modular-JavaScript.html  @giansalex Owner Author giansalex commented on 26 Feb 2018 •  SOLID http://www.allitebooks.com/beginning-solid-principles-and-design-patterns-for-asp-net-developers/  @giansalex Owner Author giansalex commented on 7 Mar 2018 Udemy: AWS Arquitecto de Soluciones Certificado Asociado  https://mega.co.nz/#!ZzhGWSAL!wuthFca0SdJBjmaP5lFX0QF6PeMsrdclKFXlZL1Rsi4 Pass: gratismas.org  @giansalex Owner Author giansalex commented on 7 Mar 2018 Go lang Complete https://www.freetutorials.us/wp-content/uploads/2017/11/FreeTutorials.Us-Udemy-go-the-complete-developers-guide.torrent  @GCPBigData GCPBigData commented on 15 Jul 2018 go books https://drive.google.com/open?id=1d6OsFAn8kpHCXtw0bcoYuyHqrAdGZva0  @freisrael freisrael commented on 14 Aug 2018 giansalex thanks for sharing. I am looking for learning phython with Joe Marini. It would be great if you post it.  @FirstBoy1 FirstBoy1 commented on 25 May 2019 Can anyone provide this book ""Getting started with Spring Framework: covers Spring 5"" by "" J Sharma (Author), Ashish Sarin "". Thanks in advance  @okreka okreka commented on 31 May 2019 Can anyone provide ""Windows Presentation Foundation Masterclass"" course from Udemy. Thanks in advance  @singhaltanvi singhaltanvi commented on 8 Aug 2019 can anyone provide 'sedimentology and petroleum geology' course from Udemy. Thanks in advance.  @kumarsreenivas051 kumarsreenivas051 commented on 9 Sep 2019 Can anyone provide ""Programming languages A,B and C"" course from Coursera. Thanks in advance.  @BrunoMoreno BrunoMoreno commented on 11 Sep 2019 The link for the torrents in piratebay, now is .org to the correct url.  @sany2k8 sany2k8 commented on 24 Sep 2019 Can anyone add this The Complete Hands-On Course to Master Apache Airflow  @pharaoh1 pharaoh1 commented on 30 Sep 2019 can you pls add this course to your list https://www.udemy.com/course/advanced-python3/  @SushantDhote936 SushantDhote936 commented on 1 Oct 2019 Can you add Plural Sight CISSP  @allayGerald allayGerald commented on 1 Oct 2019 open directive for lynda courses: https://drive.google.com/drive/folders/1zQan1cq1ZnqXmueRF5IqKoOtpFxl6Y4G  @ezekielskottarathil ezekielskottarathil commented on 3 Oct 2019 can anyone provide 'sedimentology and petroleum geology' course from Udemy. Thanks in advance.  ""wrong place boy""  @pulkitd2699 pulkitd2699 commented on 8 Oct 2019 Does anyone has a link for 'Cyber security: Python and web applications' course? Thanks  @mohanrajrc mohanrajrc commented on 19 Oct 2019 •  Can anyone provide torrent file for Mastering React By Mosh Hamedani. Thanks https://codewithmosh.com/p/mastering-react  @evilprince2009 evilprince2009 commented on 27 Oct 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  @nunusandio nunusandio commented on 30 Oct 2019 Can anyone post torrent file for ASP.NET Authentication: The Big Picture https://app.pluralsight.com/library/courses/aspdotnet-authentication-big-picture/table-of-contents  @EslamElmadny EslamElmadny commented on 9 Dec 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  @Genius-K-SL Genius-K-SL commented on 14 Dec 2019 hay brother! do you have html5 game development with javascript course ?  @Genius-K-SL Genius-K-SL commented on 14 Dec 2019 This link is not working brother! http://www.seedpeer.me/details/4657790/Lynda.com-Building-Facebook-Applications-with-HTML-and-JavaScript.html  @smithtuka smithtuka commented on 20 Dec 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  @AbdOoSaed AbdOoSaed commented on 22 Dec 2019 Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff  @EslamElmadny EslamElmadny commented on 23 Dec 2019 •  Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  @jedi2610 jedi2610 commented on 27 Dec 2019 Can anyone provide me with Code with Mosh's Ultimate Java Mastery Series link? plis  @InnocentZaib InnocentZaib commented on 31 Dec 2019 Please provide the link of codewithmosh The ultimate data structures and algorithms Bundle the link is given below. Please give me the torrnet file or link to download https://codewithmosh.com/p/data-structures-algorithms  @edward-teixeira edward-teixeira commented on 1 Jan 2020 Please provide the link of codewithmosh The ultimate data structures and algorithms Bundle the link is given below. Please give me the torrnet file or link to download https://codewithmosh.com/p/data-structures-algorithms  Yea i'm looking for it too  @kaneyxx kaneyxx commented on 1 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  could you please share the part-1 & part-3?  @edward-teixeira edward-teixeira commented on 2 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  @ravisharmaa ravisharmaa commented on 7 Jan Please add this . https://www.letsbuildthatapp.com/course/AppStore-JSON-APIs  @WaleedAlrashed WaleedAlrashed commented on 13 Jan This one kindly. https://www.udemy.com/course/flutter-build-a-complex-android-and-ios-apps-using-firestore/  @Sopheakmorm Sopheakmorm commented on 19 Jan Anyone have this course: https://www.udemy.com/course/mcsa-web-application-practice-test70-480-70-483-70-486  @EslamElmadny EslamElmadny commented on 19 Jan Anyone have this course: https://www.udemy.com/course/mcsa-web-application-practice-test70-480-70-483-70-486  +1  @EslamElmadny EslamElmadny commented on 20 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  https://vminhsang.name.vn/category/it-courses/codewithmosh/ this link includes almost all mosh courses  @mohanrajrc mohanrajrc commented on 22 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  https://vminhsang.name.vn/category/it-courses/codewithmosh/ this link includes almost all mosh courses  Yes. Java mastery and Data Structures 1, 2, 3 are available in this site. free download.  @shihab122 shihab122 commented on 22 Jan Please give me the torrnet file or link to download The Ultimate Design Patterns  @EslamElmadny EslamElmadny commented on 22 Jan •  Please give me the torrnet file or link to download The Ultimate Design Patterns  Waiting for it also :D  @K-wachira K-wachira commented on 23 Jan Can you please add these two below ? https://codewithmosh.com/p/the-ultimate-java-mastery-series https://codewithmosh.com/p/data-structures-algorithms-part-2  any luck ?  Has this come through by any chances?  fff data-structures-algorithms-part-2 https://drive.google.com/open?id=1oYYdPp4MVVk7ZzZL6rLepFe33IjXtkqj  Can you share part 1 and 3?  https://vminhsang.name.vn/category/it-courses/codewithmosh/ this link includes almost all mosh courses  Yes. Java mastery and Data Structures 1, 2, 3 are available in this site. free download.  You are a saviour .. Altho i feel bad i cant really buy the course... its really good  @msdyn95 msdyn95 commented 25 days ago •  Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  @K-wachira K-wachira commented 23 days ago This one kindly. https://www.udemy.com/course/flutter-build-a-complex-android-and-ios-apps-using-firestore/  Hey did you find this one?  @edward-teixeira edward-teixeira commented 22 days ago Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  Did you find those?  @msdyn95 msdyn95 commented 21 days ago Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  Did you find those?  unfortunately not.  @edward-teixeira edward-teixeira commented 20 days ago Please give me the torrent file or link to download https://codewithmosh.com/p/design-patterns https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-1/ https://coursedownloader.net/code-with-mosh-the-ultimate-design-patterns-part-2/  Did you find those?  unfortunately not.  Found it !  https://vminhsang.name.vn/category/it-courses/codewithmosh/  @ZainA14 ZainA14 commented 16 days ago •  Can someone please link me to this mosh course for torrent or direct download link https://codewithmosh.com/p/the-ultimate-full-stack-net-developer-bundle  @khushiigupta khushiigupta commented 9 days ago Can any one please provide me link for jenkins so that I can learn as al as possible   to join this conversation on GitHub. Already have an account? Sign in to comment © 2020 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing API Training Blog About",61,0,2020,2025,0,https://github.com/swati1024/torrents
Command,TutorialUnityMultiplayer,How to use Command Design Pattern to make custom networking for Unity?,55,1,2020,2024,1,https://github.com/Ideefixze/TutorialUnityMultiplayer
Command,okdp,A design pattern library developed in modern c++.,54,17,2020,2025,2,https://github.com/lkimuk/okdp
Command,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Command,vuecommander,VueCommander is a Vuejs application framework utilizing the classic (GoF) command and observer design patterns,50,9,2019,2023,0,https://github.com/jschatz1/vuecommander
Command,python-design-patterns,Python Design Pattern Examples,32,2,2022,2024,1,https://github.com/dori-dev/python-design-patterns
Command,Java-Design-Concepts,"A look into some java design concepts. Including OO design patterns, other concepts which can be shown in a runtime and command line application.",27,7,2012,2024,1,https://github.com/billyyarosh/Java-Design-Concepts
Command,command-lib,"Java library for Command Design Pattern, support code generation by Annotation Processing, compatible with Android",17,5,2016,2020,1,https://github.com/derron/command-lib
Command,design-patterns-in-arabic,Design patterns بالمختصر المفيد 🎈,17,3,2022,2025,2,https://github.com/Abd-Beltaji/design-patterns-in-arabic
Command,clean-architecture-dotnet,"This repository is a sandbox to experiment with new techniques, concepts, and technologies using Clean Architecture concepts. Here you will find Domain-Driven Design (DDD), Command Query Responsibility Segregation (CQRS), SOLID Design Principles, Design Patterns, and more.",13,0,2022,2025,1,https://github.com/j-didi/clean-architecture-dotnet
Command,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Command,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Command,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Command,use-cqrs,React hooks library for applying Command and Query Responsibility Segregation (CQRS) design pattern and Single Responsibility Principle (SRP) in frontend development.,10,4,2022,2024,1,https://github.com/thachp/use-cqrs
Command,OnionArchitecture_CQRS_Dapper,Integrated CQRS (Command Query Responsible Segregation) Design Pattern with Dapper as ORM Tool(Object Relation mapping) followed by Onion Architecture,9,4,2021,2024,1,https://github.com/JayKrishnareddy/OnionArchitecture_CQRS_Dapper
Command,Maze-Runner," A game close to bomberman, but aim to escaping a maze. Game included random maze generation, nice gui and animation along with a lot other features moreover implemented bunch of Design patterns such as Singleton, Flyweight, Factory, Command and much more.",8,3,2017,2023,4,https://github.com/youssefAli11997/Maze-Runner
Command,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Command,MarsRover,"A loosely coupled, test-driven C# .NET solution to the (in)famous Mars Rover problem, using the Command Design Pattern",7,12,2012,2022,1,https://github.com/microcosm/MarsRover
Command,design_patterns,C++ 设计模式  Common design pattern examples:(Factory AbstractFactory Adapter Bridge Command Visistor Observer....etc),7,1,2018,2024,1,https://github.com/cf-zhang/design_patterns
Command,inventory-management-system,JavaFX app which implements various design patterns and oop principles.,7,0,2024,2025,1,https://github.com/yaeby/inventory-management-system
Command,ultimate-board-game-system,"Java | An object-oriented framework for implemeting any 2-player board game such as Tic-Tac-Toe, Othello, Reversi and Checkers. Uses well known design patterns such as Command, Strategy, vistor, and state",6,2,2019,2024,1,https://github.com/psprao95/ultimate-board-game-system
Command,typescript_design_patterns,Implementations of design patterns (GOF) in Typescript,5,0,2018,2022,1,https://github.com/Uncleseneca/typescript_design_patterns
Command,yii2-command-handler,"A Yii2 extension that provides the framework with the Command Design Pattern. Useful to create commands in a main process and execute them in another processes such as crons, console controllers, etc.",5,3,2015,2019,1,https://github.com/jlorente/yii2-command-handler
Command,UndoRedo,"A general purpose, functional style to the command design pattern.",5,1,2013,2022,1,https://github.com/mako-taco/UndoRedo
Command,CQRS-Command-Query-Responsibility-Segregation-,"I performed Crud management with CQRS + Mediator Design Pattern by keeping the person's annual to-do list on a Jquerybased Schedule. Technologies I Use: Asp.Net Core 7.0, C#, Entity Framework Code First, MSSQL, CQRS, Mediator, MediatR",5,0,2023,2024,1,https://github.com/zehrasbr/CQRS-Command-Query-Responsibility-Segregation-
Command,chaintown,Simple implementation of the pipeline or chain of command design pattern.,4,2,2018,2024,1,https://github.com/ziolmar/chaintown
Command,commandmosaic,Implementing Java services based on the command design pattern,4,2,2020,2024,1,https://github.com/peter-gergely-horvath/commandmosaic
Command,t21-dependency-process-engine,Command design pattern implementation with dependencies,4,1,2016,2023,1,https://github.com/worldline-spain/t21-dependency-process-engine
Command,tree.rb,Tree visitor is an implementation of visitor design pattern. Contains the command tree.rb that is a 'clone' of tree unix command. ,4,2,2010,2019,2,https://github.com/26fe/tree.rb
Command,Pizza-Delivery-System,"A pizza delivery system that showcases the usage of Observer, Abstract Factory, Singleton, Command, and Iterator design patterns. ",4,2,2017,2021,1,https://github.com/DuyguKeskek/Pizza-Delivery-System
Command,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Command,KFox,"Command framework built around Kord, built to be robust and scalable, following Kord's convention and design patterns.",4,0,2022,2023,3,https://github.com/WinteryFox/KFox
Command,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Command,Design-Patterns---PMS---Patient-Information-System-Simple,"Simple Project For Singleton, Abstract Factory, Command, Iterator, Decarator Observer and Adapter Design Patterns, All in One",4,0,2020,2021,0,https://github.com/muammersahin/Design-Patterns---PMS---Patient-Information-System-Simple
Command,Isabelle,"Isabelle is a Discord Bot that incorporates three design patterns: Singleton, Strategy, and Command. Unit tests were made using jest. ",4,0,2020,2023,5,https://github.com/andreidimaano/Isabelle
Command,UstaDonerciDesignPattern,"A term project about usage of multiple design pattern. In this project used Decorator Pattern, Factory Pattern, Template Method Pattern, Command Pattern. ",4,0,2020,2022,1,https://github.com/Scankiran/UstaDonerciDesignPattern
Command,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Command,stubkit,"StubKit is a command-line tool (CLI) for generating code files from predefined or custom templates. With support for different frameworks like NestJS and the ability to add your own templates, StubKit makes it easy to quickly create files based on design patterns.",4,0,2024,2024,1,https://github.com/Miguel-Leite/stubkit
Command,design-pattern-command,Want to learn more about design patterns in Java? Check out this post to learn more about how to use the command design pattern in this tutorial.,3,5,2020,2023,1,https://github.com/BrijeshSaxena/design-pattern-command
Command,Command,Command design pattern for javascript,3,1,2013,2013,1,https://github.com/mako-taco/Command
Command,repository-service-command,Creating Repository design pattern with services,3,0,2021,2025,1,https://github.com/mrmarchone/repository-service-command
Command,Command-Design-Pattern,Hey everyone here is the implementation of Command  Design Pattern ,3,0,2023,2023,1,https://github.com/akshatsh0610/Command-Design-Pattern
Command,2024GA,"Design Pattern Unity (Singleton, Command, StateMachine, Observer,...Addressable)",3,0,2024,2024,1,https://github.com/mindongun123/2024GA
Command,cordcutter,The circuit breaker design pattern for nextocord application commands,3,0,2023,2024,1,https://github.com/teaishealthy/cordcutter
Command,TerminalTrader,"A command-line trading application for buying and selling stock, among other trading operations, built using the MVC design pattern, Flask web microframework, Jinja template engine, and SQLite RDBMS.",3,3,2018,2024,1,https://github.com/matthewmuccio/TerminalTrader
Command,ika,PHP 5.3 library to use command/transaction design pattern,3,0,2012,2018,1,https://github.com/devster/ika
Command,simple-action,A very simple GitHub action implementing the command design pattern,3,1,2021,2023,1,https://github.com/Link-/simple-action
Command,Clike,This package provides an implementation of the command design pattern to allow easy implementation of command line shell applications.,3,2,2018,2023,2,https://github.com/DeGraciaMathieu/Clike
Command,dataobjectexception.powershell.oop,"PowerShell : How to call the PowerShell commands (cmdlet) through the use of design patterns (factory, strategy,...)",3,0,2020,2024,1,https://github.com/thierry-sinassamy/dataobjectexception.powershell.oop
Command,KataATM,"In China, people could use ATMs of banks to check balance of their accounts, deposit and withdraw money, and even recharge prepaid units to their electricity cards. Now try to use TDD to implement this kata and refactor it to Command design pattern.",3,3,2013,2021,1,https://github.com/wubin28/KataATM
Command,nfwjs,"Nfw.js makes it easy to build modular web apps using plain old web standards. Nfw.js does not use compilers, directives, special syntax, command line tools, or anything else that adds complexity to web development. Nfw.js simply uses JavaScript, HTML5, and a few well-established software design patterns.",3,0,2018,2018,1,https://github.com/AppSotoLLC/nfwjs
Command,Clean-Architecture-with-partitioned-repository-pattern-using-Azure-Cosmos-DB,"This project provides a starting point to build a web API to work with Azure Cosmos DB using ASP.NET Core and Azure Cosmos DB .NET SDK V3, based on Clean Architecture and repository design pattern.  Partition key is also implemented through the repository pattern in order to support large scale Cosmos DB. A RESTful API application is created with popular architecture features (see list below) Clean Architecture is promoted by Microsoft on their .NET application architecture guide page. The e-book written by Steve ""ardalis"" Smith (@ardalis) is beautifully written and well explains the beauty and benefits of using Clean Architecture. For more details, please see Architect Modern Web Applications with ASP.NET Core and Azure  This project uses the newer Cosmos DB .NET SDK V3, because it adds support for stream APIs and Cosmos DB Change Feed processor APIs, as well as performance improvements.  Goals The primary goal of the project is to provide a basic solution structure for anyone who is building a new ASP.NET Core web or API project using Cosmos DB. Please watch for this repository to get notification when I make updates to the repo.  For a detailed discussion, please see my recent article, Clean Architecture — ASP.NET Core API using Partitioned Repository Pattern and Azure Cosmos DB (link: https://medium.com/swlh/clean-architecture-with-partitioned-repository-pattern-using-azure-cosmos-db-62241854cbc5)  Getting Started Download the Azure CosmosDB emulator in order to run the API project locally. Here is a download link: https://docs.microsoft.com/en-us/azure/cosmos-db/local-emulator-release-notes#download. Start the emulator Set the API project as your Startup project in Visual Studio The swagger UI page should be loaded at: https://localhost:5001/swagger/index.html Features supported ASP.NET Core 3.1 Azure Cosmos DB .NET SDK V3 Repository Design Pattern Partition Key REST API Swagger UI OData support IMemoryCache Cache service (Non-distributed in-memory cache) Serilog for structured logging MediatR Command/Query pattern MediatR pipeline behaviour for exception handling FluentValidation for validation AutoMapper to mapping Database initial creation Sample data seeding Email Sender using SendGrid CRUD endpoints using Cosmos DB Cosmos DB Point read using partition key and ID Search data in Cosmos DB using SQL query directly (demonstration purpose, not recommended in production) Search data in Cosmos DB using Parameterized Query Search data in Cosmos DB using LINQ and IQueryable Search data in Cosmos DB using Specification Pattern to abstract out query-specific logic ASP.NET Core Identity (TODO) Identity Service (TODO) Cosmos DB Change Feed (TODO) Cosmos DB Stored Procedure for Transaction (TODO) Acknowledgement Special thanks to Steve Smith (@ardalis) for sharing the CleanArchitecture repository and the e-book. I absolutely love it!  Thanks to Azure-Samples/PartitionedRepository for sample code using Cosmos DB .NET SDK V2, which helped me understand Cosmos DB .NET SDK V2 and compare SDK V2 against V3.",3,0,2020,2022,1,https://github.com/NaraP/Clean-Architecture-with-partitioned-repository-pattern-using-Azure-Cosmos-DB
Command,burger,"# Node Express Handlebars  ### Overview  In this assignment, you'll create a burger logger with MySQL, Node, Express, Handlebars and a homemade ORM (yum!). Be sure to follow the MVC design pattern; use Node and MySQL to query and route data in your app, and Handlebars to generate your HTML.  ### Read This  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  ### Important  * **This assignment must be deployed.** Be sure to utilize the [MYSQL Heroku Deployment Guide](../../03-Supplemental/MySQLHerokuDeploymentProcess.pdf) in order to deploy your assignment.  ### Before You Begin  * Eat-Da-Burger! is a restaurant app that lets users input the names of burgers they'd like to eat.  * Whenever a user submits a burger's name, your app will display the burger on the left side of the page -- waiting to be devoured.  * Each burger in the waiting area also has a `Devour it!` button. When the user clicks it, the burger will move to the right side of the page.  * Your app will store every burger in a database, whether devoured or not.  * [Check out this video of the app for a run-through of how it works](https://youtu.be/msvdn95x9OM).  ### Commits  Having an active and healthy commit history on GitHub is important for your future job search. It is also extremely important for making sure your work is saved in your repository. If something breaks, committing often ensures you are able to go back to a working version of your code.  * Committing often is a signal to employers that you are actively working on your code and learning.    * We use the mantra “commit early and often.”  This means that when you write code that works, add it and commit it!    * Numerous commits allow you to see how your app is progressing and give you a point to revert to if anything goes wrong.  * Be clear and descriptive in your commit messaging.    * When writing a commit message, avoid vague messages like ""fixed."" Be descriptive so that you and anyone else looking at your repository knows what happened with each commit.  * We would like you to have well over 200 commits by graduation, so commit early and often!  ### Submission on BCS  * **This assignment must be deployed.** * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  ## Instructions  #### App Setup  1. Create a GitHub repo called `burger` and clone it to your computer.  2. Make a package.json file by running `npm init` from the command line.  3. Install the Express npm package: `npm install express`.  4. Create a server.js file.  5. Install the Handlebars npm package: `npm install express-handlebars`.  6. Install MySQL npm package: `npm install mysql`.  7. Require the following npm packages inside of the server.js file:    * express  #### DB Setup  1. Inside your `burger` directory, create a folder named `db`.  2. In the `db` folder, create a file named `schema.sql`. Write SQL queries this file that do the following:     * Create the `burgers_db`.    * Switch to or use the `burgers_db`.    * Create a `burgers` table with these fields:      * **id**: an auto incrementing int that serves as the primary key.      * **burger_name**: a string.      * **devoured**: a boolean.  3. Still in the `db` folder, create a `seeds.sql` file. In this file, write insert queries to populate the `burgers` table with at least three entries.  4. Run the `schema.sql` and `seeds.sql` files into the mysql server from the command line  5. Now you're going to run these SQL files.     * Make sure you're in the `db` folder of your app.     * Start MySQL command line tool and login: `mysql -u root -p`.     * With the `mysql>` command line tool running, enter the command `source schema.sql`. This will run your schema file and all of the queries in it -- in other words, you'll be creating your database.     * Now insert the entries you defined in `seeds.sql` by running the file: `source seeds.sql`.     * Close out of the MySQL command line tool: `exit`.  #### Config Setup  1. Inside your `burger` directory, create a folder named `config`.  2. Create a `connection.js` file inside `config` directory.     * Inside the `connection.js` file, setup the code to connect Node to MySQL.     * Export the connection.  3. Create an `orm.js` file inside `config` directory.     * Import (require) `connection.js` into `orm.js`     * In the `orm.js` file, create the methods that will execute the necessary MySQL commands in the controllers. These are the methods you will need to use in order to retrieve and store data in your database.       * `selectAll()`      * `insertOne()`      * `updateOne()`     * Export the ORM object in `module.exports`.  #### Model setup  * Inside your `burger` directory, create a folder named `models`.    * In `models`, make a `burger.js` file.      * Inside `burger.js`, import `orm.js` into `burger.js`      * Also inside `burger.js`, create the code that will call the ORM functions using burger specific input for the ORM.      * Export at the end of the `burger.js` file.  #### Controller setup  1. Inside your `burger` directory, create a folder named `controllers`.  2. In `controllers`, create the `burgers_controller.js` file.  3. Inside the `burgers_controller.js` file, import the following:     * Express    * `burger.js`  4. Create the `router` for the app, and export the `router` at the end of your file.  #### View setup  1. Inside your `burger` directory, create a folder named `views`.     * Create the `index.handlebars` file inside `views` directory.     * Create the `layouts` directory inside `views` directory.       * Create the `main.handlebars` file inside `layouts` directory.       * Setup the `main.handlebars` file so it's able to be used by Handlebars.       * Setup the `index.handlebars` to have the template that Handlebars can render onto.       * Create a button in `index.handlebars` that will submit the user input into the database.  #### Directory structure  All the recommended files and directories from the steps above should look like the following structure:  ``` . ├── config │   ├── connection.js │   └── orm.js │  ├── controllers │   └── burgers_controller.js │ ├── db │   ├── schema.sql │   └── seeds.sql │ ├── models │   └── burger.js │  ├── node_modules │  ├── package.json │ ├── public │   └── assets │       ├── css │       │   └── burger_style.css │       └── img │           └── burger.png │    │ ├── server.js │ └── views     ├── index.handlebars     └── layouts         └── main.handlebars ```  ### Reminder: Submission on BCS  * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  - - -  ### Minimum Requirements  Attempt to complete homework assignment as described in instructions. If unable to complete certain portions, please pseudocode these portions to describe what remains to be completed. Hosting on Heroku and adding a README.md are required for this homework. In addition, add this homework to your portfolio, more information can be found below.   - - -  ### Hosting on Heroku  Now that we have a backend to our applications, we use Heroku for hosting. Please note that while **Heroku is free**, it will request credit card information if you have more than 5 applications at a time or are adding a database.  Please see [Heroku’s Account Verification Information](https://devcenter.heroku.com/articles/account-verification) for more details.  - - -  ### Create a README.md  Add a `README.md` to your repository describing the project. Here are some resources for creating your `README.md`. Here are some resources to help you along the way:  * [About READMEs](https://help.github.com/articles/about-readmes/)  * [Mastering Markdown](https://guides.github.com/features/mastering-markdown/)  - - -  ### Add To Your Portfolio  After completing the homework please add the piece to your portfolio. Make sure to add a link to your updated portfolio in the comments section of your homework so the TAs can easily ensure you completed this step when they are grading the assignment. To receive an 'A' on any assignment, you must link to it from your portfolio.  - - -  ### One More Thing  This is a really tough homework assignment, but we want you to put in your best effort to finish it.  If you have any questions about this project or the material we have covered, please post them in the community channels in slack so that your fellow developers can help you! If you're still having trouble, you can come to office hours for assistance from your instructor and TAs.  ### Reminder  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  **Good Luck!**",3,2,2019,2024,1,https://github.com/CaptainEFFF/burger
Command,Diamond.Core-Patterns,C# libraries to support common design patterns.,2,2,2019,2024,3,https://github.com/porrey/Diamond.Core-Patterns
Command,CommandMapper,Behaviour Design Pattern,2,1,2015,2019,2,https://github.com/vicboma1/CommandMapper
Command,SE-311-Design-Pattern-Project-Patient-Management-System,"This project was for our Design Patterns course. We used 5 different design patterns which are Observer, Abstract Factory, Template Method, Singleton, Command, in one project.",2,2,2018,2025,1,https://github.com/efeuruk/SE-311-Design-Pattern-Project-Patient-Management-System
Command,command-design-pattern,Demo of the command design pattern.,2,0,2020,2020,1,https://github.com/darren-finch/command-design-pattern
Command,elixir_command,messin with the Command design pattern done with elixir,2,0,2014,2022,0,https://github.com/markhaskamp/elixir_command
Command,TextEditor,"Text editor based on GOF Design pattern book(Observer, Command, Visitor, Strategy, Composite,Command Design patterns)",2,1,2012,2023,1,https://github.com/sjmaharjan/TextEditor
Command,Aladdin-2D-Game,"Developed a 2D game in Greenfoot using JAVA which involved implementing Gang of Four design patterns and using Agile Scrum Methodology. Design patterns include Observer pattern, Command Pattern, State Pattern, Template Method Pattern and Factory Method Pattern.",2,2,2017,2024,6,https://github.com/pavankothawade/Aladdin-2D-Game
Command,k8s-commander,A golang library to create Kubernetes recipes following the command design pattern.,2,0,2020,2022,1,https://github.com/spirosoik/k8s-commander
Command,DesignPatterns,"DesignPatterns - Padrões Comportamentais - Técnicas de (Strategy, Chain of Responsibility, Template Method, State, Command e Observer)",2,0,2021,2025,1,https://github.com/marcello222/DesignPatterns
Command,deforestation-data-feeder,This analytics API consists of a stack of services representing not only a data model abstraction but also a command query responsability segregation design pattern,2,2,2019,2025,5,https://github.com/terrabrasilis/deforestation-data-feeder
Command,Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF,"In this project; command, factory, singleton, adapter and facade design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2021,2022,1,https://github.com/kamilhan-karaismailoglu/Command-Factory-Singleton-Adapter-Facade-Design-Patterns-With-WPF
Command,SoftwareDesignArchitecture,A simple java command line game demonstrating some Software Design Principles and Design Patterns,2,0,2016,2019,1,https://github.com/AlexJuca/SoftwareDesignArchitecture
Command,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Command,TheCommandPattern,"In object-oriented programming, the command pattern is a behavioral design pattern in which an object is used to encapsulate all information needed to perform an action or trigger an event at a later time. This information includes the method name, the object that owns the method and values for the method parameters.",2,0,2021,2021,1,https://github.com/RuslanPr0g/TheCommandPattern
Command,money-transfer-app,A RESTful API server and command line application utilizing the MVC design pattern. Program requires user authentication and authorization to initiate and complete fictitious money transfers between users.,2,0,2023,2024,1,https://github.com/nicole440/money-transfer-app
Command,backend-api-,"In the world of software development, creating applications that are easy to maintain, scalable, and efficient is a top priority. To achieve this, developers use various design patterns and libraries. One such combination that has gained popularity is the CQRS (Command Query Responsibility Segregation) pattern with MediatR in ASP.NET Core.",2,0,2023,2024,1,https://github.com/master12-ctr/backend-api-
Command,TheGame,"This document describes the team work assignment for Telerik Academy students studying Object-Oriented Programming (OOP) – February 2014. Project Description Design and implement an object-oriented Role Playing Game by choice. Here are some suggestions: -	The world can be fantasy, sci-fi, modern, etc. -	You may have one or more heroes, gaining experience, having skills, wearing items, etc. -	You may have one or more players, fighting against a computer or against each other -	You may have enemies like creatures, machines, warriors, etc.  -	You may have items like swords, guns, armor, space-suits, etc. -	You may have skills like double-damage, teleportation, etc.  General Requirements Please define and implement the following object-oriented assets in your project: •	At least 5 interfaces (with one or more implementations) •	At least 15 classes (implementing the application logic) •	At least 3 abstract class (with inheritors) •	At least 1 exception class (with usage in your code) •	At least 3 levels of depth in inheritance •	At least 1 polymorphism usage •	At least 1 structure •	At least 1 enumeration •	At least 1 event (with subscribers) •	At least 1 design pattern (e.g. Composite, Singleton, Factory, Wrapper, Bridge, Command, Iterator, …) You might read about design patterns in Wikipedia, Sourcemaking, DoFactory and others. Additional Requirements •	Follow the best practices for OO design: use data encapsulation, use exception handling properly, use delegates and events like it is recommended in MSDN, use inheritance, abstraction and polymorphism properly, follow the principles of strong cohesion and loose coupling. •	Obligatory use Git to keep your source code and for team collaboration (you might use https://github.com/). TFS or SVN are not allowed. Use Git. •	Provide a class diagram (to visualize all types). Optional Requirements If you have a chance, time and a suitable situation, you might add some of the following to your project: •	Static members (fields, properties, constructor, etc.) •	Constants, generic types, indexers, operators •	Lambda expressions and LINQ •	Implementation of IEnumerable<T>, ICloneable, ToString() override •	Namespaces (if your classes are too much)  •	User interface (UI) – console, graphical, web or mobile Non-Required Work •	Completely finished project is not obligatory required. It will not be a big problem if your project is not completely finished or is not working greatly. This team work project is for educational purpose. Its main purpose it to experience object-oriented modeling and OOP in a real-world project and to get some experience in team working and team collaboration with Git.  Deliverables Put the following in a ZIP archive and submit it (each team member submits the same file): •	The complete source code. •	Brief documentation of your project (2-3 pages). It should provide the following information (in brief): o	Team name and list of team members o	Project purpose – what problem do you solve? o	Class diagram of your types o	The URL of your Git repository o	Any other information (optionally) •	Optionally provide a PowerPoint presentation designed for the project defense. Public Project Defense Each team will have to deliver a public defense of its work in from of the other students and trainers. You will have only 10 minutes for the following: •	Demonstrate the application (very shortly). •	Show the class diagram (just a glance). •	Show the source code in the Git web-based source code browser. •	Show the commits logs to confirm those team members who have contributed. •	Optionally you might prepare a PowerPoint presentation (3-4 slides). Please be strict in timing! Be well prepared for presenting maximum of your work for minimum time. Bring your own laptop. Test it preliminary with the multimedia projector. Open the project assets beforehand to save time. You have 10 minutes, no more. Give Feedback about Your Teammates You will be invited to provide feedback about all your teammates, their attitude to this project, their technical skills, their team working skills, their contribution to the project, etc. The feedback is important part of the project evaluation so take it seriously and be honest.",2,3,2014,2019,1,https://github.com/TeamSazerac/TheGame
Command,Burger,"Node Express Handlebars   Overview  In this assignment, you'll create a burger logger with MySQL, Node, Express, Handlebars and a homemade ORM (yum!). Be sure to follow the MVC design pattern; use Node and MySQL to query and route data in your app, and Handlebars to generate your HTML.   Important  Be sure to utilize the MYSQL Heroku Deployment Guide in order to deploy your assignment.   Before You Begin   Eat-Da-Burger! is a restaurant app that lets users input the names of burgers they'd like to eat. Whenever a user submits a burger's name, your app will display the burger on the left side of the page -- waiting to be devoured. Each burger in the waiting area also has a Devour it! button. When the user clicks it, the burger will move to the right side of the page. Your app will store every burger in a database, whether devoured or not. Check out this video of the app for a run-through of how it works.    Submission on BCS   Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!    Instructions   App Setup   Create a GitHub repo called burger and clone it to your computer. Make a package.json file by running npm init from the command line. Install the Express npm package: npm install express. Create a server.js file. Install the Handlebars npm package: npm install express-handlebars. Install the body-parser npm package: npm install body-parser. Install MySQL npm package: npm install mysql.  Require the following npm packages inside of the server.js file:   express body-parser      DB Setup   Inside your burger directory, create a folder named db. In the db folder, create a file named schema.sql. Write SQL queries this file that do the following:    Create the burgers_db. Switch to or use the burgers_db. Create a burgers table with these fields:    id: an auto incrementing int that serves as the primary key.  burger_name: a string.  devoured: a boolean.      Still in the db folder, create a seeds.sql file. In this file, write insert queries to populate the burgers table with at least three entries. Run the schema.sql and seeds.sql files into the mysql server from the command line Now you're going to run these SQL files.    Make sure you're in the db folder of your app. Start MySQL command line tool and login: mysql -u root -p. With the mysql> command line tool running, enter the command source schema.sql. This will run your schema file and all of the queries in it -- in other words, you'll be creating your database. Now insert the entries you defined in seeds.sql by running the file: source seeds.sql. Close out of the MySQL command line tool: exit.    Config Setup   Inside your burger directory, create a folder named config. Create a connection.js file inside config directory.    Inside the connection.js file, setup the code to connect Node to MySQL. Export the connection.    Create an orm.js file inside config directory.    Import (require) connection.js into orm.js  In the orm.js file, create the methods that will execute the necessary MySQL commands in the controllers. These are the methods you will need to use in order to retrieve and store data in your database.   selectAll() insertOne() updateOne()   Export the ORM object in module.exports.    Model setup    Inside your burger directory, create a folder named models.   In models, make a burger.js file. Inside burger.js, import orm.js into burger.js  Also inside burger.js, create the code that will call the ORM functions using burger specific input for the ORM. Export at the end of the burger.js file.      Controller setup   Inside your burger directory, create a folder named controllers. In controllers, create the burgers_controller.js file. Inside the burgers_controller.js file, import the following:    Express burger.js    Create the router for the app, and export the router at the end of your file.    View setup   Inside your burger directory, create a folder named views.    Create the index.handlebars file inside views directory.  Create the layouts directory inside views directory.   Create the main.handlebars file inside layouts directory. Setup the main.handlebars file so it's able to be used by Handlebars. Setup the index.handlebars to have the template that Handlebars can render onto. Create a button in index.handlebars that will submit the user input into the database.      Directory structure  All the recommended files and directories from the steps above should look like the following structure:  . ├── config │   ├── connection.js │   └── orm.js │  ├── controllers │   └── burgers_controller.js │ ├── db │   ├── schema.sql │   └── seeds.sql │ ├── models │   └── burger.js │  ├── node_modules │  ├── package.json │ ├── public │   └── assets │       ├── css │       │   └── burger_style.css │       └── img │           └── burger.png │    │ ├── server.js │ └── views     ├── index.handlebars     └── layouts         └── main.handlebars  Reminder: Submission on BCS   Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!      Minimum Requirements  Attempt to complete homework assignment as described in instructions. If unable to complete certain portions, please pseudocode these portions to describe what remains to be completed. Hosting on Heroku and adding a README.md are required for this homework. In addition, add this homework to your portfolio, more information can be found below.     Hosting on Heroku  Now that we have a backend to our applications, we use Heroku for hosting. Please note that while Heroku is free, it will request credit card information if you have more than 5 applications at a time or are adding a database.  Please see Heroku’s Account Verification Information for more details.     Create a README.md  Add a README.md to your repository describing the project. Here are some resources for creating your README.md. Here are some resources to help you along the way:   About READMEs Mastering Markdown      Add To Your Portfolio  After completing the homework please add the piece to your portfolio. Make sure to add a link to your updated portfolio in the comments section of your homework so the TAs can easily ensure you completed this step when they are grading the assignment. To receive an 'A' on any assignment, you must link to it from your portfolio.     One More Thing  This is a really tough homework assignment, but we want you to put in your best effort to finish it.  If you have any questions about this project or the material we have covered, please post them in the community channels in slack so that your fellow developers can help you! If you're still having trouble, you can come to office hours for assistance from your instructor and TAs.  Good Luck!",2,0,2018,2024,1,https://github.com/HippoRun/Burger
Command,express-handlebars,"# Node Express Handlebars  ### Overview  In this assignment, you'll create a burger logger with MySQL, Node, Express, Handlebars and a homemade ORM (yum!). Be sure to follow the MVC design pattern; use Node and MySQL to query and route data in your app, and Handlebars to generate your HTML.  ### Read This  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  ### Important  * **This assignment must be deployed.** Be sure to utilize the [MYSQL Heroku Deployment Guide](../../03-Supplemental/MySQLHerokuDeploymentProcess.pdf) in order to deploy your assignment.  ### Before You Begin  * Eat-Da-Burger! is a restaurant app that lets users input the names of burgers they'd like to eat.  * Whenever a user submits a burger's name, your app will display the burger on the left side of the page -- waiting to be devoured.  * Each burger in the waiting area also has a `Devour it!` button. When the user clicks it, the burger will move to the right side of the page.  * Your app will store every burger in a database, whether devoured or not.  * [Check out this video of the app for a run-through of how it works](https://youtu.be/msvdn95x9OM).  ### Commits  Having an active and healthy commit history on GitHub is important for your future job search. It is also extremely important for making sure your work is saved in your repository. If something breaks, committing often ensures you are able to go back to a working version of your code.  * Committing often is a signal to employers that you are actively working on your code and learning.    * We use the mantra “commit early and often.”  This means that when you write code that works, add it and commit it!    * Numerous commits allow you to see how your app is progressing and give you a point to revert to if anything goes wrong.  * Be clear and descriptive in your commit messaging.    * When writing a commit message, avoid vague messages like ""fixed."" Be descriptive so that you and anyone else looking at your repository knows what happened with each commit.  * We would like you to have well over 200 commits by graduation, so commit early and often!  ### Submission on BCS  * **This assignment must be deployed.** * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  ## Instructions  #### App Setup  1. Create a GitHub repo called `burger` and clone it to your computer.  2. Make a package.json file by running `npm init` from the command line.  3. Install the Express npm package: `npm install express`.  4. Create a server.js file.  5. Install the Handlebars npm package: `npm install express-handlebars`.  6. Install MySQL npm package: `npm install mysql`.  7. Require the following npm packages inside of the server.js file:    * express  #### DB Setup  1. Inside your `burger` directory, create a folder named `db`.  2. In the `db` folder, create a file named `schema.sql`. Write SQL queries this file that do the following:     * Create the `burgers_db`.    * Switch to or use the `burgers_db`.    * Create a `burgers` table with these fields:      * **id**: an auto incrementing int that serves as the primary key.      * **burger_name**: a string.      * **devoured**: a boolean.  3. Still in the `db` folder, create a `seeds.sql` file. In this file, write insert queries to populate the `burgers` table with at least three entries.  4. Run the `schema.sql` and `seeds.sql` files into the mysql server from the command line  5. Now you're going to run these SQL files.     * Make sure you're in the `db` folder of your app.     * Start MySQL command line tool and login: `mysql -u root -p`.     * With the `mysql>` command line tool running, enter the command `source schema.sql`. This will run your schema file and all of the queries in it -- in other words, you'll be creating your database.     * Now insert the entries you defined in `seeds.sql` by running the file: `source seeds.sql`.     * Close out of the MySQL command line tool: `exit`.  #### Config Setup  1. Inside your `burger` directory, create a folder named `config`.  2. Create a `connection.js` file inside `config` directory.     * Inside the `connection.js` file, setup the code to connect Node to MySQL.     * Export the connection.  3. Create an `orm.js` file inside `config` directory.     * Import (require) `connection.js` into `orm.js`     * In the `orm.js` file, create the methods that will execute the necessary MySQL commands in the controllers. These are the methods you will need to use in order to retrieve and store data in your database.       * `selectAll()`      * `insertOne()`      * `updateOne()`     * Export the ORM object in `module.exports`.  #### Model setup  * Inside your `burger` directory, create a folder named `models`.    * In `models`, make a `burger.js` file.      * Inside `burger.js`, import `orm.js` into `burger.js`      * Also inside `burger.js`, create the code that will call the ORM functions using burger specific input for the ORM.      * Export at the end of the `burger.js` file.  #### Controller setup  1. Inside your `burger` directory, create a folder named `controllers`.  2. In `controllers`, create the `burgers_controller.js` file.  3. Inside the `burgers_controller.js` file, import the following:     * Express    * `burger.js`  4. Create the `router` for the app, and export the `router` at the end of your file.  #### View setup  1. Inside your `burger` directory, create a folder named `views`.     * Create the `index.handlebars` file inside `views` directory.     * Create the `layouts` directory inside `views` directory.       * Create the `main.handlebars` file inside `layouts` directory.       * Setup the `main.handlebars` file so it's able to be used by Handlebars.       * Setup the `index.handlebars` to have the template that Handlebars can render onto.       * Create a button in `index.handlebars` that will submit the user input into the database.  #### Directory structure  All the recommended files and directories from the steps above should look like the following structure:  ``` . ├── config │   ├── connection.js │   └── orm.js │  ├── controllers │   └── burgers_controller.js │ ├── db │   ├── schema.sql │   └── seeds.sql │ ├── models │   └── burger.js │  ├── node_modules │  ├── package.json │ ├── public │   └── assets │       ├── css │       │   └── burger_style.css │       └── img │           └── burger.png │    │ ├── server.js │ └── views     ├── index.handlebars     └── layouts         └── main.handlebars ```  ### Reminder: Submission on BCS  * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  - - -  ### Minimum Requirements  Attempt to complete homework assignment as described in instructions. If unable to complete certain portions, please pseudocode these portions to describe what remains to be completed. Hosting on Heroku and adding a README.md are required for this homework. In addition, add this homework to your portfolio, more information can be found below.   - - -  ### Hosting on Heroku  Now that we have a backend to our applications, we use Heroku for hosting. Please note that while **Heroku is free**, it will request credit card information if you have more than 5 applications at a time or are adding a database.  Please see [Heroku’s Account Verification Information](https://devcenter.heroku.com/articles/account-verification) for more details.  - - -  ### Create a README.md  Add a `README.md` to your repository describing the project. Here are some resources for creating your `README.md`. Here are some resources to help you along the way:  * [About READMEs](https://help.github.com/articles/about-readmes/)  * [Mastering Markdown](https://guides.github.com/features/mastering-markdown/)  - - -  ### Add To Your Portfolio  After completing the homework please add the piece to your portfolio. Make sure to add a link to your updated portfolio in the comments section of your homework so the TAs can easily ensure you completed this step when they are grading the assignment. To receive an 'A' on any assignment, you must link to it from your portfolio.  - - -  ### One More Thing  This is a really tough homework assignment, but we want you to put in your best effort to finish it.  If you have any questions about this project or the material we have covered, please post them in the community channels in slack so that your fellow developers can help you! If you're still having trouble, you can come to office hours for assistance from your instructor and TAs.  ### Reminder  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  **Good Luck!**",2,1,2020,2021,1,https://github.com/webdevelopmentdiva/express-handlebars
Command,SSD_Command,A template for Command Design Pattern for Software Specification class,1,8,2018,2018,1,https://github.com/KeeUka/SSD_Command
Command,Commander2,Flexible implementation of the command design pattern.,1,3,2018,2020,3,https://github.com/pharo-spec/Commander2
Command,Command,Command Design Pattern (OOAD PPT),1,0,2015,2023,1,https://github.com/amolvaze/Command
Command,command,Implementation in Python: Command Design Pattern,1,0,2014,2015,1,https://github.com/lorie-castillano/command
Command,PatternCommand,Design Pattern Command pattern,1,0,2019,2019,1,https://github.com/VinCleanCode/PatternCommand
Command,command-design-pattern,learning purpose-design patterns,1,0,2022,2023,1,https://github.com/khaledmurtaja/command-design-pattern
Command,Command,"Implementation of a simple calculator with the design pattern ""Command"".",1,0,2019,2024,0,https://github.com/eulersexception/Command
Command,command_pattern,Command Design Pattern in Java,1,0,2019,2019,1,https://github.com/parsa-JPM/command_pattern
Command,command, :arrow_forward: Command adds the Command Design Pattern to any Class.,1,0,2018,2023,2,https://github.com/SleeplessByte/command
Command,DesignPatterns.Command,Command Design Pattern in C#,1,0,2022,2022,1,https://github.com/dFarkhod/DesignPatterns.Command
Command,Command-mode-of-design-pattern,Command mode of design pattern,1,0,2021,2021,1,https://github.com/hairenaa/Command-mode-of-design-pattern
Command,DesignPattern-Command,Example implementation of Command design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Command
Command,design-patterns,Design Patterns - G.O.F,1,1,2018,2023,1,https://github.com/gdfreitas/design-patterns
Command,DesignPattern-Command,A Simple Command design pattern in PHP,1,0,2020,2022,1,https://github.com/helmis123/DesignPattern-Command
Command,Commander,A .NET core project using MVC design pattern,1,1,2020,2023,1,https://github.com/carfelz/Commander
Command,CommandPattern,My implementation of the command design pattern for study purposes,1,0,2024,2024,1,https://github.com/vgArchives/CommandPattern
Command,FileSystem-as-Facade,Facade + Command Design pattern Implementation,1,0,2016,2021,1,https://github.com/Satyanandana/FileSystem-as-Facade
Command,Ex8-Strategy-Observer-Command,05506230-Design Patterns In Object-Oriented Programming,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex8-Strategy-Observer-Command
Command,design-pattern-command,Experimental implementation of design pattern Command in Java,1,0,2013,2022,1,https://github.com/toniesteves/design-pattern-command
Command,Command-Design-Pattern,Television remote implementation using the Command design pattern.,1,0,2018,2021,1,https://github.com/mikebasdeo/Command-Design-Pattern
Command,product-command-service,CQRS design pattern in microservices - product-command-service,1,0,2023,2024,1,https://github.com/rajeshyash/product-command-service
Command,undo_redo_with_command_pattern,Undo and redo with the command design pattern,1,0,2021,2022,0,https://github.com/vasivaas/undo_redo_with_command_pattern
Command,design-pattern-python-3,Design Patterns in Python 3,1,0,2021,2021,1,https://github.com/shubham-chhimpa/design-pattern-python-3
Command,CommandDesignPattern,Implementation of Command Design Pattern as part of Software Engineering Course - CS5617,1,0,2023,2024,1,https://github.com/aravindsomaraj/CommandDesignPattern
Command,bridge-command-design-patterns,Example of implement two design patterns: bridge and command,1,0,2019,2019,1,https://github.com/mr-ramirez/bridge-command-design-patterns
Command,command-pattern,Information for a presentation given on the Command Design Pattern.,1,1,2013,2017,1,https://github.com/caseyscarborough/command-pattern
Command,dpsCommand,Command Pattern example for the Design Pattern Series in Unity,1,0,2023,2023,1,https://github.com/vrezendedev/dpsCommand
Command,designPatternCommand,Project for learning how to use the COMMAND design pattern,1,0,2021,2022,2,https://github.com/Brihmt/designPatternCommand
Command,Command-unity,A simple implementation of the command design pattern in Unity 3D,1,0,2014,2015,1,https://github.com/luisponce/Command-unity
Command,PhpDesignPatterns-Command,Command,1,0,2017,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Command
Command,RiverGame,"Used OOP design patterns singleton, command, Strategy",1,0,2021,2022,1,https://github.com/Youssefa99/RiverGame
Command,Command-Design-Pattern,Implementation of Undo and Redo using Command Design Pattern in Unity,1,0,2021,2021,1,https://github.com/harshdulani/Command-Design-Pattern
Command,command_design_pattern,Refactoring the sample code provided to a command design pattern implementation.,1,0,2018,2023,1,https://github.com/sushilkg/command_design_pattern
Command,command_ufu,Implementando o design pattern Command para disciplina de programação Orientada a Objetos 2,1,0,2021,2023,1,https://github.com/samuel-cavalcanti/command_ufu
Command,pratica7,Aplicação de Multi-threading poo2 - DESIGN PATTERN - COMMAND,1,0,2011,2013,1,https://github.com/JeffersonAlmeida/pratica7
Command,commandeur,Immplementaion of command design pattern to use with controller based on Java Servlet API.,1,0,2022,2022,1,https://github.com/HermanShpryhau/commandeur
Command,DesignPatterns,Design Patterns are reusable solutions to commonly occuring problems(in the context of software design). Design patterns were started as best practices that were applied again and again to similar problems encountered in different contexts. ,1,0,2018,2021,1,https://github.com/amitpatange88/DesignPatterns
Command,java11-lambda-command-pattern,Simple implementation of command design pattern using lambda and comparison to the old approach.,1,0,2018,2018,1,https://github.com/mtumilowicz/java11-lambda-command-pattern
Command,Unity-DesignPatterns,"Udemy course where i learned about Object Pool, Flyweight and Command design patterns applied in basic games.",1,1,2018,2022,1,https://github.com/BurningAl15/Unity-DesignPatterns
Command,Command-Desing-Pattern,This is complete Tutorial of Command Design Pattern . Feel Free to add something useful to it .,1,0,2023,2023,1,https://github.com/Neha611/Command-Desing-Pattern
Command,design-patterns,"Practicing design patterns like Command, Flyweight and Observer in Unity.",1,0,2021,2021,1,https://github.com/carreraSilvio/design-patterns
Command,OOP-HW3,"Advance object oriented cource & design patterns. subjects: Command, Thread, Balance",1,0,2021,2023,1,https://github.com/edensssss/OOP-HW3
Command,OOD,"Design Patterns project: MVC, Singleton, file iterator, Observer, Command, Memento.",1,0,2023,2023,1,https://github.com/RamDvlp/OOD
Command,cordcutter,The circuit breaker design pattern for discord.py application commands,1,0,2023,2024,2,https://github.com/LunarsDev/cordcutter
Command,cs-gen,Code generator for rapid development using Command Sourcing design pattern,1,0,2021,2025,1,https://github.com/beenotung/cs-gen
Command,Text-Editor-Console,Text Editor Console application using Command Design Pattern with C#,1,0,2022,2024,1,https://github.com/nawodyaishan/Text-Editor-Console
Command,GestionFactureCommandeCompositeDesignPattern,It is an application of the Composite design pattern for invoice management of an order.,1,0,2021,2022,2,https://github.com/Smeud/GestionFactureCommandeCompositeDesignPattern
Command,2018_OpenSource_UnityCommandPattern,"An Open Source, abstracted Command Design Pattern, to set a baseline, for future Unity projects",1,0,2019,2022,1,https://github.com/mytelos/2018_OpenSource_UnityCommandPattern
Command,WPFCommandDesignPatterns,"Simple Load, MVVM pattern, Command Pattern",1,0,2018,2023,1,https://github.com/OmidNaghi/WPFCommandDesignPatterns
Command,NDAM_KafeOtomasyonu,"Abstract, Strategy and Command design patterns were used in this project",1,0,2018,2018,1,https://github.com/ogulcangumussoy/NDAM_KafeOtomasyonu
Command,Word-Counter-with-Backup-Implementation,"Implemented ""word counter"" command with Visitor, Prototype, and Observer Design Patterns ",1,0,2017,2017,1,https://github.com/schadal1/Word-Counter-with-Backup-Implementation
Command,ruby-design-patterns,,1,0,2016,2017,1,https://github.com/kalelc/ruby-design-patterns
Command,ES6-Design-Patterns-Implementation,"Modules, Factory, Command Pattern implemented etc. Run Separate files using command ""node [filename.js]""",1,0,2023,2024,1,https://github.com/FaizaanFazal/ES6-Design-Patterns-Implementation
Command,File-Management-System_implementing_Design_Patterns,"File Management System implementing Design Patterns uses Command,Composite,Iterator and Decorator",1,0,2023,2023,1,https://github.com/MuhammadSuffian/File-Management-System_implementing_Design_Patterns
Command,ProgrammingNotes,"A collection of terminal commands, common design patterns, programming notes and algorithms.",1,0,2019,2019,1,https://github.com/AndrewColbeck/ProgrammingNotes
Command,command-line-base,This project is a library for making it easier and faster to create a console application based on command design pattern,1,0,2019,2024,1,https://github.com/Acidmanic/command-line-base
Command,design-patterns,"Mise en oeuvre des design patterns Adapter, Observer, State, Decorator, Proxy, Command et Factory",1,0,2017,2023,3,https://github.com/cdevy/design-patterns
Command,design-patterns-cqrs,"Command and Query Responsibility Segregation (CQRS), Event Sourcing and Retry pattern.",1,0,2019,2024,1,https://github.com/georgesimos/design-patterns-cqrs
Command,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Command,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Command,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Command,design-patterns,:alien: A list of design patterns implementeds in JAVA that I worked during my graduation,1,0,2017,2019,1,https://github.com/MarceloBritoWD/design-patterns
Command,AspNetCoreDesignPatterns,"Adapter, ChainResponsibility, Command, Composite, Decorator, Observer, Strategy, Template Patterns",1,0,2022,2023,0,https://github.com/MertGuney/AspNetCoreDesignPatterns
Command,Fall14-ObjOrientedProg-FinalProject-DesignPatterns-RPG,"A turn based role playing game with a basic GUI. Utilizes many design patterns: Actor, Command, Factory, Strategy, and some composite patterns. ",1,0,2016,2019,1,https://github.com/rehpotsirhc/Fall14-ObjOrientedProg-FinalProject-DesignPatterns-RPG
Command,Design-Patterns,"Simulates a Git-like source control system with Command and State Design Patterns for managing branches, file states, and operations like commit, merge, and review.",1,0,2024,2024,1,https://github.com/FriedmanChani/Design-Patterns
Command,cpu_datapath,Command-line simulation of a CPU Datapath in C++ using the Strategy design pattern,1,0,2016,2018,1,https://github.com/of-el/cpu_datapath
Command,TicTacToe,"Classical TicTacToe game implemented using Design Patterns like Factory, Strategy, Builder and Command pattern",1,0,2021,2022,1,https://github.com/anshx/TicTacToe
Command,design-patterns,A GitHub repository providing simple explanations and code snippets for various design patterns in JavaScript and Python.,1,0,2023,2023,1,https://github.com/simon-das/design-patterns
Command,StoreCashier_OODesign2021A,"Object-Oriented-Design course project JavaFx, MVC, Design Patterns: Command, Memento, File Iterator, Singleton, Threads...",1,0,2021,2021,2,https://github.com/ShahaRaz/StoreCashier_OODesign2021A
Command,bootplease,"C++ Application Framework including Dependency Injection, Events, Command Design Pattern, and a set of utilities.",1,0,2014,2016,1,https://github.com/tromagon/bootplease
Command,Prakrishta.Cqs.Data.Infrastructure,The infrastructure code base to implement data access layer with Command Query Separation Design Pattern,1,0,2019,2019,1,https://github.com/sarul84/Prakrishta.Cqs.Data.Infrastructure
Command,BreakOut-Game,"This game is made on Swing in Java using Observer,Command and Composite Design Pattern",1,1,2015,2018,3,https://github.com/jaymmodi/BreakOut-Game
Command,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Command,Store_Final_Project_Design_Patterns," Streaming Binary I/O, Collections, Design Patterns: Comparator, Iterator (For file), List Iterator, Observer, MVC, Singleton, Command, Adapter, Decorator, Memento and Multi Treading Systems",1,0,2021,2022,1,https://github.com/RonShmaya/Store_Final_Project_Design_Patterns
Command,Linux-Shell,Mock shell capable of executing 19 different LInux commands. Developed utilizing key design patterns and Agile methodologies,1,0,2024,2024,1,https://github.com/Rocketeer8/Linux-Shell
Command,Java3Dmaze,"Three-Dimensional maze using DFS and BFS search algorithms. Design patterns: strategy pattern, command pattern ,decorator pattern",1,0,2016,2017,1,https://github.com/dvirHashai/Java3Dmaze
Command,ProgrammingNotes,"Notes on various programming topics, including Git, HTML, CSS, JavaScript, Command Line, Design Patterns, RegEx, jQuery, and more",1,1,2014,2018,1,https://github.com/mmaynar1/ProgrammingNotes
Command,dispatcher,Dispatcher is a simple Command Dispatcher design pattern implementation that links the Request with the appropriate Request-Handler.,1,0,2021,2021,1,https://github.com/lucaniss/dispatcher
Command,unityDesignPattern_Holistic3D,"Penny De Byl's Udemy course about useful design patterns for game programming. The course teach a full set of design patterns for many game dev scenarios like singleton, command pattern, observer pattern, etc...",1,1,2021,2022,1,https://github.com/Kassout/unityDesignPattern_Holistic3D
Command,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Command,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Command,Object-Oriented-Programming-Lab,"OOPs Concepts (SEM 3) - Constructor, command line argument, inheritance, Generic program, exception handling, templates, file handling, Strategy Design pattern",1,0,2021,2023,1,https://github.com/shinchancode/Object-Oriented-Programming-Lab
Command,unit-of-work-based-services-repository-design-pattern-laravel,This application for unit of work and repository design patterns also command and service approach on top of Laravel,1,0,2021,2023,1,https://github.com/AhmedHelalAhmed/unit-of-work-based-services-repository-design-pattern-laravel
Command,thebigbangserver,Realtime chat application with Group and Personal messaging using the Command Design pattern. This was for my Operating Systems project.,1,0,2023,2023,2,https://github.com/bxrne/thebigbangserver
Command,Intro-To-Command-Design-Pattern,"Command is a behavioral design pattern that turns a request into a stand-alone object that contains all information about the request. This transformation lets you pass requests as a method arguments, delay or queue a request’s execution, and support undoable operations.",1,0,2022,2024,1,https://github.com/ParsaMehdipour/Intro-To-Command-Design-Pattern
Command,HeadlessZombie,"This project is a game that I created using object oriented design patterns. Patterns used in this project include decorator, command, and singleton.",1,0,2017,2017,0,https://github.com/jazart/HeadlessZombie
Command,Mars_Rover,Mars Rover Command Solution in C#. I have used Command Design Pattern to encapsulate request send to Mars Rover. Built using .NET Framework 5.0 and Xunit Test Framework.,1,0,2021,2022,1,https://github.com/DesignPatternSolutions/Mars_Rover
Command,Maze,"In this project, we build a random wrapping and non-wrapping maze game which can be played on GUI and console. To implement it, we used Java and in addition to that,  several design patterns were used such as command, MVC, and strategy design pattern.",1,0,2020,2021,1,https://github.com/ujjvalksharma/Maze
Command,MonsterHunter,"Java game based on a 2D map, classes of heroes, monsters and treasures. This app implements various design patterns: observer, singleton, factory, strategy, command.",1,0,2018,2023,1,https://github.com/razvanra2/MonsterHunter
Command,DesginPatterns,"My GitHub repository showcases JavaScript design patterns including Null Object, Builder, Singleton, Command, and Facade. Learn how to implement these powerful patterns for clean and reusable code. Boost your development skills with concise examples and explanations. Dive into the world of design patterns in JavaScript.",1,0,2023,2023,1,https://github.com/Ankush-ai/DesginPatterns
Command,BankingFramework,"Banking System: creating and managing customers, accounts, credit cards, interest, deposits and withdrawals. Used Java8, Java Swing, Design Patterns (Command, Factory, Singleton, Template, Façade).",1,0,2016,2021,1,https://github.com/abdullahashik/BankingFramework
Command,CS100-Labs-Final-Project,Software Construction Labs that deal with design patterns and proper unit testing(google test). All code was written through hammer (use of Linux commands),1,0,2020,2022,4,https://github.com/tyborgg/CS100-Labs-Final-Project
Command,Sokoban-Game-Java-By-Rabah,"Jeu Sokoban en Java, utilisant les principes de la programmation orientée objet et des design patterns comme State et Command pour une architecture robuste",1,0,2024,2024,0,https://github.com/RabahCodeVirtuose/Sokoban-Game-Java-By-Rabah
Command,Stock-Portfolio-Management-System,This is Stock Portfolio Management project that was built by Krishnan Narayanan and Adithya Vibakar using JAVA and Swing with MVC principles and Command Design Pattern.,1,0,2023,2024,1,https://github.com/Adithyav2000/Stock-Portfolio-Management-System
Command,desafio-omint,"API Restfull em Java com Spring Boot, Spring Data, Spring Projections, JPA, implementação de design patterns Command, Facade, Dao, utilizando Oracle e JUnit 5 para testes unitários.",1,0,2020,2024,1,https://github.com/acnaweb/desafio-omint
Command,student_loan_services,"Java - Spring Boot Back-End application for students to apply for loans which can be then reviewed by the Bank Representatives and Bank Admins who can approve/reject the applications. The project implements the key design patterns such as the Observer, Strategy, Command, Decorator, Factory and the Interceptor design patterns. ",1,0,2025,2025,1,https://github.com/nikunjpanchal22/student_loan_services
Command,autopatterns,Design Patterns for automation. Examples and Experiments. - System and network automation. Data-processing/ETL pipeline. Batch processing. Job running. API client/service. Python command-line tools. DevOps automation.,1,0,2023,2023,1,https://github.com/jimmygizmo/autopatterns
Command,Capoala.MVVM,"Capoala.MVVM is a featherlight MVVM framework designed for simple-to-moderate MVVM design pattern applications. This framework includes basic implementations for handling property notifications, command bindings, and navigation.",1,0,2017,2023,1,https://github.com/Capoala/Capoala.MVVM
Command,roadctl,A kubectl compatible CLI for managing and creating applications and defining/managing CI/CD environments.  The roadctl command uses blueprints based on provent design patterns driven by produciton metrics.,1,0,2019,2022,3,https://github.com/pavedroad-io/roadctl
Command,StockManagement,"Developed a robust stock management application integrating design patterns such as Facade, Builder, MVC, SOLID principles, and Command patterns, focusing on abstraction and code reusability to ensure scalability and extensibility.",1,0,2024,2025,1,https://github.com/pratheeshkumar99/StockManagement
Command,weird-language-system,"Weird Language System: A C++ custom language interpreter for linked list operations. Utilizes the Command design pattern and advanced OOP principles like encapsulation and polymorphism for flexible, modular data management.",1,0,2024,2024,1,https://github.com/ricardogodi/weird-language-system
Command,rythma,"A Java-based backend for a music streaming service, featuring a comprehensive search system, notification alerts, and audit functionality. Used design patterns such as Command, Strategy, and Observable to facilitate clear and scalable code.",1,0,2024,2024,1,https://github.com/annna7/rythma
Command,Clean-API,"This ASP.NET Core Web API project follows a robust and modular architecture based on Clean Code principles, incorporating the CQRS (Command Query Responsibility Segregation) and MediatR design patterns for improved maintainability and scalability.",1,0,2023,2024,1,https://github.com/NourSolaiman/Clean-API
Command,Magic,"This is a command-line card game, which is similar to Yu-Gi-Oh!, or Magic: The Gathering. The various cards and abilities are implemented using objective-C++ strategies, including polymorphism and the Observer design pattern.",1,0,2020,2023,1,https://github.com/tifchiu/Magic
Command,CQRS-with-MediatR-CleanArchitecture,"The MediatR pattern, facilitated by the MediatR library in.NET Core, is an implementation of the Mediator design pattern aimed at simplifying the management of requests (commands and queries) and their corresponding handlers within an application.",1,0,2024,2025,1,https://github.com/Bezyl-Mophat-Otieno/CQRS-with-MediatR-CleanArchitecture
Command,Katana-Solutions-USB-MIDI-Foot-Controller,"A USB MIDI Foot Controller for a Boss Katana MKII guitar amp featuring 14 momentary footswitches, 14 RGB LEDs, 5 rotary encoders and an LCD display. The core functionality is modelled around the 'command' design pattern",1,0,2023,2024,1,https://github.com/S-A-Martin/Katana-Solutions-USB-MIDI-Foot-Controller
Command,antfarm-simulation,"A C++ project implementing an Ant Farm Simulation System using Creational, Structural, and Behavioral design patterns. Includes features like tick-based simulation, templated antfarms, and a command-line interface. Repository contains source code, documentation, and LinkedIn course completion certificates.",1,0,2024,2025,1,https://github.com/shehrrbano/antfarm-simulation
Command,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Command,TEnmo-Application,Developed an online payment service for transferring money between users by writing a RESTful API server and command-line application. This application was built with colleague Charlotte Kies. We intend to make future improvements with MVC design pattern and security.,1,0,2021,2022,1,https://github.com/jchoii/TEnmo-Application
Command,Educational-Initiatives-Assignment,"This repository contains two exercises: one demonstrating six design patterns in Java (behavioral, creational, structural) and another featuring a Mars Rover simulation. Users can control a rover on a grid, navigate obstacles, and execute commands. Code follows best practices for clarity and organization.",1,0,2024,2024,1,https://github.com/3Karan/Educational-Initiatives-Assignment
Command,Advanced_Software_Engineering,"This is a GUI based application that reads and executes commands on command line one at a time. It also reads a program (in the program window) and executes it with a “run” command (typed into the command line). It saves and loads a program and also syntax checking. Checks for valid commands and for valid parameters. clear command to clear the drawing area  reset command to move pen to initial position at top left of the screen. This program is using inheritance and design patterns. Also, this program is written in C# language.",1,1,2020,2021,0,https://github.com/Shadymania/Advanced_Software_Engineering
Command,To-do-notification-application,"Users can create labels for lists such as Grocery, Today, Travel, etc. and add items to them. Users get notified by email on the due date and todo completion. Demonstrated Multiple Design Patterns such as Observer, Decorator, and Command. Developed an Azure DevOps CI pipeline.",1,0,2024,2024,1,https://github.com/mihson95/To-do-notification-application
Command,Parking-System-Application,"Extensive Java project that simulates a Parking System software. The concepts explored for this assignment are: UML diagrams, inheritance, interface classes, design patterns (strategy, factory, command, decorator, observer, and builders), serialization through JSON and JUnit testing. Made for the MS in ICT: Software Design and Programming.",1,0,2022,2022,1,https://github.com/ingridjone/Parking-System-Application
Command,BankApiRest_Onion_Architechure,"ApiRestful project with .Net Core 7.0 ,Microsoft SQL Server, Entity Framework, CQRS with Mediator,Repository ,Specification design Patterns ,Redis Cache,Authentication and Authorization process with JWT and Identity Framework Core,Unit Test for commands and querys handler  using Moq,Wrapper(Decorator patter),Extension (Factor patter),Cust Middlewar",1,0,2023,2024,1,https://github.com/omarsilvayepes/BankApiRest_Onion_Architechure
Command,JavaCLI-Tic-Tac-Toe,"This project implements a classic Tic Tac Toe game in Java, utilizing fundamental object-oriented programming (OOP) principles and employing the builder design pattern for enhanced structure and flexibility. The game interface interacts with users through the command line, where players input their moves to play against each other.",1,0,2024,2024,1,https://github.com/SriRajKumarYaramsetti/JavaCLI-Tic-Tac-Toe
Command,todo-list-ddd-cqrs-poc,"Poc TaskHub is a Proof of Concept .NET-based API solution showcasing the application of Domain-Driven Design (DDD) and Command Query Responsibility Segregation (CQRS) patterns. Focused on task management, this project features an intuitive API for task operations, employing best practices in architecture, clean code, and design patterns.",1,0,2024,2024,1,https://github.com/maurogioberti/todo-list-ddd-cqrs-poc
Command,ArchitecturalShowcase,"Summary: Very Simple example of WebApi implimenting Cloud Native Architecture having capability to handle 10000 concurrent user with degree of parallalism controlling Task and Thread.  Design Pattern Used:  Saga,AggregatorRoot[AR], CQRS[Command Query Responsibility Segregation], Repository, DI[Dependency Injection]  ORM tools: EntityFramework Core[Code first] and Dapper  Other Tools: Swagger, Automapper",1,1,2020,2024,1,https://github.com/arindamdeyofficial/ArchitecturalShowcase
Command,Node-Express-Handlebars,"# Node Express Handlebars  ### Overview  In this assignment, you'll create a burger logger with MySQL, Node, Express, Handlebars and a homemade ORM (yum!). Be sure to follow the MVC design pattern; use Node and MySQL to query and route data in your app, and Handlebars to generate your HTML.  ### Read This  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  ### Important  * **This assignment must be deployed.** Be sure to utilize the [MYSQL Heroku Deployment Guide](../../04-Supplemental/MySQLHerokuDeploymentProcess.pdf) in order to deploy your assignment.  ### Before You Begin  * Eat-Da-Burger! is a restaurant app that lets users input the names of burgers they'd like to eat.  * Whenever a user submits a burger's name, your app will display the burger on the left side of the page -- waiting to be devoured.  * Each burger in the waiting area also has a `Devour it!` button. When the user clicks it, the burger will move to the right side of the page.  * Your app will store every burger in a database, whether devoured or not.  * [Check out this video of the app for a run-through of how it works](https://youtu.be/msvdn95x9OM).  ### Commits  Having an active and healthy commit history on GitHub is important for your future job search. It is also extremely important for making sure your work is saved in your repository. If something breaks, committing often ensures you are able to go back to a working version of your code.  * Committing often is a signal to employers that you are actively working on your code and learning.    * We use the mantra “commit early and often.”  This means that when you write code that works, add it and commit it!    * Numerous commits allow you to see how your app is progressing and give you a point to revert to if anything goes wrong.  * Be clear and descriptive in your commit messaging.    * When writing a commit message, avoid vague messages like ""fixed."" Be descriptive so that you and anyone else looking at your repository knows what happened with each commit.  * We would like you to have well over 200 commits by graduation, so commit early and often!  ### Submission on BCS  * **This assignment must be deployed.** * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  ## Instructions  #### App Setup  1. Create a GitHub repo called `burger` and clone it to your computer.  2. Make a package.json file by running `npm init` from the command line.  3. Install the Express npm package: `npm install express`.  4. Create a server.js file.  5. Install the Handlebars npm package: `npm install express-handlebars`.  6. Install MySQL npm package: `npm install mysql`.  7. Require the following npm packages inside of the server.js file:    * express  #### DB Setup  1. Inside your `burger` directory, create a folder named `db`.  2. In the `db` folder, create a file named `schema.sql`. Write SQL queries this file that do the following:     * Create the `burgers_db`.    * Switch to or use the `burgers_db`.    * Create a `burgers` table with these fields:      * **id**: an auto incrementing int that serves as the primary key.      * **burger_name**: a string.      * **devoured**: a boolean.  3. Still in the `db` folder, create a `seeds.sql` file. In this file, write insert queries to populate the `burgers` table with at least three entries.  4. Run the `schema.sql` and `seeds.sql` files into the mysql server from the command line  5. Now you're going to run these SQL files.     * Make sure you're in the `db` folder of your app.     * Start MySQL command line tool and login: `mysql -u root -p`.     * With the `mysql>` command line tool running, enter the command `source schema.sql`. This will run your schema file and all of the queries in it -- in other words, you'll be creating your database.     * Now insert the entries you defined in `seeds.sql` by running the file: `source seeds.sql`.     * Close out of the MySQL command line tool: `exit`.  #### Config Setup  1. Inside your `burger` directory, create a folder named `config`.  2. Create a `connection.js` file inside `config` directory.     * Inside the `connection.js` file, setup the code to connect Node to MySQL.     * Export the connection.  3. Create an `orm.js` file inside `config` directory.     * Import (require) `connection.js` into `orm.js`     * In the `orm.js` file, create the methods that will execute the necessary MySQL commands in the controllers. These are the methods you will need to use in order to retrieve and store data in your database.       * `selectAll()`      * `insertOne()`      * `updateOne()`     * Export the ORM object in `module.exports`.  #### Model setup  * Inside your `burger` directory, create a folder named `models`.    * In `models`, make a `burger.js` file.      * Inside `burger.js`, import `orm.js` into `burger.js`      * Also inside `burger.js`, create the code that will call the ORM functions using burger specific input for the ORM.      * Export at the end of the `burger.js` file.  #### Controller setup  1. Inside your `burger` directory, create a folder named `controllers`.  2. In `controllers`, create the `burgers_controller.js` file.  3. Inside the `burgers_controller.js` file, import the following:     * Express    * `burger.js`  4. Create the `router` for the app, and export the `router` at the end of your file.  #### View setup  1. Inside your `burger` directory, create a folder named `views`.     * Create the `index.handlebars` file inside `views` directory.     * Create the `layouts` directory inside `views` directory.       * Create the `main.handlebars` file inside `layouts` directory.       * Setup the `main.handlebars` file so it's able to be used by Handlebars.       * Setup the `index.handlebars` to have the template that Handlebars can render onto.       * Create a button in `index.handlebars` that will submit the user input into the database.  #### Directory structure  All the recommended files and directories from the steps above should look like the following structure:  ``` . ├── config │   ├── connection.js │   └── orm.js │  ├── controllers │   └── burgers_controller.js │ ├── db │   ├── schema.sql │   └── seeds.sql │ ├── models │   └── burger.js │  ├── node_modules │  ├── package.json │ ├── public │   └── assets │       ├── css │       │   └── burger_style.css │       └── img │           └── burger.png │    │ ├── server.js │ └── views     ├── index.handlebars     └── layouts         └── main.handlebars ```  ### Reminder: Submission on BCS  * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  - - -  ### Minimum Requirements  Attempt to complete homework assignment as described in instructions. If unable to complete certain portions, please pseudocode these portions to describe what remains to be completed. Hosting on Heroku and adding a README.md are required for this homework. In addition, add this homework to your portfolio, more information can be found below.   - - -  ### Hosting on Heroku  Now that we have a backend to our applications, we use Heroku for hosting. Please note that while **Heroku is free**, it will request credit card information if you have more than 5 applications at a time or are adding a database.  Please see [Heroku’s Account Verification Information](https://devcenter.heroku.com/articles/account-verification) for more details.  - - -  ### Create a README.md  Add a `README.md` to your repository describing the project. Here are some resources for creating your `README.md`. Here are some resources to help you along the way:  * [About READMEs](https://help.github.com/articles/about-readmes/)  * [Mastering Markdown](https://guides.github.com/features/mastering-markdown/)  - - -  ### Add To Your Portfolio  After completing the homework please add the piece to your portfolio. Make sure to add a link to your updated portfolio in the comments section of your homework so the TAs can easily ensure you completed this step when they are grading the assignment. To receive an 'A' on any assignment, you must link to it from your portfolio.  - - -  ### One More Thing  This is a really tough homework assignment, but we want you to put in your best effort to finish it.  If you have any questions about this project or the material we have covered, please post them in the community channels in slack so that your fellow developers can help you! If you're still having trouble, you can come to office hours for assistance from your instructor and TAs.  ### Reminder  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  **Good Luck!**",1,0,2020,2020,1,https://github.com/Kiananaik/Node-Express-Handlebars
Command,burger,"# Node Express Handlebars  ### Overview  In this assignment, you'll create a burger logger with MySQL, Node, Express, Handlebars and a homemade ORM (yum!). Be sure to follow the MVC design pattern; use Node and MySQL to query and route data in your app, and Handlebars to generate your HTML.  ### Read This  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  ### Important  * **This assignment must be deployed.** Be sure to utilize the [MYSQL Heroku Deployment Guide](../../03-Supplemental/MySQLHerokuDeploymentProcess.pdf) in order to deploy your assignment.  ### Before You Begin  * Eat-Da-Burger! is a restaurant app that lets users input the names of burgers they'd like to eat.  * Whenever a user submits a burger's name, your app will display the burger on the left side of the page -- waiting to be devoured.  * Each burger in the waiting area also has a `Devour it!` button. When the user clicks it, the burger will move to the right side of the page.  * Your app will store every burger in a database, whether devoured or not.  * [Check out this video of the app for a run-through of how it works](https://youtu.be/msvdn95x9OM).  ### Commits  Having an active and healthy commit history on GitHub is important for your future job search. It is also extremely important for making sure your work is saved in your repository. If something breaks, committing often ensures you are able to go back to a working version of your code.  * Committing often is a signal to employers that you are actively working on your code and learning.    * We use the mantra “commit early and often.”  This means that when you write code that works, add it and commit it!    * Numerous commits allow you to see how your app is progressing and give you a point to revert to if anything goes wrong.  * Be clear and descriptive in your commit messaging.    * When writing a commit message, avoid vague messages like ""fixed."" Be descriptive so that you and anyone else looking at your repository knows what happened with each commit.  * We would like you to have well over 200 commits by graduation, so commit early and often!  ### Submission on BCS  * **This assignment must be deployed.** * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  ## Instructions  #### App Setup  1. Create a GitHub repo called `burger` and clone it to your computer.  2. Make a package.json file by running `npm init` from the command line.  3. Install the Express npm package: `npm install express`.  4. Create a server.js file.  5. Install the Handlebars npm package: `npm install express-handlebars`.  6. Install MySQL npm package: `npm install mysql`.  7. Require the following npm packages inside of the server.js file:    * express  #### DB Setup  1. Inside your `burger` directory, create a folder named `db`.  2. In the `db` folder, create a file named `schema.sql`. Write SQL queries this file that do the following:     * Create the `burgers_db`.    * Switch to or use the `burgers_db`.    * Create a `burgers` table with these fields:      * **id**: an auto incrementing int that serves as the primary key.      * **burger_name**: a string.      * **devoured**: a boolean.  3. Still in the `db` folder, create a `seeds.sql` file. In this file, write insert queries to populate the `burgers` table with at least three entries.  4. Run the `schema.sql` and `seeds.sql` files into the mysql server from the command line  5. Now you're going to run these SQL files.     * Make sure you're in the `db` folder of your app.     * Start MySQL command line tool and login: `mysql -u root -p`.     * With the `mysql>` command line tool running, enter the command `source schema.sql`. This will run your schema file and all of the queries in it -- in other words, you'll be creating your database.     * Now insert the entries you defined in `seeds.sql` by running the file: `source seeds.sql`.     * Close out of the MySQL command line tool: `exit`.  #### Config Setup  1. Inside your `burger` directory, create a folder named `config`.  2. Create a `connection.js` file inside `config` directory.     * Inside the `connection.js` file, setup the code to connect Node to MySQL.     * Export the connection.  3. Create an `orm.js` file inside `config` directory.     * Import (require) `connection.js` into `orm.js`     * In the `orm.js` file, create the methods that will execute the necessary MySQL commands in the controllers. These are the methods you will need to use in order to retrieve and store data in your database.       * `selectAll()`      * `insertOne()`      * `updateOne()`     * Export the ORM object in `module.exports`.  #### Model setup  * Inside your `burger` directory, create a folder named `models`.    * In `models`, make a `burger.js` file.      * Inside `burger.js`, import `orm.js` into `burger.js`      * Also inside `burger.js`, create the code that will call the ORM functions using burger specific input for the ORM.      * Export at the end of the `burger.js` file.  #### Controller setup  1. Inside your `burger` directory, create a folder named `controllers`.  2. In `controllers`, create the `burgers_controller.js` file.  3. Inside the `burgers_controller.js` file, import the following:     * Express    * `burger.js`  4. Create the `router` for the app, and export the `router` at the end of your file.  #### View setup  1. Inside your `burger` directory, create a folder named `views`.     * Create the `index.handlebars` file inside `views` directory.     * Create the `layouts` directory inside `views` directory.       * Create the `main.handlebars` file inside `layouts` directory.       * Setup the `main.handlebars` file so it's able to be used by Handlebars.       * Setup the `index.handlebars` to have the template that Handlebars can render onto.       * Create a button in `index.handlebars` that will submit the user input into the database.  #### Directory structure  All the recommended files and directories from the steps above should look like the following structure:  ``` . ├── config │   ├── connection.js │   └── orm.js │  ├── controllers │   └── burgers_controller.js │ ├── db │   ├── schema.sql │   └── seeds.sql │ ├── models │   └── burger.js │  ├── node_modules │  ├── package.json │ ├── public │   └── assets │       ├── css │       │   └── burger_style.css │       └── img │           └── burger.png │    │ ├── server.js │ └── views     ├── index.handlebars     └── layouts         └── main.handlebars ```  ### Reminder: Submission on BCS  * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  - - -  ### Minimum Requirements  Attempt to complete homework assignment as described in instructions. If unable to complete certain portions, please pseudocode these portions to describe what remains to be completed. Hosting on Heroku and adding a README.md are required for this homework. In addition, add this homework to your portfolio, more information can be found below.   - - -  ### Hosting on Heroku  Now that we have a backend to our applications, we use Heroku for hosting. Please note that while **Heroku is free**, it will request credit card information if you have more than 5 applications at a time or are adding a database.  Please see [Heroku’s Account Verification Information](https://devcenter.heroku.com/articles/account-verification) for more details.  - - -  ### Create a README.md  Add a `README.md` to your repository describing the project. Here are some resources for creating your `README.md`. Here are some resources to help you along the way:  * [About READMEs](https://help.github.com/articles/about-readmes/)  * [Mastering Markdown](https://guides.github.com/features/mastering-markdown/)  - - -  ### Add To Your Portfolio  After completing the homework please add the piece to your portfolio. Make sure to add a link to your updated portfolio in the comments section of your homework so the TAs can easily ensure you completed this step when they are grading the assignment. To receive an 'A' on any assignment, you must link to it from your portfolio.  - - -  ### One More Thing  This is a really tough homework assignment, but we want you to put in your best effort to finish it.  If you have any questions about this project or the material we have covered, please post them in the community channels in slack so that your fellow developers can help you! If you're still having trouble, you can come to office hours for assistance from your instructor and TAs.  ### Reminder  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  **Good Luck!**",1,0,2020,2021,1,https://github.com/StevenSJones/burger
Command,BurgerTime,"# Node Express Handlebars  ### Overview  In this assignment, you'll create a burger logger with MySQL, Node, Express, Handlebars and a homemade ORM (yum!). Be sure to follow the MVC design pattern; use Node and MySQL to query and route data in your app, and Handlebars to generate your HTML.  ### Read This  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  ### Important  * **This assignment must be deployed.** Be sure to utilize the [MYSQL Heroku Deployment Guide](../../03-Supplemental/MySQLHerokuDeploymentProcess.pdf) in order to deploy your assignment.  ### Before You Begin  * Eat-Da-Burger! is a restaurant app that lets users input the names of burgers they'd like to eat.  * Whenever a user submits a burger's name, your app will display the burger on the left side of the page -- waiting to be devoured.  * Each burger in the waiting area also has a `Devour it!` button. When the user clicks it, the burger will move to the right side of the page.  * Your app will store every burger in a database, whether devoured or not.  * [Check out this video of the app for a run-through of how it works](https://youtu.be/msvdn95x9OM).  ### Commits  Having an active and healthy commit history on GitHub is important for your future job search. It is also extremely important for making sure your work is saved in your repository. If something breaks, committing often ensures you are able to go back to a working version of your code.  * Committing often is a signal to employers that you are actively working on your code and learning.    * We use the mantra “commit early and often.”  This means that when you write code that works, add it and commit it!    * Numerous commits allow you to see how your app is progressing and give you a point to revert to if anything goes wrong.  * Be clear and descriptive in your commit messaging.    * When writing a commit message, avoid vague messages like ""fixed."" Be descriptive so that you and anyone else looking at your repository knows what happened with each commit.  * We would like you to have well over 200 commits by graduation, so commit early and often!  ### Submission on BCS  * **This assignment must be deployed.** * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  ## Instructions  #### App Setup  1. Create a GitHub repo called `burger` and clone it to your computer.  2. Make a package.json file by running `npm init` from the command line.  3. Install the Express npm package: `npm install express`.  4. Create a server.js file.  5. Install the Handlebars npm package: `npm install express-handlebars`.  6. Install MySQL npm package: `npm install mysql`.  7. Require the following npm packages inside of the server.js file:    * express  #### DB Setup  1. Inside your `burger` directory, create a folder named `db`.  2. In the `db` folder, create a file named `schema.sql`. Write SQL queries this file that do the following:     * Create the `burgers_db`.    * Switch to or use the `burgers_db`.    * Create a `burgers` table with these fields:      * **id**: an auto incrementing int that serves as the primary key.      * **burger_name**: a string.      * **devoured**: a boolean.  3. Still in the `db` folder, create a `seeds.sql` file. In this file, write insert queries to populate the `burgers` table with at least three entries.  4. Run the `schema.sql` and `seeds.sql` files into the mysql server from the command line  5. Now you're going to run these SQL files.     * Make sure you're in the `db` folder of your app.     * Start MySQL command line tool and login: `mysql -u root -p`.     * With the `mysql>` command line tool running, enter the command `source schema.sql`. This will run your schema file and all of the queries in it -- in other words, you'll be creating your database.     * Now insert the entries you defined in `seeds.sql` by running the file: `source seeds.sql`.     * Close out of the MySQL command line tool: `exit`.  #### Config Setup  1. Inside your `burger` directory, create a folder named `config`.  2. Create a `connection.js` file inside `config` directory.     * Inside the `connection.js` file, setup the code to connect Node to MySQL.     * Export the connection.  3. Create an `orm.js` file inside `config` directory.     * Import (require) `connection.js` into `orm.js`     * In the `orm.js` file, create the methods that will execute the necessary MySQL commands in the controllers. These are the methods you will need to use in order to retrieve and store data in your database.       * `selectAll()`      * `insertOne()`      * `updateOne()`     * Export the ORM object in `module.exports`.  #### Model setup  * Inside your `burger` directory, create a folder named `models`.    * In `models`, make a `burger.js` file.      * Inside `burger.js`, import `orm.js` into `burger.js`      * Also inside `burger.js`, create the code that will call the ORM functions using burger specific input for the ORM.      * Export at the end of the `burger.js` file.  #### Controller setup  1. Inside your `burger` directory, create a folder named `controllers`.  2. In `controllers`, create the `burgers_controller.js` file.  3. Inside the `burgers_controller.js` file, import the following:     * Express    * `burger.js`  4. Create the `router` for the app, and export the `router` at the end of your file.  #### View setup  1. Inside your `burger` directory, create a folder named `views`.     * Create the `index.handlebars` file inside `views` directory.     * Create the `layouts` directory inside `views` directory.       * Create the `main.handlebars` file inside `layouts` directory.       * Setup the `main.handlebars` file so it's able to be used by Handlebars.       * Setup the `index.handlebars` to have the template that Handlebars can render onto.       * Create a button in `index.handlebars` that will submit the user input into the database.  #### Directory structure  All the recommended files and directories from the steps above should look like the following structure:  ``` . ├── config │   ├── connection.js │   └── orm.js │  ├── controllers │   └── burgers_controller.js │ ├── db │   ├── schema.sql │   └── seeds.sql │ ├── models │   └── burger.js │  ├── node_modules │  ├── package.json │ ├── public │   └── assets │       ├── css │       │   └── burger_style.css │       └── img │           └── burger.png │    │ ├── server.js │ └── views     ├── index.handlebars     └── layouts         └── main.handlebars ```  ### Reminder: Submission on BCS  * Please submit both the deployed Heroku link to your homework AND the link to the Github Repository!  - - -  ### Minimum Requirements  Attempt to complete homework assignment as described in instructions. If unable to complete certain portions, please pseudocode these portions to describe what remains to be completed. Hosting on Heroku and adding a README.md are required for this homework. In addition, add this homework to your portfolio, more information can be found below.   - - -  ### Hosting on Heroku  Now that we have a backend to our applications, we use Heroku for hosting. Please note that while **Heroku is free**, it will request credit card information if you have more than 5 applications at a time or are adding a database.  Please see [Heroku’s Account Verification Information](https://devcenter.heroku.com/articles/account-verification) for more details.  - - -  ### Create a README.md  Add a `README.md` to your repository describing the project. Here are some resources for creating your `README.md`. Here are some resources to help you along the way:  * [About READMEs](https://help.github.com/articles/about-readmes/)  * [Mastering Markdown](https://guides.github.com/features/mastering-markdown/)  - - -  ### Add To Your Portfolio  After completing the homework please add the piece to your portfolio. Make sure to add a link to your updated portfolio in the comments section of your homework so the TAs can easily ensure you completed this step when they are grading the assignment. To receive an 'A' on any assignment, you must link to it from your portfolio.  - - -  ### One More Thing  This is a really tough homework assignment, but we want you to put in your best effort to finish it.  If you have any questions about this project or the material we have covered, please post them in the community channels in slack so that your fellow developers can help you! If you're still having trouble, you can come to office hours for assistance from your instructor and TAs.  ### Reminder  When trying to connect remotely to your Heroku database on an open network such as a coffee shop, library, or even your University WiFi, it will be blocked. If you are experiencing a Heroku connection error, this could be why.  **Good Luck!**",1,0,2020,2020,1,https://github.com/Unbukn/BurgerTime
Command,Command,Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/Command
Command,command,Design Patterns,0,0,2024,2024,0,https://github.com/MoniqueSukerman/command
Command,DesignPatterns-PhonePushNotification,Fake command line Phone push notification (Mostly to practice observer/factory/proxy design patterns),0,2,2015,2015,1,https://github.com/mkohlmann-he/DesignPatterns-PhonePushNotification
Command,Command,Command design pattern,0,0,2018,2018,0,https://github.com/scyzeq/Command
Command,command,Command Design Pattern,0,0,2020,2020,2,https://github.com/tsungweiwu/command
Command,Command,Design Pattern: Command,0,1,2015,2015,1,https://github.com/jinguiwu/Command
Command,Command,Command design pattern,0,0,2024,2024,1,https://github.com/OctavioCastillo/Command
Command,Command,Design Pattern Command,0,0,2022,2022,1,https://github.com/aliounemane2/Command
Command,command,Command Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/command
Command,command, command design pattern example,0,0,2023,2023,1,https://github.com/Lucianoa84/command
Command,CommandPattern,Behavioral Design Pattern in C# | Command Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/CommandPattern
Command,DP_command1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_command1
Command,Command,Demonstration the Command Design Pattern,0,0,2019,2019,1,https://github.com/alexandra142/Command
Command,Command,Command Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Command
Command,CommandPattern,Command design pattern,0,0,2023,2023,1,https://github.com/ts-cpp-programmer/CommandPattern
Command,Command,Example of Behavioral Design Pattern Command ,0,0,2021,2021,1,https://github.com/smykal/Command
Command,Command,Unity3D C# command design pattern template,0,0,2023,2023,1,https://github.com/neko-aleph/Command
Command,CommandPattern,Java Design Patterns,0,0,2018,2018,1,https://github.com/balamanova/CommandPattern
Command,CommandDesignPattern,Command Design Pattern,0,0,2022,2022,1,https://github.com/Beloin/CommandDesignPattern
Command,CommandDesignPattern,Group Design Pattern,0,0,2023,2023,5,https://github.com/bmyer01/CommandDesignPattern
Command,CommandDesignPattern,Command Design Pattern,0,0,2018,2018,1,https://github.com/Zulqarnain007/CommandDesignPattern
Command,CommandDesignPattern,Command Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/CommandDesignPattern
Command,Design_pattern-COMMAND,Design Pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-COMMAND
Command,Electric-Power-System,"C#, UML, CIM, WPF / Used design patterns: Observer, Prototype, Singleton, Command and MVC. More details in ""Project.docx"" and ""Documentation.odt""",0,3,2018,2019,1,https://github.com/Milica94/Electric-Power-System
Command,Command,A design pattern Command in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Command
Command,command,Simple project demonstrating the command design pattern.,0,0,2022,2022,1,https://github.com/Piazzi/command
Command,Process-Command-Change-Responsibility-,Design Pattern,0,0,2014,2014,1,https://github.com/nguyennd56/Process-Command-Change-Responsibility-
Command,CabScheduling,"It is for the Basic Cab Booking, Scheduling and Cancellation based on Command Design Pattern & Scheduler",0,2,2018,2018,1,https://github.com/gmershad/CabScheduling
Command,CommandPattern,Head First Design Patterns,0,0,2015,2015,1,https://github.com/h4rib0/CommandPattern
Command,CommandPattern,Game Design Pattern Series,0,0,2024,2024,1,https://github.com/emregurkn/CommandPattern
Command,CommandDesignPattern,Command Design Pattern Example,0,0,2020,2020,1,https://github.com/aasmc/CommandDesignPattern
Command,CommandDesignPattern,Command design pattern practice,0,0,2022,2024,4,https://github.com/DeepThePatel/CommandDesignPattern
Command,Java-command,command design pattern,0,0,2023,2023,0,https://github.com/Thakurpramod/Java-command
Command,CommandDesignPatternTest,Practice Command Design pattern,0,0,2023,2023,1,https://github.com/KazuBurrows/CommandDesignPatternTest
Command,CommandGameOfBricks,Implemented Command design pattern,0,0,2019,2019,1,https://github.com/sharanya17410/CommandGameOfBricks
Command,Command-Pattern,Design Pattern :Command,0,0,2024,2024,1,https://github.com/norakertesz/Command-Pattern
Command,command,description de design pattern command avec un exemple,0,0,2022,2022,1,https://github.com/Yasser-NADIR/command
Command,Command,Exemplo de Design Pattern (Command) implementado em Java,0,0,2018,2018,1,https://github.com/Renan4783/Command
Command,DesignPatternCommand,Design Pattern - Command,0,0,2019,2019,1,https://github.com/JamilEAbrantes/DesignPatternCommand
Command,DP_Command_Memento,design pattern exercise,0,1,2016,2016,1,https://github.com/ksmulti/DP_Command_Memento
Command,command_design_pattern,command design pattern,0,0,2018,2024,1,https://github.com/AJEETX/command_design_pattern
Command,Kata_ATM_Command,Design Pattern Training,0,0,2013,2013,1,https://github.com/hankuikuide/Kata_ATM_Command
Command,Command-Design-Pattern,Design pattern Code ,0,0,2024,2024,1,https://github.com/aliiioo/Command-Design-Pattern
Command,PatternCommand-Example,Behavioral design patterns,0,0,2018,2018,1,https://github.com/amarqueze/PatternCommand-Example
Command,Design-Patterns-Command,Design Patterns – Command,0,0,2020,2020,1,https://github.com/lt1379/Design-Patterns-Command
Command,SmartHomeCommandCenter,Command Design Pattern,0,0,2025,2025,1,https://github.com/MikeDmoch/SmartHomeCommandCenter
Command,CommandExample,Command Design Pattern Example Code,0,0,2024,2024,1,https://github.com/Karl-MarkusPress/CommandExample
Command,PositionAndColorCommand,Design Patterns AT1,0,0,2020,2020,2,https://github.com/pedrofelipevsl/PositionAndColorCommand
Command,CommandRemote,Command Design Pattern - implementation/practice,0,0,2018,2018,1,https://github.com/bwielk/CommandRemote
Command,CommandDesignPattern,Command Design Pattern in Swift,0,0,2018,2023,1,https://github.com/onurcanyurt/CommandDesignPattern
Command,CommandPatternProject,Command Design pattern in Java,0,0,2016,2016,1,https://github.com/rodrigoNisum/CommandPatternProject
Command,command,A simple implementation and example of command design pattern,0,0,2020,2020,0,https://github.com/mohahalabi/command
Command,CommandDesignPattern2,Command Design Pattern with multithreading.,0,0,2020,2020,1,https://github.com/emirtotic/CommandDesignPattern2
Command,command-DP,LLD command Design pattern,0,0,2024,2024,1,https://github.com/mukul-byte/command-DP
Command,patterns-command,Command Design pattern example,0,0,2022,2022,1,https://github.com/maksymyavorovych/patterns-command
Command,Calculator_command,command design pattern implemented,0,0,2015,2015,1,https://github.com/vineetha2438/Calculator_command
Command,UebungCommandPattern,Uebung Design Pattern Command,0,0,2024,2024,1,https://github.com/srhrsb/UebungCommandPattern
Command,CSharp_Behavioral_Command,Behavioral Command Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_Command
Command,CommandDemo,Command Design Pattern made in Java,0,0,2020,2020,1,https://github.com/etEthiopia/CommandDemo
Command,3-2-DesignPatterns-Command,"Design Patterns in Object-Oriented Programming Eighth Tasks ""Command Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Command
Command,CDP_practice,Command design pattern ,0,0,2024,2024,1,https://github.com/ChandimalPriyamantha/CDP_practice
Command,Comand,Command design pattern,0,0,2024,2024,1,https://github.com/OctavioCastillo/Comand
Command,DP-CRAETIVE-ASSIGNMENT,COMMAND DESIGN PATTERN ,0,0,2022,2022,1,https://github.com/SAHILSHENDE/DP-CRAETIVE-ASSIGNMENT
Command,GameEngLab2,Command Design Pattern,0,0,2019,2019,1,https://github.com/dionb112/GameEngLab2
Command,Codigo-046---Comandos-em-Arquivo,Design Pattern Command,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-046---Comandos-em-Arquivo
Command,PrinterQueueManager,Command design pattern,0,0,2025,2025,1,https://github.com/MikeDmoch/PrinterQueueManager
Command,csharp-design-patterns-command,C# Design Patterns: Command,0,0,2021,2023,1,https://github.com/jasarsoft/csharp-design-patterns-command
Command,CommandPatternExample,Command design pattern example on Java,0,0,2024,2024,1,https://github.com/Andrezuu/CommandPatternExample
Command,RemoteControlCommandPattern,Head First Design Patterns,0,0,2021,2021,1,https://github.com/RyanCrowleyCode/RemoteControlCommandPattern
Command,Command_Scala_Design_Pattern,Command scala design pattern ,0,0,2021,2021,1,https://github.com/gunishj/Command_Scala_Design_Pattern
Command,Codigo-045---Lampada,Design Pattern Command,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-045---Lampada
Command,LightOnOff,Command Design Pattern,0,0,2025,2025,1,https://github.com/MikeDmoch/LightOnOff
Command,CommandPatternExample,Command Design pattern example from HeadFirst,0,0,2021,2021,0,https://github.com/yongjoon-km/CommandPatternExample
Command,command-pattern,Implemetation by JavaScript (Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/command-pattern
Command,Command-Decorator, Design pattern command more Decorator,0,0,2019,2019,1,https://github.com/diegomoran777/Command-Decorator
Command,Command_Pattern,Command design pattern in C#,0,0,2021,2021,1,https://github.com/DRoberts919/Command_Pattern
Command,command-pattern,Demo for Command Design Pattern,0,0,2023,2023,1,https://github.com/sonnq-genki/command-pattern
Command,Command-Pattern,Behavioral Design Patterns: Command Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Command-Pattern
Command,pattern-command,Example using design pattern command,0,0,2018,2018,0,https://github.com/lyndemberg/pattern-command
Command,PatternCommand,Design Pattern Command William LEGRAS,0,0,2016,2016,1,https://github.com/wlegras/PatternCommand
Command,command-dp,Command Design Pattern on PHP,0,0,2023,2023,1,https://github.com/mtrosin/command-dp
Command,CommandPattern,"Study Repository about the Design Pattern ""Command""",0,0,2020,2020,1,https://github.com/GQBrendel/CommandPattern
Command,command_design_pattern_flutter,"Command Design Pattern in Flutter | Behavioral Design Patterns in Flutter | 25 June, 2023",0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/command_design_pattern_flutter
Command,CSharpCommandPattern,Command Design Pattern in C#,0,0,2019,2019,1,https://github.com/jcoz1968/CSharpCommandPattern
Command,java_gof_command,"design pattern ""command"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_command
Command,Command_Design_Pattern,Command Design pattern using Java,0,0,2024,2024,1,https://github.com/NikleshFernando/Command_Design_Pattern
Command,design-pattern-command,GOF Command behavioral design pattern,0,1,2014,2014,1,https://github.com/a-cordier/design-pattern-command
Command,DesignPatterns_Command,Design Patterns: Command Pattern sample,0,0,2017,2022,1,https://github.com/dyamaletdinova/DesignPatterns_Command
Command,Design-Pattern-Command,Description du design pattern Command,0,0,2020,2023,1,https://github.com/manon-deleest/Design-Pattern-Command
Command,CommandDP,Simple project that implements command design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/CommandDP
Command,design-pattern-command,Review on Command Design Pattern,0,0,2021,2021,1,https://github.com/marciodegan/design-pattern-command
Command,Javascript-Command-Pattern,Simple Javascript Command Design Pattern,0,0,2016,2016,1,https://github.com/gufrondev/Javascript-Command-Pattern
Command,PythonCommandPattern,Command Design Pattern in Python. ,0,0,2019,2019,0,https://github.com/Sunuba/PythonCommandPattern
Command,Command-Design_Pattern,Command Design Pattern using Java,0,0,2023,2023,1,https://github.com/MSid01/Command-Design_Pattern
Command,command-design-pattern,Command Design Pattern in Swift,0,0,2020,2020,0,https://github.com/tagaruma/command-design-pattern
Command,CommandPatternExample,Small intro in the Command design pattern.,0,0,2021,2021,1,https://github.com/teusvanarkel/CommandPatternExample
Command,CommandPatternArmy,Console game implementing the Command design pattern,0,0,2019,2024,1,https://github.com/iiimosley/CommandPatternArmy
Command,command-design-pattern-example,Simple command design pattern example,0,0,2021,2021,1,https://github.com/ultrasonicsoft/command-design-pattern-example
Command,java-command-design-pattern,Simple Command Design Pattern demonstration.,0,0,2023,2023,1,https://github.com/borrelunde/java-command-design-pattern
Command,DP-Behavioral-COMMAND-Restaurant,Design Pattern Behavioral COMMAND Restaurant,0,0,2021,2021,1,https://github.com/mochapriih/DP-Behavioral-COMMAND-Restaurant
Command,MarsRover-CommandDesign,Mars Rover kata with Command design pattern,0,0,2022,2022,2,https://github.com/hassansaleem194/MarsRover-CommandDesign
Command,command_pattern,Command design pattern example in Ruby,0,0,2020,2020,1,https://github.com/henriquepjv/command_pattern
Command,command-generator,Generate command for command design pattern,0,0,2020,2020,2,https://github.com/StevenWillyS/command-generator
Command,command-pattern,Command design pattern implementation in Go,0,0,2020,2020,1,https://github.com/jeffprestes/command-pattern
Command,command-pattern,Command Design Pattern demo in C#,0,0,2022,2022,1,https://github.com/jebarcha/command-pattern
Command,facade_and_command_design-pattern,facade and command design pattern,0,0,2018,2024,1,https://github.com/AJEETX/facade_and_command_design-pattern
Command,command-pattern,A demo of Command Design Pattern,0,1,2014,2014,1,https://github.com/abhishek08aug/command-pattern
Command,Command-Pattern,Example implementation of command design pattern,0,0,2022,2022,1,https://github.com/sharpezoid/Command-Pattern
Command,DPattens-Command,about design pattern Command by C++,0,0,2018,2018,0,https://github.com/khanhdrag9/DPattens-Command
Command,CommandPattern,Typescript example of implementation of Command Design Pattern,0,0,2017,2017,0,https://github.com/patryk-studniak/CommandPattern
Command,OperationStabilityTest,implementing Command Design Pattern,0,0,2017,2017,1,https://github.com/dlgkrbek123/OperationStabilityTest
Command,CS_tic-tac-to,Command Design Pattern example,0,0,2023,2023,0,https://github.com/VladislavPavlyuk/CS_tic-tac-to
Command,design_lab6,school - design patterns - command,0,0,2015,2015,1,https://github.com/DavidNr2/design_lab6
Command,design-pattern-,design pattern for command,0,1,2017,2017,1,https://github.com/FY1043031060/design-pattern-
Command,CPSol-Test,Design Pattern- Command Pattern,0,0,2019,2019,0,https://github.com/omprakash27/CPSol-Test
Command,php-design-patterns-command,PHP Design Patterns - Command Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-command
Command,Skommand,Command Design Pattern Framework,0,0,2017,2017,1,https://github.com/sonikro/Skommand
Command,CommandPattern,Learned about Command Pattern in Design Pattern class,0,0,2023,2023,1,https://github.com/KRSuchan/CommandPattern
Command,CommandDesignPattern-SpreadSheetMacros,Spreadsheet Macros implemented using command design pattern,0,0,2023,2023,1,https://github.com/srijharao/CommandDesignPattern-SpreadSheetMacros
Command,tic-tac-toe,Command design pattern example,0,0,2023,2023,0,https://github.com/VladislavPavlyuk/tic-tac-toe
Command,command_dp_ts,The Command Design Pattern in TypeScript,0,0,2021,2021,1,https://github.com/edkaresli/command_dp_ts
Command,engComp.padroesDeProjeto.command,Command design pattern in java,0,0,2021,2021,0,https://github.com/NivardoX/engComp.padroesDeProjeto.command
Command,design_pattern_command,Exemplo para Design Pattern tipo Command,0,0,2023,2023,1,https://github.com/adesdsilva/design_pattern_command
Command,command-example2,An implementation of 'Command' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/command-example2
Command,command-design-pattern,Implement command design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/command-design-pattern
Command,product-command-service,Implementation of CQRS microservice design pattern .,0,0,2024,2024,1,https://github.com/aravindraj777/product-command-service
Command,scientific-calculator,A simple scientific calculator using design pattern command,0,0,2022,2022,1,https://github.com/yanncarvalho/scientific-calculator
Command,commandPatternEx,"Is an example using the design pattern ""Command""",0,0,2017,2017,1,https://github.com/dnlaus/commandPatternEx
Command,aula-padroes-command,"Example implementation of  Design Pattern ""Command""",0,0,2016,2016,1,https://github.com/ads-2016-1/aula-padroes-command
Command,DesignPatterns.Command,A sample Command design pattern implementation,0,0,2023,2023,1,https://github.com/assiduousdev/DesignPatterns.Command
Command,commander,The variation of the command design pattern,0,0,2017,2017,0,https://github.com/daishe/commander
Command,AdvancedSD_Pattern_Command,bassed on GoF design patterns book,0,0,2019,2019,1,https://github.com/itimotin/AdvancedSD_Pattern_Command
Command,command-bus,Interfaces for the design pattern command bus,0,0,2022,2022,1,https://github.com/php-design-pattern/command-bus
Command,command_pattern,A simple implementation of command design pattern,0,0,2023,2023,1,https://github.com/gonzsanz/command_pattern
Command,hfdp-command,Head First Design Patterns : Command : Objectville Diner,0,0,2018,2018,1,https://github.com/fenwickjb/hfdp-command
Command,CommandPattern,Head First Design Patterns - Chapter 6 - The Command Pattern,0,0,2019,2019,0,https://github.com/Ruoyu111/CommandPattern
Command,CommandProject,Projeto desenvolvido para demostrar aplicação do design patterns command,0,0,2023,2023,1,https://github.com/YasminZanonBarg/CommandProject
Command,DesignPatternCommandAndMediator,A Example of Design Pattern Command,0,0,2022,2022,1,https://github.com/GustavoGodoy/DesignPatternCommandAndMediator
Command,AmazingCommand,A spin on classic Command design pattern with a Swift version of Target-Action design pattern on top.,0,0,2021,2021,1,https://github.com/khamitimur/AmazingCommand
Command,CommandPatternExample,Example code in java for the Command Design Pattern,0,0,2015,2020,1,https://github.com/RBrae/CommandPatternExample
Command,commandDesignPattern,a smart remote control implements the Command design pattern,0,0,2016,2016,1,https://github.com/maximebonin/commandDesignPattern
Command,DesignPatterns.Command,A simple exercise of Command Design Pattern,0,0,2019,2019,1,https://github.com/sebainones/DesignPatterns.Command
Command,DesignPatternCommand,Sistema Bancário com Design Pattern (comportamentais): Command.,0,0,2023,2023,2,https://github.com/Brunna1989/DesignPatternCommand
Command,Command-Design-Pattern,Example how to use command design pattern,0,0,2020,2020,1,https://github.com/tamerRaed/Command-Design-Pattern
Command,command-design-pattern,Simple Banking project for command design pattern ,0,0,2024,2024,0,https://github.com/zuzusann/command-design-pattern
Command,DesignPattern-Command,Command design pattern example implemented in c++,0,0,2018,2018,1,https://github.com/VCharatsidis/DesignPattern-Command
Command,DESIGN_PATTERN_Command, Source code demo cho Design Pattern Command,0,0,2021,2021,1,https://github.com/mirushi/DESIGN_PATTERN_Command
Command,Command-design-pattern,Real life example of command design pattern,0,0,2024,2024,1,https://github.com/Ctaljibini/Command-design-pattern
Command,DP6_Command,java design patterns study#6 Command Pattern,0,0,2015,2015,1,https://github.com/amyarh92/DP6_Command
Command,go-command-pattern,code for design pattern lesson: command pattern,0,0,2012,2014,1,https://github.com/kpse/go-command-pattern
Command,ProjCommandDPsalario,Reajuste Salarial através da design pattern Command,0,0,2022,2022,1,https://github.com/HeloisaDiasFahl2004/ProjCommandDPsalario
Command,DesignPatternCommand,Solution simple implémentant le design pattern Command,0,0,2018,2018,1,https://github.com/GeoffreyKnobloch/DesignPatternCommand
Command,command-design-pattern,Example implementation of the command design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/command-design-pattern
Command,BridgeAndCommand,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/BridgeAndCommand
Command,BubbleSort-Command-Pattern,Exercise in using the Command design pattern,0,0,2013,2014,1,https://github.com/rylo/BubbleSort-Command-Pattern
Command,Simulating-Turtle-graphics-program-focusing-on-design,"Using Command ,Interpreter Design patterns",0,0,2015,2015,1,https://github.com/priyanka88/Simulating-Turtle-graphics-program-focusing-on-design
Command,n_dunn_project_00,Implementing the Command design pattern.,0,0,2019,2019,1,https://github.com/natedunn2230/n_dunn_project_00
Command,RayWenToe,Command Pattern by Design Patterns,0,0,2020,2020,1,https://github.com/Armandocarrillo/RayWenToe
Command,BVTextEditor,TextEditor with command design pattern,0,0,2015,2015,1,https://github.com/vahan3temp/BVTextEditor
Command,COSC436-Lab8,Intro to Command design pattern,0,0,2017,2017,1,https://github.com/jschen21/COSC436-Lab8
Command,toyRobotProject,Testing Command Design Pattern practically,0,0,2018,2019,1,https://github.com/maryamkarandish/toyRobotProject
Command,MarsRover,"Onion Archtiecture , Command Design Pattern",0,0,2022,2022,1,https://github.com/idemirli/MarsRover
Command,commandPattern,This is an example of Command Design Pattern in JAVA,0,0,2024,2024,1,https://github.com/ClarkBelen/commandPattern
Command,Remote-App-Command-DP,Remote controller app using command design pattern,0,0,2024,2024,1,https://github.com/HimanshuLal23/Remote-App-Command-DP
Command,design_patterns_in_typescript,Design pattern implementations in TypeScript,0,0,2024,2024,1,https://github.com/Santiagomrn/design_patterns_in_typescript
Command,Pattern_Command,Understanding and implementing command design pattern in C#,0,0,2019,2020,1,https://github.com/ramacpr/Pattern_Command
Command,Command-CSharp,Command Design Pattern - Commanding Light Switches and AC,0,0,2015,2015,1,https://github.com/wcTGgeek/Command-CSharp
Command,tv-commander,A simple example of the Command design pattern.,0,1,2018,2018,1,https://github.com/upsd/tv-commander
Command,Command-Pattern,A simple command design pattern  implementation for Unity,0,0,2020,2020,1,https://github.com/ToprakOzgur/Command-Pattern
Command,command-example,An example of implementation for 'Command' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/command-example
Command,CommandPatternExample,"a showcase of the behavioral design pattern ""Command"" in Java",0,0,2020,2020,1,https://github.com/anasbo19/CommandPatternExample
Command,cross-command,Tiny code skills sample using some design patterns,0,0,2024,2024,1,https://github.com/LeonardoFerrariFraga/cross-command
Command,mordor-command-Charlos16v,A Java Kata applying command design pattern,0,1,2021,2021,2,https://github.com/cifpfbmoll/mordor-command-Charlos16v
Command,CommandDesignPattern,"Example of simple text editor, that follows Command design pattern.",0,0,2023,2024,1,https://github.com/cuprum-acid/CommandDesignPattern
Command,CommandPatternGame,A small project to practice implementing the Command design Pattern,0,0,2016,2016,1,https://github.com/scytail/CommandPatternGame
Command,uni-text-editor-command-pattern,Text editor implementing the Command design pattern.,0,0,2020,2025,1,https://github.com/eugeniy-seliverstov/uni-text-editor-command-pattern
Command,Design-Pattern-Command-William-LEGRAS,Exemple de Design Pattern Command. William LEGRAS,0,0,2016,2016,0,https://github.com/wlegras/Design-Pattern-Command-William-LEGRAS
Command,DesignPatterns-Command,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Command
Command,DesignPatternsCommand,,0,0,2017,2017,1,https://github.com/ishoshani/DesignPatternsCommand
Command,DesignPatterns.Command,,0,0,2022,2022,1,https://github.com/Vali-Mandeal/DesignPatterns.Command
Command,DesignPatternsCommand,,0,0,2018,2018,0,https://github.com/xufeixianggithub/DesignPatternsCommand
Command,DesignPatterns.Command,Utilização básica do padrão de projeto Command em um console application .NET,0,0,2022,2024,1,https://github.com/RLGHISLENI/DesignPatterns.Command
Command,DesignPatterns-Command,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Command
Command,DesignPatternsCommand,,0,0,2015,2015,1,https://github.com/brunodevesa/DesignPatternsCommand
Command,DesignPatternsCommand,iOS命令模式,0,0,2019,2019,1,https://github.com/zoeyzhong520/DesignPatternsCommand
Command,Commander,A PHP implementation of the Command Bus Design Pattern.,0,0,2016,2017,1,https://github.com/TomWright/Commander
Command,DesignPatterns-Command,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Command
Command,DesignPatterns-Command,,0,0,2018,2018,1,https://github.com/brianstoiber/DesignPatterns-Command
Command,commanddesignpattern,Collaborative design pattern made during my Software Engineering course,0,0,2022,2023,4,https://github.com/epadams/commanddesignpattern
Command,DesignPatterns-Command,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Command
Command,DesignPatterns_Command,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_Command
Command,command-design-pattern,An example of command design pattern with C#,0,0,2021,2021,0,https://github.com/saidtaleb/command-design-pattern
Command,DesignPatterns-Command,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-Command
Command,DesignPatterns-Command,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Command
Command,DesignPatterns_Command,,0,0,2024,2024,0,https://github.com/Freedom-Coding/DesignPatterns_Command
Command,Command_Design_Pattern,A sample implementation of the command design pattern.,0,0,2021,2021,1,https://github.com/ADoublePlus/Command_Design_Pattern
Command,ChainOfCommand,Tuto sur le design pattern Chaîne de commandement,0,0,2022,2022,0,https://github.com/MaximeThifagne/ChainOfCommand
Command,CmdShellMgr,Command Shell managemen - leverages Command Design Pattern.,0,0,2016,2016,0,https://github.com/h20dragon/CmdShellMgr
Command,CommandDemo,A simple Android application used to demonstrate the Command design pattern.,0,0,2016,2016,1,https://github.com/doc2dev/CommandDemo
Command,golang-command-design-pattern,Example of command design pattern implementation in Go,0,0,2020,2020,1,https://github.com/naufalridho/golang-command-design-pattern
Command,command_design_pattern_demo,CS5617 - Software Engineering.  Individual Project: Design Pattern - Command,0,0,2023,2023,1,https://github.com/gowthamgeddam/command_design_pattern_demo
Command,UnityCommandDesignPattern,Example using the Command Design Pattern with Unity,0,0,2019,2019,1,https://github.com/dasassygoat/UnityCommandDesignPattern
Command,Java-Dev-DesignPatterns-CommandPattern-UnitCommands,,0,0,2017,2017,0,https://github.com/VladimirCores/Java-Dev-DesignPatterns-CommandPattern-UnitCommands
Command,Command,Show the Usage of facade and command design patterns in Java using mixed drinks as a problem space,0,0,2022,2022,1,https://github.com/Ashok6666/Command
Command,command-example,Marmara University OOP Class Assignment - Command Design Pattern Example,0,0,2014,2014,1,https://github.com/bamasyali/command-example
Command,command_csharp,Repositório dedicado ao estudo referente ao design pattern command.,0,0,2015,2023,1,https://github.com/LucasKauer/command_csharp
Command,CommandDesignPattern,Training of design patterns continues. This time i learn Command pattern,0,0,2019,2019,1,https://github.com/MarcinSredzinski/CommandDesignPattern
Command,JavaCommandPattern,A java console application that I created that implements the command design pattern I learned from Head First Design Patterns book.,0,0,2024,2024,0,https://github.com/kevinaguirredev/JavaCommandPattern
Command,Mini-Editor-Java-command-pattern,Create a Mini Editor using Command Design pattern,0,0,2015,2020,1,https://github.com/SMR39/Mini-Editor-Java-command-pattern
Command,AS3-Dev-DesignPatterns-CommandPattern,,0,0,2016,2016,0,https://github.com/VladimirCores/AS3-Dev-DesignPatterns-CommandPattern
Command,Java_DesignPatterns-Command,Estudo do padrão de projeto Command,0,0,2021,2021,1,https://github.com/fernando-cadalso/Java_DesignPatterns-Command
Command,Command-DesignPatterns-Control,The project is implemented on the training video:  https://www.youtube.com/watch?v=N6T57KLg73A&list=PLtjuvkyFrt5Wjd-973N117XS7xuuoD6XM&index=5,0,0,2019,2019,1,https://github.com/spyshura/Command-DesignPatterns-Control
Command,C-DesignPatterns_Command,,0,0,2023,2023,1,https://github.com/mohamedibrahim1990/C-DesignPatterns_Command
Command,DesignPatterns-Behavioral-Command,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-Command
Command,design_pattern_command,Esboço de um design pattern command com Spring Framework.,0,0,2020,2020,1,https://github.com/tcelio2/design_pattern_command
Command,DesignPattern-Command,An example of the Command Design pattern in Java ,0,0,2018,2018,1,https://github.com/waynenterprises/DesignPattern-Command
Command,commander,An implementation of the Domain Events design pattern for Laravel,0,0,2014,2014,1,https://github.com/lukaskorl/commander
Command,Virtualdars.DesignPatterns.Command,,0,0,2024,2024,1,https://github.com/Nitran2004/Virtualdars.DesignPatterns.Command
Command,command-design-pattern,Command design pattern and refactoring practice in ruby 🤩,0,0,2022,2022,1,https://github.com/ztbochanski/command-design-pattern
Command,Command-Design-Pattern,Exercise to show the use of Command Design Pattern,0,0,2019,2019,1,https://github.com/Shobecker/Command-Design-Pattern
Command,Xperiments.DesignPatterns.Command,A litttle implementation of Command pattern,0,0,2017,2017,0,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Command
Command,DesignPatterns_MissileCommand,DesignPatterns,0,0,2021,2021,0,https://github.com/jscotty/DesignPatterns_MissileCommand
Command,mars-rover,reference implementation of command design pattern,0,0,2018,2021,1,https://github.com/parameshg/mars-rover
Command,DesignPatterns-Command-Calculator,"Calculator using the behavioral pattenr ""COMMAND""",0,0,2023,2023,1,https://github.com/fraskow/DesignPatterns-Command-Calculator
Command,order,Project to study Design Pattern Command,0,0,2018,2018,1,https://github.com/sidneynakatani/order
Command,Command-Design-Pattern,Remote control software that includes the Command Design Pattern,0,0,2017,2017,1,https://github.com/minavadamee20/Command-Design-Pattern
Command,command-design-ts,Simple example of the command design pattern in TypeScript,0,0,2022,2022,1,https://github.com/kheyenv/command-design-ts
Command,TextEditor,Project demonstrating the command design pattern,0,0,2024,2025,1,https://github.com/sebastienbeauvais/TextEditor
Command,mfgames-commands-cil,A generic framework for implementing the Command design pattern.,0,1,2013,2013,1,https://github.com/dmoonfire/mfgames-commands-cil
Command,Design_Patterns-Unity,Study about design pattern: Command Pattern,0,0,2024,2025,1,https://github.com/VitorMeloDev/Design_Patterns-Unity
Command,Automated-Restaurant-System-Command-Design-Pattern-,automated restaurant system utilizing the Command design pattern,0,0,2022,2022,1,https://github.com/Anley-Codes/Automated-Restaurant-System-Command-Design-Pattern-
Command,CommandDesignPattern,A basic command design pattern Implementation to get the feel of it,0,0,2016,2016,1,https://github.com/RajdeepRao/CommandDesignPattern
Command,CommandDesignPattern,implementing the Command Design Pattern to create a very simple hero game.,0,0,2022,2022,3,https://github.com/247-Algo-Messiahs/CommandDesignPattern
Command,CommandPatternTemplate,A generic implementation for a full featured command design pattern in C++.,0,0,2021,2021,1,https://github.com/markpseda/CommandPatternTemplate
Command,COSC436Assignment4,Automated Restaurant System using the Command Design Pattern and other additional design patterns,0,0,2017,2017,1,https://github.com/jschen21/COSC436Assignment4
Command,monorail-commandEx,Sample program implementing command design pattern in C# (implemented with Unity Engine),0,0,2016,2016,1,https://github.com/bradykilpatrick/monorail-commandEx
Command,CommandPatternDemo,Demonstration on how to implement and use Command Design Pattern in Unity.,0,0,2024,2024,1,https://github.com/CezarRCoelho/CommandPatternDemo
Command,Command-Design-Pattern-Assignment,Command Design Pattern Assignment for CSCE 247 Professor Plante,0,0,2019,2019,1,https://github.com/cameronbrandenburg/Command-Design-Pattern-Assignment
Command,PHP-Component-Util-Command,The Command behavioural design pattern as a PHP component.,0,0,2013,2013,1,https://github.com/FlorianWolters/PHP-Component-Util-Command
Command,commandjava-xml,implementation of factory & command design pattern with xml file sample,0,0,2015,2015,1,https://github.com/marwagamal/commandjava-xml
Command,Command-pattern,Command design pattern on java in building and actions examples.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Command-pattern
Command,Behavioral-Command,This is a short implementation of the Command design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Command
Command,Demo_CommandPatternApplying,My sample demo application how to apply Command Design Pattern in Android,0,0,2016,2016,2,https://github.com/KhoaSuperman/Demo_CommandPatternApplying
Command,CommandDesignPatterns,,0,0,2019,2019,1,https://github.com/ahmedco82/CommandDesignPatterns
Command,BlackWaspCommandDesignPattern,Tutorial from Black Wasp for the Command Design Pattern,0,0,2018,2018,1,https://github.com/kevpthomas/BlackWaspCommandDesignPattern
Command,command_pattern_template,Base setup for command design pattern based on sorting work,0,1,2017,2017,1,https://github.com/hbutler97/command_pattern_template
Command,command-design-pattern,Automatically exported from code.google.com/p/command-design-pattern,0,0,2015,2015,0,https://github.com/laq/command-design-pattern
Command,Mini-Total-Commander,Total Commander made in C# WinForms using MVP Design Pattern,0,0,2019,2021,1,https://github.com/Adam-Czerwinski/Mini-Total-Commander
Command,Command-Line-Game,This an Oregon trail style game that utilizes design patterns ,0,0,2023,2023,1,https://github.com/jaden81699/Command-Line-Game
Command,DesignPatterns_chapter-6,Command Pattern,0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-6
Command,Command-Design-Pattern-,Team Repository for the Command Design Pattern for CSCE 247 ,0,0,2020,2020,3,https://github.com/VJosephs/Command-Design-Pattern-
Command,Command-Design-Pattern,Practice using Command design pattern and CI/CD w/GitLab,0,0,2023,2023,1,https://github.com/thekdorm/Command-Design-Pattern
Command,CommandDesignPattern,Решение задачи примитивной реализации системы домашнего автоматического управления с помощью Сommand Design Pattern.,0,0,2022,2022,1,https://github.com/mmarryll/CommandDesignPattern
Command,CommandDesignPattern,a small Project to learn the principles of Command Design Pattern in java,0,0,2024,2024,1,https://github.com/amruabd/CommandDesignPattern
Command,Java-app-command-line-design-patterns,A small java app using design pattern. Technologies: Java,0,0,2014,2014,1,https://github.com/krunogrc/Java-app-command-line-design-patterns
Command,Design-pattern-Adapter-Factory-Command-Memento,Design pattern with Adapter&Factory&Command&Memento in Java,0,0,2015,2015,1,https://github.com/peterlau0010/Design-pattern-Adapter-Factory-Command-Memento
Command,total-commander,A Total Commander clone made with WPF using MVVM design pattern. ,0,0,2019,2019,1,https://github.com/calinbogdan/total-commander
Command,command-pattern,The usefull set of interface to interact with command design pattern,0,0,2018,2018,1,https://github.com/Doka-NT/command-pattern
Command,Java-Command-Design-Pattern,Complete example of the command design pattern in Java 10+.,0,0,2021,2021,0,https://github.com/cpu-byte/Java-Command-Design-Pattern
Command,Command_Memento,Learning about Command and Memento Design Patterns with a simple app,0,0,2023,2023,1,https://github.com/juanfranciscocis/Command_Memento
Command,Command_Pattern_goodNINE,Command Design Pattern _ Nhóm goodNINE _ Lập Trình Java IS216.O22,0,0,2024,2024,1,https://github.com/ThinhLam-git/Command_Pattern_goodNINE
Command,Calculatrice,Calculatrice avec Spring MVC  Design pattern -- Command -- ,0,0,2025,2025,2,https://github.com/Lafraouzette/Calculatrice
Command,CommandSystem,Java Sample Project to show a Command System built after the MVP design pattern,0,0,2024,2024,1,https://github.com/juliandieskau/CommandSystem
Command,CSharp,"OOP | SOLID | Singleton, Command & State Design Patterns",0,0,2024,2024,1,https://github.com/cucabel/CSharp
Command,File-Manager,Command line system implemented with design patterns,0,0,2024,2024,3,https://github.com/Bynawers/File-Manager
Command,Ex1,Exercise of using Design Patterns - Command & Builder.,0,0,2019,2019,0,https://github.com/bariudin777/Ex1
Command,DesignPattern,The project illustrates the command design pattern,0,0,2021,2021,1,https://github.com/t-ateya/DesignPattern
Command,Calculadora,Implementando calculadora simples utilizando Design pattern Command,0,0,2019,2019,1,https://github.com/YasminLuz/Calculadora
Command,Telephone,Programmable telephone using the Command design pattern,0,0,2023,2023,1,https://github.com/cfareste/Telephone
Command,autoplugin-drawapp,"Example for design patterns. Strategy, Observer, Command,",0,0,2020,2020,1,https://github.com/CosminGRG/autoplugin-drawapp
Command,parking-lot,Parking Lot allotment using command design pattern,0,0,2018,2018,2,https://github.com/ashu0992sharma/parking-lot
Command,InventoryManagement,Inventory Management example for command design pattern,0,0,2023,2023,1,https://github.com/goelsonali/InventoryManagement
Command,DesignPatterns,"Builder, Factory, Command, Mediator, State, Observer etc.",0,0,2023,2023,1,https://github.com/duhayildirim/DesignPatterns
Command,DesignTechniques-Remote,Remote control simulator using command design pattern,0,0,2022,2022,1,https://github.com/colefoster/DesignTechniques-Remote
Command,mvvm_design_pattern,"study design pattern mvvm, command pattern, mobx",0,0,2022,2022,0,https://github.com/kordobby/mvvm_design_pattern
Command,calculator,simple calculator using the command design pattern,0,0,2016,2016,1,https://github.com/riluong1/calculator
Command,DesignPatterns,Examples of memento and command design patterns,0,0,2024,2024,1,https://github.com/DominikBudzynski/DesignPatterns
Command,HabitHub,Command Line project for learning Design Patterns,0,0,2024,2024,1,https://github.com/preet-rattol/HabitHub
Command,HomeworkWeek3,Simple example implementing the Command Design Pattern,0,0,2020,2020,1,https://github.com/kevwill79/HomeworkWeek3
Command,RbDesignPatterns-Command,Command,0,0,2020,2020,1,https://github.com/Jagepard/RbDesignPatterns-Command
Command,Use-Case-Command-Design-Pattern,It describes an use case which implements Observer Design Pattern,0,0,2024,2024,0,https://github.com/N-andish/Use-Case-Command-Design-Pattern
Command,DesignPatterns,Implementation for Command and Observer Patterns,0,0,2015,2016,1,https://github.com/krutipandya/DesignPatterns
Command,Command_design_pattern,The command design pattern for the YSL group of CSCE 247,0,0,2023,2023,4,https://github.com/Khalil25-bit/Command_design_pattern
Command,cmd_system,A command dispatcher based on the command design pattern,0,0,2023,2023,1,https://github.com/vocavi/cmd_system
Command,Command_Pattern_Exercise,CS 340 Software Design class exercise for the Command design pattern,0,0,2021,2021,1,https://github.com/king-parker/Command_Pattern_Exercise
Command,JavaDesignPatterns-Command,Command,0,0,2020,2020,1,https://github.com/Jagepard/JavaDesignPatterns-Command
Command,command-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Command em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/command-java
Command,CommandTest,Just a little Java app to test out my understanding of the Command design pattern.,0,0,2014,2014,1,https://github.com/luigi1015/CommandTest
Command,CommandDesignPatternTest,A small test to help people understand the power of the command design pattern,0,0,2018,2018,1,https://github.com/Darkfafi/CommandDesignPatternTest
Command,RemoteCommands,"A ""Remote Control"" app in Java that demonstrates the Command design pattern.",0,0,2019,2019,0,https://github.com/KristaBalling/RemoteCommands
Command,Design-Patterns-Tutorial-Command,This project is taken from Derek Banas' Design Patterns Tutorial series.,0,0,2019,2019,1,https://github.com/olosinno/Design-Patterns-Tutorial-Command
Command,Design-Patterns-Command-Pattern,"Command Pattern as explained in the book ""Head First Design Patterns""",0,0,2019,2019,1,https://github.com/UbaidSh2018/Design-Patterns-Command-Pattern
Command,BackgroundCommandASP.NET,The command design pattern in classic ASP.NET MVC (Background workers),0,0,2019,2019,1,https://github.com/1001011000101101/BackgroundCommandASP.NET
Command,DesignPatterns,"Design pattern repository contains various design pattern with real world example. SOLID principle with examples are available here as well. In the document, I will be updating the corresponding SOLID principles which are applied to each pattern. The reference document contains the resource for patterns oriented architecture.",0,0,2020,2021,2,https://github.com/shahed-adnan/DesignPatterns
Command,Java_CommandPattern,This is a simple Java Application to demonstrate the use of the Command Design Pattern,0,0,2021,2023,1,https://github.com/LeilaSmh/Java_CommandPattern
Command,java-command-pattern,This application is an implementation of the Command Design pattern in Java,0,0,2017,2017,1,https://github.com/saurabh15may/java-command-pattern
Command,CompositeCommandPattern,Exploring pattern variations and extensions for the Composite and Command design pattern,0,0,2019,2019,1,https://github.com/chancehouston/CompositeCommandPattern
Command,CS3500PyramidSolitaire,"Implementation of Pyramid Solitaire game using Java and the Model-Controller-View Design Pattern, the Command Design Pattern, and the Factory Design Pattern",0,0,2021,2021,1,https://github.com/jcui2001/CS3500PyramidSolitaire
Command,DesignPatterns,"My templates for Abstract Factory, Adapter, Composite, Command, State",0,0,2018,2018,1,https://github.com/Kropisha/DesignPatterns
Command,command-retangulo,Atividade em casa - mover e colorir um retângulo utilizando o design pattern Command,0,0,2020,2020,1,https://github.com/lucaslopez25/command-retangulo
Command,design-patterns-command,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-command
Command,design-patterns-command,,0,0,2021,2022,1,https://github.com/MaloPolese/design-patterns-command
Command,CommanDesignPatterns,Komut deseninin nasıl kullanıldığı ile ilgili proje,0,0,2024,2024,1,https://github.com/Maliyldz/CommanDesignPatterns
Command,mars-rover,mars-rover problem solved using Command Design Pattern,0,0,2020,2020,1,https://github.com/fbozkurt1/mars-rover
Command,Command-design-patterns,,0,0,2020,2021,1,https://github.com/LvssValadares/Command-design-patterns
Command,patterns-command,The intention of this project is to refersh my understanding of design patterns.,0,0,2021,2021,1,https://github.com/veilofmaya/patterns-command
Command,Design-Patterns---Command,,0,0,2020,2020,1,https://github.com/DerAlpman/Design-Patterns---Command
Command,WinForms_Facebook_App_2,"Design patterns implementation C# - Factory method, visitor, command",0,0,2018,2019,2,https://github.com/Uri-Shapira/WinForms_Facebook_App_2
Command,parking-lot,basic parking lot implementation using command design pattern,0,0,2021,2021,1,https://github.com/hiupadhyay/parking-lot
Command,design-patterns,Commands,0,0,2020,2020,1,https://github.com/evgeniyamavrova/design-patterns
Command,Design-Patterns-Command,,0,0,2023,2023,1,https://github.com/valdenir-ziger/Design-Patterns-Command
Command,command-design-patterns,LP5,0,0,2024,2024,0,https://github.com/amanda-faria/command-design-patterns
Command,command_pattern_user_adv,Implement small console application register user and advertisements using command design pattern,0,0,2024,2024,0,https://github.com/panahi-projects/command_pattern_user_adv
Command,MarsRover,"Mars Rover problem, using the Command Design Pattern.",0,0,2019,2022,1,https://github.com/ferhatcandas/MarsRover
Command,cqs-maker,Command and Query creator in CQS design pattern,0,0,2023,2023,1,https://github.com/galileuveloso/cqs-maker
Command,tutorial-2,Behavioral Design Pattern: Command Pattern and Template Pattern.,0,0,2023,2024,2,https://github.com/CSUI-Adpro/tutorial-2
Command,Design-Patterns,"GOF Design Patterns : observer, strategy, command, composite, state",0,0,2017,2017,1,https://github.com/mesurace/Design-Patterns
Command,command_pattern_text_editor,A simple text editor to solidify comprehension on the Command Design Pattern.,0,0,2024,2024,1,https://github.com/beau2am/command_pattern_text_editor
Command,Design-Patterns-Command,,0,0,2023,2023,1,https://github.com/roman-lehendzevych-vitech/Design-Patterns-Command
Command,Design_Pattern_Videogame,Command line based videogame for testing design patterns,0,0,2020,2020,1,https://github.com/BreathingCat/Design_Pattern_Videogame
Command,DesignPatterns,"Singleton, Factory method, Adapter, Facade, Command, Mediator, Observer, Repository, Builder",0,0,2022,2022,1,https://github.com/Xakimov1610/DesignPatterns
Command,JDBC,JDBC implementation using Command and Singleton Design Pattern ,0,0,2018,2018,1,https://github.com/aleem006/JDBC
Command,simple-swing-rtf-editor,Simple RTF text editor using Command Design Pattern,0,0,2020,2022,1,https://github.com/onurguler/simple-swing-rtf-editor
Command,Software_Design_Calculator_App,Command line calculator based on Software Design Patterns ,0,0,2022,2022,1,https://github.com/shambhuraj43/Software_Design_Calculator_App
Command,CleanCode,Aplicando Clean Code Delphi e Design Pattern Command,0,0,2019,2019,1,https://github.com/ronaldsantos63/CleanCode
Command,CampaignSimulation,".net core, Singleton,Factory,Command,Strategy Design Pattern",0,0,2021,2023,1,https://github.com/nurbanuyesiltas/CampaignSimulation
Command,GameOfLife,"This is a Design Pattern study that implements different design patterns on the initial code for GameOfLife. Design Patterns: State, Singleton, Command, Observer, Visitor.",0,0,2023,2023,1,https://github.com/kenhowry/GameOfLife
Command,Command-Design-Pattern,A sample project to learn a implementation of Command Design Pattern in Unity.,0,0,2021,2021,1,https://github.com/Gattai1996/Command-Design-Pattern
Command,command-pattern-java,Implement command design pattern in Java (dummy game control: UP - DOWN - LEFT - RIGHT),0,0,2024,2024,0,https://github.com/panahi-projects/command-pattern-java
Command,DesignPatterns_C-Sharp_e-commercial_website_Command,,0,0,2023,2024,1,https://github.com/EsraTosun/DesignPatterns_C-Sharp_e-commercial_website_Command
Command,design_pattern_command,"Develop a system that uses the pattern given in class. ""Command"" design pattern. ",0,0,2021,2024,1,https://github.com/sc0v0ne/design_pattern_command
Command,Study-Java-Design-Patterns,A study project using Design Patterns in Java,0,0,2023,2023,1,https://github.com/gabrielteiga/Study-Java-Design-Patterns
Command,NetCommand,"Blank web site built up using MVC, Command and Bridge design patterns with C#",0,0,2015,2015,0,https://github.com/mikep74/NetCommand
Command,DesignPatterns,"Single Responsibibility Principle, Factory, Strategy, Command, Template Method, Proxy and Decorator Pattern",0,0,2020,2020,1,https://github.com/IgorFerro/DesignPatterns
Command,Fall14-ObjOrientedProg-Commands-D-D,Basic turn-based role playing game using the Command design pattern,0,0,2016,2016,1,https://github.com/rehpotsirhc/Fall14-ObjOrientedProg-Commands-D-D
Command,svg-command,A console based C# application in Command Design Pattern to realize undo-redo operation.,0,0,2022,2022,1,https://github.com/longporo/svg-command
Command,CP_330_Lab_02,CP_330 Design Patterns and Testing - Lab_02 - Console app implementing a chain of command design pattern.,0,0,2017,2017,1,https://github.com/Josh-Romito/CP_330_Lab_02
Command,Tree_command_DP_Composite,Nous avons implémenté la commande tree en JAVA grâce au design pattern composite ,0,0,2023,2023,0,https://github.com/MarieWalyFall/Tree_command_DP_Composite
Command,Plutus,Desktop wallet graph application using 6 different design patterns,0,1,2021,2021,1,https://github.com/BartoszKlonowski/Plutus
Command,smart_kitchen_command_pattern,A simple console application of a smart kitchen using the command design pattern,0,0,2018,2018,1,https://github.com/yanyanRYAN/smart_kitchen_command_pattern
Command,CGW_.NET_DesignPatterns,"Design Patterns (Abstract Factory, Command, Facade, Double-checked locking)",0,0,2024,2024,1,https://github.com/DianaDykoon/CGW_.NET_DesignPatterns
Command,Python_DesignPatterns,"Python Design Patterns: Command, Facade, Factory, Monostate, Observer, Proxy, Singleton, State",0,0,2018,2018,1,https://github.com/Milstein/Python_DesignPatterns
Command,padrao-projeto-command,Criando um projeto java usando o Design Pattern Command com Java Reflection e Anotações,0,0,2019,2019,2,https://github.com/programandonaraca/padrao-projeto-command
Command,lab-command-pattern,Implementação do design pattern command durante o desafio de projeto da Digital Innovation One.,0,0,2023,2023,1,https://github.com/gabsgc/lab-command-pattern
Command,DesignPatterns,"Active Object, Class Adapter, Command Pattern, Creator Pattern, Decorator, Object Adapter, Strategy Pattern, Singleton.",0,0,2019,2022,1,https://github.com/iluzzamit/DesignPatterns
Command,Design-Patterns-Command-CSHARP,,0,0,2023,2023,1,https://github.com/ivnvalxndr/Design-Patterns-Command-CSHARP
Command,DosCommands_design_patterns,,0,0,2016,2016,1,https://github.com/sharmilakarki/DosCommands_design_patterns
Command,Design-Patterns-Command-Passing,,0,0,2024,2024,1,https://github.com/regino-pan-a-i/Design-Patterns-Command-Passing
Command,JsDesignPatterns-Command,,0,0,2020,2020,1,https://github.com/Jagepard/JsDesignPatterns-Command
Command,command-passing-design-patterns,,0,0,2023,2023,1,https://github.com/JeremyCBusch/command-passing-design-patterns
Command,DesignPatternsProject,"E-commercial website with using Strategy, Observer, Command and Singleton design patterns",0,0,2024,2024,1,https://github.com/mervegulcetin/DesignPatternsProject
Command,GoDesignPatterns-Command,,0,0,2020,2020,1,https://github.com/Jagepard/GoDesignPatterns-Command
Command,Design-Patterns-5---Command,,0,0,2018,2018,1,https://github.com/sakarisson/Design-Patterns-5---Command
Command,CommandPatternExample,An example on Command (Behavioural) Pattern. Based on the implementation of Vaskaran Sarcar book 'Design Patterns in C#' ,0,0,2021,2021,0,https://github.com/SimonLoosveldt/CommandPatternExample
Command,CsDesignPatterns-Command,,0,0,2020,2020,1,https://github.com/Jagepard/CsDesignPatterns-Command
Command,CppDesignPatterns-Command,,0,0,2020,2020,1,https://github.com/Jagepard/CppDesignPatterns-Command
Command,PyDesignPatterns-Command,,0,0,2020,2020,1,https://github.com/Jagepard/PyDesignPatterns-Command
Command,ObserverPattern,This code demonstrates the observer and command design pattern,0,0,2018,2019,0,https://github.com/guhanMurugesan/ObserverPattern
Command,Smart_Home_Java,This a student project on the command design pattern,0,0,2019,2020,1,https://github.com/zoyakatashinskaya/Smart_Home_Java
Command,py-text-editor,Small simple text editor to practice Command Design Pattern.,0,0,2023,2023,1,https://github.com/carloscol-in/py-text-editor
Command,event-bus-java,"A simple design pattern event, facade command bus interface.",0,0,2020,2024,1,https://github.com/noyzys/event-bus-java
Command,Chess,Chess using Godot to learn the command design pattern,0,0,2024,2024,1,https://github.com/Hekkow/Chess
Command,PuzzleGame-UndoRedo,Small puzzle game that uses the command design pattern,0,0,2022,2022,1,https://github.com/Chipz5/PuzzleGame-UndoRedo
Command,CoR,This project implements a chain of command design pattern. ,0,0,2021,2021,1,https://github.com/mlibasc/CoR
Command,design-patterns-spring-boot,"This project, implementing, design patterns, command, factory, decorator, builder",0,0,2024,2024,1,https://github.com/guilhermeferreira0/design-patterns-spring-boot
Command,Design-Patterns,"Testing of Singleton,Prototype,Command and Adapter design patterns.",0,0,2020,2020,1,https://github.com/madhurima12/Design-Patterns
Command,Week3,Java Design Patterns Facade and Command Preparing Mixed Drinks,0,0,2022,2022,1,https://github.com/Ashok6666/Week3
Command,Calculator-CDP,Designed a calculator using Command Design Pattern in Python,0,0,2016,2016,1,https://github.com/rmagesh148/Calculator-CDP
Command,DesignPatterns-2,"In-Memory Database with Persistence. Design patterns used are Singleton, Memento and Command",0,0,2014,2014,0,https://github.com/PayalGodse/DesignPatterns-2
Command,CommandDesignPattern,This is a sample C# implementation of a Command design pattern used to implement a user interactive svg canvas,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/CommandDesignPattern
Command,CommandDesignPattern,Attempt at implementing the command design pattern to support continuous events (e.g. drag) from the Snap svg library.,0,0,2017,2017,1,https://github.com/merrickheley/CommandDesignPattern
Command,Design-patterns,"command,observer,event ques",0,0,2022,2022,1,https://github.com/Ezzoozz/Design-patterns
Command,DesignPatternsDemo,"Little examples about Abstract Factory, Strategy, Command, Chain of Responsibility and  Observer Design Patterns",0,0,2022,2022,1,https://github.com/elifnurafsar/DesignPatternsDemo
Command,Command-Strategy-Calculator,"Simple calculator app with undo function using command and strategy design patterns, with Swing UI .",0,0,2018,2018,0,https://github.com/GreenHew/Command-Strategy-Calculator
Command,DesignPatterns2-Assi3,"Design Patterns using proxy, command, chain of responsibility, and visitor,",0,0,2021,2021,1,https://github.com/soniafriesen/DesignPatterns2-Assi3
Command,DesignPattern,Implementation of different types of software design pattern,0,0,2022,2023,1,https://github.com/parvez86/DesignPattern
Command,MyNewRestaurant_DesignPatterns,"Project with design patterns. Singleton, Command, Factory and Decorator used. ",0,0,2023,2023,1,https://github.com/ChristinaDian/MyNewRestaurant_DesignPatterns
Command,JClientServerCommand,Java-based library implementing the GoF 'Command' design pattern within a client/server application topology.,0,0,2012,2013,1,https://github.com/evanspa/JClientServerCommand
Command,CommandEmoticonGenerator,This is a project I made using the Command design pattern to implement the undo/redo functionality. It is an interactive C# Dotnet application with a CLI UI to make operations to make Emoticons. The project also utilizes the Decorator Design Pattern,0,0,2021,2021,1,https://github.com/AlexMaxwell2001/CommandEmoticonGenerator
Command,command-design-pattern,Projeto utilizando o Design Pattern Command para resolução de um sistema de cálculo de entregas.,0,0,2018,2018,1,https://github.com/amacielima/command-design-pattern
Command,DesignPatterns-Part-1,Command and factory design patterns as used in object oriented design(OOD),0,0,2019,2019,1,https://github.com/Sebuliba-Adrian/DesignPatterns-Part-1
Command,DesignPatternsSnake,"Snake game developed using multiple Design Patterns like Observer, Flyweight, Command, Singleton, Servant, Factory, State...",0,0,2022,2023,1,https://github.com/Juggler98/DesignPatternsSnake
Command,DesignPatterns-RPNCalculator,"Reverse Polish Notation Calculator using Design Patterns... Command, Memento, State, Strategy, Interpreter,Singleton, Abstract Factory",0,0,2018,2018,1,https://github.com/swaks1/DesignPatterns-RPNCalculator
Command,command-reusable,Proyecto reutilizable el cual sirve para iniciar un proyecto el cual use Command/Action Design Pattern,0,0,2019,2019,1,https://github.com/estebanbri/command-reusable
Command,command-dispatcher,A library that can be used to implement Command Design Pattern with the power of Spring.,0,0,2024,2024,1,https://github.com/mryakar/command-dispatcher
Command,MoreDesignPatterns,Example Command pattern,0,0,2022,2022,1,https://github.com/rod-m/MoreDesignPatterns
Command,JavaCommandDesignPatternTextEditor,This is a project to demonstrate the implementation of Command Design Pattern in Java. ,0,0,2020,2021,1,https://github.com/projectOrhan/JavaCommandDesignPatternTextEditor
Command,InMemoryDB_DesignPatterns,"In memory database for video store inventory- implemented patterns- Mamnto, Command, Decorator",0,0,2014,2014,1,https://github.com/Bela2711/InMemoryDB_DesignPatterns
Command,Risks_Practising_DesignPatterns,"A simple project to implement myself a few design patterns: Builder, Decorator and Command.",0,0,2019,2019,1,https://github.com/pisanina/Risks_Practising_DesignPatterns
Command,SwiftDesignPatternsCommandLine,,0,0,2021,2021,1,https://github.com/GitHubyangjunyi/SwiftDesignPatternsCommandLine
Command,Design-Patterns--Command_Example1,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--Command_Example1
Command,Design-Patterns--Command_Example2,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--Command_Example2
Command,java_design_patterns_command_mode,java设计模式_命令模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_command_mode
Command,JavaDesignPatterns-ObserverCommand,Implementation of last semester's test for object-oriented programming II on design patterns in Java. The observer and command patterns were used.,0,0,2024,2024,1,https://github.com/artherp/JavaDesignPatterns-ObserverCommand
Command,calc_design_patterns,"app, plugins, and commands",0,0,2024,2024,1,https://github.com/alvitesg/calc_design_patterns
Command,dna-analayzer-by-command-line,"System that load, analyze, manipulate and save DNA sequences, using cli and design pattern principles ",0,0,2021,2021,1,https://github.com/EfratGranit/dna-analayzer-by-command-line
Command,design-patterns,Command pattern design developed with python,0,0,2021,2021,1,https://github.com/CrisGuzmanS/design-patterns
Command,CnC,The Command & Control (CnC) Repository for descibing the design pattern.,0,0,2016,2016,1,https://github.com/Anoxymous/CnC
Command,csv-converter,CVS converter using strategy design pattern and PHP Command line,0,0,2017,2017,1,https://github.com/ahmedalaahagag/csv-converter
Command,CS-372-Final,example of an implementation of chain of command design pattern ,0,0,2021,2021,1,https://github.com/Abad1/CS-372-Final
Command,Game-X-O,GameX-O with design patterns Command and Iterator and Observer,0,0,2023,2023,1,https://github.com/IbrahemAlhamoud/Game-X-O
Command,RPN_calculator-,Implementation of a RPN calculator using the Command design pattern,0,0,2018,2018,1,https://github.com/Aishwariya-Talathi/RPN_calculator-
Command,ts-survivor-game,Mini command line game to express some design patterns usage,0,0,2024,2024,1,https://github.com/oleksandr-shapchenko/ts-survivor-game
Command,coffee-machine-simulator,"Project to practice the command, filter and observer design patterns",0,0,2018,2019,0,https://github.com/MSkrzypietz/coffee-machine-simulator
Command,Maze-Game,A toy maze game to practice the Command Design Pattern,0,0,2022,2022,1,https://github.com/knam04/Maze-Game
Command,design-patterns,"Samples of design patterns: Adapter, Command, FactoryMethod, Observable, Prototype, Singleton.",0,0,2019,2024,1,https://github.com/PauloBusch/design-patterns
Command,executables,Interfaces for implementing a variation of the Command design pattern.,0,0,2017,2019,1,https://github.com/petar-m/executables
Command,TravelerCapsule,Design Pattern Exercises #1 - Command Pattern - Unity 2019.2.10f1,0,0,2022,2022,1,https://github.com/hasanvurucu/TravelerCapsule
Command,tsooctl,SImple command line application to show case some design patterns.,0,0,2023,2023,0,https://github.com/tonitienda/tsooctl
Command,Remote-Control,"the Command Pattern, based on Head First Design Patterns book.",0,0,2013,2023,1,https://github.com/adagio/Remote-Control
Command,calculator-undo-redo,Calculator with undo redo operations to practice Command design pattern.,0,0,2018,2020,1,https://github.com/cjlcarvalho/calculator-undo-redo
Command,java-assignments,Software Engineering command line assignments with focus on design patterns.,0,0,2020,2023,1,https://github.com/maiconandsilva-archive/java-assignments
Command,Chess_Game_LLD,"Simple Two Player Game Handled Singleton, Facade, Command design Pattern.",0,0,2024,2024,1,https://github.com/Sahana-sg/Chess_Game_LLD
Command,easy-jump,"A greenfoot game implementing Factory, Command, Strategy, Observer Design patterns",0,0,2014,2014,2,https://github.com/harsh00008/easy-jump
Command,sorting_test,Base setup for command design pattern based on sorting work,0,1,2017,2017,1,https://github.com/hbutler97/sorting_test
Command,CMD_DP,This is an example codes implemented by Command  Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/CMD_DP
Command,CQRS.Web,a simple CQRS (Command Query Responsibility Segregation) design pattern example.,0,0,2023,2023,0,https://github.com/eraykaraman/CQRS.Web
Command,Smart-Home,Greenfoot Demonstration of Command Design Pattern | SE&G 2023-2024,0,0,2024,2024,1,https://github.com/crimsonraine/Smart-Home
Command,DesignPatternsJava,"Working and training Java concepts, especially Design Patterns like Strategy, Polymorphism, Chain of Responsability, Template Method, State, Command and Observer. ",0,0,2021,2021,1,https://github.com/Mirajenni/DesignPatternsJava
Command,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Command,Software-Engineering-2-Course---UNIFEI,Just a simple game. Used Command and Mediator design patterns. ,0,0,2020,2020,1,https://github.com/terciosato/Software-Engineering-2-Course---UNIFEI
Command,DesignPatterns-Car-lot-management,"A Java based student project that encapsulates the management of a car lot with electric vehicles, meant to train design pattern usage. Command line only, commands can be found inside the pdf. ",0,0,2021,2021,1,https://github.com/jpetanjek/DesignPatterns-Car-lot-management
Command,DesignPatternsGreenFoot,"The game code has features that demonstrate the design patterns: Observer, State, Factory and Command in Java.",0,0,2015,2017,2,https://github.com/ashwinibalaraman/DesignPatternsGreenFoot
Command,DESIGN_PATTERN_COMMAND,LEARNING THE DESIGN PATTERN COMMAND WITH JAVA CORE WITH A SIMPLE EXAMPLE OF A LIGHT'S BUTTONS,0,0,2021,2021,1,https://github.com/EdgarEmmanuel/DESIGN_PATTERN_COMMAND
Command,JavaDesignPatterns,Singleton | Factory | AbstractFactory | Command | Decorator ,0,0,2017,2019,1,https://github.com/MaulikMegha/JavaDesignPatterns
Command,Command-Pattern,"Implementation of the command, chain of responsibility, and memento design patterns to simulate a draw board of shapes",0,0,2023,2024,1,https://github.com/JaydenPal/Command-Pattern
Command,designPatterns,"Project that demonstrates factory pattern, repository usage, observer pattern, command pattern and others. I tried to keep code SOLID. Also I use here Microsoft Unity inversion of control container.",0,1,2016,2016,1,https://github.com/povilaszvirblis/designPatterns
Command,Basic_Practice_Design_Patterns,"practice: Observer, Command, Threads",0,0,2021,2021,1,https://github.com/RonShmaya/Basic_Practice_Design_Patterns
Command,Java-Command-Design-Pattern,This is a mini project to study and implement the Command design pattern in Java using BlueJ.,0,0,2017,2017,1,https://github.com/saurabhgedam/Java-Command-Design-Pattern
Command,Command-Pattern-Using-C,Command Pattern Using C# is a project demonstrating the implementation of the Command Design Pattern in C#,0,0,2022,2024,1,https://github.com/khaled71612000/Command-Pattern-Using-C
Command,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
Command,design-patterns-command-and-user-interfaces,,0,0,2024,2024,1,https://github.com/beit46/design-patterns-command-and-user-interfaces
Command,design-patterns-course-observer-command-example,A simple example using both Observer and Command,0,0,2023,2023,1,https://github.com/erezak/design-patterns-course-observer-command-example
Command,CommandDesignPattern,Learn the Command Design Pattern intended for being able to do and undo specific commands from https://www.youtube.com/watch?v=GQzfF5EMD7o,0,0,2019,2019,0,https://github.com/markpackham/CommandDesignPattern
Command,CQRS-And-MediatR-design-pattern,A demo project using the Command Query Responsibility Segregation design pattern. This design pattern is best use for a huge application.,0,0,2024,2024,1,https://github.com/Vic-tory96/CQRS-And-MediatR-design-pattern
Command,Design-Patterns-TicTacToe-Game,"Memento, Decorator, Adapter, Singleton and Command Design Patterns in one System",0,0,2019,2019,1,https://github.com/ShalevL/Design-Patterns-TicTacToe-Game
Command,HouseCmdState,a java program that combines the command and state design patterns. ,0,0,2020,2020,1,https://github.com/kwes18/HouseCmdState
Command,SWP-Exercise,"Implementation of software design patterns, such as Singleton-, Observer-, Command-Pattern.",0,0,2020,2021,1,https://github.com/if18b189/SWP-Exercise
Command,Game,"2D Game using Design Patterns: Builder, Factory, Observer, Memento, Command (C++)",0,0,2021,2024,1,https://github.com/ranatasha/Game
Command,Game-Design-Patterns,This repository contains Command and Obeserver Patterns ,0,0,2019,2019,1,https://github.com/varaprasad8/Game-Design-Patterns
Command,Pinball,"A Java Pinball Machine implementing design patterns (state, composite, singleton, command)",0,0,2021,2022,1,https://github.com/HerbIzzle/Pinball
Command,Design-Patterns-Project,COS 121 Project 2015 (Command-line based),0,0,2017,2017,1,https://github.com/Nathi360/Design-Patterns-Project
Command,pattern-cmd,The way of communication based on the design pattern of command,0,0,2019,2019,0,https://github.com/zhoucs624/pattern-cmd
Command,Design-Patterns,"Repository with multiple design patterns, ex: command, mediator, observer, strategy, etc.",0,0,2022,2022,1,https://github.com/fredowisk/Design-Patterns
Command,Company-Management-System,A startup system designed in Java using the Command Design Pattern.,0,0,2023,2023,1,https://github.com/lowkeyparanoia/Company-Management-System
Command,cmdrs,"command line mini app written in Rust, with design pattern principle",0,0,2023,2023,1,https://github.com/saingsab/cmdrs
Command,Trolls_way,A simple command-line game that uses a State Design Pattern,0,0,2023,2023,1,https://github.com/MarcosPatrickExe/Trolls_way
Command,InClass_Comand_Singlton_patterns,Uses MC theme to implement both Command and Singlton design patterns,0,0,2023,2023,1,https://github.com/connor-bennett/InClass_Comand_Singlton_patterns
Command,cqrs-microservice-pattern-example,Demo for command query responsibility segregation design pattern using spring boot,0,0,2023,2023,1,https://github.com/souravmonster/cqrs-microservice-pattern-example
Command,Task-Manager-CLI,Command line interface apps made using javascript. Contains design pattern concepts,0,0,2024,2024,1,https://github.com/hrohilla2k4/Task-Manager-CLI
Command,RPNCalc,Simple implementation of Reversed Polish Notation calculator with command design pattern.,0,0,2017,2017,1,https://github.com/rpieja/RPNCalc
Command,KnightsStrategy,This is a command line fighting game implementing 7 design patterns.,0,0,2018,2018,1,https://github.com/gavinev98/KnightsStrategy
Command,calculator,a c++ command line expression evaluator that uses many design patterns ,0,0,2019,2019,1,https://github.com/andrewChittick/calculator
Command,Software-Design-Pattern-Calculator,A command-line calculator program that demonstrates essential software design patterns.,0,0,2023,2023,1,https://github.com/caleb765landis/Software-Design-Pattern-Calculator
Command,Stock-Market-Trade-Simulator,Stock market simulator designed using Command design pattern and visitor pattern,0,0,2022,2025,1,https://github.com/hashdefineabc/Stock-Market-Trade-Simulator
Command,Flask-Project-Scaffolding,"This project focuses on building a Hierarchical Model View Controller. So as to manage your code cleanly. This implements few design patterns as well like Command Design Pattern, Strategy Design Pattern",0,0,2019,2021,0,https://github.com/sunlynx/Flask-Project-Scaffolding
Command,calculator,A CLI calculator show cases the command design pattern in Javascript,0,0,2016,2016,1,https://github.com/skylerto/calculator
Command,absx,"Actor Based Syntax - Random code doodle for practicing ""command design pattern""",0,0,2018,2018,1,https://github.com/jgoodman/absx
Command,sqlite-todo,Simple command line todo app implemented with SQLite and design patterns,0,0,2025,2025,1,https://github.com/bramtechs/sqlite-todo
Command,BomberMan,State and Command Design Patterns Demo while making the Bomberman Game,0,0,2020,2020,1,https://github.com/jmsaylor/BomberMan
Command,Strategy_Pattern_Calculator,Python implementation of a command line calculator using strategy design pattern ,0,0,2024,2024,1,https://github.com/yrangana/Strategy_Pattern_Calculator
Command,CS4773Assignment3,"OO Assignment 3 that implements Momento, Strategy, and Command Design Patterns.",0,0,2020,2020,2,https://github.com/DivorcedHorse/CS4773Assignment3
Command,Design_Patterns,Strategy / Observer / Decorator / Factory / Singleton / Command / Adapter / Adapter and others .,0,0,2022,2022,1,https://github.com/WiemBelhadj/Design_Patterns
Command,WPF-MVVM-Commands,This repository provides code examples for using Commands in a WPF application which is based on MVVM design pattern,0,0,2019,2023,1,https://github.com/umair8794/WPF-MVVM-Commands
Command,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Command,Software-Design-Patterns,"Practice developing Command, Memento and Abstract Factory Patterns",0,0,2021,2023,1,https://github.com/LiamAspell/Software-Design-Patterns
Command,Design-patterns,"Having some fun with factory, singleton, builder, command and visitor pattern.",0,0,2022,2022,1,https://github.com/etakacs99/Design-patterns
Command,Design-Patterns,"Several small java programs experimenting with design patterns. The design patterns used are the Command, Prototype, Observer, Flyweight, State, and Singleton patterns.",0,0,2019,2019,1,https://github.com/BenDeVries856/Design-Patterns
Command,design-patterns,"factory, command, composite, decorator, facade, iterator, mvc, observer, proxy, singleton, state, strategy",0,0,2022,2022,1,https://github.com/apkuznetsov/design-patterns
Command,Design-Patterns,"Ejemplos de implementación de los patrones de diseño Command, Iterator y Mediator. ",0,0,2021,2021,2,https://github.com/Marcosmh0199/Design-Patterns
Command,SoftwareDevelopment_DesignPatterns,"Creating the Customize Development Framework like Spring framework and Spring Boot by applying the design patterns like.....Singleton,Command,Observer,Facade,Factory,Composit,COR,Strategy,State,Iterator,Adapter,Decorator,Builder,Adapter",0,0,2024,2024,1,https://github.com/HsuMinHtet/SoftwareDevelopment_DesignPatterns
Command,CommandDesignPattern,"Implementação do Design Pattern Comportamental Command em .net Core 3.1, simulando a implementação de uma calculadora com métodos para desfazer comandos e retornar as operações",0,0,2021,2021,1,https://github.com/rafaelraah/CommandDesignPattern
Command,design_patterns,This is small summary to Patterns in https://refactoring.guru/design-patterns/command,0,0,2024,2024,1,https://github.com/beshoyfayez63/design_patterns
Command,TCP-IP-Chat-Application-,"TCP/IP Chat Application. An application built in a graduation project of Design Patterns. Implementation of Proxy, Command, State and more design Patterns",0,0,2023,2023,1,https://github.com/AharonMaor/TCP-IP-Chat-Application-
Command,TCP-IP-Chat-Application,"TCP/IP Chat Application. An application built in a graduation project of Design Patterns. Implementation of Proxy, Command, State and more design Patterns ",0,0,2023,2023,1,https://github.com/Or-Jerbi/TCP-IP-Chat-Application
Command,CommandCrawler3000-CC3k,"CC3K: A rogue-like C++ based with Object-Oriented principles & Strategy design pattern. Navigate chambers, combat enemies, find potions, and ascend to higher floors.",0,0,2022,2024,1,https://github.com/asfrosche/CommandCrawler3000-CC3k
Command,design-patterns-exercise,"Exercise for uni. Used patterns: Singleton, Command, Observer & Factory method",0,0,2022,2022,1,https://github.com/greta1087/design-patterns-exercise
Command,DeckMiniProject,Learning few design pattern by creating mini command line game Black Jack,0,0,2023,2023,1,https://github.com/RahmatJ/DeckMiniProject
Command,ShoppingCartSim,"projek kecil untuk tugas ADPL yang menggunakan Design pattern singeton, command, composite",0,0,2024,2024,2,https://github.com/mhakimgf/ShoppingCartSim
Command,prototype-mvc,"A tiny MVC framework using the Command, States and Signal design patterns",0,0,2015,2015,0,https://github.com/broyeztony/prototype-mvc
Command,3rd-Semester-HW1,"Binary files, Comparator, ListIterator, Map, TreeSet, Sort on file, Command design pattern",0,0,2019,2019,1,https://github.com/itayzemah/3rd-Semester-HW1
Command,Assignment_3_Group_11,This is a Java Program that displays the Command Structural Design Pattern.,0,0,2024,2024,2,https://github.com/stank3391/Assignment_3_Group_11
Command,471ICookFinal,"Finished project. Contains Factory Method, Command, Memento, Builder and Singleton Design patterns.",0,0,2021,2021,1,https://github.com/bryanmiller7sixty/471ICookFinal
Command,CQRS_Design-,Implement CQRS Design Pattern with SpringBoot (CQRS= Command and Query Responsibility Segregation),0,0,2022,2022,1,https://github.com/AMIT14-08-1999/CQRS_Design-
Command,desing-patterns,A collection of mini command line applications with its specific design pattern,0,0,2017,2017,1,https://github.com/aketza-ayo/desing-patterns
Command,Skillfactory.Module18.YoutubeVideoDownloader,"In this study project we create an app using ""Command"" design pattern",0,0,2023,2023,1,https://github.com/keepdream1ng/Skillfactory.Module18.YoutubeVideoDownloader
Command,freshCakes,Small repo for testing design patterns:  Builder Command Observer (Building a cake),0,0,2025,2025,1,https://github.com/MMMbop1/freshCakes
Command,Address-Book,"Address Book based on JavaFX with memento, singleton and command design patterns",0,0,2019,2019,0,https://github.com/ShalevL/Address-Book
Command,Email-Client-System,A command -line based email- client system.  OOP | Design Patterns | Object Serialization,0,0,2023,2023,1,https://github.com/RaviniKuruppu/Email-Client-System
Command,TransactionPattern,POC for creating a transaction with rollbacks. Uses the command design pattern,0,0,2022,2022,1,https://github.com/DarkFM/TransactionPattern
Command,PacmanV1,"A Pacman game utilising four design patterns, Observer, Factory, Command and Singleton.",0,0,2024,2024,2,https://github.com/JeslynB9/PacmanV1
Command,design-patterns-v2,"Adapter Pattern, Command Pattern, Factory Pattern, Memento Pattern",0,0,2014,2020,0,https://github.com/life-is-curiosity/design-patterns-v2
Command,EasyGroceryApp,"• Implemented command, observer, state, singleton, composite, iterator design patterns for the app.",0,0,2014,2014,1,https://github.com/shahharsh/EasyGroceryApp
Command,FacebookWindowsApp,"A Facebook Application using Design patterns (Singleton, Strategy, Facade, Command, Adapter, etc..)",0,0,2017,2017,0,https://github.com/eizzo77/FacebookWindowsApp
Command,RobotController,C# Robert controller using command design pattern with automated unit test cases.,0,0,2018,2018,1,https://github.com/pabitrad/RobotController
Command,A-Turtle-Program-with-Java-Design-Patterns.,Interpreted the turtle language with specific commands using different Java design patterns.,0,0,2022,2022,1,https://github.com/SushmaKallapur/A-Turtle-Program-with-Java-Design-Patterns.
Command,DesignPatternsAssignment,"a repository for adding design patterns to a data interpreter. The original code is my own, and the assignment an attempt to understand design patterns better. The original is available in another repository. also includes the use of design patterns in the Command.cmd module",0,0,2016,2016,1,https://github.com/njs236/DesignPatternsAssignment
Command,splitwise,I developed Command line Splitwise backend using Spring and Registry Design Pattern.,0,0,2024,2024,1,https://github.com/Rahulkumarsingh17898/splitwise
Command,JAVA,"SUDOKU GAME with Mvc,Observer,Command Design Patterns AND Groovy Simple Game",0,1,2015,2024,1,https://github.com/anilsevici/JAVA
Command,command-pattern,"Design pattern comportamental Command (ex. Cliente -> Garçom -> Chef) para encapsular uma requisição como um objeto, converter solicitações ou operações simples como objetos",0,0,2021,2021,1,https://github.com/Jhow-R/command-pattern
Command,CanvasCreation-Command,An interactive UI for a console application to create and add shape svgs to a canvas. Using the Command Design Pattern,0,0,2023,2023,1,https://github.com/7eeBurke/CanvasCreation-Command
Command,CommandLine,"This command line uses the command design pattern in order to print files and folder directories and html code from a webpage, check the status of a website",0,0,2023,2023,1,https://github.com/WilliamsAshton/CommandLine
Command,DesignPatternsInScala,This repo has design patterns implemented in both the OO sense and using functional features from Scala. I have to give big credit to Pavel Fatin's blog post: https://pavelfatin.com/design-patterns-in-scala/#command,0,0,2015,2015,2,https://github.com/jphilipstevens/DesignPatternsInScala
Command,Java-Design-Patterns_Command_Iterator_Observer_CoR,"Домашнее задание к занятию 1.3. Поведенческие шаблоны. Command, CoR, Observer, Iterator. Задача Бесконечная итерация.",0,0,2023,2023,1,https://github.com/InfernalBeard/Java-Design-Patterns_Command_Iterator_Observer_CoR
Command,Design-Patterns,Dummy examples of some Design Patterns of the Gang of Four (GoF) using simple Command Line Apps..,0,0,2022,2022,1,https://github.com/jxareas/Design-Patterns
Command,command-undo,"Mixup dei design pattern Command e Memento per ""undo"" feature. Progetto per l'esame di Ingegneria del Software a Università degli Studi di Firenze",0,0,2020,2023,2,https://github.com/marcodiri/command-undo
Command,library-manager,"CLI book management based on Command design pattern, SpringBoot1.4.3 and JdbcTemplate",0,0,2016,2024,1,https://github.com/openminded-oscar/library-manager
Command,Java-Text-Editor,"Java text editor with design patterns(Iterator, Memento, Builder, Singleton, Command) and UnitTest",0,0,2023,2023,1,https://github.com/kadircopur/Java-Text-Editor
Command,Bytezaria,"C# console project with the usage of design patterns like adapter, iterator, command",0,0,2023,2023,1,https://github.com/barsew/Bytezaria
Command,Split-NotSo-Wise,"Java client-server application using java NIO, implementing command and singleton design patterns",0,0,2024,2024,1,https://github.com/ivan-angelov9643/Split-NotSo-Wise
Command,LearningDesignPattern,"Learning Design Pattern as Strategy, Chain of responsability, Template Method, State, Command, Observer",0,0,2022,2022,1,https://github.com/BrandonCarlos/LearningDesignPattern
Command,DesignPatternsInModernCPP,"This repository demonstrates Creational, Structural, and Behavioral Design Patterns using traditional and modern C++ features in various examples for learning purposes. Common patterns (Singleton, Factory Method, Abstract Factory, Adapter, Decorator, Composite, Observer, Strategy, Command) are implemented with assistance from the AI tool.",0,0,2024,2024,1,https://github.com/denkhzol/DesignPatternsInModernCPP
Command,Design-Patterns-Final-Project,Eight design patterns are implemented in the design of this command-line application,0,0,2019,2019,4,https://github.com/yovah777/Design-Patterns-Final-Project
Command,PrimitiveAlexa,An extremely primitive version of Alexa to practice using the command design pattern,0,0,2017,2017,0,https://github.com/LoumenaMax/PrimitiveAlexa
Command,Splitwise,Backend Design of Splitwise Application. Demonstrates Command Design Pattern and settle up logic,0,0,2025,2025,1,https://github.com/umairalvi1998/Splitwise
Command,HRMS,"Boilerplate to start with Command and Query Design Pattern, Angular JS and DNX ",0,0,2017,2017,1,https://github.com/secret-tallent/HRMS
Command,Calculator,"C++ Calculator utilizing the Command, Abstract Factory, Flyweight, and Wrapper Façade design patterns",0,0,2022,2022,1,https://github.com/kylemblack/Calculator
Command,CS-Assignment-6,"Software Design Pattern Implementation project: Refactoring Assignment 1 into Command, Template, Factory Pattern",0,0,2024,2024,1,https://github.com/AJun01/CS-Assignment-6
Command,design-patterns,"Projeto simples para fixação de alguns Patterns, tais como: Strategy, Chain of Responsability, State, Template Method, Command e Observer.",0,0,2021,2021,1,https://github.com/E-Rombi/design-patterns
Command,Emoticon-Generator,Emoji customization tool that features the Command design pattern to offer undoable operations! ,0,0,2022,2022,1,https://github.com/ConorBanville/Emoticon-Generator
Command,Simple-Text-Editor,"A simple text editor using C++ using MVC, Observer/Subject, Command design pattern",0,0,2023,2023,1,https://github.com/daveyboi99/Simple-Text-Editor
Command,Mini-in-memorydatabase,"Implemented reactive mini-in-memory database using Command, Memento and Observer design pattern",0,0,2016,2016,1,https://github.com/smithahm/Mini-in-memorydatabase
Command,Design_Patterns_Pharmacy,A simple command-line java application with maven and jdbc project implementing 5 design patterns,0,0,2020,2020,0,https://github.com/teodorstrut/Design_Patterns_Pharmacy
Command,design_patterns_python,"Implementation of Abstract Factory, Command and Singleton design patterns using flask-based social media website",0,0,2021,2021,1,https://github.com/MDaniyal2000/design_patterns_python
Command,OOP_CourseWork,"Course work on the design pattern topics. I've made a graphic redactor using wpf and design pattern, such as: Factory Method, Prototype, Chain of Command, Command, Memento,  Strategy, State",0,0,2023,2023,1,https://github.com/allmallino/OOP_CourseWork
Command,Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento,,0,0,2022,2022,1,https://github.com/ZaraBaghdasaryan/Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento
Command,-2.1-Implement-the-Command-Pattern,This assignment will challenge you to use your knowledge of design patterns to apply the Command Pattern to a code base.,0,0,2020,2020,1,https://github.com/samah37/-2.1-Implement-the-Command-Pattern
Command,design.patterns.hw.1.3.2.BehavioralPattern.Commander,,0,0,2021,2021,1,https://github.com/Rustam-A-A/design.patterns.hw.1.3.2.BehavioralPattern.Commander
Command,Bank_Design_Patterns,"Bank app where I had to implement Command, State and Decorator design patterns during the lectures",0,0,2016,2016,1,https://github.com/wojtasfi/Bank_Design_Patterns
Command,Design_Patterns,"Practical laboratory class focused on the implementation and testing of software using design patterns, covering solutions such as Command, Factory Method, and Observer.",0,0,2023,2024,1,https://github.com/LuisMeloArruda/Design_Patterns
Command,Design-Patterns,"Introduction to design patterns: Strategy, Observer, Factory, Singleton, Command, Adapter, Faade, Template Method, Iterator, Composite, State, Proxy. Object Oriented design principles, Java/UML. ",0,0,2019,2021,1,https://github.com/YifengQ/Design-Patterns
Command,alura_design_patterns,"This PHP project represents my studies on design patterns such as Command, Observer, State, Strategy, Iterator, and others",0,0,2025,2025,1,https://github.com/pedro162/alura_design_patterns
Command,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Command,java-design-patterns,"Design Patterns em Java I: boas práticas de programação. Strategy, Chain of Responsibility, Template Method, State, Command, Observer",0,0,2023,2023,1,https://github.com/Pybony/java-design-patterns
Command,Design-Patterns," The GitHub repository consists of separate implementations of various design patterns, including Adapter, Command, Decorator, Facade, Observer, Prototype, Proxy, Singleton, and Strategy, in Java.",0,0,2021,2023,1,https://github.com/mozammalrahat/Design-Patterns
Command,Go_Command_Pattern,"A Go project demonstrating the Command pattern by encapsulating requests as objects. This repository showcases best practices in design patterns, command execution, and unit testing.",0,0,2024,2024,1,https://github.com/arthurfp/Go_Command_Pattern
Command,java-command-line-project,"This project introduced a command-line file manager with manipulation features, implementing design patterns for a flexible structure and unit tests to ensure reliability.",0,0,2024,2024,1,https://github.com/2saad2/java-command-line-project
Command,Game-Design-Patterns,"Developed a 3 level game using PhaserJS to get hands on State, Command, factory, Proxy and Decorator design pattern.",0,0,2018,2018,6,https://github.com/sricheta92/Game-Design-Patterns
Command,java-design-patterns,"This repo includes SOLID principles and Design Pattern Implementations with Java (Strategy, Observer, Command, Factory, Singleton, Decorator Patterns, etc.) ",0,0,2020,2022,1,https://github.com/muhammedsaidkaya/java-design-patterns
Command,JavaDesignPatterns,"Multiple examples of design patterns  : Adapter, Command, Composite, Decorator, State, Fabric, AbstractFabric, FlyWeigth, Mediator, Observer, Prototype, Singleton, Strategy, TemplateMethod",0,0,2022,2022,1,https://github.com/leo77777/JavaDesignPatterns
Command,HomeAutomation,Project which is used to automate the various devices and uses command design pattern,0,0,2017,2017,0,https://github.com/vinodss33/HomeAutomation
Command,Java-TicTacToe,"Java command line program to play Tic Tac Toe online, using ThreadPool design pattern",0,0,2018,2018,1,https://github.com/MCozhusheck/Java-TicTacToe
Command,File-upload-nestjs,Upload file in NestJS and MongoDB with Command Query Responsibility Segregation (CQRS) design pattern,0,0,2020,2020,1,https://github.com/itsmohsenjalali/File-upload-nestjs
Command,design-patterns,"The repository covers fundamental design patterns such as the Factory Pattern, Singleton Pattern, Facade Pattern, Adapter Pattern, Strategy Pattern, Command Pattern, and Observer Pattern, among others.",0,0,2024,2024,1,https://github.com/Pathum-Vimukthi/design-patterns
Command,Tic-Tac-Toe,First project created to understand the design patterns and run game using command line,0,0,2024,2024,1,https://github.com/ChaitanyaNadagouda/Tic-Tac-Toe
Command,Java-Desktop-Text-Editor-App-With-Design-Patterns,"Java desktop text editor app that created with command, factory and builder design patterns.",0,0,2023,2023,1,https://github.com/umutulasdemir/Java-Desktop-Text-Editor-App-With-Design-Patterns
Command,ChatServer,Chat Server created with Socket Programming with game design pattern. Can implement different commands.,0,0,2017,2017,1,https://github.com/RikLakhe/ChatServer
Command,guesthouse,A simple application to highlight the usage of Template Method and Command design patterns.,0,0,2014,2014,1,https://github.com/lowerlight/guesthouse
Command,expression-calculator-stack,Stack implementation of an expression calculator using the Command and Abstract Factory design patterns.,0,0,2019,2020,2,https://github.com/peymathi/expression-calculator-stack
Command,Vending,Command-line vending machine project to demonstrate MVC design pattern with full unit testing.,0,0,2022,2022,1,https://github.com/JCDixon/Vending
Command,tdd-mars-rover-kata,"A TDD Exercise with  .NET8, xUnit, FluentAssertion.🛰️Design Patterns: Factory Method, State, Command",0,0,2023,2023,1,https://github.com/nicolasrouge/tdd-mars-rover-kata
Command,Exercise_Db,Prototype code : showing C++ 11/14/17 and Dependency Injection &  Command Design pattern usage,0,0,2022,2022,1,https://github.com/jimdealuk/Exercise_Db
Command,TextEditor-WithDesignPatterns,"Simple Java Text Editor. Command, Factory and Strategy Pattern were applied as the Design Pattern. UI was designed with Swing. Undo operation is provided with the Command pattern.",0,0,2021,2021,1,https://github.com/kerem-erkinsoy/TextEditor-WithDesignPatterns
Command,mini-interpretrr,a mini interpreter that interprets 3 commands using java and object oriented design patterns,0,0,2023,2023,1,https://github.com/Noufel17/mini-interpretrr
Command,DesignPaternGangOf4,C# command line solution to implement the basics design Patterns of Gang Of 4,0,0,2021,2022,1,https://github.com/clemalex06/DesignPaternGangOf4
Command,crommand,Crommand is an implementation of the Command design pattern for the Crystal programing language.,0,0,2021,2023,1,https://github.com/free-beer/crommand
Command,spring-boot-sample-architecture,Sample Architecture for Spring Boot based on CQRS - Command Query Responsibility Segregation Design Pattern,0,0,2024,2024,3,https://github.com/Bug-Slicers/spring-boot-sample-architecture
Command,Design-Patterns,An introduction of patterns using simple examples (in construction),0,0,2018,2023,1,https://github.com/yichunzhao/Design-Patterns
Command,GED-bonusChallenge,A bonus challenge for Game Engine Design to show usage of command design pattern,0,0,2022,2023,1,https://github.com/Hawtori/GED-bonusChallenge
Command,designpatterns1,Estudos sobre Design Patterns 1 Strategy - Chain of Responsability - Template Method - State - Command - Observer,0,0,2023,2023,1,https://github.com/mateuscbarbosa/designpatterns1
Command,TicTacToe_Cpp,"Command Line Application for Tic Tac Toe, Implementing Strategy, Builder and Factory Design Patterns",0,0,2023,2023,1,https://github.com/naveenmittal04/TicTacToe_Cpp
Command,BankAccount,A small project to make third year students work on the Command design pattern,0,0,2023,2023,1,https://github.com/vincentcourtois/BankAccount
Command,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Command,Design-Patterns-Java-I,"Curso realizado na plataforma alura,  padrões apreendidos strategy, chain of responsibility, template Method, state, command, Observer",0,0,2023,2023,1,https://github.com/Marcelo-F/Design-Patterns-Java-I
Command,Process-modelling-with-using-5-design-patterns,It includes :  Observer-Adapter-Singleton-Factory-Command  patterns,0,0,2023,2023,1,https://github.com/merco1/Process-modelling-with-using-5-design-patterns
Command,Calculator,"This uses three design patterns that are factory pattern, command pattern, and something else",0,0,2017,2017,1,https://github.com/Inviernos/Calculator
Command,js-design-pattern,"implementation of the most common design  patterns e.g SOLID , singleton , command pattern creationpattern",0,0,2021,2021,1,https://github.com/abdelrahman-gad/js-design-pattern
Command,design-patterns-library3,"Aula sobre Design Patterns: Projeto com Fluent interfaces, Command pattern, Double dispatch pattern, Facade e Flyweight",0,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library3
Command,Design-Patterns-PHP,"Sistema desenvolvido para aplicar os conceitos de padrões de projetos comportamentais (Strategy, Chain Of Responsibbility, Template Method, State, Command, Observer & Iterator)",0,0,2021,2021,1,https://github.com/RenatoAugustoFS/Design-Patterns-PHP
Command,Connect-Five-Game,"This project in Java implements 5 design patterns in order to replicate the Connect Five Game. The Design Patterns used are Factory, Command, Singleton, Strategy and Observer.",0,0,2024,2024,1,https://github.com/915-Nechita-Daniel-Ionut/Connect-Five-Game
Command,mini_compilator_using_design_patterns,Un mini compilateur qui est utilisé pour intérpréter deux commandes (let et print).,0,0,2023,2023,1,https://github.com/Lamine-br/mini_compilator_using_design_patterns
Command,CommandDesignPattern,Simple program to illustrate implementation and benefits of Command Design pattern. Client interacts with just one interface and that is enough to handle all operation and also other devices if implements the same interface. ,0,1,2018,2018,2,https://github.com/amitashanand/CommandDesignPattern
Command,CommandDesign,"Adopted from Derek Banas' tutorial. ""The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over""",0,0,2019,2019,1,https://github.com/Nunez350/CommandDesign
Command,MusicPlayer-ObjectModelling,In this project we explored various Design patterns and SOLID principles. This project includes two individual Projects which uses Command Design pattern and other patterns as well. ,0,0,2024,2024,0,https://github.com/sairam-82/MusicPlayer-ObjectModelling
Command,Lewis.command-design-pattern,"A command design pattern is a behavioral design pattern in which an object is used to represent and encapsulate a request. This enables the request to be handled in a standard way, without the need for the sender of the request to know the receiver or the details of how the request is handled.",0,0,2022,2022,1,https://github.com/pavansaivishnuteja/Lewis.command-design-pattern
Command,Command-Pattern,"The Command Pattern is a behavioral design pattern that is used to encapsulate a request as an object, thereby allowing parameterization of clients with queues, requests, and operations. ",0,0,2024,2024,2,https://github.com/H4nzo/Command-Pattern
Command,Command-Pattern,"You probably have heard of behavioral patterns by now. Behavioral patterns are concerned about the interaction of objects. While there are about 12 design patterns that belong to behavioral patterns, the command pattern takes a special place as it is used more often than other design patterns. The purpose of the command pattern is to decouple the logic between command and its consumers.",0,0,2021,2021,1,https://github.com/Dynotum/Command-Pattern
Command,Training-Session-Design-Patterns,The goal of the project is to show an example implementation of the command and observer design patterns.,0,0,2024,2024,1,https://github.com/creed28/Training-Session-Design-Patterns
Command,TurtleGraphicsDesignPatterns,"Java program to implement turtle graphics making use of design patterns - interpreter pattern, visitor pattern and command pattern",0,0,2015,2015,1,https://github.com/LokeshSreekanta/TurtleGraphicsDesignPatterns
Command,design_patterns_demo,This is a repository containing demonstration project for university classes. It includes code snippets and diagrams showing idea behind Strategy and Command design patterns.,0,0,2024,2024,1,https://github.com/Pawlicho/design_patterns_demo
Command,libapp,"Project developed for the Design Patterns course. The implementation demonstrates the use of various design patterns and principles, including:  Factory Method, MVC, Command Pattern and Single Responsibility Principle. ",0,0,2024,2024,0,https://github.com/JuicySzejek/libapp
Command,loja.design.patterns,"Estudos junto ao material da Alura sobre o uso e a implementação de design patterns comportamentais : Strategy, Chain of Responsability, Template Method, State, Command, Observer",0,0,2021,2021,1,https://github.com/laismukaizup/loja.design.patterns
Command,project-patterns," design patterns like these: Abstract Factory, Decorator, Builder, Command, Prototype, Iterator, Bridge, Observer, Composite, Strategy",0,0,2019,2020,1,https://github.com/jhonatheberson/project-patterns
Command,UMLDrawingApp,A simple UML Drawing App. This App using the command and factory software design patterns.,0,0,2017,2017,1,https://github.com/Ryan-Garner/UMLDrawingApp
Command,Persistent-Framework,"Design of Persistent framework using Controller, Bridge, Command, Template method and Factory method design patterns.",0,0,2016,2017,0,https://github.com/abhishekdhotre/Persistent-Framework
Command,calulator,"Simple calculator made using object oriented design patterns including the Observer, Command, and Strategy patterns.",0,0,2013,2013,1,https://github.com/efgonzalez1/calulator
Command,3DesignPatternPrograms,"3 demo programs written in Java to demonstrate the command, observer and state design patterns.",0,0,2019,2019,1,https://github.com/GustyWinds24/3DesignPatternPrograms
Command,Design-Patterns,"Explore key software design patterns including Inheritance, Singleton, Adapter, Composite, Observer, Command, State, Decorator, Strategy, Iterator, and MVC. These patterns offer blueprints to solve common design challenges, focusing on object and class communication, not just implementation. ",0,0,2022,2024,1,https://github.com/radubauzh/Design-Patterns
Command,Email-Client,A Java-based command-line email client developed to practice OOP concepts and design patterns.,0,0,2023,2025,1,https://github.com/nilupul20/Email-Client
Command,design-patterns-term-project,"A Java command-line program exploring factory, singleton, strategy, observer, composite, and façade design patterns in a university department use-case.",0,0,2022,2022,1,https://github.com/hneels/design-patterns-term-project
Command,SimpleNotePad,Refactored SimpleNotePad application. Command design pattern was used to dynamically attach behavior to GUI components.,0,0,2019,2019,1,https://github.com/jerryzhu94/SimpleNotePad
Command,CmdLineParser,Options parser for command line. University exercises about Design Pattern that respects all SOLID aspects.,0,0,2022,2023,1,https://github.com/Jsisie/CmdLineParser
Command,TreeCommand,C'est un programme qui après exécution va lister le contenu d'un dossier comme le fait la commande tree. Le code sera fait en utilisant le design pattern composite,0,0,2023,2023,1,https://github.com/Aw2001/TreeCommand
Command,Calculator_1_Using_Design_Patterns,This is a C++ program that uses the command pattern and factory pattern (Works but has a few bugs),0,0,2019,2019,1,https://github.com/hldnwrght/Calculator_1_Using_Design_Patterns
Command,Starbucks-Design-Patterns,"Extension of command line based Starbucks Mobile App Simulator to a web based application using ReactJS, Node.js and MongoDB and hosted the application on AWS EC2 with ELB(Elastic Load Balancer)",0,0,2019,2020,0,https://github.com/inehalsharma/Starbucks-Design-Patterns
Command,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Command,EngAppPatterns,"Second version of EngApp aplication - this time with using design patterns: Singleton, Command, Strategy and Facade.",0,0,2016,2016,1,https://github.com/raczkowskir/EngAppPatterns
Command,breakout,"A game in which the user controlls the paddle to hit the bricks. This is implemented using observer design patterns, composite design patterns, strategy patterns, command patterns and MVC patterns. ",0,0,2018,2018,1,https://github.com/AdithyaHS/breakout
Command,project_0,Command line car dealership inventory app to demonstrate JDBC interaction with postgres and DAO design pattern,0,0,2020,2020,1,https://github.com/mkhartmDev/project_0
Command,design-pattern-demo,A command line CRUD Java program that demonstrated all the standard design patterns I have learned,0,0,2023,2023,1,https://github.com/kevintianjh/design-pattern-demo
Command,adventure_land,Built on core java. A command line based fun game using different design patterns in java.,0,0,2019,2019,0,https://github.com/amit2766/adventure_land
Command,rover, C++ interface allowing to program a rover with commands and sensor using the builder design pattern,0,0,2022,2022,1,https://github.com/PBundyra/rover
Command,RoboticSquade,It is a project using command design pattern to move around a rover over the planet,0,0,2019,2019,0,https://github.com/wubet/RoboticSquade
Command,Fast_Food_Restaurant_API,"A flexible API opened for modification. Used design patterns like Abstract Fabric, Decorator, Command and Facade.",0,0,2023,2024,1,https://github.com/Kuba2903/Fast_Food_Restaurant_API
Command,design-patterns-tree-based-infix-to-postfix-calculator,"Tree based infix to postfix calculator demonstrating the Command, Abstract Factory, Wrapper Facade software design patterns",0,0,2022,2022,1,https://github.com/winkingcatstudios/design-patterns-tree-based-infix-to-postfix-calculator
Command,RemoteControlGarageDoorAndLight,A remote control that operates a garage door and a light using the Command design pattern.,0,0,2021,2021,1,https://github.com/jbaraniuk/RemoteControlGarageDoorAndLight
Command,Kill_Doctor_Lucky_Game,"Designed turn-based RPG game, implementing OOP, MVC, and SOLID principles, deploying design patterns (command, façade). ",0,0,2024,2024,1,https://github.com/parikhmili9/Kill_Doctor_Lucky_Game
Command,TEnmo-Venmo-Mimic-Command-Line-Application,"TEnmo - Venmo mimic application - Created a RESTful API server using SQL and the MVC design pattern, and used OOP in Java to write a command line application. ",0,0,2022,2022,1,https://github.com/mxwllsmth/TEnmo-Venmo-Mimic-Command-Line-Application
Command,TheMediaEditor,"A MediaEditor (Images and possibly Videos) focused on using the MVC, Command and Observer design patterns ",0,1,2020,2020,1,https://github.com/FlipDD/TheMediaEditor
Command,MMLS-System,"Creates the music library application using Command, Strategy, and Composite design patterns for each different purpose.",0,0,2020,2020,1,https://github.com/dc9865/MMLS-System
Command,DesignPattern-Command,"This C# implementation demonstrates the Command design pattern, encapsulating requests as objects for flexible command execution. It showcases how to decouple the sender from the receiver, promoting clean and maintainable code.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Command
Command,APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS,"Irei estar mostrando na pratica 6 designs patterns na pratica. (Strategy, Chain of responsibility, Template method, State, Command, Observer)",0,0,2021,2021,0,https://github.com/guimeiradev/APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS
Command,design-patterns-snake-game,"Snake Game using MVC for separation of concerns, Observer for game state updates, Singleton for single game instance, State for game status management, Strategy for input handling, and Command for encapsulating actions.",0,0,2024,2024,0,https://github.com/jonnrib/design-patterns-snake-game
Command,Shell-simulator-using-Design-Patterns-OOP-Java-,A shell simulator to similar to command prompt in Windows coded in JAVA using vvarious Design Patterns,0,0,2017,2017,1,https://github.com/pavanjhaveri/Shell-simulator-using-Design-Patterns-OOP-Java-
Command,ParachutistsGame,A game made in the architecture of Model-View-Controller with Command and Observable/Observer design patterns.,0,0,2020,2020,1,https://github.com/omerDekel/ParachutistsGame
Command,SpellingBeeDistSys,This App is using design patterns to implement a game of spelling bee on the command line.,0,0,2021,2022,1,https://github.com/RomainClem/SpellingBeeDistSys
Command,Java-Text-Editor,"Using the Command and Memento design patterns, this project provides a simple text editor coded in Java.",0,0,2022,2022,1,https://github.com/JohannTtGit/Java-Text-Editor
Command,Photo-Album,"Java Photoalbum using OOP concepts and design patterns such as MVC Model, Command Pattern, and Factory Pattern",0,0,2023,2023,1,https://github.com/cwcoogan/Photo-Album
Command,straights,A school project focused on implementing OOP principles and design patterns in a command-line Straights game.,0,0,2022,2022,1,https://github.com/logandarby/straights
Command,CaloteiroWeb,"Banco: MySQL  , Servidor : Tomcat 7.0, Design Patterns usados (Factory Method) , (MVC) , (Command Controller). Segurança usando Filtros. ",0,0,2016,2016,1,https://github.com/isaiaslima2016/CaloteiroWeb
Command,TicTacToe,"A command line application, built on java. Followed best practices on design patterns, principles and java concepts.",0,0,2023,2023,1,https://github.com/nakulsudhakar035/TicTacToe
Command,design_patterns_project,"This repository demonstrates the implementation of Factory Pattern and Command Pattern in a real-world scenario. The project models a Stationery Shop where customers can add items to a shopping cart, view the cart contents, and undo their last actions. Both design patterns are integrated to create a scalable and maintainable architecture.",0,0,2024,2024,1,https://github.com/popabrenda/design_patterns_project
Command,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Command,Hotel-reservation-System,"Built and developed a Hotel Reservation System using core Object Oriented design patterns. Used Command, Factory/Abstract and Template design patterns that worked well with my implementation of Front controller and Authorization process",0,0,2022,2022,1,https://github.com/bojjamru/Hotel-reservation-System
Command,java-design-patterns-I-loja,Repositório do curso Jornada do Conhecimento de Back-End Java (Nível Intermediário) - Design Patterns em Java I: boas práticas de programação da plataforma Alura.,0,0,2023,2024,1,https://github.com/Robson-Teixeira/java-design-patterns-I-loja
Command,Assignment-7-Command,Develop a C# console application using the Command Pattern to simulate controlling IoT devices. This assignment focuses on applying design patterns in a practical scenario to enhance your understanding of object-oriented design and C# programming.,0,0,2023,2023,1,https://github.com/AYZBTR/Assignment-7-Command
Command,Design-Patterns-In-Java,This shows 10 types of Design patterns with some projects to execute them. They are as follows: 1. Singleton Pattern 2. Factory Pattern 3. Decorator Pattern 4. Observer Pattern  5. Strategy Pattern 6. Adapter Pattern 7. Facade Pattern 8. Composite Pattern 9. Command Pattern 10. Interpreter Pattern,0,0,2023,2023,1,https://github.com/acshyguy/Design-Patterns-In-Java
Command,CQRS__Kafka,This is a Microservice application using CQRS (Command Query Responsibility Segregation ) Design Pattern with Spring boot & Apache Kafka.,0,0,2023,2024,1,https://github.com/miaoubich/CQRS__Kafka
Command,java_paint_clean_code,"Java Swing paint application demonstrating principles of Clean Code and Design Patterns (MVC, Adapter, Command, Observer, Strategy, Prototype))",0,0,2022,2023,2,https://github.com/NatalijaGajic/java_paint_clean_code
Command,multithreaded-json-database-server,"A multithreaded JSON database server and client implemented using CompletableFutures, ReentrantReadWriteLocks, Gson, JCommander and the Command Design pattern",0,0,2023,2023,1,https://github.com/MJANKOWSKI132/multithreaded-json-database-server
Command,COMPSCI701-a03-submission,"Creating maintainable software Kalah assignment. Adds load, save, new game functionality with Command and Memento design pattern use.",0,0,2022,2022,1,https://github.com/KaylaG1510/COMPSCI701-a03-submission
Command,calculator,"Calculator app. Features:  all basic mathematical operations (including expressions), calculation history, theme change,  ""Command"" design pattern, e2e tests.",0,0,2022,2023,1,https://github.com/Sob96/calculator
Command,Reengineering,"Paint application. Design patterns used in the project - MVC, Adapter, Command. Functionality: Undo/Redo, Java Logging and Serialization.",0,0,2018,2018,1,https://github.com/DaniloBojovic/Reengineering
Command,jpaprojections,"Example project demonstrating the use of a Hibernate Interceptor and Envers, DTO Projection, Observer and Command design patterns",0,0,2018,2018,0,https://github.com/damianmcdonald/jpaprojections
Command,Facebook_app_Design_Pattern_CS,"Facebook app using different design patterns (Singelton, Facade, Proxy, Observer, Iterator, Strategy, Command) and working with Facebook API ",0,0,2019,2019,1,https://github.com/itsikh100/Facebook_app_Design_Pattern_CS
Command,fruit-ninja,"May 7, 2020, simulation for fruit ninja game, using OOP and Design Patterns (Singleton, Factory, Observer, Command, State)",0,0,2024,2024,1,https://github.com/alexanderkamal/fruit-ninja
Command,Drawing-Figures-using-Design-Patterns,"A standalone desktop application made using Java Swing UI to create figures like circles and rectangles on canvas. The project demonstrates the use of different design patterns like  Controller, Expert, Observer, Adaptor, Iterator, Composite and Command.",0,0,2020,2020,1,https://github.com/parth2706/Drawing-Figures-using-Design-Patterns
Command,TUIPaint,"A text user interface game which was coded by C++. Implementing Singleton, Facade, Command, Observer, MVC design patterns ",0,0,2019,2019,1,https://github.com/Luke97030/TUIPaint
Command,DesignPatternFinalAssignment,"Design Pattern Assignment implemented with strategy,singleton,bridge,mediator,observer,abstract factory,command,composite,chain of responsibility patterns",0,0,2019,2019,1,https://github.com/fahmidf3053/DesignPatternFinalAssignment
Command,Drawing,A simple script to demonstrate software design patterns. It records commands and keeps track of an imaginary scene.,0,0,2022,2022,1,https://github.com/lkdbns/Drawing
Command,RestfulApi,Other Rest API using ASP web API with another design pattern based on Handlers and Commands ad Querries,0,0,2024,2024,0,https://github.com/Ilevander/RestfulApi
Command,RSS-feed-interface,"Human-Machine Interface course final project. The program uses the following design patterns: MVC, Observer, Command, Composite & Template.",0,0,2024,2024,1,https://github.com/mchokre/RSS-feed-interface
Command,photo-album,"About Java Photoalbum using OOP concepts and design patterns such as MVC Model, Command Pattern, and Factory Pattern",0,0,2025,2025,1,https://github.com/jtpwang/photo-album
Command,CrudJavaWeb,"This project is a users crud, it was made with java web. I also used SOLID principles and some design patterns to do it. The design patterns I used were singleton, command and factory.",0,0,2021,2021,1,https://github.com/leandropalexandregmailcom/CrudJavaWeb
Command,design-patterns-SOEN-6441,"A group project for Concordia University's SOEN 6441 -- a CLI Game (Risk) which implements quite a few design patterns such as the Adapter, Observer, Builder, Strategy and Command pattern. It also follows the best practices for programming such as using unit testing with JUnit, documentation with JavaDoc, generics and robust exception handling.",0,0,2020,2020,5,https://github.com/krsnvijay/design-patterns-SOEN-6441
Command,Angry_Bird_Recreation,"Implemented a computer game using Greenfoot on java platform and applied different design patterns in order to increase difficulty levels. Added 5 of the total 23 Design Patterns including State, Strategy, Command, Template and Observer.",0,0,2020,2021,1,https://github.com/heli-rawal/Angry_Bird_Recreation
Command,Notebook,A command line application to create and manage notes inside a notebook. It's a lightweight version of the command line design pattern,0,0,2023,2023,1,https://github.com/Faisallm/Notebook
Command,Movie-Theatre,Pretty basic C# application just testing out some design patterns and felt like making a quick command line program.,0,0,2024,2024,1,https://github.com/zapbra/Movie-Theatre
Command,CQRS-Implementation,The project implements the CQRS (Command Query Responsibility Segregation) microservice design pattern in the context of the product domain.,0,0,2024,2024,1,https://github.com/aatifansari/CQRS-Implementation
Command,TUIGomoku,"A text user interface Gomoku game which was coded by C++. Implementing Singleton, Facade, Command, Observer, MVC design patterns",0,0,2019,2019,1,https://github.com/Luke97030/TUIGomoku
Command,CQRS-design-pattern-kafka-spring,Core Command-Query Responsibility Segregation design pattern implementation with Apache Kafka for processing events and Java/Spring for microservices.,0,0,2023,2023,1,https://github.com/anilerc/CQRS-design-pattern-kafka-spring
Command,genetic-algorithm-project,"A genetic algorithm system for solving the travelling salesperson problem, using Singleton, Facade, and Chain of Command design patterns.",0,0,2025,2025,3,https://github.com/oceaan-pendharkar/genetic-algorithm-project
Command,shopping-cart,"This is a shopping cart application developed using Spring Boot, following the CQRS (Command Query Responsibility Segregation) design pattern. ",0,0,2024,2024,1,https://github.com/umiidi/shopping-cart
Command,Software-Design-Pattern,"Drawing tool by applying composite, state, command, observer, adapter, expert, controller, and iterator software design patterns using Java AWT.",0,0,2020,2020,1,https://github.com/khushboo520/Software-Design-Pattern
Command,design-pattern-1,"Com finalidade de conhecimento sobre design patterns nesse projeto pode ser encontrado: Chain of Responsability, Strategy, Command, Observer, State",0,0,2021,2022,1,https://github.com/yhann0695/design-pattern-1
Command,JavaChess,The classic game of Chess implementing the MVC design pattern with a textual view and a command-line controller,0,0,2021,2021,2,https://github.com/Sharwin24/JavaChess
Command,EI-MiniProject,"A simulation of a Mars Rover navigating a grid-based terrain using object-oriented principles and design patterns. The project implements movement commands, obstacle avoidance, and direction changes for the Rover, following key design patterns including Command, Composite, Singleton, Factory, and Observer.",0,0,2024,2024,1,https://github.com/SwethaVairamuthu/EI-MiniProject
Command,hockey_simulation,"Implemented a command line application using Agile principles, SOLID principles, Test Driven Development, Design patterns, and clean code standards. ",0,0,2021,2021,1,https://github.com/rashmiChandy/hockey_simulation
Command,product-command-service,"we will Implement CQRS Design pattern using Spring Boot & Kafka,CQRS stands for Command and Query Responsibility Segregation, a pattern that separates read and update operations for a data store. Implementing CQRS in your application can maximize its performance, scalability, and security.",0,0,2024,2024,1,https://github.com/cherni82hichem/product-command-service
Command,UnityCommand_UnityPackage,"UnityCommand is an editor implementation of the command design pattern where the command can be applied, and reverted. The command, once applied, is within that state until the revert is called to represent the initialization and deinitialization of the represented state.",0,0,2023,2025,1,https://github.com/Darkfafi/UnityCommand_UnityPackage
Command,-AntFarm-Simulation-using-Design-Patterns-,"The AntFarm Simulation System models ant colony behaviors using C++ and various design patterns, including Singleton, Factory, Builder, Decorator, and Mediator. It simulates activities such as foraging, building, and defending. The command-line interface (CLI) allows for interactive user engagement, creating an immersive simulation experience.",0,0,2024,2024,1,https://github.com/GhaziaArsh/-AntFarm-Simulation-using-Design-Patterns-
Command,knn-classifier,Machine learning algorithm (K Nearest Neighbors) on a TCP server in C++ with command design pattern and multi-threading capabilities.,0,0,2023,2024,2,https://github.com/aliktepl/knn-classifier
Command,SmartCityAutomation,"An application template that was used to practice different Software Design Patterns such as Observer, Singleton, Template, and Command patterns",0,0,2024,2024,1,https://github.com/MahradHosseini/SmartCityAutomation
Command,java_robotdesignpattern,This project was an attempt to concretely implement a command design pattern onto an earlier similar project with cleaner code.,0,0,2017,2017,2,https://github.com/tomdebee/java_robotdesignpattern
Command,MarsRover,"A loosely coupled, test-driven C# .NET solution to the (in)famous Mars Rover problem, using the Command Design Pattern",0,0,2019,2019,1,https://github.com/JoshuaD95/MarsRover
Command,ImageProccessor,"Full-featured image processing application in Java, incorporating both GUI and command line functionality using Model/View/Controller design pattern.",0,0,2023,2023,1,https://github.com/akash3116/ImageProccessor
Command,Arkanoid,"An arkanoid game in Unity2D, following Scrum Agile Development Model and using design patterns like Observer, Factory, Decorator, Command, Strategy.",0,1,2016,2016,0,https://github.com/ArpitKhare/Arkanoid
Command,Basic-Calculator-Software-Design,"Basic calculator using software design patterns such as abstract factory, composition, template method, visitor, builder, command, wrapper facade, and iterator",0,0,2018,2019,1,https://github.com/Pboruff/Basic-Calculator-Software-Design
Command,Hunger-Games-Simulator,"A multithreaded Java application that demonstrates the use of design patterns such as Observer, Singleton, Template, Strategy, State, and Command.",0,0,2023,2024,1,https://github.com/Hussain-Aziz/Hunger-Games-Simulator
Command,CQRS_ProductApi,"CQRS, Command Query Responsibility Segregation is a design pattern that separates the read and write operations of a data source.",0,0,2021,2021,0,https://github.com/amrrizk95/CQRS_ProductApi
Command,Number-To-Text-Using-Interpreter-Design-Pattern,This is a program made as project for Design Pattern subject. Created with C# language as CLI (Command-Line Interface),0,0,2023,2023,1,https://github.com/Ahgaff-level4/Number-To-Text-Using-Interpreter-Design-Pattern
Command,javaFX_Container_Management_System_Follow-Up_Project,"Extended the functionality of the original project using Collections (ArrayList, Set, Map), Lambda expressions and another Design Patterns (Observer, Command, Memento). ",0,0,2023,2023,1,https://github.com/HadarZimberg/javaFX_Container_Management_System_Follow-Up_Project
Command,national-park-campsite-registration,"Command line driven application that simulates a campsite reservation system for different parks utilizing Java, SQL, and the DAO design pattern.",0,0,2021,2021,1,https://github.com/samuelrothermel/national-park-campsite-registration
Command,reprodutor-de-musicas,"Reprodutor de músicas com interface gráfica (PyQt5) e Pygame, cujo objetivo foi aprender mais sobre OOP e o design pattern Command.",0,0,2022,2022,1,https://github.com/walexhenrique/reprodutor-de-musicas
Command,CadenaDeMandoJson,Stores code related to the chain of command design pattern practice for ingeniería de Software Avanzada (322) at Universidad de Málaga,0,0,2021,2021,1,https://github.com/m-padilla-uma/CadenaDeMandoJson
Command,gameOfLife,"An implementation of John Conway's classic game of life. Leverages several design patterns such as state, singleton, command, and observer",0,0,2024,2024,1,https://github.com/jacksonsanger/gameOfLife
Command,ECommerece,"An e-commerce API that utilizes nine design patterns: FACTORY METHOD, PROTOTYPE, BUILDER, PROXY, FACADE, ADAPTER, CHAIN OF RESPONSABILITY, MEDIATOR, COMMAND",0,0,2024,2024,1,https://github.com/MunMihai/ECommerece
Command,PseudoDatabase,"Dummy database that takes commands from user, interpret them and make operations on files. Created according to MVC software design pattern.",0,0,2020,2020,2,https://github.com/krzysztof-daniell/PseudoDatabase
Command,NAS-Project,"A Master/Slave architecture project in C++ language, including design patterns (e.g. factory, reactor, command, singleton and more) and network protocols.",0,0,2020,2020,1,https://github.com/AdiAlgrabli/NAS-Project
Command,Behavioral_Patterns_Implementation,"Console program that implements Command and Mediator, Behavioral Design patterns, done as part of a test in the Design course at ITCR.",0,0,2020,2021,2,https://github.com/JesusJimenezValverde/Behavioral_Patterns_Implementation
Command,spid,Software Engineering project; A command-line Java demo that demonstrates the Iterator design pattern using Spotify playlists as an iterable data structure,0,0,2025,2025,1,https://github.com/jasonamoore/spid
Command,Mock-Unix-Command-Shell,"Made in a group of 4, this program attempts to mock the Unix command shell by combining software design patterns (such as Iterator, Singleton, and Builder) and complex code to create a program that acts as a file management system whilst also providing functionality for nearly 20 Unix commands.",0,0,2019,2020,1,https://github.com/osmanamjad/Mock-Unix-Command-Shell
Command,MiniCAD,"A Java application which generates an image based on specific commands for geometric forms, using the Factory, Visitor and Singleton design patterns.",0,0,2018,2018,1,https://github.com/AntonescuAlexandru/MiniCAD
Command,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
Command,DrawList,Coding assignment for Object Oriented Principles to create a command line application that takes draw commands and saves them to a drawing list. Uses OOP design patterns.,0,0,2021,2021,1,https://github.com/maialarsen/DrawList
Command,cpp_projects,"OOP & Algorithms in C++  |  OOP - for course Basics of Object Oriented Design containing also design patterns: Abstract factory, Builder, Singleton, State, Command",0,0,2021,2023,1,https://github.com/JuliePrazakova/cpp_projects
Command,class-roster-app,"A command-line CRUD application to manage a roster of students. Implements the MVC design pattern. From the ""Job Ready Java"" book.",0,0,2021,2023,1,https://github.com/xaviervinicius/class-roster-app
Command,Flight-Simulator-Part-1,In this part we bulit a text interpeter which will be converted into flight simulator  control functions using the command design pattern,0,0,2018,2019,1,https://github.com/galsnir/Flight-Simulator-Part-1
Command,Fully_Functional_Notepad_Java,This is my Notepad / Text Editor design with GUI. I built undo operation in two ways. One of them Command Design Pattern,0,0,2021,2021,1,https://github.com/osmanGuler19/Fully_Functional_Notepad_Java
Command,handling-multiple-data-sources-in-laravel,"A simple demostration of handling multiple data providers in laravel along with docker, queues, design patterns. It handles data from different datasources, it stores that data in database and exports the data to external api, it uses laravel commands,queues, scheduler, design patterns.",0,0,2020,2020,0,https://github.com/mrcs7/handling-multiple-data-sources-in-laravel
Command,WebMarket,Group project for CSCI 338. Written in Java. Uses the Command Design Pattern to create a 'webmarket'. Includes tests for the main classes ,0,0,2018,2018,1,https://github.com/paul545/WebMarket
Command,Terminal_MVC_MiniProjects,A collection of small terminal-based MVC projects to practice and demonstrate the Model-View-Controller design pattern in a command-line environment.,0,0,2024,2024,1,https://github.com/SamEag1e/Terminal_MVC_MiniProjects
Command,Student-Grades-University-Assignment,"Small application made for an university assignment, that handles students, their assignment and grades, with some statistics and GUI, using Command Design Pattern",0,0,2024,2024,1,https://github.com/Allex3/Student-Grades-University-Assignment
Command,Product-Microservice,this Project is based on CQRS(Command Query Responsibility Segregation) with Event Sourcing design Pattern and used Eureka service registry to form server url,0,0,2024,2024,0,https://github.com/naresh580/Product-Microservice
Command,FacultyManager,"FacultyManager is a Java system for managing faculty members, including salary adjustments and input validation, utilizing object-oriented principles and the Command design pattern.",0,0,2024,2024,1,https://github.com/Shadowy-22/FacultyManager
Command,Mini-Editor,"Simulate a mini text editor behaviors (without GUI), by implementing Command, Memento and Observer design patterns in Java. All included functions have been tested.",0,0,2022,2022,2,https://github.com/dpadonou/Mini-Editor
Command,Calculator,"The purpose of this project was to build a calculator using design patterns. Specifically, the project utilized design patterns: the Composite Pattern, Visitor Pattern, Command Factory, and Builder Pattern. These patterns were implemented to create a calculator that is modular, easy to modify, and extensible.",0,0,2021,2023,1,https://github.com/medha-kul/Calculator
Command,final-advanced-ruby,"Jessi Febria's final project submission for ElectivesxGoAcademy Ruby Advanced class. Solving the problem, along with SOLID principle, Design pattern : Factory, Singleton, Adapter, Command",0,1,2021,2021,1,https://github.com/jessifebria/final-advanced-ruby
Command,RedoUndo,"String editing api that includes add, remove, bold, underline, undo and redo. This simple main app is built using Command and Memento design patterns",0,0,2018,2018,1,https://github.com/OferStempler/RedoUndo
Command,railway-traffic-system,"Command-line application for railway management, featuring real-time scheduling, ticketing with dynamic pricing, and infrastructure updates. Built using Java and advanced design patterns.",0,0,2025,2025,1,https://github.com/dskrlac274/railway-traffic-system
Command,NFC-Application,"I have created a NFC system at my university. My aim in my project is to design a university system using design patterns. I used a total of 6 design patterns in my Java project. These are composite, observer, singleton, command, iterator, and facade respectively.",0,0,2022,2022,1,https://github.com/berkinozturk/NFC-Application
Command,Boids,"An interactive Boids simulation inspired by Craig Reynolds paper, written in javascript using the p5.js library. Implemented through an MVC and command design pattern.",0,0,2021,2022,1,https://github.com/Nicolasara/Boids
Command,Tuning-Center,"Course project's web application of Tuning center. Includes: JavaEE(Servlet, JSP), ORM(Hibernate), HTML5, CSS3, JQuery, RequireJS, Design-patterns(Decorator, Singleton, DAO, Command, MVC)).",0,0,2018,2018,1,https://github.com/markovskypavel/Tuning-Center
Command,Chess-Project,"Implemented Game of Chess using multiple design patterns, allowing users to play the games both in a graphical interface and in a command-line interface.",0,0,2021,2021,1,https://github.com/Caroline-xu/Chess-Project
Command,Movie-Rental-Shop-Database,Program that manages the inventory of a movie rental shop using OOP in Python. The undo/redo functionalities were implemented using the Command design pattern.,0,0,2024,2024,2,https://github.com/saba-calin/Movie-Rental-Shop-Database
Command,R-Shell,"Constructed a Bash terminal using Command, Composite, Decorator, and Factory Design Patterns. Applied Execvp, Fork, Recursion, Stacks,and Trees to handle nested commands with precedence. Included Google Unit and Integration Testings",0,0,2020,2020,1,https://github.com/sevarbiter/R-Shell
Command,CS-5010-Program-Design-Paradigms,"In this course, we explore OOP concepts (info hiding, encapsulation, polymorphism), utilizing inheritance and composition for software reuse. We focus on OOD with UML and design patterns, highlighting unit testing. We apply design patterns (builder, command) and adhering to SOLID principles for modularity, scalability, and code readability.",0,0,2023,2023,1,https://github.com/jaavad/CS-5010-Program-Design-Paradigms
Command,PockerHand,"This is an example implementation of a Five Card Draw Poker Hand Evaluator, developed in a functional style using Java and applying the Command design pattern. ",0,0,2022,2024,0,https://github.com/da477/PockerHand
Command,e-commerce-application_low-level-design,"Designing an E-commerce Application. Handling payments, permissions, sercher etc are introduced. Add products functionalities are incorporated using command design pattern. Cart & Order manager are designed.",0,0,2024,2024,1,https://github.com/pradipdharam/e-commerce-application_low-level-design
Command,TP3-Analyse,"TP3 du cours d'analyse de systèmes (4e session). Le but étant de se familiariser avec des ""Design patterns"", j'ai fait un interpreteur de commandes.",0,0,2017,2023,1,https://github.com/SamuelVeloce/TP3-Analyse
Command,reversi_remake,Command-line remake of Reversi implemented using object-oriented programming techniques in C++. The game is built using the observer and model-view-controller design patterns.,0,0,2021,2021,1,https://github.com/Audreysin/reversi_remake
Command,game-dev-custom-project,"Custom game project showcasing the implementation of different software design patterns and data structures built in C++. This includes the state, composite, component, command and factory design patterns, as well as a graph/node data structure to represent the game world with different locations with adjacent location nodes.",0,0,2022,2023,1,https://github.com/jamesvovos/game-dev-custom-project
Command,JavaUnoGame,Uno game built with Java. Supports a command-line interface. Follows MVC design pattern. Also contains two modes of AI players for the user to play with.,0,0,2021,2021,1,https://github.com/Austin-Li-1123/JavaUnoGame
Command,Student-Managing-App,App in Java that stores databases of students and courses and provides various functionalities in the command line. Used design patterns and more advanced concepts of Java.,0,0,2021,2021,2,https://github.com/GabrielOprea/Student-Managing-App
Command,Brainfuck-Compiler,A compiler of the Brainfuck language made in object-oriented style for more flexibility. Used the Command and Factory Method design patterns. Made the proper unit tests.,0,0,2019,2019,1,https://github.com/TheMasterVlad/Brainfuck-Compiler
Command,Encryption-Decryption,Java application that uses Strategy Design Pattern to implement Encryption/Decryption of messages. Determines method through command line arguments and read/writes to file or standard output,0,0,2020,2020,1,https://github.com/akhan445/Encryption-Decryption
Command,myBand5000,"implementation of ArrayList and HashMap for class band. read and write to bin files with stream. and gui interface for client , using command design pattern and singelton",0,0,2018,2018,1,https://github.com/TalPeretz94/myBand5000
Command,cashier,This is a simple cashier function where you can scan any item and display the total price. A couple of Design Patterns were used: Command and Composite.,0,0,2020,2023,1,https://github.com/armando-palace/cashier
Command,funcionarios-java-web,"Aplicativo web de gerenciamento de funcionários com recursos para Criar, Visualizar, Atualizar, Remover, Upload de imagem e utilizando DataTables Server-side processing. Aplicando Design Patterns Front Controller, Command e Singleton",0,0,2021,2021,1,https://github.com/adevecchi/funcionarios-java-web
Command,csci363_priciples_of_software_design_calculator,"This was the final product from CSCI363 (ECE495) Principles of Software Design at Indiana University - Purdue University Indianapolis. The goal of this project was to create a command line calculator using various object-oriented design patterns from Design Patterns: Elements of Reusable Object-Oriented Software by Gamma, Helm, Johnson, and Vlissides. ",0,0,2020,2020,1,https://github.com/babennettdev/csci363_priciples_of_software_design_calculator
Command,SuperMarket-project---Advanced-OOP---Java,"A simple JavaFX program for managing the cashier's office, including managing products and customer subscribers. The main focus was on design patterns, binary files, maps, and threads. The program had to be managed properly using for each action a Command design pattern, as well as Observer, Memento, etc. Enjoy!",0,0,2021,2023,1,https://github.com/omer332/SuperMarket-project---Advanced-OOP---Java
Command,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Command,Smart-system-of-stream-recommendations,"The project aimed to apply some classic design patterns such as: Singleton, Iterator, Observer and Command. I tried to apply the SOLID principles as well as I could.",0,0,2024,2024,1,https://github.com/mihaidragos3010/Smart-system-of-stream-recommendations
Command,Angry_Flappy_Bird,"Implemented a computer game using Greenfoot on java platform and applied different design patterns in order to increase difficulty levels. Added 5 of the total 23 Design Patterns including State, Strategy, Command, Template and Observer. Uploaded the video on YouTube so as to demonstrate the whole setup and demo.: https://youtu.be/6eKw4QWndFA",0,0,2018,2019,1,https://github.com/Harshrajsinh96/Angry_Flappy_Bird
Command,cqrs,A simple Java-based prototype demonstrating the CQRS (Command Query Responsibility Segregation) design pattern. This project uses Maven for dependency management and showcases a basic User Management System with clearly separated command and query responsibilities.,0,0,2025,2025,1,https://github.com/NehaGour1108/cqrs
Command,FileSystem,This repository contains a straightforward implementation of a file system program that performs various commands. The program is designed using common design patterns to enhance code organization and maintainability. ,0,0,2023,2023,1,https://github.com/tina2042/FileSystem
Command,EducationalInitiatives-EngineeringAssignment,"A Java project implementing a Mars Rover simulation with design patterns (Command, Composite) and focusing on OOP principles, SOLID design, and code quality for an Educational Initiatives coding assignment.",0,0,2024,2024,1,https://github.com/HARSHMISHRA-521/EducationalInitiatives-EngineeringAssignment
Command,Chat-Server,This is a command-line-interface based protocol induced chat server and client (based on java).  It involves the usage of factory design pattern to create and run protocols.,0,0,2020,2020,1,https://github.com/AishPadmanabha/Chat-Server
Command,Packaging-Of-Laravel,"this an edited version of laravel framework, which helps developers to use MVC design pattern in they own framework by providing some pieces of commands for creating separate packages",0,0,2017,2017,1,https://github.com/PShadowClone/Packaging-Of-Laravel
Command,2D-App,"A 2d drawing application built in Java. The application was built with MVC concepts in mind. Implemented in the application are command, observer, strategy, adapter and prototype design patterns.",0,0,2021,2021,1,https://github.com/MarkoMihajlovIT51-2017/2D-App
Command,Jprint,Build an ''MS Paint'' like application in Java.                       Use Design Pattern: 1.Command Pattern; 2.Strategy Pattern; 3.Null Object pattern; 4.ObserverPattern; 5.Decorator Pattern; 6.Singleton pattern;,0,0,2020,2020,1,https://github.com/yehboom/Jprint
Command,SAL-Interpreter-CPP,"SAL - Simple Assembly Language Interpreter that implements command software design pattern. Program written in C++ to interpret SAL instructions and simulate hardware-wise program execution with program counter, registers, etc.",0,0,2018,2018,1,https://github.com/michalbochnak/SAL-Interpreter-CPP
Command,Freecell-Solitaire,A string based UI for a freecell solitaire game in Java using the Model View Controller and Command design patterns. Allows the user to make single or multi-card movements.,0,0,2023,2023,1,https://github.com/steveasthana/Freecell-Solitaire
Command,robotoy,"The application is a simulation of a toy robot moving on a square tabletop.  It is an example of a well tested, object-oriented design, employing the command design pattern.",0,0,2017,2021,1,https://github.com/dexgo-dev/robotoy
Command,Design-Pattern-Back-End,"An application which allow the client to command a pizza. This application is built using four design patterns which are Observer pattern, Adapter pattern, Abstract Factory pattern and Dependency Injection.",0,0,2022,2022,1,https://github.com/AmineLhb/Design-Pattern-Back-End
Command,Image-Processor,"An image editing application with the ability to load, filter and edit, and save an image. Utilizes several OOD design principles including Model, View, Controller, and the command design pattern.",0,0,2022,2022,1,https://github.com/neetidesai/Image-Processor
Command,File-System-And-Terminal-Using-OOP,"A simulated file system and terminal built in C++ using object oriented principles and design patterns that allow users to add, edit, rename, display, & delete public and password protected files using command line commands built from scratch. ",0,0,2022,2021,1,https://github.com/jpsturgell/File-System-And-Terminal-Using-OOP
Command,ImgExp,"ImgExp is a simple .net 4.0 cmd line app for image manipulation , easely extensible to your own image processing needs by using extension design patterns like factory and command Pattern",0,0,2017,2017,1,https://github.com/fsoteras/ImgExp
Command,Midterm_Calc_Project," The midterm project involves creating an advanced Python calculator application that emphasizes  development, including clean code, design patterns, logging, environment-based configuration, Pandas data handling, and a command-line REPL interface.",0,0,2024,2024,1,https://github.com/nisha2110/Midterm_Calc_Project
Command,Midterm_project_Calc,"The midterm project involves creating an advanced Python calculator application that emphasizes development, including clean code, design patterns, logging, environment-based configuration, Pandas data handling, and a command-line REPL interface.",0,0,2024,2024,1,https://github.com/nisha2110/Midterm_project_Calc
Command,E-Banking-Application,"This project is a Java-based program, and was written using OOP concepts and Design Patterns. It implements the specific algorithms and the basic commands used in an E-Banking Application.",0,0,2024,2024,1,https://github.com/RazvanSerb/E-Banking-Application
Command,SmartCity-ApPost,"A web application for managing smart parking that utilizes the AStar algorithm to suggest parking spots along a chosen route. Integration of design patterns such as Chain of Responsibility, Strategy, MVC, and Command for a scalable and modular system.",0,0,2023,2024,2,https://github.com/vincenzobucciero/SmartCity-ApPost
Command,Undoable-Battle,Program written in C++ for my Data Structures and Algorithms course. Implements a Stack ADT as well as command design pattern to create a battle simulator with the ability to undo actions.,0,0,2022,2022,1,https://github.com/mshea910/Undoable-Battle
Command,MavAppoint,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust.  Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/aishiyer18/MavAppoint
Command,MavAdvisingSystem,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust. Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/gurleenkaur793/MavAdvisingSystem
Command,trivia-game,"This project is a single-player true or false trivia game developed using a Java Command Line Application. The game serves as an exercise in implementing six different design patterns: Singleton and Factory (creational patterns), Decorator and Facade (structural patterns), and Command and Observer (behavioral patterns).",0,0,2023,2024,1,https://github.com/alessandroryo/trivia-game
Command,Unix_Shell,"I have built a a simplified version of a Unix shell, a command-line interpreter, using Java. I have implemented the command line interface that parses user input and executes commands. To do so, I have used pipes and filters design pattern to represent an abstract command and use subclassing to implement commands in an object-oriented way.",0,0,2024,2024,1,https://github.com/mnamadina/Unix_Shell
Command,tree_calculator,My final project for SE461: Managing Software Development at Butler University. This is a basic command line calculator that uses common Software Design Patterns such as the Visitor Pattern and the Builder Pattern. ,0,0,2020,2020,1,https://github.com/gabbirenee/tree_calculator
Command,Image-Rotator,Developed an image rotator program using singleton design pattern in C++ that rotates the .ppm and .pgm files using command line arguments on Linux Ubuntu platform as a part master's program course curriculum.,0,0,2023,2023,1,https://github.com/Shubham-2110/Image-Rotator
Command,ASHteroids,"A Flutter Flame project which mainly targets to remake Atari's space shooter game named Asteroids accompanied by a modern approach, which utilizes Command and Factory design patterns to produce a better code stability.",0,0,2024,2024,0,https://github.com/Meteren/ASHteroids
Command,The-Path,"Java Object-Oriented Cross platform mobile game using Codename One framework. Interactive GUI, animation, sound and collision detection. Designed with MVC pattern and other design patterns such as observer, iterator, singleton, and command patterns. ",0,0,2021,2021,1,https://github.com/britt-859/The-Path
Command,Shape-Drawing-Tool,"A tool that can be used to draw Boxes, Circles and Lines with Undo and Redo functionalities. Several Design Patterns including Composite, Command, Iterator, State, Singleton, Controller, Expert are used to develop this tool.",0,0,2020,2020,1,https://github.com/Charan-Venkatesan/Shape-Drawing-Tool
Command,Racing-Game,"A game written in Java that utilizes the CodenameOne framework along with the MVC, Command and Iterator design patterns. Players have to hit all the pylons before getting hit by enemy cars and birds. ",0,0,2017,2018,1,https://github.com/brianjunio/Racing-Game
Command,DatabaseFramework,"This is a java application which helps the user to maintain the books by adding, deleting and updating the book. This application is developed using MySql & 5 design patterns - Controller, Command, Template, Singleton and Bridge",0,0,2017,2018,1,https://github.com/vijayalb/DatabaseFramework
Command,QCONTEST-APPLICATION,"This contest creation application is built using Java 11 with Object-Oriented Design principles, the Command Design Pattern, JUnit, Mockito for testing, Exception Handling, 3-tier Architecture, and Gradle Wrapper (GradleW) as the build tool.",0,0,2024,2024,1,https://github.com/asudigital/QCONTEST-APPLICATION
Command,Pokemon,"Simple “Pokemon” game application, where trainers can upgrade their Pokemons and battle each other. This was implemented using design patterns such as command, singleton, and builder patterns, as well as threads for the battles between Pokemons.",0,0,2022,2022,1,https://github.com/anamariaroanghesi/Pokemon
Command,GAME_PacmanGamePhase2,"This Pac-Man game improves upon the previous version by implementing additional design patterns: State, Decorator, Strategy, and Prototype. Existing patterns: Singleton, Factory Method, Command, and Observer, have also been upgraded for enhanced functionality and performance.",0,0,2024,2024,1,https://github.com/PierceLe/GAME_PacmanGamePhase2
Command,USMC-Army-Builder,"Simulate creating an army based the US Marine unit structure. This project utilizes existing OOP paradigms such as association, aggregation, and composition. It also incorporates a couple Java design patterns such as factory, composite, and command.",0,0,2025,2025,1,https://github.com/yichii/USMC-Army-Builder
Command,exchangeRates,"A command line application written in Java, built using the Spring Boot framework. Using OOP principles and MVC design pattern. The app makes GET calls to a currency exchange API to display  the latest exchange rates. ",0,0,2022,2022,1,https://github.com/Jdevv96/exchangeRates
Command,SAL-Interpreter-Smalltalk,"SAL - Simple Assembly Language Interpreter that implements command software design pattern. Program written in Smalltalk to interpret SAL instructions and simulate hardware-wise program execution with program counter, registers, etc. Needs VisualWorks to open .st file.",0,0,2018,2018,1,https://github.com/michalbochnak/SAL-Interpreter-Smalltalk
Command,crispy-manifacturing-simulation,"A java CLI app implemented as a technical assignment that I've done for a tech company interview implementing the Command design pattern with some regex customization, thought it will sure be helpful for somebody out there.",0,0,2020,2021,1,https://github.com/Saddham/crispy-manifacturing-simulation
Command,kyc-project,"A KYC Spring Boot project, implementing the CQRS design pattern for clear command and query distinction. With Kafka as the event hub for database synchronization, PostgreSQL manages secure write operations, and MongoDB offers smooth KYC data aggregation.",0,0,2023,2023,1,https://github.com/NourTabib/kyc-project
Command,Auction-system,"A Java project which includes more OOP concepts such as: inheritance, polymorphism, encapsulation etc. and some design patterns (factory, observer, builder). The program receives at the input four filenames, one for auction house data, one for customers data and two more for administrators commands and customer commands.",0,0,2022,2022,1,https://github.com/Cosmin342/Auction-system
Command,OOP-banking-system,"A Java-based banking system that allows users to create accounts, deposit and transfer money, manage transactions, and check balances. Built with a modular architecture using design patterns like Factory, Command, Builder and Strategy for flexibility and scalability. ",0,0,2024,2025,1,https://github.com/catalinamanolache/OOP-banking-system
Command,fightBoat,"This group project incorporates Object-Oriented Programming design patterns such as Singleton, Command, and Strategy to create a digital version of the popular game BattleShip, including a graphical user interface that allows users to place and ""attack"" boats.",0,0,2025,2025,1,https://github.com/benkohav/fightBoat
Command,Defense-System,"A defense system typically involves complex components such as control systems, communication networks, command centers, and decision-making modules. Designing such a system using Object-Oriented Programming (OOP) principles and design patterns ensures modularity, maintainability, scalability, and reliability.",0,0,2024,2024,1,https://github.com/Ravindupereraofficial/Defense-System
Command,oop_game,"Simple adventure game. Playable both from the command line and from the graphical interface. OOP principles have been respected (strong encapsulation, abstraction, polymorphism, inheritance). Several design patterns have been used (Singleton, Factory, Builder). Check README for more details.",0,0,2022,2024,1,https://github.com/grecubogdan13/oop_game
Command,Car-Game,"Academic project: vertical scrolling game of a car that tries to avoid obstacles (autoplay - keyboard commands commented). Design patterns: Factory, Strategy (the car has 3 lifes and has a different behavior for each), Memento (to save state on file).",0,0,2024,2024,1,https://github.com/PaintItBlack5/Car-Game
Command,tree-with-composite,"This project aims to develop an implementation of the ""tree"" command specifically designed for the Ubuntu operating system. This command is widely used to display the hierarchical structure of files and directories on a file system. We have chosen to implement this functionality using the Composite design pattern.",0,0,2023,2023,4,https://github.com/MdialloC19/tree-with-composite
Command,Mars-Rover-Simulation,"This repository contains a Java implementation of a Mars Rover simulation. The project allows users to navigate a rover on a grid while avoiding obstacles based on user-defined commands. It demonstrates key programming concepts, including command design patterns and real-time user interaction, providing an engaging way.",0,0,2024,2024,1,https://github.com/stutee16/Mars-Rover-Simulation
Command,LibraryWebApplication,"This is the Book Library Web application which I developed using core Java and JSP servlets as part of my training task at EPAM India Pvt Ltd. The project was developed using several design patterns like Factory, Singleton, Command etc.",0,1,2017,2020,0,https://github.com/Sairam954/LibraryWebApplication
Command,CQRS,"CQRS (Command Query Responsibility Segregation) is a design pattern that separates the responsibility for handling read and write operations into separate models. By segregating the application's read and write concerns, CQRS allows for the optimization of each model independently.",0,0,2023,2023,1,https://github.com/Moamen189/CQRS
Command,214-prac5,"This repository contains the code for a Smart Home Automation System using 4-5 design patterns which are Composite, Adapter, Command, Observer, and Iterator. The project supports device control, legacy device integration, automation routines, sensor notifications, and efficient device management.",0,0,2024,2024,2,https://github.com/thendombedzi/214-prac5
Command,TEnmoBankingApp,"Tech Elevator Mini-Capstone #2 - Created a command line payment service application in a pair programming setting using MS SQL, ASP.NET, JSON web tokens (JWT), and Postman. Emphasized OOP principles, MVC design pattern, data security, and prevention of SQL injection.",0,0,2022,2022,3,https://github.com/ChristieBlanton/TEnmoBankingApp
Command,AddAppliancesToBakingCookies,A continuation of the Baking Cookies Java Application. This program is built on top of the Cookies App that now adds Kitchen Appliances to aid in the baking. It uses Command Design Pattern.  Methods also have test cases for them..,0,0,2020,2020,1,https://github.com/atiftirmizi/AddAppliancesToBakingCookies
Command,cqrs-event-driven-architecture,"This project is (my TFG), an implementation of the Command Query Responsibility Segregation (CQRS) design pattern in combination with an Event Driven Architecture (EDA), to learn about the benefits and advantages of using both in distributed software applications with significant overhead.",0,0,2023,2023,1,https://github.com/p4pupro/cqrs-event-driven-architecture
Command,STMS-Sports-Team-Management-System,"A Java-based Sports Teams Management System (STMS) designed for the management of various team sports. It supports creating and managing volleyball and football teams and will extend to additional sports. Implements Command, Factory, and Memento design patterns to ensure extensibility and maintainability.",0,0,2023,2023,1,https://github.com/Flucus/STMS-Sports-Team-Management-System
Command,multithreaded-webserver,"A multithreaded web server in C++ using OOP design patterns like Singleton for server instance management, Command for HTTP request routing, Observer for request notifications, and multithreading for concurrent client handling. Built with C++17, designed for POSIX-compliant systems (Linux/macOS).",0,0,2024,2025,1,https://github.com/satyam-singhxx/multithreaded-webserver
Command,Shooting-game," shooting game with Powerpuff Girls vs Mojo Jojo built with Java and libGDX. Implemented design patterns - Factory for creating player, Command pattern for movement of players, decorator for giving special power to the enemies and different OOPs concepts for developing shooting game. ",0,0,2023,2023,1,https://github.com/HarshtyagiHT/Shooting-game
Command,Bullet-hell-shooting-game,"shooting game with Powerpuff Girls vs Mojo Jojo built with Java and libGDX. Implemented design patterns - Factory for creating player, Command pattern for movement of players, decorator for giving special power to the enemies and different OOPs concepts for developing shooting game.",0,0,2023,2023,1,https://github.com/HarshtyagiHT/Bullet-hell-shooting-game
Command,ToDo-List-Program,"This is a Java program that provides a command-line interface for managing a to-do list. It uses Apache Commons DBCP2 to create a connection pool to a PostgreSQL database, and it uses the DAO design pattern to interact with the database.",0,0,2023,2023,1,https://github.com/Datchung17/ToDo-List-Program
Command,product-query-service,"we will Implement CQRS Design pattern using Spring Boot & Kafka,CQRS stands for Command and Query Responsibility Segregation, a pattern that separates read and update operations for a data store. Implementing CQRS in your application can maximize its performance, scalability, and security.",0,0,2024,2024,1,https://github.com/cherni82hichem/product-query-service
Command,logistica-golada,"O Sistema de Logística é uma aplicação que utiliza Design Patterns para a gestão de pedidos. Com diferentes padrões, como o Strategy, Command, Observer e Facade, a arquitetura é flexível e extensível. O projeto pode ser utilizado como base para aplicações similares.",0,0,2023,2024,1,https://github.com/genesis-crypto/logistica-golada
Command,ASE_PROJECT,"This is a GUI based application that reads and executes commands on command line one at a time. It also reads a program (in the program window) and executes it with a “run” command (typed into the command line). It saves and loads a program and also syntax checking. Checks for valid commands and for valid parameters. clear command to clear the drawing area  reset command to move pen to initial position at top left of the screen. This program is using inheritance and design patterns. Also, this program is written in C# language.",0,0,2020,2021,0,https://github.com/Shadymania/ASE_PROJECT
Command,Peinto,"An object oriented model in Java designed using MVC AP and different design patterns (singleton, strategy, factory, memento and command). It saves and loads drawings using XML and JSON, and supports various geometric shapes with multiple operations as: draw, color, move, copy, undo, redo. ",0,0,2018,2020,3,https://github.com/MayssaraOmar/Peinto
Command,PaymentsProject,"FlyWay for Infological and datalogical DB modelling. Used Mysql for Physical DB implementation. Used Filters and Listeners for Authentication and MD5 for password encrypting. Implemented Pagination using queries. Implemented Transactions using JDBC connection. Implemented such design patterns  like Front Controller, Builder, DAO, Factory, Command.",0,0,2020,2021,1,https://github.com/vkrasiy/PaymentsProject
Command,Dapper.QueryBuilder,"This is a C# class, QueryBuilder, implementing a Builder design pattern for building SQL queries using Dapper. It has methods for adding query parameters, setting command type and connection, and setting additional options. The class aims to simplify SQL query building and improve code readability.",0,0,2023,2023,1,https://github.com/alfredoaguiararce/Dapper.QueryBuilder
Command,Version-Control-System,"An application that simulates UNIX-like commands (create, modify, delete ﬁles) and tracks the changes made to them. This allows the user to restore to a previous version of a speciﬁc ﬁle. It was implemented in Java, using Visitor, Singleton and Factory Design Patterns. ",0,0,2019,2019,1,https://github.com/criscojocaru/Version-Control-System
Command,Remote-File-Management-System,"Allows users to perform various file operations (like create, delete, move, copy) on a remote server, using the Command design pattern. The aim is to enable the execution of different file operations in a way that the operations can be encapsulated as objects, allowing for flexible and extensible command execution, undo operations, and logging.",0,0,2023,2023,1,https://github.com/nicholascabrera/Remote-File-Management-System
Command,Summer_Experience_Explorer,"Sumer_Experience Explorer is an applet that has four main functionalities and over 14 classes that fulfill many roughly 20 different user stories. The four main tasks of our program are creating and populating an SQL database, reading the relevant database information into JTables, creating and showing a GUI, and allowing a user to use the GUI to search through and filter the data in the database. The program shocases different design patterns such as: Strategies, Singleton, and Command design patterns. ",0,0,2017,2017,1,https://github.com/Pietro-G/Summer_Experience_Explorer
Command,Weather-Monitoring-System,"The Weather Application is a Java-based project designed to provide users with real-time weather updates and alerts based on their location. The application utilizes various design patterns, including Singleton, Factory Method, Strategy, Command, and Template Method, to ensure a clean, maintainable, and extensible codebase.",0,0,2024,2024,1,https://github.com/OmarKhaled3125/Weather-Monitoring-System
Command,Flight-Simulator,"Final project in Advanced Software Programming course.   Presentation Video: https://youtu.be/HHmSaIBHxGI   I created with my partner a plain control center application in Java (javafx) , considering the SOLID   and GRASP principles, using the modern design patterns such as bridge, command and   composite and MVVM architecture.",0,0,2021,2021,1,https://github.com/Daniel-Ely/Flight-Simulator
Command,Flight-Simulator,"Final project in Advanced Software Programming course.Presentation Video: https://youtu.be/HHmSaIBHxGI   I created with my partner a plain control center application in Java (javafx) , considering the SOLID   and GRASP principles, using the modern design patterns such as bridge, command and   composite and MVVM architecture.",0,0,2021,2021,1,https://github.com/omer5144/Flight-Simulator
Command,UIMVVM,"This repository contains a WPF application following the MVVM (Model-View-ViewModel) design pattern. It demonstrates the implementation of data binding, command patterns, and a clean separation of concerns to create a maintainable and scalable desktop application. Ideal for exploring MVVM principles and mastering WPF development.",0,0,2025,2025,1,https://github.com/nyendwa/UIMVVM
Command,Image-Processing-Application,"Text Based and GUI Based interactive Application allowing user to load an image, apply various filters and save an image.  Built using Command Design Pattern and MVC Architecture. The application supports various image operations, including filters (sepia, blur, sharpen, color correction), compression, brightness adjustment and histogram analysis.",0,0,2023,2025,1,https://github.com/mumukshapant/Image-Processing-Application
Command,Automation-Exercise-Website-Testing,"Automated tests have been crafted for an Automation Exercise Website, elevating capabilities in areas such as login, sign-up, cart management, quantity modification, and logout. The code is structured to ensure clarity and readability, utilizing design patterns like the Page Object Model, custom commands, and fixtures.",0,0,2023,2023,1,https://github.com/Maddy1509/Automation-Exercise-Website-Testing
Command,SE-Task-2,"AntFarm Simulation System A simulation of an ant colony designed to demonstrate advanced object-oriented programming concepts and design patterns. The system models ant colonies with functionalities such as spawning ants, building rooms, foraging, and battles. It is implemented in C++ with a command-line interface.",0,0,2024,2024,0,https://github.com/Aqsa-Aziz27/SE-Task-2
Command,Library-mangment-system-pattern-educational-demo,"This project is a Library Management System utilizing various design patterns like Singleton (for database connection and logging), Prototype (for cloning books), Factory (for book creation), Adapter (for integrating external books), Builder (for constructing books), Proxy (for adding security and logging), and Command (for book transactions).",0,0,2024,2024,1,https://github.com/mohammedsalama0/Library-mangment-system-pattern-educational-demo
Command,LoanManagement,"CQRS, Command Query Responsibility Segregation is a design pattern that separates the read and write operations of a data source. Here Command refers to a Database Command, which can be either an Insert / Update or Delete Operation, whereas Query stands for Querying data from a source. It essentially separates the concerns in terms of reading and writing, which makes quite a lot of sense. This pattern was originated from the Command and Query Separation Principle devised by Bertrand Meyer. ",0,0,2022,2022,1,https://github.com/SiriwardanaT/LoanManagement
Command,Lumen-Random-User,A coding challenge to demonstrate coding structure and basic design patterns in PHP. This simple application made from Lumen will retrieve random users from the api and store it locally. A console command is created to import 3rd party data and will be accessed via routes to display it. ,0,0,2021,2021,1,https://github.com/sher-ocs-79/Lumen-Random-User
Command,Object_Oriented_Design_Project,"The aim of this project was to familiarise with OOP design patterns, such as Factory, Builder, Adapter, Iterator, Command, Memento, etc. and learn useful C# features (reflection, serialization, interfaces, data structures). It was carried out as part of the course ""Object Oriented Design"" at the Warsaw University of Technology.",0,0,2023,2023,1,https://github.com/Bakaczor/Object_Oriented_Design_Project
Command,Antfarm-Simulation,"The Antfarm Simulation Project simulates the behavior of different ant species within a colony using C++ and object-oriented programming. It incorporates design patterns like Singleton, Factory, and Command to manage colony creation, resource allocation, and combat. The repository includes all source code and documentation for the project.",0,0,2024,2025,1,https://github.com/SA-eyt/Antfarm-Simulation
Command,undo_redo,"In my Metaprogramming CS module, we were taught design patterns. I have difficulties understanding the usage for command patterns.  I went to look it up online and  find that command pattern is used for Undo-redo in a game engine. After several fail attempts , I got it working. This was used for my 2D Game engine that was published online.",0,0,2020,2023,1,https://github.com/jeroentyx/undo_redo
Command,ECommerce-WebApi,"This repository contains the implementation of a scalable and maintainable web API for an e-commerce platform, inspired by the Hepsiburada structure, using .NET Core 7. The project is designed following the Onion Architecture combined with the CQRS (Command Query Responsibility Segregation) design pattern to achieve a clean separation of concerns.",0,0,2024,2024,1,https://github.com/karagultm/ECommerce-WebApi
Command,tikfitix,A video player chanel for use personal and write in it your text. Features -> have auth for login to the website and not support register for security. have a command for delete and remove all data for security.  and writed by laravel (a good php freamwork) and design pattern is MVC,0,0,2024,2025,1,https://github.com/tikrack/tikfitix
Command,car-rental-api,"This project is an approach to a car rental service using various design patterns and architectural approaches such as CQRS (Command Query Responsibility Segregation), REPR (Request-Response Pattern), and Clean Architecture. In this repository, you can explore how these patterns are applied to structure and optimize a robust, scalable API.",0,0,2024,2024,0,https://github.com/dafegima/car-rental-api
Command,encryption-decryption,"Encrypt and decrypt messages and texts using the Caesar cypher and a standard Unicode table. Using the command line to pass the arguments sush as: the key and the string, algorithm mode. Working with files: reading and storing data in a file. Possibility to choose a specific encryption algorithm using Strategy design pattern.",0,0,2020,2020,1,https://github.com/lyubakek/encryption-decryption
Command,CQRS_MediatorPattern_API,This project aids better understanding of CQRS Architecture and Mediator Software Design Pattern. The Mediator pattern was used to implement the separation of read and write commands/queries in line with the CQRS Architecture pattern. The project as also made use of Redis as Distributed Caching mechanism to improve the performance of endpoints. ,0,0,2021,2021,1,https://github.com/AtolagbeMuiz/CQRS_MediatorPattern_API
Command,SmartGrid-Simulation,"A large and complex MSc Java project (awarded a mark of 80%) that simulates the interactions between Households and Aggregators in a SmartGrid network (including the associated security concerns). I was responsible for all of the code below (namely the core system framework code) with the exception of a few files (clearly marked with @author JDoc annotations, and included in this repo for completeness). The code uses a plethora of Design Patterns such as Singleton, Observer, and Command (to mimic higher-order functions). During the simulation a random set of Households with multiple Appliances are generated for each Aggregator. Appliances have varying power requirements, and usage hours that are modelled via implementations of the IPolicy interface. This allows a user to model events such as a Dinner at which time the Oven, Lights, and other related Appliances would be in use. The TimedEvent framework handles callbacks, scheduling and replaying of events. There is a GUI that shows the network at different granularities, right down to individual graphed Appliance usage for a Household as the program runs. A mock-Command Line, that provided alternate program control, was also implemented. A Thread Safe Controller is responsible for asynchronously executing user interactions to avoid ConcurrentModificationExceptions. The program outputs verbose messages to a text file for reviewing after the simulation completes.",0,6,2013,2021,0,https://github.com/kpin/SmartGrid-Simulation
Command,CQRS.WebApi,"CQRS, Command Query Responsibility Segregation is a design pattern that separates the read and write operations of a data source. Here Command refers to a Database Command, which can be either an Insert / Update or Delete Operation, whereas Query stands for Querying data from a source. It essentially separates the concerns in terms of reading and writing, which makes quite a lot of sense. This pattern was originated from the Command and Query Separation Principle devised by Bertrand Meyer. It is defined on Wikipedia as follows.",0,0,2022,2022,1,https://github.com/rezamuhammad11/CQRS.WebApi
Command,Online-Marketplace,"The main objective of this project is to implement a software design pattern and framework to create an online marketplace. Following software design patterns were used for the implementation purpose: Abstract Factory, Command, Front Controller, Role Based Access Control, Authorization, Proxy, Reflection, Monitor Object, Future, Guarded Suspension, Scope Locking, Thread-Safe Interface. Additionally, I will make use of Java Annotation to perform Role Based Access Control and MySQL for Database related tasks. To maintain several versions of the project I'm making use of Github environment. I have made use of Agile Methodologies through out in the project.",0,0,2018,2018,1,https://github.com/anushkaaaa/Online-Marketplace
Command,Mini_Paint,"This Java-based mini paint application features a JFrame front-end for drawing and editing shapes like squares, circles, rectangles, and line segments. It allows users to move, resize, and modify shapes with ease. The application implements the Command Design Pattern to provide a robust undo/redo system, ensuring seamless editing and improved user ",0,0,2024,2025,1,https://github.com/mohanadalaa/Mini_Paint
Command,Race-Car,"A 2D class project game using Java with swing and awt packages along with animation using a Timer. Increased ease of maintainability using Object Oriented Design and an MVC (Model-View-Controller) architecture. Further increased ease of maintainability by learning and implementing design patterns including Proxy, Observer/Observable, Command, Strategy, Singleton, Iterator and Factory.",0,0,2017,2017,1,https://github.com/MJohnson9303/Race-Car
Command,IMDB_Clone,"An IMDB Clone in Java with functionalities such as adding movies and series to favourite list, leaving reviews, notification system, admin and regular accounts with different acces to commands and a working interface. The app also implements design patterns such as Singleton, Factory and Strategy, and stores the database of users using JSON files",0,0,2024,2024,1,https://github.com/RobertP1021/IMDB_Clone
Command,Metal-Hall-of-Fame-2018,"This program was made as part of my Object Oriented Design course.  This program reads bands data out of a random access file and can manage the file itself. In this program I've Implemented a full HashMap, ArrayList and ListIterator and also used Command design pattern and Singltone. The UI was made using JavaFX. ",0,0,2018,2018,1,https://github.com/MeshiSanker/Metal-Hall-of-Fame-2018
Command,RefactorBM,"This repository shows my understanding and implementation of design patterns, software architecture, and unit testing. What was a poorly written benchmarking program now contains my implementation of a number of agile stories to remove Technical Debt from the system by leveraging DIP and the Command and Observer patterns to make the system more extensible.",0,0,2021,2022,4,https://github.com/SMTanami/RefactorBM
Command,PersistentDatabaseFramework,"A persistence framework for accessing MySQL database using controller, bridge, command, template method, and factory method design patterns. The framework has been designed in such a way that changing underlying database will have minimal impact on other parts of the application. This design supports undo and redo functionality buy encapsulating user operations together into command objects which are scheduled for execution dynamically using execution stack and undone stack.",0,0,2016,2016,1,https://github.com/tushargarud/PersistentDatabaseFramework
Command,flight-simulator-interpreter,"An interpreter for the FlightGear simulator, enabling remote control on an aircraft by analyzing and executing commands from a given script. The program gets a script file that contains various commands, splits it into strings by using a lexer, and then interprets them by using an interpreter. The project contains design patterns, communication, and Client-Server Architecture, use of data structures and a database, data streaming, and parallel programming using threads.",0,0,2020,2020,2,https://github.com/YamitCohenTsedek/flight-simulator-interpreter
Command,BankingFramework,"This is a simple Banking Spring MVC application  in which I applied several design patterns(factory, command, facade, etc). In the project, I developed a framework from which two applications extend. the framework is under framework package. The two applications that extend features provided in the framework are Bank and Credit Card. they reside in their respective packages in the source folders. ",0,0,2017,2023,1,https://github.com/ridwantahir/BankingFramework
Command,IST-ObjectOrientedPrograming,"Practical component of  bachelors subject. Program written in Java to manage train itineraries based on the available portuguese stations and services. It includes a Main Menu that conects to the secondary Menus, allowing someone to simulate a journey and choose amongst several possible itineraries. each passenger can  have their records in the application, and also save and load records. This application uses several java design patterns such as: Command, Visitor, Strategy.",0,0,2018,2019,0,https://github.com/andreiarog/IST-ObjectOrientedPrograming
Command,DjangoWebApp,"Basis for a working Python, Django based web application. Initial purpose of this project is to facilitate a thorough understanding of how a fully functional web application with database integration, authentication, and the MVC design pattern is formed. My main goal is to iteratively start from basic command line setup of the django project framework, and then build up to a complete WebApp, deployed and hosted on a remote server.",0,0,2019,2019,1,https://github.com/kko13/DjangoWebApp
Command,Store-Stock-Management,A program that can manage the stocks of a store that offers the possibility to add discounts on products and interpret the data for a pleasant user experience. The data is read using CSV files. It implements a series of basic design patterns and respects the principles of OOP. The console with commands offers the possibility of preferential selection of the actions that take place on the store.,0,0,2021,2021,1,https://github.com/Ionut-Iordache-I/Store-Stock-Management
Command,Rewind,"I wanted to make a game so I can practice the Command Design Pattern. The example that I read used it for rewind purposes, so I developed a game where you can rewind movement. The goal is get the player to its corresponding goal. Press PLAY button to start moving. The STOP button will stop players from moving. And the REWIND button will rewind the steps your player(s) has taken.",0,0,2018,2018,1,https://github.com/mrome007/Rewind
Interpreter,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Interpreter,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Interpreter,Swift-Interpreter,Design Patterns in Swift: Interpreter ,12,1,2016,2022,1,https://github.com/kingreza/Swift-Interpreter
Interpreter,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Interpreter,CleanCode,"To refactor a very messy AI application code, we will use Strategy, Extract and Interpreter Design Patterns.",11,0,2020,2023,1,https://github.com/borakasmer/CleanCode
Interpreter,DesignPatterns,Java23种设计模式总结归纳(附UML图和源码),8,6,2019,2024,1,https://github.com/guangxush/DesignPatterns
Interpreter,Expressions-Interpreter,"A  java program that calculates and simplifies logical expressions, using the Interpreter design pattern.",4,0,2022,2022,1,https://github.com/OsherElhadad/Expressions-Interpreter
Interpreter,CrackTheCode,We will try to figure out the code by using some clues. We use kind of Interpreter Design Pattern.,4,0,2024,2024,1,https://github.com/borakasmer/CrackTheCode
Interpreter,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Interpreter,design-pattern-interpreter,The Interpreter Design Pattern is one of the Gang of Four design patterns which specifies how to evaluate sentences in a language.,3,3,2020,2021,1,https://github.com/BrijeshSaxena/design-pattern-interpreter
Interpreter,design-pattern-command,Want to learn more about design patterns in Java? Check out this post to learn more about how to use the command design pattern in this tutorial.,3,5,2020,2023,1,https://github.com/BrijeshSaxena/design-pattern-command
Interpreter,Interpreter,Interpreter Design Pattern on Roman Numbers with WebApi service.,2,0,2015,2022,1,https://github.com/borakasmer/Interpreter
Interpreter,interpreter,Interpreter Design Pattern,1,0,2019,2024,1,https://github.com/robsonalvz/interpreter
Interpreter,Interpreter-Design-Pattern-Python,Interpreter Design Pattern,1,0,2022,2022,1,https://github.com/AndresGav/Interpreter-Design-Pattern-Python
Interpreter,interpreter,interpreter design pattern examples in scala and haskell,1,0,2010,2013,1,https://github.com/duboisf/interpreter
Interpreter,InterpreterDesignPatterns,Examples of design patterns for a simple interpreter example,1,0,2017,2017,1,https://github.com/CodeOpsTech/InterpreterDesignPatterns
Interpreter,Intepreter-LogicGates,Implementação simples do design pattern Interpreter.,1,0,2022,2022,1,https://github.com/bielcmoraes/Intepreter-LogicGates
Interpreter,PhpDesignPatterns-Interpreter,Interpreter,1,0,2017,2022,1,https://github.com/Jagepard/PhpDesignPatterns-Interpreter
Interpreter,Expressions-Interpreter,"A java program that calculates and simplifies logical expressions, using the Interpreter design pattern.",1,0,2022,2022,1,https://github.com/Sagi1500/Expressions-Interpreter
Interpreter,GoDesignPatterns-Interpreter,,1,0,2020,2020,1,https://github.com/Jagepard/GoDesignPatterns-Interpreter
Interpreter,math-expressions-evaluator,"An interpreter to parse and execute math expressions which implemented by using Design Patterns(Strategy,Interpreter,...)",1,0,2019,2019,1,https://github.com/nimvb/math-expressions-evaluator
Interpreter,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Interpreter,Design-Patterns,"This project implements an arithmetic expressions evaluator using the Composite-, Bridge-, Iterator-, Strategy-, Factory-, Interpreter- and Visitor-Pattern.",1,0,2018,2022,1,https://github.com/MHaselmaier/Design-Patterns
Interpreter,Design-Patterns-.NET,Examples of design patterns written in C#. Most of the popular design patterns that can be used in application development are described here.,1,0,2024,2024,1,https://github.com/qpashkaaa/Design-Patterns-.NET
Interpreter,QuestionnaireDSL,"A custom DSL for questionnaire GUI generation, based on a Java ANTLR interpreter. Exercise in programming design patterns",1,0,2018,2020,7,https://github.com/Nedervino/QuestionnaireDSL
Interpreter,Simple-Machine-Language-processor,"Simple Machine Language Interpreter: Java-based interpreter for a simple machine language. Supports arithmetic, memory ops, and conditional branching. Emphasizes OOP, design patterns, and unit tests.",1,0,2024,2024,1,https://github.com/nikoo99m/Simple-Machine-Language-processor
Interpreter,SPL-Interpreter,"University project written in Java using Visitor Design Pattern. It generates an Abstract Syntax Tree from a source code of a program developed in Shakespeare Programming Language. Also, it visits each node in order to display the program output. The mathematical instruction are stored and evaluated using Polish Prefix Notation.",1,1,2016,2018,1,https://github.com/simionAndrei/SPL-Interpreter
Interpreter,desktop-application-for-quick-customer-handle,"This is a desktop application (Java) that can handle customer food orders quickly. This application is made using 6 different design patterns. Such as builder, decorator, fly-weight, interpreter, chain of responsibility and mediator design patterns.",1,0,2024,2024,1,https://github.com/Varnitha12345/desktop-application-for-quick-customer-handle
Interpreter,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Interpreter,weird-language-system,"Weird Language System: A C++ custom language interpreter for linked list operations. Utilizes the Command design pattern and advanced OOP principles like encapsulation and polymorphism for flexible, modular data management.",1,0,2024,2024,1,https://github.com/ricardogodi/weird-language-system
Interpreter,Interpreter,Behavioral Design Pattern in C# | Interpreter Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Interpreter
Interpreter,Interpreter,Design Pattern Interpreter,0,0,2022,2022,1,https://github.com/aliounemane2/Interpreter
Interpreter,Interpreter,Interpreter design pattern ,0,0,2024,2024,1,https://github.com/hnab/Interpreter
Interpreter,Interpreter,Interpreter Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Interpreter
Interpreter,CSharp_Interpreter_Pattern,Interpreter Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Interpreter_Pattern
Interpreter,InterpreterPatternDemo,Demo for Interpreter Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/InterpreterPatternDemo
Interpreter,lr_interpreter,design pattern practice: interpreter,0,0,2017,2017,1,https://github.com/sdsd08013/lr_interpreter
Interpreter,oper_interpreter,design pattern practice: interpreter,0,0,2017,2018,2,https://github.com/sdsd08013/oper_interpreter
Interpreter,InterpreterDemo,Interpreter Design Pattern made in Java ,0,0,2020,2020,1,https://github.com/etEthiopia/InterpreterDemo
Interpreter,interpreter,Simple project demonstrating the interpreter design pattern.,0,0,2022,2022,1,https://github.com/Piazzi/interpreter
Interpreter,CashRegisterInterpreter,For practicing design patterns,0,0,2020,2022,1,https://github.com/kaomomo/CashRegisterInterpreter
Interpreter,CS356InterpreterPattern,Interpreter design pattern demo,0,0,2016,2016,1,https://github.com/miraj12/CS356InterpreterPattern
Interpreter,DataStructuresProject,Interpreter Design Pattern Project ,0,0,2022,2022,1,https://github.com/wissamrasamny/DataStructuresProject
Interpreter,Interpreter-Pattern,Behavioral Design Patterns: Interpreter Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Interpreter-Pattern
Interpreter,Interpreter,Exemplo de Design Pattern (Interpreter) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/Interpreter
Interpreter,InterpreterPatternDemo,Demonstrates the use of Interpreter Design Pattern,0,0,2023,2023,0,https://github.com/snehawk20/InterpreterPatternDemo
Interpreter,interpreter_design_pattern_flutter,"Interpreter Design Pattern in Flutter | Behavioral Design Patterns in Flutter | 26 June, 2023",0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/interpreter_design_pattern_flutter
Interpreter,java_gof_interpreter,"design pattern ""interpreter"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_interpreter
Interpreter,cpp-reference_Interpreter,Interpreter pattern of design patterns,0,0,2023,2023,1,https://github.com/radiotech205/cpp-reference_Interpreter
Interpreter,design-pattern-interpreter,GOF Interpreter behavioral design pattern (from http://www.journaldev.com/dev/java/design-patterns),0,1,2014,2014,1,https://github.com/a-cordier/design-pattern-interpreter
Interpreter,design-pattern-composite-interpreter,Composite Interpreter design pattern combo,0,0,2015,2015,1,https://github.com/a-cordier/design-pattern-composite-interpreter
Interpreter,interpreter-pattern,Writeup about the interpreter design pattern.,0,0,2020,2021,1,https://github.com/not-matthias/interpreter-pattern
Interpreter,Interpreter_Pattern,Interpreter Design pattern demo using Java,0,0,2024,2024,1,https://github.com/shakith1/Interpreter_Pattern
Interpreter,interpreter-example,An implementation of 'Interpreter' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/interpreter-example
Interpreter,Interpreter-pattern-java,Implementation of the interpreter design pattern,0,0,2023,2023,1,https://github.com/andreseagle1927/Interpreter-pattern-java
Interpreter,interpreter-example2,An implementation of 'Interpreter' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/interpreter-example2
Interpreter,DesignPatterns,* Interpreter,0,0,2023,2023,1,https://github.com/LuizEscobarC/DesignPatterns
Interpreter,Simulating-Turtle-graphics-program-focusing-on-design,"Using Command ,Interpreter Design patterns",0,0,2015,2015,1,https://github.com/priyanka88/Simulating-Turtle-graphics-program-focusing-on-design
Interpreter,SDP-Assignment-4,Assignment 4 interpreter design pattern,0,0,2020,2020,1,https://github.com/sazizbeks/SDP-Assignment-4
Interpreter,I4SWD_Group42_Swagterpreter,Interpreter design pattern hand-in.,0,0,2018,2018,4,https://github.com/Gobbenobber/I4SWD_Group42_Swagterpreter
Interpreter,Interpreter,Related to the book Hands-On Design Patterns with Java,0,0,2019,2020,1,https://github.com/a-dmitted/Interpreter
Interpreter,php-design-patterns-interpreter,PHP Design Patterns - Interpreter Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-interpreter
Interpreter,DemoDesignPatternInterpreterPHP,"Demo design pattern interpreter, for viblo ",0,0,2022,2022,1,https://github.com/nikerz1406/DemoDesignPatternInterpreterPHP
Interpreter,InterpreterDP,This is an example codes implemented by Interpreter Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/InterpreterDP
Interpreter,interpreter-design-pattern,Example implementation of the interpreter design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/interpreter-design-pattern
Interpreter,DesignPattern-Interpreter,Exemplo do design pattern interpreter em java,0,0,2025,2025,1,https://github.com/JulianaNishimura/DesignPattern-Interpreter
Interpreter,PythonInterpreterV3,Python Interpreter - Implementing Design Patterns post-refactoring,0,0,2017,2017,0,https://github.com/ScytheDraven47/PythonInterpreterV3
Interpreter,EjemploInterpreter,This is an example for Interpreter Design Pattern.,0,0,2021,2021,1,https://github.com/estra99/EjemploInterpreter
Interpreter,Interpreter,This project has as goal to implement a design pattern named Interpreter.,0,0,2016,2016,1,https://github.com/gabrielnaoto/Interpreter
Interpreter,DesignPatterns-Interpreter,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Interpreter
Interpreter,DesignPatterns-Interpreter,,0,0,2022,2022,1,https://github.com/FdezAriasSara/DesignPatterns-Interpreter
Interpreter,DesignPatterns-Interpreter,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Interpreter
Interpreter,DesignPatterns-Interpreter,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Interpreter
Interpreter,DesignPatterns-Interpreter,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Interpreter
Interpreter,DesignPatterns_Interpreter,,0,0,2021,2021,1,https://github.com/MarceloTonhetti/DesignPatterns_Interpreter
Interpreter,Interpreter,Idea taken from Design Patterns book GoF. Simple interpreter for resolving  boolean expressions.,0,0,2017,2022,1,https://github.com/malkaviano/Interpreter
Interpreter,InterpreterPattern,This Java project provides a working example of the Interpreter design pattern.,0,0,2015,2015,1,https://github.com/LikeLikeAteMyShield/InterpreterPattern
Interpreter,Xperiments.DesignPatterns.Interpreter,A litttle implementation of Interpreter pattern,0,0,2017,2017,0,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Interpreter
Interpreter,Interpreter-and-Strategy-in-Python,Using Design patterns - Interpreter and Strategy in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Interpreter-and-Strategy-in-Python
Interpreter,InterpreterDesign_patterns,,0,0,2019,2019,1,https://github.com/ahmedco82/InterpreterDesign_patterns
Interpreter,Behavioral-Interpreter,This is a short implementation of the Interpreter design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Interpreter
Interpreter,Interpreter-Pattern,implémentation basic du design pattern Interpreter avec le language java,0,0,2022,2023,1,https://github.com/nacer-lachhab/Interpreter-Pattern
Interpreter,InterpreterPattern_Example,You can reach the article via : https://thecodeprogram.com/explanation-of-interpreter-design-pattern,0,0,2020,2020,1,https://github.com/thecodeprogram/InterpreterPattern_Example
Interpreter,Spreadsheet-Implementation,"Implementation of Interpreter, State, and Memento design pattern",0,0,2019,2019,1,https://github.com/priteshamrelia/Spreadsheet-Implementation
Interpreter,Interpreter-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Interpreter-Pattern
Interpreter,JavaDesignPatterns-Interpreter,Interpreter,0,0,2020,2020,1,https://github.com/Jagepard/JavaDesignPatterns-Interpreter
Interpreter,RbDesignPatterns-Interpreter,Interpreter,0,0,2020,2020,1,https://github.com/Jagepard/RbDesignPatterns-Interpreter
Interpreter,design-patterns-interpreter,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-interpreter
Interpreter,interpreter-design-patterns,LP5,0,0,2024,2024,0,https://github.com/amanda-faria/interpreter-design-patterns
Interpreter,design_pattern_interpreter,"Develop a system that uses the pattern given in class. ""Interpreter"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_interpreter
Interpreter,interpreter-java,Projeto desenvolvido para mostrar possível cenário de implementação do design pattern Interpreter em Java.,0,0,2023,2023,1,https://github.com/gabsgc/interpreter-java
Interpreter,-Interpreter-Design-Pattern,Interpreter design pattern is one of the behavioral design pattern. Interpreter pattern is used to defines a grammatical representation for a language and provides an interpreter to deal with this grammar. ,0,0,2024,2024,0,https://github.com/KAVINDAPIYUMAL/-Interpreter-Design-Pattern
Interpreter,Interpreter-Design-Pattern,Software Design and Architecture CSC419 Project - An implementation of Interpreter Design Pattern in Java,0,0,2023,2023,1,https://github.com/BabaSecure/Interpreter-Design-Pattern
Interpreter,gof-design-patterns,GoF Design Patterns reminder with examples,0,0,2018,2020,2,https://github.com/sash-ua/gof-design-patterns
Interpreter,CsDesignPatterns-Interpreter,,0,0,2020,2020,1,https://github.com/Jagepard/CsDesignPatterns-Interpreter
Interpreter,PyDesignPatterns-Interpreter,,0,0,2020,2020,1,https://github.com/Jagepard/PyDesignPatterns-Interpreter
Interpreter,JsDesignPatterns-Interpreter,,0,0,2020,2020,1,https://github.com/Jagepard/JsDesignPatterns-Interpreter
Interpreter,CppDesignPatterns-Interpreter,,0,0,2020,2020,1,https://github.com/Jagepard/CppDesignPatterns-Interpreter
Interpreter,DesignPatterns-RPNCalculator,"Reverse Polish Notation Calculator using Design Patterns... Command, Memento, State, Strategy, Interpreter,Singleton, Abstract Factory",0,0,2018,2018,1,https://github.com/swaks1/DesignPatterns-RPNCalculator
Interpreter,syntax-interpreter,A Typescript implementation of the Interpreter design pattern that solves expressions with an excel-like syntax.,0,0,2021,2021,1,https://github.com/joaolucasgtr/syntax-interpreter
Interpreter,mini_calc,Sample Calculator for showing the Composite and Interpreter design patterns.,0,0,2019,2019,1,https://github.com/tahanebti/mini_calc
Interpreter,calc-dsl,sample project that demonstrates  design patterns like interpreter and visitor,0,0,2016,2016,1,https://github.com/msakaguchi/calc-dsl
Interpreter,Interpreter-Pattern,Esse projeto foi implementado baseado no exemplo disponível no GeekForGeeks: https://www.geeksforgeeks.org/interpreter-design-pattern/,0,0,2020,2020,0,https://github.com/kevinwall/Interpreter-Pattern
Interpreter,java_design_patterns_interpreter_mode,java设计模式_解释器模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_interpreter_mode
Interpreter,designPatterns,"Atividade de sobre Padrões de projetos 05/07/2022. Foi feita uma apresentação sobre três métodos: FlyWeight, Chain of Resposibility e Interpreter.",0,0,2022,2022,0,https://github.com/johnnyAraujo11/designPatterns
Interpreter,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Interpreter,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
Interpreter,interpreter-pattern,Design pattern comportamental Interpreter (Google Tradutor) para avaliar e interpretar as instruções escritas em uma gramática de linguagem ou notações,0,0,2021,2021,1,https://github.com/Jhow-R/interpreter-pattern
Interpreter,python-assignment-3,(BICT Third Year) Refactoring python assignment 2 (Interpreter) using GOF Design Patterns,0,0,2017,2017,1,https://github.com/illej/python-assignment-3
Interpreter,CalculatorJavaFXInterpeter,This is a simple calculator that uses javaFX and interpreter design pattern,0,0,2024,2024,0,https://github.com/vittal94/CalculatorJavaFXInterpeter
Interpreter,Scheme-Interpreter-Design,"An interpreter for the Scheme programming language using the Visitor Design Pattern, facilitating seamless parsing and execution of Scheme code",0,0,2023,2023,1,https://github.com/abbas-husain2/Scheme-Interpreter-Design
Interpreter,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Interpreter,plox,"Python version of the Jlox language from ""Crafting Interpreters"" without fancy design patterns",0,0,2023,2023,1,https://github.com/Tylryan/plox
Interpreter,descriptor,A PHP library for easily implement the Interpreter design pattern in your projects.,0,0,2016,2016,1,https://github.com/isaacesso/descriptor
Interpreter,reverse-Polish-notation-calculator,"application of interpreter design pattern, read & evaluate arithmetic expressions in Reverse Polish Notation",0,0,2017,2017,1,https://github.com/boyingl/reverse-Polish-notation-calculator
Interpreter,regexInterpreterGOF_JS,"a regex interrpreter in Javascript -- this is a translation of one of GOF design pattern's example, originally written in Smalltalk",0,0,2013,2014,1,https://github.com/lundjordan/regexInterpreterGOF_JS
Interpreter,DesignPatternsAssignment,"a repository for adding design patterns to a data interpreter. The original code is my own, and the assignment an attempt to understand design patterns better. The original is available in another repository. also includes the use of design patterns in the Command.cmd module",0,0,2016,2016,1,https://github.com/njs236/DesignPatternsAssignment
Interpreter,Number-To-Text-Using-Interpreter-Design-Pattern,This is a program made as project for Design Pattern subject. Created with C# language as CLI (Command-Line Interface),0,0,2023,2023,1,https://github.com/Ahgaff-level4/Number-To-Text-Using-Interpreter-Design-Pattern
Interpreter,mini-interpretrr,a mini interpreter that interprets 3 commands using java and object oriented design patterns,0,0,2023,2023,1,https://github.com/Noufel17/mini-interpretrr
Interpreter,mini_compilator_using_design_patterns,Un mini compilateur qui est utilisé pour intérpréter deux commandes (let et print).,0,0,2023,2023,1,https://github.com/Lamine-br/mini_compilator_using_design_patterns
Interpreter,Design-Pattern-Interpreter,Interpreter design pattern is one of the behavioral design pattern. Interpreter pattern is used to defines a grammatical representation for a language and provides an interpreter to deal with this grammar. This pattern involves implementing an expression interface which tells to interpret a particular context. This pattern performs upon a hierarchy of expressions. Each expression here is a terminal or non-terminal. The tree structure of Interpreter design pattern is somewhat similar to that defined by the composite design pattern with terminal expressions being leaf objects and non-terminal expressions being composites. The tree contains the expressions to be evaluated and is usually generated by a parser. The parser itself is not a part of the interpreter pattern.,0,0,2020,2021,1,https://github.com/soufianemostafi/Design-Pattern-Interpreter
Interpreter,ts-interpreter,"a Java interpreter for a simple, custom version of Typescript. the purpose of this project was to explore interpreter concepts through best practices and standard design patterns",0,0,2019,2025,1,https://github.com/lautaropaske/ts-interpreter
Interpreter,Design-patterns,"Implementation of the structural pattern ""Composite"" and the behavioral patterns ""Chain of responsibility"" and ""Interpreter"". The goal - to parse text from the file.",0,0,2018,2018,1,https://github.com/Encories/Design-patterns
Interpreter,TurtleGraphicsDesignPatterns,"Java program to implement turtle graphics making use of design patterns - interpreter pattern, visitor pattern and command pattern",0,0,2015,2015,1,https://github.com/LokeshSreekanta/TurtleGraphicsDesignPatterns
Interpreter,mathematical-expressions,A simple example of how to use Interpreter Design Pattern in a basic mathematical operation,0,0,2020,2020,1,https://github.com/jelas99/mathematical-expressions
Interpreter,SAL-Interpreter-CPP,"SAL - Simple Assembly Language Interpreter that implements command software design pattern. Program written in C++ to interpret SAL instructions and simulate hardware-wise program execution with program counter, registers, etc.",0,0,2018,2018,1,https://github.com/michalbochnak/SAL-Interpreter-CPP
Interpreter,Design-Pattern,"Example design pattern 3 pattern and 6 design viz Singleton , Builder , Adapter , Decorator , Interpreter and Memento.",0,0,2024,2024,1,https://github.com/kulproffbrter/Design-Pattern
Interpreter,M426_Design-Patterns,"Examples of some design pattern for presentation in module 426. Covered are the three big pattern families, each with one example (Builder, Bridge, Interpreter).",0,0,2023,2023,1,https://github.com/vilichtSarina/M426_Design-Patterns
Interpreter,DemoInterpreter,"This project is presented as a focused and rigorous exercise that seeks to comprehensively explore, demonstrate and document the functionality and applicability of the Interpreter design pattern in a practical and controlled software development context. ",0,0,2023,2024,1,https://github.com/VictorJoss/DemoInterpreter
Interpreter,SAL-Interpreter-Smalltalk,"SAL - Simple Assembly Language Interpreter that implements command software design pattern. Program written in Smalltalk to interpret SAL instructions and simulate hardware-wise program execution with program counter, registers, etc. Needs VisualWorks to open .st file.",0,0,2018,2018,1,https://github.com/michalbochnak/SAL-Interpreter-Smalltalk
Interpreter,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Interpreter,Bullet-Hell-Shooter-Level-Interpreter,"CptS 487 Software Design and Architecture Final Project: A ""Bullet Hell Shooter"" clone/ Level Interpreter. Interprets levels in XML and utilizes decorator design pattern. Written in C#, developed in Visual Studio on a Windows 7 vm.",0,0,2016,2022,0,https://github.com/eric2013264/Bullet-Hell-Shooter-Level-Interpreter
Interpreter,Design-Patterns-In-Java,This shows 10 types of Design patterns with some projects to execute them. They are as follows: 1. Singleton Pattern 2. Factory Pattern 3. Decorator Pattern 4. Observer Pattern  5. Strategy Pattern 6. Adapter Pattern 7. Facade Pattern 8. Composite Pattern 9. Command Pattern 10. Interpreter Pattern,0,0,2023,2023,1,https://github.com/acshyguy/Design-Patterns-In-Java
Interpreter,03-design-patterns-java,"""Como conhecer diversas soluções sem precisar passar por vários anos alternando entre escolhas certas e erradas? Como saber o contexto em que essas soluções são adequadas e quais são as contrapartidas dos benefícios da solução? Felizmente existe uma forma na qual desenvolvedores mais experientes expressam seu conhecimento em um determinado domínio. E então eu apresento os padrões de projeto, os Design Patterns!""",0,0,2020,2022,1,https://github.com/rubenssleme/03-design-patterns-java
Interpreter,flight-simulator-interpreter,"An interpreter for the FlightGear simulator, enabling remote control on an aircraft by analyzing and executing commands from a given script. The program gets a script file that contains various commands, splits it into strings by using a lexer, and then interprets them by using an interpreter. The project contains design patterns, communication, and Client-Server Architecture, use of data structures and a database, data streaming, and parallel programming using threads.",0,0,2020,2020,2,https://github.com/YamitCohenTsedek/flight-simulator-interpreter
Interpreter,Chatbot,"This ChatBot is  specifically designed to provide pre and post-sales services, offering users personalized assistance. developped using the design patterns: Interpreter, Observer and decorator.",0,0,2023,2023,1,https://github.com/Ghadajamal/Chatbot
Interpreter,ToyLanguageInterpretor,"Interpreter for a toy language using Java, featuring advanced functionalities and strict adherence to OOP principles along with the Model View-Controller architectural design pattern.",0,0,2024,2024,0,https://github.com/EmiliaRusti/ToyLanguageInterpretor
Interpreter,ToyLanguageInterpretor,"Interpreter for a toy language using Java, featuring advanced functionalities and strict adherence to OOP principles along with the Model View-Controller architectural design pattern.",0,0,2024,2024,1,https://github.com/EmiliaRusti916/ToyLanguageInterpretor
Interpreter,NoIfCalci_Android,This is made for practice to learn the design patterns like Interpreter and Strategy using which conditional statements like switch and if-else can be removed. This project gives more insight into OO world. ,0,1,2017,2017,1,https://github.com/rnyati/NoIfCalci_Android
Interpreter,kpi_data_processing_engine,"A Django project for managing KPIs and processing sensor data through custom expressions. Features include KPI creation and linking, a flexible interpreter for arithmetic and regex expressions, and adherence to SOLID principles and design patterns. The project also includes Swagger documentation and thorough testing for reliable, maintainable code.",0,0,2024,2024,1,https://github.com/3liSame7/kpi_data_processing_engine
Interpreter,Unix_Shell,"I have built a a simplified version of a Unix shell, a command-line interpreter, using Java. I have implemented the command line interface that parses user input and executes commands. To do so, I have used pipes and filters design pattern to represent an abstract command and use subclassing to implement commands in an object-oriented way.",0,0,2024,2024,1,https://github.com/mnamadina/Unix_Shell
Iterator,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Iterator,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
Iterator,laravel-large-project,"An example project with detailed documentation created to show how to build large and maintanable projects in laravel/php and use design patterns like decorator, iterator, proxy etc.",180,35,2020,2025,4,https://github.com/stasyanko/laravel-large-project
Iterator,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Iterator,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Iterator,Software-Design-Patterns,"🎨 A comprehensive exploration of object-oriented design patterns, featuring fully implemented examples like inheritance, composition, observers, decorators, and factory methods. Built with Java to demonstrate their real-world applications in scalable and maintainable software design.",18,15,2024,2025,1,https://github.com/hoangsonww/Software-Design-Patterns
Iterator,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Iterator,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Iterator,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Iterator,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Iterator,CarFactory,This is a fictional system software which runs on console. This system is designed to understand the uses of Template Method and Iterator Design Patterns. ,10,1,2021,2024,1,https://github.com/KeremTAN/CarFactory
Iterator,Virtual-Coffee-Shop,This project implements Decorator and Iterator Design patterns using Java,8,1,2018,2024,3,https://github.com/banerjeesamrat/Virtual-Coffee-Shop
Iterator,Design-Patterns,"Patrones de diseño / Clase Template C++ / Parciales / Exámenes de Programación 4 de Facultad de Ingeniería UdelaR - Uruguay. Análisis, Diseño e implementación en C++ usando programación orientada a objetos. UML. Design Patterns, Template C++, exercises...",6,2,2018,2024,2,https://github.com/mathiasuy/Design-Patterns
Iterator,iterate,Iterate is a library of design patterns functional programming constructs designed to work with Java's Collections.,6,1,2009,2019,1,https://github.com/briancavalier/iterate
Iterator,Pizza-Delivery-System,"A pizza delivery system that showcases the usage of Observer, Abstract Factory, Singleton, Command, and Iterator design patterns. ",4,2,2017,2021,1,https://github.com/DuyguKeskek/Pizza-Delivery-System
Iterator,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Iterator,Design-Patterns---PMS---Patient-Information-System-Simple,"Simple Project For Singleton, Abstract Factory, Command, Iterator, Decarator Observer and Adapter Design Patterns, All in One",4,0,2020,2021,0,https://github.com/muammersahin/Design-Patterns---PMS---Patient-Information-System-Simple
Iterator,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Iterator,DrNet.Hyperloop,Iterator design pattern of recursive enumerations which reduce the running time cost to a linear function by retaining the recursion stack between iteration steps.,4,1,2016,2024,1,https://github.com/AlexRadch/DrNet.Hyperloop
Iterator,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Iterator,DesignPatterns-Web.Core,"Including .Net Core 3.1-5.0-6.0, MVC, Layers Architecture, PostgreSQL, Entity Framework Core, Code First, ChainOfResponsibility, CQRS, TemplateMethod, Observer, UnitOfWork, Repository, Composite, Mediator, Iterator, Facade, Decorator Design Patterns Transactions.",3,1,2023,2024,1,https://github.com/erkanbstn/DesignPatterns-Web.Core
Iterator,Real-iterator-usage,Usage of iterator design pattern in the complex app,2,3,2016,2021,1,https://github.com/Bogdan-Lyashenko/Real-iterator-usage
Iterator,DesignPatterns.Iterator,Iterator Design Pattern,2,0,2023,2023,1,https://github.com/dFarkhod/DesignPatterns.Iterator
Iterator,design-patterns-examples,"Simple examples of the builder, factory method, singleton and iterator design patterns.",2,0,2022,2024,1,https://github.com/jmj0502/design-patterns-examples
Iterator,Parking-Lot-OOP,"Parking lot management system demonstrating SOLID principles, Object-Oriented-Programming and Design Patterns (Strategy, Iterator, Static Factory Method, Facade etc.)",2,1,2021,2023,2,https://github.com/israelElad/Parking-Lot-OOP
Iterator,Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF,"In this project; composite, iterator, proxy, template method and state design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2022,2022,1,https://github.com/kamilhan-karaismailoglu/Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF
Iterator,fynapp_backend,"Python Flask backend for FynApp. It can use DynamoDb or MongoDB. The DynamoDb interaction is made by mongoDb like calls. Software design patterns used: factory method, facade, iterator, template method, decorator.",2,0,2022,2023,1,https://github.com/tomkat-cr/fynapp_backend
Iterator,Restaurant_Management_System_MVC,"Built a RMS using Java Framework SpringBoot and React for Frontend. Incorporated Design patterns like Factory Pattern, Observer Pattern, Iterator Pattern in this project. Built as a part of Class Project for Subject OOAD Java.",2,0,2024,2024,1,https://github.com/vinay1103/Restaurant_Management_System_MVC
Iterator,TheGame,"This document describes the team work assignment for Telerik Academy students studying Object-Oriented Programming (OOP) – February 2014. Project Description Design and implement an object-oriented Role Playing Game by choice. Here are some suggestions: -	The world can be fantasy, sci-fi, modern, etc. -	You may have one or more heroes, gaining experience, having skills, wearing items, etc. -	You may have one or more players, fighting against a computer or against each other -	You may have enemies like creatures, machines, warriors, etc.  -	You may have items like swords, guns, armor, space-suits, etc. -	You may have skills like double-damage, teleportation, etc.  General Requirements Please define and implement the following object-oriented assets in your project: •	At least 5 interfaces (with one or more implementations) •	At least 15 classes (implementing the application logic) •	At least 3 abstract class (with inheritors) •	At least 1 exception class (with usage in your code) •	At least 3 levels of depth in inheritance •	At least 1 polymorphism usage •	At least 1 structure •	At least 1 enumeration •	At least 1 event (with subscribers) •	At least 1 design pattern (e.g. Composite, Singleton, Factory, Wrapper, Bridge, Command, Iterator, …) You might read about design patterns in Wikipedia, Sourcemaking, DoFactory and others. Additional Requirements •	Follow the best practices for OO design: use data encapsulation, use exception handling properly, use delegates and events like it is recommended in MSDN, use inheritance, abstraction and polymorphism properly, follow the principles of strong cohesion and loose coupling. •	Obligatory use Git to keep your source code and for team collaboration (you might use https://github.com/). TFS or SVN are not allowed. Use Git. •	Provide a class diagram (to visualize all types). Optional Requirements If you have a chance, time and a suitable situation, you might add some of the following to your project: •	Static members (fields, properties, constructor, etc.) •	Constants, generic types, indexers, operators •	Lambda expressions and LINQ •	Implementation of IEnumerable<T>, ICloneable, ToString() override •	Namespaces (if your classes are too much)  •	User interface (UI) – console, graphical, web or mobile Non-Required Work •	Completely finished project is not obligatory required. It will not be a big problem if your project is not completely finished or is not working greatly. This team work project is for educational purpose. Its main purpose it to experience object-oriented modeling and OOP in a real-world project and to get some experience in team working and team collaboration with Git.  Deliverables Put the following in a ZIP archive and submit it (each team member submits the same file): •	The complete source code. •	Brief documentation of your project (2-3 pages). It should provide the following information (in brief): o	Team name and list of team members o	Project purpose – what problem do you solve? o	Class diagram of your types o	The URL of your Git repository o	Any other information (optionally) •	Optionally provide a PowerPoint presentation designed for the project defense. Public Project Defense Each team will have to deliver a public defense of its work in from of the other students and trainers. You will have only 10 minutes for the following: •	Demonstrate the application (very shortly). •	Show the class diagram (just a glance). •	Show the source code in the Git web-based source code browser. •	Show the commits logs to confirm those team members who have contributed. •	Optionally you might prepare a PowerPoint presentation (3-4 slides). Please be strict in timing! Be well prepared for presenting maximum of your work for minimum time. Bring your own laptop. Test it preliminary with the multimedia projector. Open the project assets beforehand to save time. You have 10 minutes, no more. Give Feedback about Your Teammates You will be invited to provide feedback about all your teammates, their attitude to this project, their technical skills, their team working skills, their contribution to the project, etc. The feedback is important part of the project evaluation so take it seriously and be honest.",2,3,2014,2019,1,https://github.com/TeamSazerac/TheGame
Iterator,Priosner-Dilema,"Project 1 In this project, you will develop bots that play a simple game. Each bot has a different strategy. You will pit these bots against each other to determine which strategy is more successful in this context. These bots are incredibly simple, and consist of a few lines of code and methods that represent different strategies of play.  Teams Teams have been assigned for this project and will be posted on Blackboard. They are fixed - no switching or cooperating across team lines. It is up to teammates to ensure that their partner adheres to the American University Honor Code. You may use pair programming, however, you must each take turns in the driver role on your own laptop. I should see commits on Github for each of you to get full credit for this assignment.  Step 0 - Background Research. Both members should review the description for the Prisoner's Dilemma on Wikipedia. You do not need to become familiar with the intimate mathematical details of the Dilemma, just the general mechanism and the difference between the iterated dilemma and the non-iterated version (Introduction through the end of Section 3.1). This topic has been debated endless in a variety of fields, so there is a lot of additional material available if you want to dig deeper. For this assignment, you will only be required to be familiar with the basics (e.g., you will not need to understand the Nash equilibrium or the proof that goes with it). Both members should work together to devise five strategies for ""winning"" the prisoner's dilemma over a long number of iterations. I recommend first writing these strategies down in simple English rather than trying to jump directly into developing code. You may use the 'tit-for-tat' strategy as one of them, or come up with ones of your own. Optional There are several good videos that can help make these concepts a little clearer. I recommend this one, but there are many others. Step 1 - Create the Repo for your Team. Both members of your team will visit this link. This will create a repo for your team in Github. For this assignment, you will share a Github repo with your teammate. If you are the first member of your team to visit the link, you can create the team and the repo - make sure you create the right team. If you are the second member to click the link, then make sure you join the right team. Both members will clone the repository to your local machines (i.e., using git clone <URL>). You will then each have a local repository that is linked to the shared repository, and can work on the code together. As a reference for how to use git, I suggest this site, as it avoids some of the more complicated theory behind git and focuses on the bare minimum practicalities. Step 2 - Review the Provided Code. In the repository is a starter class, Prison, that has the bare minimum for the prisoner's dilemma. There is a variable for the last choice made by each of two prisoners, (i.e., Prisoner A and Prisoner B).  //The last choice of each prisoner.      boolean lastChoicePrisonerA = BETRAYED; //Set initially to BETRAYED for testing     boolean lastChoicePrisonerB; Two examples are given. Prisoner B is using a randomChoice() strategy, in which B will randomly choose to stay silent or betray Prisoner A. This strategy does not use prior information to make the decision - it is equivalent to flipping a coin. The provided code gives an example of a second strategy: betrayIfBetrayed(). If A betrayed last time, then B will betray also. However, if A stayed silent, B will randomly choose to stay silent or betray based on the results of a coin flip. The coin flip is generated using the Random class, a more thorough description of which can be found here.  public static boolean randomChoice(){     Random rand = new Random();     return rand.nextBoolean(); }  public static boolean betrayIfBetrayed(boolean lastChoice){     if(lastChoice == BETRAYED)       return BETRAYED;     else       return randomChoice(); } Step 3 - Write one method for each strategy. Following the design pattern for the example strategies, define one method for each of your team's five strategies (the example methods do not count). Assume that each prisoner can know the outcome of one or more previous encounters with the other prisoner through parameters passed to the method.  Step 3.5 - Commit and Push to Github Remember, this is not like using Blackboard for submitting assignments. As you are working with your teammate, you will need to frequently push code to the Github repo so that your teammate can access it. If you wait to the last minute, you could have conflicts that are difficult to resolve. It is much better to get into a rhythm with your partner early rather. To get full credit for your part in this, I need to see multiple commits from each team member.  Step 4 - Write a method for scoring the outcome If they both stay silent then both prisoners serve 1 year. If a prisoner stays silent and the other betrays, then the prisoner who stayed silent gets 3 years in prison while the other goes free. If both betray, then each prisoner serves 2 years. Write a method that assigns a score to a strategy based upon the outcome. A high score is a bad thing, as each point represents a number of additional years added to the prisoner's sentence.",2,5,2019,2023,1,https://github.com/GiannaW/Priosner-Dilema
Iterator,UX-Designer,"UX Designer  As a Product Designer, you will be responsible for working closely with a cross-functional teams to build and launch new experiences and features that impact the way urban Indians meet and date with a special focus on building a trustable platform for women. You will collaborate with engineers, designers, researchers, and analysts during the entire product lifecycle. You'll also work closely with the co-founders and VPs of various functions.  - The role demands great execution, bold innovation, obsession with quality, solving problems with creativity while keeping the user in mind and ambition to take projects to the finish line.  - Our approach to design is completely based on insights coming from various sources, quantitative and qualitative both that include Analytics data, User Testing, Experiments run on product etc. This helps us maximize the potential of product to serve the users while minimizing absolute opinions. You should have the skills to work across the full spectrum of Design - UX, UI, Interaction, Prototyping, Testing and kick ass in those areas.  Responsibilities:  - Collaborate with stakeholders, team members, and clients in an agile, iterative user-centered design process to design features, write user stories and work with development teams to ensure correct implementation  - Develop deep understanding of real-world customer needs and business goals unique to our clients, and collect valuable user feedback and insight to inform product decisions  - Take ownership for the full stack UX-Design process for the product including wire-framing, prototyping, user research, and defining & following design systems.  - Have a data driven approach to your designs and key milestone deliverables to peers and executive level stakeholders  - Review product analytics to derive behavioral insights for adoption, growth and user engagement  Qualifications :  - 1-6 Years of experience in a comparable role (User Experience, UI Design)  - Bachelor's degree in Interaction/ Interface/ Experience/ Visual/ Product design preferred.  - Expertise in digital design tools (Sketch, Invision, etc) and well-versed in material design, pattern libraries, and design methodologies  - Experience working with development teams in a wide variety of engagements, including concept development, prototyping, and productization.  - Experienced in design for iOS, Android and Mobile Web Apps.  - Ability to rapidly grow (or come up with) new ideas and create fabulous storyboards, mock-ups, and functional prototypes  Skills : Research, User Experience (UX), User-centered Design, User Interface Design, Design, Usability Testing, User Stories, Productization, Storyboarding, Design Tools, Wireframing, Agile Methodologies  Location : Gurgaon, India",2,0,2019,2024,0,https://github.com/Amandeepwazir/UX-Designer
Iterator,design-pattern-iterator,The Iterator Pattern is a relatively simple behavioral design pattern that provides a simple way to iterate through the collection of objects.,1,2,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-iterator
Iterator,iterator,Iterator design pattern,1,0,2023,2023,1,https://github.com/starseeker-code/iterator
Iterator,Matrix,Iterator Design Pattern ,1,0,2021,2023,2,https://github.com/moab374a/Matrix
Iterator,Iterator,Design patterns Iterator in c#,1,0,2021,2023,1,https://github.com/EduardoReisDev/Iterator
Iterator,Iterator,An iterator design pattern example,1,0,2021,2021,1,https://github.com/Luh-Henrique/Iterator
Iterator,Predicate_Iterator,Iteretor Design Patterns,1,0,2021,2023,1,https://github.com/moab374a/Predicate_Iterator
Iterator,java_gof_iterator,"design pattern ""iterator"" in java",1,0,2015,2016,1,https://github.com/osbominix/java_gof_iterator
Iterator,Iterator,exemplo Design Pattern Iterator implementado - pilha de dados como exemplo,1,0,2011,2013,1,https://github.com/JeffersonAlmeida/Iterator
Iterator,DesignPattern-Iterator,Example implementation of Iterator design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Iterator
Iterator,php-design-patterns-iterator,PHP Design Patterns - Iterator Pattern Sample,1,0,2018,2020,1,https://github.com/rito328/php-design-patterns-iterator
Iterator,refactor-design-pattern,https://refactoring.guru/ja/design-patterns/iterator,1,0,2024,2024,1,https://github.com/yuki-katayama/refactor-design-pattern
Iterator,progress-iterator,A progress iterator using all the design patterns,1,1,2021,2022,1,https://github.com/ddprrt/progress-iterator
Iterator,ITERATOR_DESIGN_PATTERN,Concrete and abstract iterator design pattern in C++!,1,0,2022,2023,2,https://github.com/DaddyChucky/ITERATOR_DESIGN_PATTERN
Iterator,iterator_design_pattern,Implementation of the iterator design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/iterator_design_pattern
Iterator,JavaIteratorDataStructures,Practice using the Iterator design pattern in Java,1,0,2023,2024,1,https://github.com/amq391/JavaIteratorDataStructures
Iterator,visitor-iterator-design-pattern,An example of visitor and iterator design pattern,1,0,2020,2022,1,https://github.com/1itachi/visitor-iterator-design-pattern
Iterator,PhpDesignPatterns-Iterator,Iterator,1,0,2017,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Iterator
Iterator,OneMoreEmailReader,"Python's email reader that implements ""Iterator"" design pattern",1,0,2018,2019,0,https://github.com/andrewdmn/OneMoreEmailReader
Iterator,patterns1,"Iterator, Observer, Strategy, Dependency Injection Design Pattern sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns1
Iterator,meanheap_designPatterns,"Minheap implementation with design patterns - iterator , strategy, decorator, filter, null object pattern",1,0,2014,2016,1,https://github.com/Bela2711/meanheap_designPatterns
Iterator,Iterators-In-C,Implementation of the Iterator and Strategy design patterns in C,1,0,2021,2021,2,https://github.com/IamShubhamGupto/Iterators-In-C
Iterator,Iterator-no-bib,An example of the iterative design pattern without using libraries,1,0,2021,2021,1,https://github.com/Luh-Henrique/Iterator-no-bib
Iterator,OOD,"Design Patterns project: MVC, Singleton, file iterator, Observer, Command, Memento.",1,0,2023,2023,1,https://github.com/RamDvlp/OOD
Iterator,Iterator-Design-Patterns,I have used Iterator Pattern for Binary Search Tree where I created generic Iterator class for searching a particular pattern from the tree. I have used Null pattern for the leaf node to avoid null checks,1,0,2011,2014,1,https://github.com/hetang/Iterator-Design-Patterns
Iterator,Iterator-DesignPattern,Exercises for the 6th semester design pattern subject at Hue Universiy of Sciences,1,0,2024,2024,1,https://github.com/thanhdatpb/Iterator-DesignPattern
Iterator,design-patterns,"Design patterns in Java from lab exercies. Composite, Iterator, Visitor, Factory",1,0,2014,2023,0,https://github.com/tlehwalder/design-patterns
Iterator,Design-Patterns,JAVA Design Pattern,1,0,2021,2021,1,https://github.com/MaheshVegada/Design-Patterns
Iterator,File-Management-System_implementing_Design_Patterns,"File Management System implementing Design Patterns uses Command,Composite,Iterator and Decorator",1,0,2023,2023,1,https://github.com/MuhammadSuffian/File-Management-System_implementing_Design_Patterns
Iterator,MI-PAA-Iterator,One of homeworks at CTU FIT in Prague for subject MI-DPO (Design patterns and OOP),1,0,2011,2013,1,https://github.com/janondrusek/MI-PAA-Iterator
Iterator,Xonix,"Java game using Model-view-controller, singleton, proxy, strategy and iterator Design Patterns",1,0,2015,2017,1,https://github.com/davidsaechao/Xonix
Iterator,Music_Player,Python Audio Player using pygame gui and implement MVC  and Iterator Design pattern.,1,0,2021,2024,1,https://github.com/GalorSiboni/Music_Player
Iterator,Store_Final_Project_Design_Patterns," Streaming Binary I/O, Collections, Design Patterns: Comparator, Iterator (For file), List Iterator, Observer, MVC, Singleton, Command, Adapter, Decorator, Memento and Multi Treading Systems",1,0,2021,2022,1,https://github.com/RonShmaya/Store_Final_Project_Design_Patterns
Iterator,Design-Patterns,"This project implements an arithmetic expressions evaluator using the Composite-, Bridge-, Iterator-, Strategy-, Factory-, Interpreter- and Visitor-Pattern.",1,0,2018,2022,1,https://github.com/MHaselmaier/Design-Patterns
Iterator,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Iterator,StoreCashier_OODesign2021A,"Object-Oriented-Design course project JavaFx, MVC, Design Patterns: Command, Memento, File Iterator, Singleton, Threads...",1,0,2021,2021,2,https://github.com/ShahaRaz/StoreCashier_OODesign2021A
Iterator,Map,My implementation of std::map using red-black tree data structure and iterator design pattern.,1,0,2022,2022,1,https://github.com/cristian-george/Map
Iterator,10-design-patterns-in-typescript,"Implementations of Design Patterns in TypeScript for demonstration purposes. Some of them include Facade, Iterator, Factory, etc.",1,0,2022,2025,1,https://github.com/andersonbosa/10-design-patterns-in-typescript
Iterator,SnakeLadderGame,"Implementation contains graphical interface and the use of design patterns such as factory, SINGLETON and ITERATOR, in java",1,0,2021,2021,1,https://github.com/Ramonlobo633/SnakeLadderGame
Iterator,MVC_Chef_Game_Application,"A Java client game application based on MVC and other design patterns like Observer, Decorator, Iterator, and Factory.",1,0,2018,2019,2,https://github.com/ZhepuZhao/MVC_Chef_Game_Application
Iterator,Python-Flashcards,"Variations of flashcards using Python, Inquirer for CLI, state and iterator design patterns, and Django in a Docker container.",1,0,2023,2023,1,https://github.com/jonfernq/Python-Flashcards
Iterator,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Iterator,Java-Board-Games,"Implemented three android board games (Sliding Tiles, Simon Says, Matching Card) in a group of five, designed CRC, applied design patterns iterator, observer, serialize and strategy, used exception, interface, etc…. ",1,0,2019,2022,1,https://github.com/joydu902/Java-Board-Games
Iterator,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Iterator,Python_OOP_SoftUni_2021,"Understand the OOP paradigm, Creating a hierarchy of classes and inheritance , SOLID Principles, Working with Iterators and Generators,  Applying the OOP principles,  Component testing,  Working with decorators,  Design Patterns",1,0,2021,2022,1,https://github.com/HadzhieV777/Python_OOP_SoftUni_2021
Iterator,Conference_Interface_Application,"An Application that acts as an interface for users in a Conference Event. Developed using Java Swing and design techniques like Abstract Factory Method, Dependency Injection and Iterator Design Pattern. There are 3 different user levels and each have different tasks. ",1,0,2021,2021,1,https://github.com/Dhruv359/Conference_Interface_Application
Iterator,PhotoAlbumApp,"This project is a desktop-based Photo Album Manager built using Java Swing. It demonstrates the use of key software design patterns: Iterator, MVC (Model-View-Controller), and Strategy. The program allows users to manage a photo album by adding, viewing, deleting, and sorting photos.",1,0,2024,2024,1,https://github.com/andrianthan/PhotoAlbumApp
Iterator,ObjectModelling,"Pickup a problem statement, approach it systematically to come with a Low Level Design and implement it.  There is a lot of research and development effort that goes into building an enterprise software, which serves the customers in achieving their business goals. There are a series of ideas and techniques executed to build the software iteratively and adapt to the changing requirements of the end users. This is where good low level design architecture helps.  During the course of this Micro-Experience, the developer:  Understood the implementation of the Movie booking problem statement provided by Crio.Do.  Built a Hackerrank like contest platform by applying your Core Java + design skills  Designed & implemented the classes required for a contest to work.  Implemented the business logic of running a simulated contest.  Built a JukeBox problem statement from scratch.  Skills Learned:  Clean Architecture,Object Oriented Design,Java, Unit Testing, Test Driven Development,Design Patterns, SOLID Principles",1,0,2022,2023,1,https://github.com/pravar1818/ObjectModelling
Iterator,New-Front-End-Web-Development-roles-in-San-Francisco,"The Digital team is responsible for enhancing the desktop/mobile/tablet experiences for our current and prospective customers. The Digital technology Team is looking for top-notch Senior Web Developers. We are building best in class Digital applications and API’s. As a Senior Development Engineer, you have mastered HTML, CSS, and JavaScript and have strong programming background in Java/J2EE or .Net. You have a passion for creating the best user experience possible. You have a deep understanding of the browser's DOM, and you understand the difference between the various browsers.   Responsibilities: - Design and write code for web/mobile HTML5 AJAX applications that scale to high-volume production quality. - Engineer a world-class platform with an eye towards rapid iteration and creative problem solving. - Prototype creative solutions quickly, and be able to collaborate with others in crafting and implementing your technical vision. - Contribute and collaborate in creation and consumption of open, standards-based solutions, while working with existing technologies and infrastructure. - Identify opportunities for process and tool improvements and drive those from concept to implementation. - R&D in emerging technologies.   Preferred Skills: - Ability to work in agile scrum development environment - Strong HTML5, CSS, JavaScript, AJAX, JSON skills & solid programming background in Java/J2EE or .Net for implementing web technologies. - Solid understanding of multithreaded software design. - Solid understanding of the AJAX and Spring frameworks. - Understanding (preferred experience) in JQuery, NodeJS, AngularJS, extJS, SenchaTouch Framework, Promise, and other frameworks like (FlightJS, requireJS, wireJS , AngularJS) - Strong knowledge of server side design patterns and continuous delivery principles. - Excellent understanding of development concepts and SDLC methodologies. - Strong customer focus, excellent problem solving and analytical skills. - Strong verbal and written communication skills. - Excellent verbal and written communication skills. - Ability to work in a rapidly changing environment.   Qualifications: - 2+ years of web development experience, experience working on Windows and Java platforms - 1+ years experience with HTML5, CSS, JavaScript, AJAX and Spring frameworks. - BS or MS in Computer Science or related field    If you are qualified, available, interested, planning to make a change, or know of a friend/colleague who might have the required qualifications and interest, please contact me ASAP at bpatterson@judge.com.   Please NOTE, in considering candidates, time is of the essence, so please respond ASAP and include: - A current copy of your CV (.DOC) - Current and Asking Rate/Compensation - Availability to Interview/Start - 3-4 sentence summary or bullet point list of your specific qualifications for this position - Any other pertinent information that may impact your qualifications for this position   Thank you very much for your time and consideration!  I look forward to hearing from you!   Sincerely, Bobby Patterson Recruiter 4030 W. Boy Scout Blvd Suite 825  Tampa, Florida 33607 (813) 463-9713 (813) 286-0668 fax bpatterson@judge.com www.judge.com   The Judge Group  Consulting  Staffing  Training   A Global Leader in Professional Services since 1970",1,0,2014,2024,0,https://github.com/pattersonbj26/New-Front-End-Web-Development-roles-in-San-Francisco
Iterator,SW-Lab-U04_W10_D47_49-Photorama-iter2,Second iteration of Photorama App that displays Flickr photos in a grid using UICollectionView class following the data source design pattern,0,26,2021,2021,1,https://github.com/tuwaiq-tabuk-ios/SW-Lab-U04_W10_D47_49-Photorama-iter2
Iterator,IteratorDesignPattern,Basisproject voor opdracht Iterator Design Pattern ,0,2,2019,2019,1,https://github.com/NathanStrik/IteratorDesignPattern
Iterator,Iterator,Behavioral Design Pattern in C# | Iterator Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Iterator
Iterator,Iterator,Design Pattern Iterator,0,0,2022,2022,1,https://github.com/aliounemane2/Iterator
Iterator,iterator-design-pattern,"This repository, holds an implementation of the iterator design pattern, written in java. Created to help reinforce the concepts, spoken about during the presentation.",0,2,2020,2020,0,https://github.com/SedemQuame/iterator-design-pattern
Iterator,iterator,Design Pattern - Iterator,0,0,2024,2024,2,https://github.com/denny6172/iterator
Iterator,Iterator,Design pattern: Iterator,0,0,2015,2015,1,https://github.com/jinguiwu/Iterator
Iterator,DP_iterator0,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_iterator0
Iterator,DP_iterator2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_iterator2
Iterator,DP_iterator1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_iterator1
Iterator,Iterator,iterator design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Iterator
Iterator,IteratorDP,Iterator Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/IteratorDP
Iterator,iterator,Iterator Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/iterator
Iterator,IteratorDesignPattern,Iterator Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/IteratorDesignPattern
Iterator,Iterator,[Data Structure] Design-Pattern _Iterator,0,0,2022,2022,1,https://github.com/Reese-Yoon/Iterator
Iterator,dp-iterator,Design pattern - iterator,0,0,2022,2024,1,https://github.com/jiji-thecat/dp-iterator
Iterator,Iterator,Implementation of design pattern Iterator,0,0,2018,2018,0,https://github.com/muska2203/Iterator
Iterator,Codigo-047---Menus-Diferentes,Design Pattern Iterator,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-047---Menus-Diferentes
Iterator,iteratorPattern,Voor Presentatie Design Patterns,0,0,2020,2020,1,https://github.com/BeBoRE/iteratorPattern
Iterator,Iterator,Iterator Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Iterator
Iterator,Design-Pattern-Iterator,Design Pattern,0,0,2016,2016,1,https://github.com/aakash140/Design-Pattern-Iterator
Iterator,Iterator-pattern,Design patterns demo,0,0,2020,2020,1,https://github.com/JamieKalloe/Iterator-pattern
Iterator,IteratorPattern,Iterator Design Pattern in Java,0,0,2022,2022,1,https://github.com/hansel-cmd/IteratorPattern
Iterator,ArbreBinaireIterator,Design Pattern Eval,0,0,2019,2019,1,https://github.com/erivaud/ArbreBinaireIterator
Iterator,IteratorDesignPattern,Iterator Design Pattern using Java,0,0,2017,2017,1,https://github.com/tusharpahuja09/IteratorDesignPattern
Iterator,IteratorPatternDemo,Demo of Iterator Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/IteratorPatternDemo
Iterator,iterator-design-pattern,C# - Iterator design pattern,0,0,2023,2023,1,https://github.com/flcristian/iterator-design-pattern
Iterator,Iterator-HW,iterator design pattern c#,0,0,2022,2022,1,https://github.com/StuXet/Iterator-HW
Iterator,IteratorDesignPattern,Iterator Design Pattern in Java,0,0,2023,2023,1,https://github.com/Yash-23/IteratorDesignPattern
Iterator,Iterator_Composite_Pattern,Iterator&Composite Design Pattern,0,0,2024,2024,1,https://github.com/bluesun147/Iterator_Composite_Pattern
Iterator,CSharp_Behavioral_Iterator,Behavioral Iterator Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_Iterator
Iterator,l2-iterator,Iterator design pattern example,0,0,2017,2017,0,https://github.com/keresztesvitez/l2-iterator
Iterator,iterator-design-pattern-example,iterator-design-pattern-example,0,0,2017,2017,1,https://github.com/DesignPatterns101/iterator-design-pattern-example
Iterator,Iterator-Design-Pattern,iterator design pattern implementation,0,0,2025,2025,1,https://github.com/Saher-debug/Iterator-Design-Pattern
Iterator,Strategy-Iterator-Null-Decorator-Patttern-on-Minheap,Design Patterns,0,0,2015,2015,1,https://github.com/rohitvyavahare/Strategy-Iterator-Null-Decorator-Patttern-on-Minheap
Iterator,iterator-pattern,Design pattern: Iterator pattern,0,0,2021,2021,1,https://github.com/TomSawyer404/iterator-pattern
Iterator,Iterator,A design pattern Iterator in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Iterator
Iterator,iterator,Java implementation of the iterator design pattern,0,0,2021,2021,1,https://github.com/renanrfranca/iterator
Iterator,week4-Assignment-IteratorDP,example on Iterator Design Pattern ,0,0,2021,2021,1,https://github.com/Mykhan12/week4-Assignment-IteratorDP
Iterator,IteratorPattern,Iterator design pattern for Task 2 ,0,0,2022,2022,1,https://github.com/ElBarBary01/IteratorPattern
Iterator,IteratorPattern,Head First Design Patterns Chapter 9,0,0,2023,2023,1,https://github.com/DustinNation/IteratorPattern
Iterator,IteratorDesignPattern,Sample code for iterator design pattern.,0,0,2017,2017,0,https://github.com/LearnShareKnowledge/IteratorDesignPattern
Iterator,Iterator,CIS 476/566 Software Architecture and Design Patterns,0,0,2022,2022,1,https://github.com/kyoushi/Iterator
Iterator,IteratorDesignPatternDemo,Java program demonstration Iterator design pattern,0,0,2016,2016,1,https://github.com/aniket91/IteratorDesignPatternDemo
Iterator,Iteratory,Example of Iterator design Pattern,0,0,2024,2024,1,https://github.com/DawidPK/Iteratory
Iterator,IteratorArray,Implementation of iterator design pattern in array,0,0,2015,2015,1,https://github.com/N3ll/IteratorArray
Iterator,design-pattern-iterator,design pattern iterator nodeJs Jest,0,1,2021,2021,2,https://github.com/DevoteamModernApplications/design-pattern-iterator
Iterator,library-iterator-pattern-example,C# - Iterator design pattern example,0,0,2023,2023,1,https://github.com/flcristian/library-iterator-pattern-example
Iterator,iterator-design-pattern,Iterator design pattern for CSCE247,0,0,2021,2021,1,https://github.com/bjr0421/iterator-design-pattern
Iterator,TP1GraphDesignPattern,Implementation du design pattern Iterator.,0,0,2017,2017,1,https://github.com/Koialle/TP1GraphDesignPattern
Iterator,engComp.padroesDeProjeto.iterator,Iterator design pattern in java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.iterator
Iterator,DesignPattern-Iterator,Design pattern - Iterator pattern example,0,0,2022,2022,1,https://github.com/jchong-dalcomlab/DesignPattern-Iterator
Iterator,DesignPattern-Iterator,Iterator Design Pattern in Swift,0,0,2018,2018,1,https://github.com/DavidKmn/DesignPattern-Iterator
Iterator,iterator-dp,Iterator Design Pattern on PHP,0,0,2023,2023,2,https://github.com/mtrosin/iterator-dp
Iterator,Java-Iterator-Pattern,Iterator design pattern with java,0,0,2024,2024,1,https://github.com/ramalt/Java-Iterator-Pattern
Iterator,iterator-super-power,Iterator design pattern using reflection.,0,0,2018,2020,1,https://github.com/cjlcarvalho/iterator-super-power
Iterator,Iterator-Pattern,Behavioral Design Patterns: Iterator Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Iterator-Pattern
Iterator,iterator,The implementation of the Iterator design pattern in C++. ,0,0,2023,2023,1,https://github.com/derefff/iterator
Iterator,IteratorDesignPatternExample,Example of a Java Iterator Design Pattern,0,0,2024,2024,1,https://github.com/divpatel03/IteratorDesignPatternExample
Iterator,IteratorPattern,Head First Design Patterns Chapter 9 Part 1,0,0,2023,2023,0,https://github.com/DNate9427/IteratorPattern
Iterator,iterator-pattern,Implementation of the iterator design pattern,0,0,2016,2016,1,https://github.com/kuzmicheff/iterator-pattern
Iterator,iterator-pattern,Implementation by Java Script ( Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/iterator-pattern
Iterator,Projeto-Iterator-Exemplo-Prof,Exercício de programação - Design Patterns,0,0,2021,2021,1,https://github.com/rogeriotadeudosreis/Projeto-Iterator-Exemplo-Prof
Iterator,iterator-pattern,A demo of Iterator Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/iterator-pattern
Iterator,Iterator_Pattern,"C++, Software design pattern: Iterator pattern",0,0,2020,2020,3,https://github.com/MarcJimenez99/Iterator_Pattern
Iterator,iterator-example,An implementation of 'Iterator' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/iterator-example
Iterator,Adapter-Pattern-Enumeration-Iterator,Entwurfsmuster/Design-Pattern S 250 ,0,0,2023,2023,1,https://github.com/Bigbob9/Adapter-Pattern-Enumeration-Iterator
Iterator,CS468-Final,Iterator Design Pattern. Implementation of a design pattern exampled by Derek Banas.,0,0,2024,2024,1,https://github.com/Alexamzi/CS468-Final
Iterator,PartC372Final,This project implements the temlate design pattern and the iterator design pattern,0,0,2020,2020,0,https://github.com/TailonR/PartC372Final
Iterator,Pipeline,Python Pipeline Design Pattern,0,0,2022,2022,1,https://github.com/RahulDas-dev/Pipeline
Iterator,iterator-design-pattern,Iterator Design Pattern Implementation in C#,0,0,2024,2024,1,https://github.com/PrashDev425/iterator-design-pattern
Iterator,MergedEateriesIterator,Iterator Design Pattern - implementation and practice,0,0,2018,2018,1,https://github.com/bwielk/MergedEateriesIterator
Iterator,java-iterator-pattern,Demonstration of Java Iterator Design Pattern,0,0,2019,2019,1,https://github.com/fmandelli/java-iterator-pattern
Iterator,Iterator-DesignPattern,Iterator Design Pattern Implementation in C#,0,0,2020,2020,1,https://github.com/KJayanthKumar/Iterator-DesignPattern
Iterator,iterator-design-pattern,Implement iterator design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/iterator-design-pattern
Iterator,assignment8-Java,Iterator/Iterable and Observer/Observable Design Patterns,0,0,2018,2018,1,https://github.com/kaorios/assignment8-Java
Iterator,week4-iterator-design-pattern,An example on iterator design pattern,0,0,2021,2021,1,https://github.com/Haseeb1111/week4-iterator-design-pattern
Iterator,ChainOfResponsibility,uses iterator and other design patterns,0,0,2018,2018,1,https://github.com/pikede/ChainOfResponsibility
Iterator,IteratorDesignPatternExample,A simple Demo for the Iterator Design Pattern,0,0,2021,2021,1,https://github.com/LuisMartinSchick/IteratorDesignPatternExample
Iterator,Iterator,This project has a goal to implement a Iterator design pattern.,0,0,2016,2016,1,https://github.com/gabrielnaoto/Iterator
Iterator,Demo_IteratorPattern,Source code demo from ebook: Head First Design Pattern,0,0,2015,2015,1,https://github.com/KhoaSuperman/Demo_IteratorPattern
Iterator,Iterator-Composite-Design-Pattern,Learn from Head First Design Pattern,0,0,2023,2023,1,https://github.com/thang-39/Iterator-Composite-Design-Pattern
Iterator,IteratorDesignPatternAssignment,Iterator Design Pattern Assignment for CSCE 247 Professor Plante,0,0,2019,2019,1,https://github.com/cameronbrandenburg/IteratorDesignPatternAssignment
Iterator,IteratorDP,This is an example codes implemented by Iterator Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/IteratorDP
Iterator,iterator-design-pattern,Example implementation of the iterator design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/iterator-design-pattern
Iterator,CardGame,Projeto de Design Patterns,0,1,2024,2024,3,https://github.com/AdrianoReusSavi/CardGame
Iterator,iterator-example2,"An example of ""Iterator"" design pattern implementation",0,0,2023,2023,1,https://github.com/vladdubceac/iterator-example2
Iterator,Design-Pattern-Iterator-Pattern,This is Iterator design pattern in c#,0,0,2019,2019,1,https://github.com/BenzhaminKim/Design-Pattern-Iterator-Pattern
Iterator,design_pattern,"design pattern: composite,singleton,observator,adapter,iterator",0,0,2019,2019,1,https://github.com/ayoubridouani/design_pattern
Iterator,java-design-patterns,"Proxy, Facade, Iterator, Template design pattern examples",0,0,2019,2019,10,https://github.com/kumuddhanvijay/java-design-patterns
Iterator,IteratorPatternExample,Example code to showcase the Iterator Design Pattern in Java,0,0,2022,2022,1,https://github.com/scotttlee/IteratorPatternExample
Iterator,IteratorDesignPattern,This is a Java implementation of the Iterator design pattern,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/IteratorDesignPattern
Iterator,DesignPatterns_chapter-9,Iterator and Composite patterns,0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-9
Iterator,iterator_template,Generic way to design an Iterator Design Pattern,0,0,2024,2024,1,https://github.com/inglombardi/iterator_template
Iterator,iterator-patterns,a collection of design patterns for ES6 Iterators,0,0,2019,2019,1,https://github.com/somesocks/iterator-patterns
Iterator,design_patterns_2,design_patterns_2,0,0,2019,2023,1,https://github.com/stefanmiletic-pmf/design_patterns_2
Iterator,Iterator-Pattern-Powerpoint,Presentation which explains the iterator (behavioural) design pattern.,0,0,2018,2018,1,https://github.com/alexcharlesthain/Iterator-Pattern-Powerpoint
Iterator,DesignPatterns-Iterator,,0,0,2018,2018,1,https://github.com/brianstoiber/DesignPatterns-Iterator
Iterator,DesignPatterns-Iterator,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Iterator
Iterator,DesignPatterns-Iterator,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Iterator
Iterator,DesignPatternsIterator,,0,0,2018,2018,0,https://github.com/xufeixianggithub/DesignPatternsIterator
Iterator,Iterator-Desing-Pattern,Iterator Design Pattern We Use in Real Life,0,0,2024,2024,0,https://github.com/TheAbdulkadir27/Iterator-Desing-Pattern
Iterator,DesignPatterns-Iterator,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Iterator
Iterator,DesignPatterns_Iterator,,0,0,2021,2021,1,https://github.com/RVSN451/DesignPatterns_Iterator
Iterator,Builder-Iterator-Chain-of-Responsibilities,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/Builder-Iterator-Chain-of-Responsibilities
Iterator,DesignPatterns-Iterator,,0,0,2018,2018,1,https://github.com/marcilioreis/DesignPatterns-Iterator
Iterator,DesignPatterns-Iterator,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Iterator
Iterator,DesignPatterns_Iterator,,0,0,2022,2022,1,https://github.com/Prod4Oz/DesignPatterns_Iterator
Iterator,DesignPatternsIterator,,0,0,2022,2022,1,https://github.com/SergyProg/DesignPatternsIterator
Iterator,poc-iterator,Un POC pour expliquer le fonctionnement du Design Pattern,0,0,2022,2022,1,https://github.com/LaurentQ56/poc-iterator
Iterator,IteratorAndCompositePatterns,Head First Design Patterns - Chapter 9 - The Iterator and Composite Patterns,0,0,2020,2020,0,https://github.com/Ruoyu111/IteratorAndCompositePatterns
Iterator,Software-Design-Project,"Software design patterns with java, implement different design patterns like Iterator, Strategy, flyweight and singleton",0,0,2022,2022,1,https://github.com/Soroyesodiq/Software-Design-Project
Iterator,NotificationMessage,Notification Message  by using Iterator Design Pattern (C#),0,1,2016,2016,0,https://github.com/gmershad/NotificationMessage
Iterator,Java-Iterator-Design-Pattern-JUnit-Test,JUnit test for Iterator design pattern (IteratorTest.java),0,0,2019,2019,1,https://github.com/Dyurekdeler/Java-Iterator-Design-Pattern-JUnit-Test
Iterator,DesignPattern,"Design Patterns in java like factory , singleton, Iterator.",0,0,2018,2019,1,https://github.com/YPreety/DesignPattern
Iterator,Ceis420FinalProject,Iterator Design Pattern Console Application using abstract class,0,0,2024,2024,0,https://github.com/handipaliem76/Ceis420FinalProject
Iterator,DesignPatterns,"Project with design patterns: Iterator, Singleton, Observator, Decorator, Factory Method",0,0,2021,2021,1,https://github.com/MateuszKozik/DesignPatterns
Iterator,Iterator-Design-Pattern,A small program built using the iterator design pattern,0,0,2021,2021,1,https://github.com/jsulumich/Iterator-Design-Pattern
Iterator,IteratorDesignPatterns,,0,0,2019,2019,0,https://github.com/kabalord/IteratorDesignPatterns
Iterator,DesignPatterns-Behavioral-Iterator,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-Iterator
Iterator,IteratorDesign_patterns,,0,0,2019,2019,1,https://github.com/ahmedco82/IteratorDesign_patterns
Iterator,Design-Patterns,Singleton Adapter Iterator ,0,0,2021,2021,0,https://github.com/ahmedkhalid5050/Design-Patterns
Iterator,Phonebook-Iterator-Pattern-EX,This exercise follows the Iterator design pattern in TypeScript.,0,0,2022,2022,1,https://github.com/Maayanalt/Phonebook-Iterator-Pattern-EX
Iterator,IteratorBAU,a simple example of how iterator design pattern works and what is used for .,0,0,2021,2023,1,https://github.com/sepidehnaghshineh/IteratorBAU
Iterator,JavaDesignPatterns-Iterator,Iterator,0,0,2020,2020,1,https://github.com/Jagepard/JavaDesignPatterns-Iterator
Iterator,DesignPatterns,"exercises on various design patterns like composite, decorator, state, iterator, observer, strategy, etc.",0,0,2018,2019,1,https://github.com/nirbhay-kekre/DesignPatterns
Iterator,RbDesignPatterns-Iterator,Iterator,0,0,2020,2020,1,https://github.com/Jagepard/RbDesignPatterns-Iterator
Iterator,design-patterns,This project uses the singleton and iterator design patterns.,0,0,2020,2025,1,https://github.com/SNHU-projects/design-patterns
Iterator,OO-Assignment-3,"Object Oriented Assignment 3, covering the iterator design pattern",0,0,2019,2019,1,https://github.com/EVogel1999/OO-Assignment-3
Iterator,Python-Register,Register User System Using Iterator Design Pattern with Python,0,0,2018,2018,1,https://github.com/LERUfic/Python-Register
Iterator,excel-parser,Excel parsing library to iterator design pattern in JAVA ,0,1,2017,2017,1,https://github.com/dickens84/excel-parser
Iterator,csc462iterator,Chapter 9 of Head First Design Patterns in class exercises,0,0,2015,2015,1,https://github.com/ComputingSciencesAtElon/csc462iterator
Iterator,js-oop-behavioral-desing-patern-iterator,Example of OOP Iterator (Behavioral) Design Pattern in JS,0,0,2019,2019,1,https://github.com/edwards33/js-oop-behavioral-desing-patern-iterator
Iterator,DesignPattern-Learning-Implementation,"Design Patterns: Bridge pattern, Factory Pattern, Facade pattern, Iterator Pattern, Visitor Pattern, Singleton pattern, Filter Design pattern ",0,0,2019,2021,1,https://github.com/MayankBatra005/DesignPattern-Learning-Implementation
Iterator,Iterator-Pattern-in-TypeScript,A simple implementation of Iterator Design Pattern in TypeScript,0,0,2018,2018,0,https://github.com/anilburakbilsel/Iterator-Pattern-in-TypeScript
Iterator,IteratorPattern_Program,A Java Program that retrieves the type of Food using the Iterator Design Pattern,0,0,2020,2020,1,https://github.com/atiftirmizi/IteratorPattern_Program
Iterator,DesignPatterns_HW3Iterator,,0,0,2023,2023,1,https://github.com/semyonsavenkov/DesignPatterns_HW3Iterator
Iterator,DesignPatterns_CompositeWithIterator,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_CompositeWithIterator
Iterator,DesignPatterns_Assign5Iterator,,0,1,2015,2015,1,https://github.com/jfelts1/DesignPatterns_Assign5Iterator
Iterator,IteratorPattern_Example,You can reach the article via https://thecodeprogram.com/explanation-of-iterator-design-pattern,0,0,2020,2020,1,https://github.com/thecodeprogram/IteratorPattern_Example
Iterator,Design-Patterns-Javascript,Iterator pattern practice,0,0,2021,2021,0,https://github.com/TomSpencerLondon/Design-Patterns-Javascript
Iterator,IteratorDesignSoftEngExample,Example for a Software Engineering class related to implementation of Iterator Design Pattern,0,0,2021,2021,2,https://github.com/PedroCardouzo/IteratorDesignSoftEngExample
Iterator,Design-Patterns,Padrão de Projeto Iterator P3,0,0,2020,2020,1,https://github.com/nLucasx/Design-Patterns
Iterator,DesignPatterns-1,"Implementation of Iterator, null object, decorator and strategy patterns for min - max heap",0,0,2014,2014,0,https://github.com/PayalGodse/DesignPatterns-1
Iterator,Iterator_Look_N_Say,Iterator design pattern implementation for look and say number sequences,0,0,2023,2023,1,https://github.com/srijharao/Iterator_Look_N_Say
Iterator,Iterator-Design-Pattern-EX,This is a Typescript EX that practices Iterator-design-pattern.,0,0,2022,2022,1,https://github.com/LiatHanunu/Iterator-Design-Pattern-EX
Iterator,Iterator-Pattern,Iterator Design Pattern: mecanism pentru parcurgerea usoara a diferitelor colectii de date.,0,0,2022,2022,1,https://github.com/PrisacariuAndrei/Iterator-Pattern
Iterator,iterator-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Iterator em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/iterator-java
Iterator,Design_Patterns,"Singleton, Repository, Facade, Proxy, IOC, Iterator",0,0,2020,2020,1,https://github.com/ronaldris21/Design_Patterns
Iterator,design-patterns,"Decorator, Composite, Iterator, Strategy, Template Method",0,0,2016,2017,1,https://github.com/nikolaynizruhin/design-patterns
Iterator,iterator,"Simple project demonstrating the Iterator design pattern. For this one, I made three classes representing a functioning restaurant.",0,0,2022,2022,1,https://github.com/Piazzi/iterator
Iterator,Game-X-O,GameX-O with design patterns Command and Iterator and Observer,0,0,2023,2023,1,https://github.com/IbrahemAlhamoud/Game-X-O
Iterator,DesignPatternsProj1,"A project meant to showcase the following design patterns: Iterator, Aggregate, Strategy and Flyweight",0,0,2023,2023,1,https://github.com/Clayton-Pajot/DesignPatternsProj1
Iterator,design-patterns,"Implementations for factory, singleton, iterator, adapter and visitor design patterns.",0,0,2017,2017,0,https://github.com/kenananilakisik/design-patterns
Iterator,UniTunes,"Sample application using some design pattern: Singleton, Strategy and Iterator",0,0,2018,2018,2,https://github.com/diegodossantos95/UniTunes
Iterator,DesignPatterns,:cat:设计模式,0,0,2019,2021,1,https://github.com/Winniekun/DesignPatterns
Iterator,Design_patterns_2,Бесконечная итерация - задача на шаблон Iterator,0,0,2023,2023,1,https://github.com/alexeylh/Design_patterns_2
Iterator,design_patterns_course,delegate/bridge/visitor/decorator/iterator/composite,0,0,2018,2021,1,https://github.com/DaniilRoman/design_patterns_course
Iterator,Iterator-Pattern-CSharp,Iterator Design Pattern - Itterates through a list of of Classmates and Friends,0,0,2015,2015,1,https://github.com/wcTGgeek/Iterator-Pattern-CSharp
Iterator,Design-Patterns--Iterator,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--Iterator
Iterator,design-patterns-iterator,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-iterator
Iterator,Design_Patterns_Iterator,,0,0,2020,2020,1,https://github.com/formelaanna/Design_Patterns_Iterator
Iterator,iterator-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/iterator-design-patterns
Iterator,design-patterns-iterator,,0,0,2022,2022,0,https://github.com/sparthan15/design-patterns-iterator
Iterator,Design_Patterns_Iterator,,0,0,2016,2016,1,https://github.com/wesleyrosa0/Design_Patterns_Iterator
Iterator,Design-patterns.Iterator,,0,0,2023,2023,2,https://github.com/Dmitros1980/Design-patterns.Iterator
Iterator,design-pattern-iterator,Repositório desenvolvido para a realização de uma apresentação / implementação do design pattern Iterator.,0,0,2024,2024,1,https://github.com/LuisMFG/design-pattern-iterator
Iterator,design_pattern_iterator,"Develop a system that uses the pattern given in class. ""Iterator"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_iterator
Iterator,Javascript-River,Implementation of a module design pattern with a constructor and iterator.,0,0,2014,2016,0,https://github.com/jetsgit/Javascript-River
Iterator,KTTsoft-test,"test task KTTsoft ( Laravel framework, Design Patterns: Composite, Iterator, Factory Method ).",0,0,2016,2020,1,https://github.com/mslobodyanyuk/KTTsoft-test
Iterator,CPP_Design_Patterns,"Design Patterns in C++ including observer, abstract factory, factory, composite, iterator",0,0,2020,2020,0,https://github.com/bpostalci/CPP_Design_Patterns
Iterator,Design-Patterns-Heap,"Custom Implementation of Heaps (Min, Max, Design Patterns, Iterator Pattern, etc.)",0,0,2022,2022,1,https://github.com/agujjar2206/Design-Patterns-Heap
Iterator,drawer_shape_design_patterns,"drawer application where a applied some design patterns;factory,iterator,facade",0,0,2022,2022,1,https://github.com/SamMrach/drawer_shape_design_patterns
Iterator,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Iterator,Chain-of-Responsibility-Iterator-patterns,Chain of responsibility and iterator design patterns on java in restaurant example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Chain-of-Responsibility-Iterator-patterns
Iterator,IteratorDesignPatternProject,Used Iterator Design Pattern in a Java project to Create a Generic Stack and Generic Queue Data Structures.,0,0,2020,2020,1,https://github.com/aryanthaman/IteratorDesignPatternProject
Iterator,GoFish-Iterator-Pattern,An implementation of GoFish Card Game using the Iterator and Factory Design pattern,0,0,2018,2018,0,https://github.com/srijitravi94/GoFish-Iterator-Pattern
Iterator,IteratorExample,This is an example of the iterator pattern design taken from https://refactoring.guru/es/design-patterns/iterator/java/example,0,0,2023,2023,1,https://github.com/yei5/IteratorExample
Iterator,Iterator,"C# design patterns practice codes , to write reusable,maintenable and loosly coupled codes in order to provide solutions to recurring problems of software development",0,0,2024,2024,1,https://github.com/Gebreyowhans/Iterator
Iterator,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
Iterator,Design-Patterns,"Ejemplos de implementación de los patrones de diseño Command, Iterator y Mediator. ",0,0,2021,2021,2,https://github.com/Marcosmh0199/Design-Patterns
Iterator,design-patterns,"factory, command, composite, decorator, facade, iterator, mvc, observer, proxy, singleton, state, strategy",0,0,2022,2022,1,https://github.com/apkuznetsov/design-patterns
Iterator,CS5800_HW_7_Memento_Iterator,Matthew Plascencia's homework 6 that Implements Memento and Iterator design patterns,0,0,2024,2024,1,https://github.com/tapatiohaxx/CS5800_HW_7_Memento_Iterator
Iterator,PyDesignPatterns-Iterator,,0,0,2020,2020,1,https://github.com/Jagepard/PyDesignPatterns-Iterator
Iterator,GoDesignPatterns-Iterator,,0,0,2020,2020,1,https://github.com/Jagepard/GoDesignPatterns-Iterator
Iterator,JavaDesignPatterns-Interpreter,Interpreter,0,0,2020,2020,1,https://github.com/Jagepard/JavaDesignPatterns-Interpreter
Iterator,DartDesignPatternsIterator,サンプル：Dart(Flutter)のデザインパターン「イテレータ」,0,0,2021,2021,1,https://github.com/rascal9622/DartDesignPatternsIterator
Iterator,CppDesignPatterns-Iterator,,0,0,2020,2020,1,https://github.com/Jagepard/CppDesignPatterns-Iterator
Iterator,CsDesignPatterns-Iterator,,0,0,2020,2020,1,https://github.com/Jagepard/CsDesignPatterns-Iterator
Iterator,JsDesignPatterns-Iterator,,0,0,2020,2020,1,https://github.com/Jagepard/JsDesignPatterns-Iterator
Iterator,DesignPatternsCSharp,"Example of Builder, Abstract Factory, Visitor and Prototype in iterative steps",0,1,2014,2014,0,https://github.com/paumayr/DesignPatternsCSharp
Iterator,-coronavirus-simulation,"ITERATOR AND COMPOSITE, Model_View_Controller, Fly Weight and Mediator Design Patterns",0,0,2021,2021,1,https://github.com/fatihOguz/-coronavirus-simulation
Iterator,JAVA_Model_View_Controller_lab,"Illustration of several software design pattern ( singleton, iterator, Model–View–Controller, etc...)",0,0,2019,2019,1,https://github.com/yoann-fleytoux/JAVA_Model_View_Controller_lab
Iterator,design-patterns-impementation," Implementation of Abstract Factory, Iterator, Adaptor and Visitor design patterns in Java",0,0,2017,2017,1,https://github.com/BHPriyanka/design-patterns-impementation
Iterator,EasyGroceryApp,"• Implemented command, observer, state, singleton, composite, iterator design patterns for the app.",0,0,2014,2014,1,https://github.com/shahharsh/EasyGroceryApp
Iterator,minheap_designPattern,"Minheap implementation with design patterns - iterator,strategy,decorator,filter, null object pattern",0,0,2014,2014,1,https://github.com/Bela2711/minheap_designPattern
Iterator,ATMInterface,"ATM interface using Java. Implements the factory, iterator and singleton design pattern.",0,0,2022,2022,1,https://github.com/KunalMujoo/ATMInterface
Iterator,Iterator-Pattern-JAVA,The program implements one of the fundamental design patterns called as Iterator pattern in Java. ,0,0,2019,2019,0,https://github.com/deepsworld/Iterator-Pattern-JAVA
Iterator,Java-Design-Patterns,"Small program showcasing various java design patterns such as the iterator design pattern, single responsibility principle, Generics, Abstract Classes, and Unit Testing.",0,0,2018,2018,1,https://github.com/vincent-landolfi/Java-Design-Patterns
Iterator,IteratorDesignPattern,Create custom iterator and List class. Iterator is behavioural design pattern allow us to iterate the List with knowing internal implentation.,0,0,2020,2020,1,https://github.com/Darshan-Baranwal/IteratorDesignPattern
Iterator,iterator-design-pattern-tutorial,repository where I will keep track of all my learning with the iterator design pattern,0,0,2022,2022,1,https://github.com/pablohdzvizcarra/iterator-design-pattern-tutorial
Iterator,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Iterator,IteratorDesignPattern,"Implementação do Design Pattern Comportamental Iterator em .net Core 3.1, simulando uma simples coleção com iteração apresentando os dados no console.",0,0,2021,2021,1,https://github.com/rafaelraah/IteratorDesignPattern
Iterator,EksamenDesignPatterns_Strategy_Iterator,,0,0,2020,2020,1,https://github.com/seskildsen/EksamenDesignPatterns_Strategy_Iterator
Iterator,DesignPatternsFinalProject,"My final project for Object-Oriented Programming 3: Design patterns uses the iterator, singleton, and factory pattern to compare events from 2016 to other years in U.S. History.",0,1,2016,2016,0,https://github.com/megmccormi/DesignPatternsFinalProject
Iterator,Java-Text-Editor,"Java text editor with design patterns(Iterator, Memento, Builder, Singleton, Command) and UnitTest",0,0,2023,2023,1,https://github.com/kadircopur/Java-Text-Editor
Iterator,Bytezaria,"C# console project with the usage of design patterns like adapter, iterator, command",0,0,2023,2023,1,https://github.com/barsew/Bytezaria
Iterator,JavaDesignPatterns,an implementation of some of the java design patterns. including iterator observer and adapter,0,0,2018,2018,1,https://github.com/wencharles/JavaDesignPatterns
Iterator,java_design_patterns_iterator_pattern,java设计模式_迭代器模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_iterator_pattern
Iterator,ModeraTest,"test task - ModeraTest( - MVC WITHOUT PHP framework, Design Patterns: Composite, Iterator, Factory Method  ).",0,0,2015,2020,1,https://github.com/mslobodyanyuk/ModeraTest
Iterator,ModeraTest1,"test task Modera( - MVC WITHOUT PHP framework, Design Patterns: Composite, Iterator, Factory Method  ).",0,0,2018,2020,1,https://github.com/mslobodyanyuk/ModeraTest1
Iterator,designpatterns,"Code example for Adapter, Abstract Factory, Factory Method, Iterator and Decorator design patterns.",0,0,2019,2022,2,https://github.com/thekgk/designpatterns
Iterator,SRE_DesignPattern,"Strategy,Proxy,Iterator,Bridge,Sequence of Responsibility,FlyWeight Design Patterns implemented in c#",0,0,2022,2022,1,https://github.com/UsmannArshad/SRE_DesignPattern
Iterator,genericBST,"Generic binary search tree that utilizes Iterator, Decorator, Strategy & Null Object Design Patterns",0,0,2016,2016,1,https://github.com/gadkins/genericBST
Iterator,java-behavioral-design-patterns,"Java implementations of various behavioral design patterns, including Iterator, Observer, and Template Method.",0,0,2025,2025,1,https://github.com/HajiraGul/java-behavioral-design-patterns
Iterator,designpatterns,"Code assignment to show the design patterns: Factory pattern, Strategy pattern, Iterator Pattern",0,0,2022,2022,1,https://github.com/18b9007/designpatterns
Iterator,MSD-HW,"Software Development Design Patterns : Iterator Pattern, Visitor Pattern, Factory Pattern, Abstract Factory Pattern",0,0,2017,2017,1,https://github.com/vigneshnadar/MSD-HW
Iterator,road-crossing-game,🎓 HCMUS - Object Oriented Programming - Project: Road Crossing Game + Design Pattern: Visitor & Iterator,0,0,2019,2021,3,https://github.com/kieuconghau/road-crossing-game
Iterator,SoftwareDevelopment_DesignPatterns,"Creating the Customize Development Framework like Spring framework and Spring Boot by applying the design patterns like.....Singleton,Command,Observer,Facade,Factory,Composit,COR,Strategy,State,Iterator,Adapter,Decorator,Builder,Adapter",0,0,2024,2024,1,https://github.com/HsuMinHtet/SoftwareDevelopment_DesignPatterns
Iterator,DesignPatterns,"Réalisation des applications Java comme illustration des trois patrons de conception : Facade , Prorotype et Iterator Par l'équipe SM-DesignPatterns constitué de EL AAKKOUCHI SALMA qui a comme pseudo 'Asuna-flipe' et EL YOUNSSI MOUNA qui a comme pseudo 'Mouna-pixel'  ",0,0,2022,2022,1,https://github.com/SM-DesignPatterns/DesignPatterns
Iterator,prompt-design,"Iterative refinement of Prompt Engineering, Design, Patterns, Frameworks and Processes",0,0,2025,2025,1,https://github.com/ginko-ai/prompt-design
Iterator,ICA-7-Design-Patterns-1225545633,"Implemented five design patterns into the Product Trading and Bidding System (PTBS). The five design patterns are Façade, Bridge, Factory Method, Iterator, and Visitor.",0,0,2022,2022,1,https://github.com/Deven-Prajapati-2/ICA-7-Design-Patterns-1225545633
Iterator,getwhisky_mvc,"second iteration of an ecommerce site, using MVC design pattern",0,0,2022,2022,1,https://github.com/neil-matheson/getwhisky_mvc
Iterator,design-patterns,"Creational Design patterns ,Singleton, Builder, Prototype pattern , Structural patterns,  Facade, Proxy, Bridge pattern, Behavioral pattern, Template, Strategy, Iterator pattern",0,0,2023,2023,1,https://github.com/fatimasultanova/design-patterns
Iterator,iterator-pattern,"Design pattern comportamental Iterator para acessar elementos de uma coleção sem expor as representações dele (lista, pilha, árvore, etc.)",0,0,2021,2021,1,https://github.com/Jhow-R/iterator-pattern
Iterator,PriorityQueue,"This new data structure is designed for implementing design pattern like Iterator, Null, Strategy. ",0,1,2014,2018,1,https://github.com/bharathtintitn/PriorityQueue
Iterator,alura_design_patterns,"This PHP project represents my studies on design patterns such as Command, Observer, State, Strategy, Iterator, and others",0,0,2025,2025,1,https://github.com/pedro162/alura_design_patterns
Iterator,design_patterns,"Shell for DAW application which includes multiple design petterns, such as: abstract factory, singleton, factory method, adapter, decorator, facade, iterator, observer, strategy.",0,0,2023,2024,1,https://github.com/ruslan1us/design_patterns
Iterator,Iterator_Design_pattern,A simple program that loops threw the days of each month showing how to imply the Iterator Design Pattern,0,0,2021,2021,0,https://github.com/Jamey0621/Iterator_Design_pattern
Iterator,Design-Patterns,"Introduction to design patterns: Strategy, Observer, Factory, Singleton, Command, Adapter, Faade, Template Method, Iterator, Composite, State, Proxy. Object Oriented design principles, Java/UML. ",0,0,2019,2021,1,https://github.com/YifengQ/Design-Patterns
Iterator,SimpleIteration2-CSharp,Iteration Design Pattern - Itterates through a list of classmates and friends,0,0,2015,2015,1,https://github.com/wcTGgeek/SimpleIteration2-CSharp
Iterator,Design-Patterns-PHP,"Sistema desenvolvido para aplicar os conceitos de padrões de projetos comportamentais (Strategy, Chain Of Responsibbility, Template Method, State, Command, Observer & Iterator)",0,0,2021,2021,1,https://github.com/RenatoAugustoFS/Design-Patterns-PHP
Iterator,COSC436_Iterator_Design_Pattern,Project using the iterator design pattern. Required the use of 4 separate iterators in order to iterator over a menu object. ,0,0,2015,2015,1,https://github.com/chrisbacco/COSC436_Iterator_Design_Pattern
Iterator,project-patterns," design patterns like these: Abstract Factory, Decorator, Builder, Command, Prototype, Iterator, Bridge, Observer, Composite, Strategy",0,0,2019,2020,1,https://github.com/jhonatheberson/project-patterns
Iterator,DesignPatterns,This project demonstrates the implementation of various design patterns in Java.,0,0,2022,2022,1,https://github.com/jchoker/DesignPatterns
Iterator,iterator-design-pattern,"Record collection simulator to illustrate the usage of the Iterator design pattern for University of Michigan-Dearborn CIS 476, Winter 2022.",0,0,2022,2022,1,https://github.com/rekennelly/iterator-design-pattern
Iterator,js_design_patterns,Creational Design Patterns Singleton Pattern Factory Method Pattern Abstract Factory Pattern Builder Pattern Prototype Pattern Structural Design Patterns Adapter Pattern Decorator Pattern Facade Pattern Proxy Pattern Behavioral Design Patterns Chain of Responsibility Pattern Iterator Pattern Observer Pattern,0,0,2024,2024,1,https://github.com/mohmmadarshad/js_design_patterns
Iterator,Spotify---Iterator-Design-Pattern,"This project implements a basic music app that supports InOrder, Reverse, and Shuffle playback modes, utilizing the Iterator design pattern.",0,0,2024,2024,1,https://github.com/Yashodhara-04/Spotify---Iterator-Design-Pattern
Iterator,mapreduce-design-patterns,"Hadoop ecosystem recipes for ETL, common data transformations, & iterative algorithms",0,0,2018,2018,0,https://github.com/fiddlesleet/mapreduce-design-patterns
Iterator,JavaDesignPattern,"This Project illustrates 4 important design patterns in java namely abstract factory ,visitor,iterator,and adapter",0,0,2017,2017,1,https://github.com/chandrimaghosh/JavaDesignPattern
Iterator,examples-design-patterns,Just some code demonstrating a few of the ways in which Microsoft have kindly provided some out-of-the-box implementations of some well known and well used Design Patterns,0,0,2023,2023,1,https://github.com/bill-richards/examples-design-patterns
Iterator,IteratorDesignPattern,"This is an example of an iterator design pattern used to display contents of various categories of groceries one might see in the store such as: Beverages, Vegetables, Fruits, Bakery, etc.",0,0,2021,2021,1,https://github.com/RafaelGutz444/IteratorDesignPattern
Iterator,SNHU_Operating_Platforms_Project_One_Milestone_Game_App,This is a class assignment where I had to use the Singleton and Iterator design patterns,0,0,2024,2024,1,https://github.com/sachin-gurung/SNHU_Operating_Platforms_Project_One_Milestone_Game_App
Iterator,md-viewctrls,New iteration of viewctrls with an attempt at more material design patterns,0,0,2017,2017,1,https://github.com/Made-of-Clay/md-viewctrls
Iterator,Matrix-product,Matrix product algorithm analisis (row and col iteration) using Strategy design pattern,0,0,2022,2022,1,https://github.com/GSJuan/Matrix-product
Iterator,Dictionary-Application,"Dictionary Application built with Binary Search Tree and Hash Table, Implemented using Singleton, Iterator Design pattern.",0,0,2019,2019,1,https://github.com/iprabhanshu/Dictionary-Application
Iterator,SP,"Design Patterns in Java - so long here are Composite, Flyweight, Proxy, Strategy, Iterator, Visitor and State",0,0,2017,2017,2,https://github.com/cpetrescu96/SP
Iterator,Java-Design-Patterns_Command_Iterator_Observer_CoR,"Домашнее задание к занятию 1.3. Поведенческие шаблоны. Command, CoR, Observer, Iterator. Задача Бесконечная итерация.",0,0,2023,2023,1,https://github.com/InfernalBeard/Java-Design-Patterns_Command_Iterator_Observer_CoR
Iterator,Design-Patterns,"Explore key software design patterns including Inheritance, Singleton, Adapter, Composite, Observer, Command, State, Decorator, Strategy, Iterator, and MVC. These patterns offer blueprints to solve common design challenges, focusing on object and class communication, not just implementation. ",0,0,2022,2024,1,https://github.com/radubauzh/Design-Patterns
Iterator,To-Do-List,An online To-Do list implementing the Iterator design pattern. Check_Input was provided for this assignment,0,0,2024,2024,1,https://github.com/Kentops/To-Do-List
Iterator,RGBIterator,Simple usage example of singleton and iterator design pattern to iterate and return color values from around the color wheel,0,0,2022,2023,0,https://github.com/matzukowski/RGBIterator
Iterator,Swingy_2,Iteration two of the Java RPG game built using OOP and Design Patterns.,0,0,2019,2020,0,https://github.com/tshata/Swingy_2
Iterator,design.patterns.hw.1.3.1.BehavioralPattern.Iterator,,0,0,2021,2021,1,https://github.com/Rustam-A-A/design.patterns.hw.1.3.1.BehavioralPattern.Iterator
Iterator,usjt_20211_ads1an_mcb_design_patterns_iterator,,0,0,2021,2021,1,https://github.com/professorbossini/usjt_20211_ads1an_mcb_design_patterns_iterator
Iterator,CS4800-HW6-Iterator-Mediator-Memento-Design-Patterns,,0,0,2024,2024,1,https://github.com/kevinlwong/CS4800-HW6-Iterator-Mediator-Memento-Design-Patterns
Iterator,Intro-To-Iterator-Design-Pattern,"Iterator is a behavioral design pattern that lets you traverse elements of a collection without exposing its underlying representation (list, stack, tree, etc.).",0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Iterator-Design-Pattern
Iterator,labwork6,Java implementation of the aggregate and its iterator with ability to change the iterating algorithm during program execution using Iterator and Factory Method Design Patterns,0,0,2024,2024,1,https://github.com/7910528/labwork6
Iterator,Dictionary-ADT,An iterative Dictionary ADT implementing the Iterator Design Pattern coupled with Eiffel's Math Model Library to design preconditions and postconditions.,0,0,2018,2018,1,https://github.com/tarazis/Dictionary-ADT
Iterator,Facebook_app_Design_Pattern_CS,"Facebook app using different design patterns (Singelton, Facade, Proxy, Observer, Iterator, Strategy, Command) and working with Facebook API ",0,0,2019,2019,1,https://github.com/itsikh100/Facebook_app_Design_Pattern_CS
Iterator,spid,Software Engineering project; A command-line Java demo that demonstrates the Iterator design pattern using Spotify playlists as an iterable data structure,0,0,2025,2025,1,https://github.com/jasonamoore/spid
Iterator,constructorC-,"Applied C++ smart pointers, many design patterns such as iterator, MVT, observer design pattern, factory design pattern and so on with special inheritance feature in C++. · A similar game to monopoly, the whole project includes a detailed UML and a report (ie. The project plan). ",0,0,2022,2023,0,https://github.com/PeiyunChen0131/constructorC-
Iterator,DesignPattern,"SER515 - Implementation of Product Trading and Bidding System using the following Design Patterns:  Facade, Bridge, Factory Method, Iterator, Visitor",0,0,2022,2024,1,https://github.com/snerall1/DesignPattern
Iterator,Software-Design-Pattern,"Drawing tool by applying composite, state, command, observer, adapter, expert, controller, and iterator software design patterns using Java AWT.",0,0,2020,2020,1,https://github.com/khushboo520/Software-Design-Pattern
Iterator,Design-Patterns-CSharpENU,"Explore essential C# design patterns through practical projects, covering Observer, Decorator, Iterator, Factory, Builder, and more. Gain insights into real-world implementations, enhancing your understanding of these foundational concepts. Additionally, discover Azure Service Bus integration for messaging patterns in distributed systems",0,0,2024,2024,1,https://github.com/dazevedo00/Design-Patterns-CSharpENU
Iterator,Drawing-Figures-using-Design-Patterns,"A standalone desktop application made using Java Swing UI to create figures like circles and rectangles on canvas. The project demonstrates the use of different design patterns like  Controller, Expert, Observer, Adaptor, Iterator, Composite and Command.",0,0,2020,2020,1,https://github.com/parth2706/Drawing-Figures-using-Design-Patterns
Iterator,Ammit,Ammit is a project that implements a generic iterator for containers with a facade design pattern using C++ 20 language.,0,0,2022,2022,1,https://github.com/BryanProg/Ammit
Iterator,Basic-Calculator-Software-Design,"Basic calculator using software design patterns such as abstract factory, composition, template method, visitor, builder, command, wrapper facade, and iterator",0,0,2018,2019,1,https://github.com/Pboruff/Basic-Calculator-Software-Design
Iterator,RPG,RPG Game based on OOP and different design patterns (not completed yet),0,0,2017,2017,1,https://github.com/msolimans/RPG
Iterator,DesignPattern-Iterator,"This C# implementation demonstrates the Iterator design pattern, enabling sequential access to elements of a collection without exposing its internal structure. It showcases how to decouple iteration logic from the collection, ensuring a clean and maintainable design.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Iterator
Iterator,ser-515-fall-22-private-repo,"A console-based Product Trading and Bidding System (PTBS) implemented using the 5 design patterns: Facade, Bridge, Iterator, Factory Method and Visitor",0,0,2022,2024,1,https://github.com/amitnoelasu/ser-515-fall-22-private-repo
Iterator,Aegis,A game created using the Builder Design Pattern. Future Iterations are planned with customized UI/UX Elements.,0,0,2021,2021,1,https://github.com/Sivi-i/Aegis
Iterator,OOP-App2-Redesign,This redesign uses design patterns such as Singleton and Iterator plus refactoring and simplicity to improve on the original design of this application...,0,0,2020,2021,0,https://github.com/johnshields/OOP-App2-Redesign
Iterator,GoDesignPatterns,"Go, a multi-paradigm programming language, features design patterns that allow developers to address common problems efficiently. In this course, senior developer advocate Joe Marini covers creation, structural, and behavioral design patterns. Joe begins with an overview of design patterns and design pattern categories. Then he gives you overviews and examples of several creational patterns, including builder pattern, factory pattern, and singleton pattern. He does the same for structural patterns, covering adapter patterns and facade patterns. Joe concludes with behavioral patterns such as an observer pattern and an iterator pattern.",0,0,2021,2021,1,https://github.com/cyadav18/GoDesignPatterns
Iterator,MazeGame,A maze game system that uses various design patterns and the Iterative implementation of the Recurscieve backtracker algorithm,0,1,2021,2022,4,https://github.com/BenMob/MazeGame
Iterator,design-patterns-in-java,TR: Java dizayn mimarileri kullanılmış ve UMLleri verilmiştir.  EN: Java design patterns with UML,0,0,2019,2019,1,https://github.com/mertselimb/design-patterns-in-java
Iterator,labwork3,Java implementation of a linear list that encapsulates objects and allows sequential traversal in both forward and reverse directions using the Iterator Design Pattern,0,0,2024,2024,1,https://github.com/7910528/labwork3
Iterator,Inventory-Reports,"Recebe arquivos json, xml e csv com informações de produtos e fornece relatórios. Projeto baseado em POO e design patterns (Strategy, Iterator e Factory).",0,0,2022,2022,2,https://github.com/htessaro/Inventory-Reports
Iterator,Car_Rental_Management,"Exercise for design patterns (Singleton, Builder, Factory Method, Abstract Factory; Adapter, Decorator, Facade, Proxy; Iterator, Observer, State, Strategy), clean code, SOLID, DRY, KISS, YAGNI",0,0,2024,2024,2,https://github.com/19pawel970415/Car_Rental_Management
Iterator,design-patterns-go,"A Repository showing the evolution of design pattern thinking and implementation through a initial REST API in Go, showing iteratively the evolution based on having a solution, finding it's problems, solving with design patterns, reaching another solution to be analysed, and so on until no problems are found.",0,0,2024,2024,1,https://github.com/guilhermehalvescode/design-patterns-go
Iterator,Iterator-Design-Pattern-Generic-Form,"Testing out the iterator design pattern, but instead of specialising it to one type of object, it has been made generic and integrated it to work in unity together with monobehaviors, since generic classes can't be of monobehavior.  ",0,0,2023,2024,1,https://github.com/nanitight/Iterator-Design-Pattern-Generic-Form
Iterator,FacebookDesktopApp,"C# .Net Applicative Programming using Design Patterns - Course Project. We were asked to use Facebook API to implement 2 new features using 6 different design patterns, Threads, and Data Binding, accompanied by diagrams and an emphasis on clean, readability, and reusability code. We have chosen Singleton, Factory Method, Facade, Iterator, Observer, and Strategy design patterns in our solution.",0,0,2020,2021,1,https://github.com/sagiselag/FacebookDesktopApp
Iterator,Gourmand-Restaurant-App,"Gourmand is a restaurant management and food ordering app. This repository contains the complete Design Document for the app along with UML artifacts like Domain Model, Design Model, Sequence Diagrams, Activity Diagrams, State Diagrams, Design Patterns (Observer, State, Abstract Factory, Decorator, Composite, Iterator, Template Method, Singleton, Adapter and Proxy). The MVC architecture also has been applied to the design",0,2,2017,2017,1,https://github.com/mohammedshethwala/Gourmand-Restaurant-App
Iterator,DePaCoG_IntelliJ_Plugin,First iteration of the DePaCoG plugin. Plugin that generates files for available design patterns. Does not include name clashing.,0,0,2020,2020,2,https://github.com/ramirez915/DePaCoG_IntelliJ_Plugin
Iterator,Circus-of-Plates,"A 2D Java game designed using many design patterns like : Factory, Singleton, MVC, Object Pool, Iterator, Snap- shot, State and Observer.  The project mainly aimed to be familiar with Object Oriented Programming and Design pattern. Dynamically Loading plates to be dropped was handled.",0,1,2014,2014,0,https://github.com/AGeneidy/Circus-of-Plates
Iterator,Design-Pattern,"Some implementation of design pattern in Java such as: Chain of Responsibility, Decorator, Factory, Generic, Interator, Proxy, Reflection, Singleton, Visitor",0,0,2016,2017,1,https://github.com/luongnv89/Design-Pattern
Iterator,recursive_bubble,"Implementation of a recursive ""bubble"" structure. The writing of this small app employs several design patterns for fun, namely Composite, Observer, Iterator, Visitor, and State pattern.",0,0,2015,2015,0,https://github.com/prajogotio/recursive_bubble
Iterator,NFC-Application,"I have created a NFC system at my university. My aim in my project is to design a university system using design patterns. I used a total of 6 design patterns in my Java project. These are composite, observer, singleton, command, iterator, and facade respectively.",0,0,2022,2022,1,https://github.com/berkinozturk/NFC-Application
Iterator,katklik,Cat clicker project for the Udacity Javascript Design Patterns class. Includes several iterations of increasing complexity. Built with Knockout and jQuery.,0,0,2015,2015,1,https://github.com/ndrewr/katklik
Iterator,cs246-final-review,"Decorator, Observer, Factory, Model-View-Controller Design Patterns. OOP Principles: Inheritance, Aggregation, Composition. Big 5 and Iterator. Pure virtual methods. STL Maps, Try-Catch Exceptions, and many more...",0,0,2024,2024,1,https://github.com/iydia/cs246-final-review
Iterator,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Iterator,Smart-system-of-stream-recommendations,"The project aimed to apply some classic design patterns such as: Singleton, Iterator, Observer and Command. I tried to apply the SOLID principles as well as I could.",0,0,2024,2024,1,https://github.com/mihaidragos3010/Smart-system-of-stream-recommendations
Iterator,List-vector-in-C,Implementation of List and Vector STL containers in C using OOP Design Patterns. Contains implementation of iterators and generic algorithms for the same.,0,0,2021,2021,2,https://github.com/theradtad/List-vector-in-C
Iterator,BibleMap,"This program creates and uses and Bible template specialization of a map template class. Various design patterns including Singleton, Iterator, and Visitor are implemented. Completed for Object-Oriented Programming course.",0,0,2017,2017,1,https://github.com/mdttrump97/BibleMap
Iterator,OOADJ_MiniProject_C2,Restaurant Management System using MVC architecture and Iterator Design Pattern. This project was made as a part of the 6th Semester course UE19CS353 - Object-Oriented Analysis and Design with Java,0,0,2022,2022,1,https://github.com/kartik6/OOADJ_MiniProject_C2
Iterator,Facebook-features-app-using-Facebook-API,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.  ",0,1,2019,2019,1,https://github.com/AndrewSergeev/Facebook-features-app-using-Facebook-API
Iterator,214-PA4,"This repository contains the code for Software Modelling (2nd Year) Practical 4. The project integrates five key design patterns:  Composite , State, Decorator, Iterator and Observe, into a unified and functional codebase.",0,0,2024,2024,2,https://github.com/thendombedzi/214-PA4
Iterator,JAVA-developer,"1. Java Design Patterns  Source: GitHub Software Design Patterns are the reusable, general solutions for the Software Engineers to solve recurring problems in Software Design. It also gives a common vocabulary to discuss the common issue among Software Engineers and Architects. Design patterns can improve Code Quality and coding velocity by using the battle-tested and proven development paradigms. The best way to learn the design patterns is to see them in action, i.e., Code examples. This excellent GitHub repository has Java implementation of all sorts of Design Patterns: from the most common and old design patterns (Iterator, Singleton) to the most modern design patterns (aggregator Microservices, Serverless). This GitHub repository will not only improve your coding skill but also make you a better and productive developer. If you are a Java Developer, you will need this GitHub repository from the beginning of your career till your retirement.",0,0,2021,2021,1,https://github.com/SOUMARYA23/JAVA-developer
Iterator,The-Path,"Java Object-Oriented Cross platform mobile game using Codename One framework. Interactive GUI, animation, sound and collision detection. Designed with MVC pattern and other design patterns such as observer, iterator, singleton, and command patterns. ",0,0,2021,2021,1,https://github.com/britt-859/The-Path
Iterator,Shape-Drawing-Tool,"A tool that can be used to draw Boxes, Circles and Lines with Undo and Redo functionalities. Several Design Patterns including Composite, Command, Iterator, State, Singleton, Controller, Expert are used to develop this tool.",0,0,2020,2020,1,https://github.com/Charan-Venkatesan/Shape-Drawing-Tool
Iterator,Racing-Game,"A game written in Java that utilizes the CodenameOne framework along with the MVC, Command and Iterator design patterns. Players have to hit all the pylons before getting hit by enemy cars and birds. ",0,0,2017,2018,1,https://github.com/brianjunio/Racing-Game
Iterator,TCSS502A_A4,"This assignment will allow you to work in teams to create a multitude of classes, utilize inheritance, utilize composition, incorporate the Simple Factory and Iterator design patterns, and utilize Python syntax to facilitate these items.",0,0,2023,2023,0,https://github.com/rajinblue/TCSS502A_A4
Iterator,software-fundamentals,"A hands-on collection of fundamental software engineering concepts, covering data structures, algorithms, design patterns, architecture, and networking through iterations over each topic in terms of code.",0,0,2025,2025,1,https://github.com/iferdel/software-fundamentals
Iterator,Circus-of-Plates-Game,"Developed Java-based Circus of Plates game with Swing GUI, featuring dynamic loading of shape classes, multiple falling object types, customizable difficulty levels, and implementation of 6 design patterns: Singleton, Factory, Iterator, State, Strategy, and Observer",0,0,2024,2024,1,https://github.com/mennasaid247/Circus-of-Plates-Game
Iterator,projeto-menu-restaurante,Terceiro projeto proposto pelo professor Takeshi da Universidade Positivo em Londrina. Projeto realizado com o intuito de aprender o design pattern Iterator utilizando conceitos de herança e polimorfismo. Foi utilizado C# para o desenvolvimento do trabalho. ,0,0,2020,2020,1,https://github.com/LuizBarros-Firyn/projeto-menu-restaurante
Iterator,MovieApiDotnetCore,"This is a .NET Core 9.0 project that includes CQRS, Unit of Work, Repository, Observer, and Iterator design patterns. It is a project I work on during weekends and in my free time to improve myself.",0,0,2025,2025,0,https://github.com/tnhnyldz/MovieApiDotnetCore
Iterator,iterator_implementation_project,"Create an abstraction that represents a moving belt in our sushi restaurant. A belt object is created with a fixed number of positions. Plate objects can be placed on and removed from the belt. There will also be a method to retrieve a plate object (if present) from a particular position without removing it from the belt. The belt object can be told to ""rotate"" which means that a plate at position p will now be located at position p+1. The belt is circular, so when the belt rotates, a plate object at position size-1 (where size is the length of the belt) can subsequently be found at position 0. This assignment will also require you to implement the Iterator design pattern in several different and interesting ways. Details are below.",0,0,2018,2018,1,https://github.com/ZhepuZhao/iterator_implementation_project
Iterator,PLC,"Project done for UF's COP4020: Programming Language Concepts. It contains a working iteration of a lexer, parser and type checker done in Java using the Visitor design pattern.",0,0,2022,2022,1,https://github.com/GregoryQuezada/PLC
Iterator,2DGamingProjects,"2D Game Design using Object Oriented Programming. The data driven game used vectors, lists, iterators, object pools and various design patterns. Emphasis was placed on having no memory leaks.",0,0,2016,2018,1,https://github.com/iamsurya/2DGamingProjects
Iterator,scala-dslib,"Collaborative project with Mariana Alencar do Vale, the goal it's to build a data structure library with a HashMap and Transversable and Iterator design patterns support by default, everyother functionality/structure implementation it's optional but highly encouraged",0,0,2018,2023,2,https://github.com/thlmenezes/scala-dslib
Iterator,Data-Structure-Library-Hashmap-Queue-in-Java-,"Developed custom generic HashMap and Queue data structures from scratch without using built-in libraries. Implemented the Iterator design pattern and used a Queue for collision handling in the HashMap, providing a foundational data structure library for other developers.",0,0,2024,2025,1,https://github.com/Mystronomy/Data-Structure-Library-Hashmap-Queue-in-Java-
Iterator,artistgraph,"My OOP Semester Project- Artist Graph. Pulls data from MongoDB and Discogs API to generate graph with artist nodes and collaborators. Implements design patterns such as Adapter, Bridge, and Decorator.",0,0,2022,2022,1,https://github.com/liezlbl/artistgraph
Iterator,214-prac5,"This repository contains the code for a Smart Home Automation System using 4-5 design patterns which are Composite, Adapter, Command, Observer, and Iterator. The project supports device control, legacy device integration, automation routines, sensor notifications, and efficient device management.",0,0,2024,2024,2,https://github.com/thendombedzi/214-prac5
Iterator,VectorGraphicsFramework,"A framework for generating vector graphics using XML as input and bitmaps as output.  It also has the ability to load bitmaps and apply transformations.  It uses a pipe and filter type architecture, and implements the decorator and iterator design patterns.",0,0,2016,2016,1,https://github.com/mcmellawatt/VectorGraphicsFramework
Iterator,Tugas-Besar-CCDP-10116073-10116076,"Repository ini digunakan untuk menyimpan file atau project dari tugas besar clean code dan design pattern. Pada repository ini ada 3 tipe design pattern yang diimplementasikan yaitu creational, structural, dan behavioral pattern. Dimana diambil dua contoh pattern dari ketiga tipe tersebut. Dimana untuk creational dipilih abstrac factory pattern dan prototype pattern, untuk structural dipilih proxy pattern dan composite pattern, dan untuk behavioral dipilih mediator pattern dan iterator pattern.",0,0,2020,2020,1,https://github.com/fritsonagung/Tugas-Besar-CCDP-10116073-10116076
Iterator,StrategyGameProject,"All iterations of the 'Stratego' game that was developed in an Object Oriented Analysis and Design course, in order to learn about writing reusable and maintainable code through the use of design patterns.",0,0,2013,2020,1,https://github.com/mscosti/StrategyGameProject
Iterator,Requirements-Extraction-Tool,"A Java Swing based tool for generating software requirement specification from project description. The tool uses Stanford natural language processing API to auto-detect verbs and nouns in the description. Implemented using 8 different design patterns like controller, expert, factory method, singleton, iterator, etc. ",0,1,2016,2016,0,https://github.com/tushargarud/Requirements-Extraction-Tool
Iterator,Geometric-Design-System,"Built a geometric design system using object-oriented principles, focusing on shape intersections and robust test- ing with JUnit to identify edge cases and ensure accuracy. Incorporated exception handling and design patterns like Composite, Iterator, and Singleton to enable hierarchical compositions and efficient instance management.",0,0,2025,2025,1,https://github.com/jenilmaru2004/Geometric-Design-System
Iterator,ShapeComposer,"Utilized the controller, expert, iterator, and composite design patterns to develop a simple application that allows users to draw shapes by clicking on buttons and the drawing area. 2. Improved user experience by designing an intuitive interface with only two buttons for Circle, Triangle and Box drawing options. ",0,0,2023,2023,1,https://github.com/keyurmushrif02/ShapeComposer
Iterator,Object_Oriented_Design_Project,"The aim of this project was to familiarise with OOP design patterns, such as Factory, Builder, Adapter, Iterator, Command, Memento, etc. and learn useful C# features (reflection, serialization, interfaces, data structures). It was carried out as part of the course ""Object Oriented Design"" at the Warsaw University of Technology.",0,0,2023,2023,1,https://github.com/Bakaczor/Object_Oriented_Design_Project
Iterator,Mock-Unix-Command-Shell,"Made in a group of 4, this program attempts to mock the Unix command shell by combining software design patterns (such as Iterator, Singleton, and Builder) and complex code to create a program that acts as a file management system whilst also providing functionality for nearly 20 Unix commands.",0,0,2019,2020,1,https://github.com/osmanamjad/Mock-Unix-Command-Shell
Iterator,python_OOP,▪ Understand the OOP paradigm ▪ Creating a hierarchy of classes and inheritance ▪ SOLID Principles ▪ Working with Iterators and Generators ▪ Applying the OOP principles ▪ Component testing ▪ Working with decorators ▪ Design Patterns,0,0,2024,2025,1,https://github.com/Mario8802/python_OOP
Iterator,Race-Car,"A 2D class project game using Java with swing and awt packages along with animation using a Timer. Increased ease of maintainability using Object Oriented Design and an MVC (Model-View-Controller) architecture. Further increased ease of maintainability by learning and implementing design patterns including Proxy, Observer/Observable, Command, Strategy, Singleton, Iterator and Factory.",0,0,2017,2017,1,https://github.com/MJohnson9303/Race-Car
Iterator,Shapes-Project,"My submission for an OOP class project: I was tasked with developing a program that would allow the user to create various shapes, of a specified size and colour, and to move them - individually or together as a compound shape. For full marks, I was required to have well-documented code, smooth performance and implement the Observer, Composite, and Iterator design patterns.",0,0,2015,2015,0,https://github.com/nikolai-momot/Shapes-Project
Iterator,Django-Webapp,"This is a scalable web application which supports an online booking and payment system and uses Django, SQLite, Stripe & Google Analytics. The purpose of this project is to showcase the use of the listed software design patterns. 1. Observer 2. Decorator 3. State Design 4. MVT 5. Factory Method 6. Template Method 7. Iterator Method 8 Adapter Method 9. Chain of Responsibility",0,0,2020,2020,1,https://github.com/David-Bromell/Django-Webapp
Iterator,Generic-Lists-in-Java,"In this project you will implement your own versions of the stack and queue data structures. Although the Java API provides built-in support for them, you will write your own to practice the constructs and language details we have seen in class. That means you are NOT allowed to use any pre existing libraries or classes for this assignment. In this simplified version, each data structure is a singly linked list. The stack is LIFO (last in first out) while the queue is FIFO (first in first out). Your implementation must be generic as to allow for different types when each data structure object is instantiated. You will also implement the Iterator design pattern; allowing users access to a custom Iterator for your data structures.",0,0,2021,2021,1,https://github.com/dkuzmyk/Generic-Lists-in-Java
Iterator,RealEstateFinder,"A Java Swing Application allowing sellers to post real estate listings and customers to browse listings and add properties they are interested in to their favorites. Customers can also submit their contact information to the seller if they are interested in buying the property. This application utilizes a rich MVC architecture along with utilizing the Strategy design pattern  to create the Property Desciption Page based on the customers actions and recreate the page in real time. This application utilizes serialization for persistence. The application also uses the Observer and Iterator design patterns. This project was created by myself and two other partners for my Object Oriented Design and Programming elective course (COP4331). The design for the application includes Use Cases, CRC diagram, UML Class diagrams, Sequence diagrams, and State diagrams. Tools Used: Java and Java Swing Framework, NetBeans",0,1,2016,2023,3,https://github.com/agr505/RealEstateFinder
Iterator,DjangoWebApp,"Basis for a working Python, Django based web application. Initial purpose of this project is to facilitate a thorough understanding of how a fully functional web application with database integration, authentication, and the MVC design pattern is formed. My main goal is to iteratively start from basic command line setup of the django project framework, and then build up to a complete WebApp, deployed and hosted on a remote server.",0,0,2019,2019,1,https://github.com/kko13/DjangoWebApp
Iterator,Media-Player-App,"This app was created for a course in Object-Oriented Design. The goal of the project was to use all three types of design patterns (creational, behavioral, and structural) to create a desktop application. The Media Player App implements the singleton pattern for creation of the GUI, iterative pattern for song traversal capabilities, and two-way adapter pattern to provide computational support for both .mp3 and .wav audio file formats.",0,0,2017,2017,1,https://github.com/robynsilber/Media-Player-App
Iterator,Advanced-Software-Development---JAVA-MICROSERVICES,"The course target:: Advanced Software Development JAVA MICROSERVICES Course To cover the gap between the academia and the industry in Israel high-tech industry market 1. To give the relevant tools to build and develop an E2E application ( RPC - Application Servers (web application server ) , Docker , K8, Mongo DB ,Postman ) 2. To provide a serious and a heavy programming background ( Java language) ,the newest technologies (Java 8 & 9, Maven ,Jenkins , Restful , JPA , ORM , HTML ,CSS , JS) and the latest frameworks which are used in the industry (Spring , NoSQL , Swagger, Angular/React ,Lombok) 3. To implement the relevant Programming Design patterns like Singleton ,MVC, Factory , Abstract , Adapter , Facade , Composite , Visitor ,Proxy ,Iterator and the newest programming concepts & architectures (modularity , loose coupling, Microservices )",0,0,2022,2023,1,https://github.com/ahmadsb/Advanced-Software-Development---JAVA-MICROSERVICES
Iterator,Circus-of-Plates,"A full multiplayer game java application that allows two players to play, one using mouse and the other using the keyboard, Allows save, load, pause, resume and the purpose of the application was to apply the following Object Oriented Design Patterns:  Factory,Singleton, MVC, Object Pool, Iterator, Dynamic Linkage, Snapshot, State and Observer. My role was the Application UI, save, load and some of the back end. Application UI : http://i62.tinypic.com/35ho8s0.jpg                        http://i58.tinypic.com/2m4ojyd.jpg  Game Description: Circus of plates is a two player-game in which every player carries two stacks of plates, and there are several colored plates falling down and he tries to catch them, if he manages to collect three consecutive plates of the same color, then they are vanished and his score increases, the player who gets more score at less time wins. You are free to put rules to handle if the two players stand at the same place",0,0,2015,2015,0,https://github.com/SiefSeif/Circus-of-Plates
Iterator,MagasinManagement,"This store management software is developped using Java, has as goal not only to allow the company to manage stocks to avoid shortages or overstocking but will also give the possibility of managing customers, organizing the sales process and taking orders up to invoicing and finally follow up on orders. In order to guarantee that our store management software meets the requirements of deadlines, budget and gives satisfaction to the customer, we before opted to use the concept of software engineering. This concept indeed, designates all the methods, techniques and tools contributing to the production of a software, beyond the only programming activity. Thus, we have broken down our project into 4 modules: category management, product management, customer management, sales management and finally payment management. Obviously, it is necessary to set up quality software. For this, we have chosen to adopt a life cycle in Y not only because of the small size of our software and its risk management but also its iterative and incremental nature as well as the simplicity of its integration with the agile method "" Scrum ”. Indeed, the Scrum process being Iterative and incremental adapts perfectly to the decomposition of our project. To achieve each module, we adopted the 2-layer architecture: - PresentationLayer (IHM) using JAVAFX - DataAccessLayer (data access) by adopting the DAO design pattern. Finally, through this project we were able to apply the majority of the concepts learned in both the Java and UML modules. Indeed, this project required concepts at the java programming level, so we had to show a certain agility in terms of skills and knowledge. This project also allowed us to consolidate bases in a new world of JavaFX programming. Finally, we would like to thank Mr. Abdelwahab NAJI for his considerable efforts throughout the year, and for the time that has been devoted to the success of this training in java.",0,0,2020,2020,1,https://github.com/DadiAnas/MagasinManagement
Mediator,DesignPatterns,"Come learn about all the Gang of Four patterns (e.g. Adapter, Facade, Strategy, Mediator, Command and more) with C# and food examples!",643,251,2016,2025,2,https://github.com/exceptionnotfound/DesignPatterns
Mediator,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Mediator,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Mediator,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Mediator,CQRSAndMediatorSample,This project is a sample of using CQRS and Mediator design pattern in Microsoft .NET Core,38,33,2020,2023,1,https://github.com/thanhle0212/CQRSAndMediatorSample
Mediator,DesignPatterns-Mediator,Mediator Design Pattern Example in C#,27,3,2019,2025,1,https://github.com/MoienTajik/DesignPatterns-Mediator
Mediator,Swift-Mediator,Design Patterns in Swift: Mediator,12,2,2016,2024,1,https://github.com/kingreza/Swift-Mediator
Mediator,cqrs-template-with-mediator,CQRS design pattern with mediator custom usage for spring boot ,12,1,2023,2024,1,https://github.com/BeratYesbek/cqrs-template-with-mediator
Mediator,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Mediator,ios-transitions-mediator-pattern,Cleaner transitions between iOS View Controllers using the Mediator Design Pattern,10,1,2014,2024,1,https://github.com/ilazakis/ios-transitions-mediator-pattern
Mediator,famous-mediator,Utilities to use a mediator design pattern in Famo.us apps,8,2,2014,2017,1,https://github.com/markmarijnissen/famous-mediator
Mediator,event_dispatcher,event_dispatcher implements a lightweight version of the Observer design pattern,8,0,2013,2024,1,https://github.com/amineasli/event_dispatcher
Mediator,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Mediator,ProcurementTracker,.Net 6 WebAPI | Entity Framework Core | Microsoft SQL | Code First Approach | Clean Architecture | C# | JavaScript | Dart | CQRS | Mediator Pattern | Repository Design Pattern | React | Flutter,6,3,2022,2024,4,https://github.com/Avdunusinghe/ProcurementTracker
Mediator,generic-pipeline,"A simple, fast and generic implementation of the pipeline design pattern.",6,0,2023,2023,1,https://github.com/lawrence-laz/generic-pipeline
Mediator,Harmony,A practical set of tools and implementations of common design patterns that aim to simplify the creation of well structured and testable .NET codebases,6,0,2024,2025,1,https://github.com/mStylias/Harmony
Mediator,-CarBook-,"Onion Architecture - CQRS, Mediator, Repository Design Patterns",5,0,2024,2025,1,https://github.com/Melanocetuss/-CarBook-
Mediator,CQRS_Mediator.WebApi,This sample project shows the implementation of the CQRS architecture and Mediator design pattern.,5,0,2021,2022,1,https://github.com/Ezeji/CQRS_Mediator.WebApi
Mediator,DesignPatterns,This repository contains detailed explanations and C# implementations of the most commonly used software design patterns. Each pattern is accompanied by examples that demonstrate its practical usage in real-world scenarios.,5,0,2024,2025,1,https://github.com/Nikoo-Asadnejad/DesignPatterns
Mediator,CQRS-Command-Query-Responsibility-Segregation-,"I performed Crud management with CQRS + Mediator Design Pattern by keeping the person's annual to-do list on a Jquerybased Schedule. Technologies I Use: Asp.Net Core 7.0, C#, Entity Framework Code First, MSSQL, CQRS, Mediator, MediatR",5,0,2023,2024,1,https://github.com/zehrasbr/CQRS-Command-Query-Responsibility-Segregation-
Mediator,CasgemMicroservice,"MSSQL, PostgreSQL, MongoDb, RedisNoSql, and microservices such as basket, discount, order, cargo tracking, catalog as a design pattern, Repository, CQRS and Mediator as an architecture N-layer architecture, which I included Onion Architecture into microservices",5,0,2023,2024,2,https://github.com/zehrasbr/CasgemMicroservice
Mediator,Mediator_Memento_DesignPatterns,,4,0,2021,2022,1,https://github.com/nebinebili/Mediator_Memento_DesignPatterns
Mediator,node-mediator,A Node.js event based mediator design pattern written in typescript.,4,0,2018,2024,1,https://github.com/yuraxdrumz/node-mediator
Mediator,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Mediator,MediatorDesignPatternDemo,Mediator Design Pattern in ASP.NET Core - Demo Project for a blog post available at https://www.ezzylearning.net/tutorial/mediator-design-pattern-in-asp-net-core,3,2,2021,2021,1,https://github.com/ezzylearning/MediatorDesignPatternDemo
Mediator,Mediator-Momento-design-patterns,,3,0,2021,2024,1,https://github.com/AmiraslanSumgait/Mediator-Momento-design-patterns
Mediator,DesignPatterns-Web.Core,"Including .Net Core 3.1-5.0-6.0, MVC, Layers Architecture, PostgreSQL, Entity Framework Core, Code First, ChainOfResponsibility, CQRS, TemplateMethod, Observer, UnitOfWork, Repository, Composite, Mediator, Iterator, Facade, Decorator Design Patterns Transactions.",3,1,2023,2024,1,https://github.com/erkanbstn/DesignPatterns-Web.Core
Mediator,Mediator-CQRS-boilerplate,"🎯 Welcome to the Mediator Design Pattern Project! This repository focuses on implementing the mediator design pattern using ASP.NET Core. Additionally, custom middleware has been added to handle responses efficiently, ensuring a clean and maintainable architecture.",3,0,2021,2024,1,https://github.com/Limon-7/Mediator-CQRS-boilerplate
Mediator,UdemyCarBook,Asp .Net Core Web API 8.0 - Onion Architecture - CQRS - Mediator -Repository - Unit Of Work - Chain of Responsibility Design Patterns ,3,0,2024,2024,1,https://github.com/sulecelep/UdemyCarBook
Mediator,Spring-Boot-WebAppExample-Mediator,"A Sample monolith application Spring Boot WebAppExample where everything is in a single Spring boot project (ui, application, infrastructure, core) communicating through a Pipeline design pattern implementation (PipelinR)",3,1,2020,2022,1,https://github.com/dimitris-papadimitriou-chr/Spring-Boot-WebAppExample-Mediator
Mediator,CarBook-Web-Project-Asp.Net-Core-8.0-Api,This project is a Web API developed with ASP.NET Core API 8.0 and Onion Architecture using CQRS and Mediator design pattern.,3,0,2024,2024,1,https://github.com/senerdag/CarBook-Web-Project-Asp.Net-Core-8.0-Api
Mediator,Java.NET,"Attempt to provide unopinionated aid in language transition between one and the other. Using clean architecture and design patterns, such as Pipeline, IOC, Mediator and CQRS. Domain and test driven. powered by: http://clouds.se",3,0,2019,2024,2,https://github.com/anders-m-hallgren/Java.NET
Mediator,CarBookProject," Murat YÜCEDAĞ' ın udemyde sunduğu 313 Ders 38.5 saatlik Asp.Net Core Api 8.0 Onion Architecture ile CarBook Projesi eğitimi kapsamında geliştirmiş olduğum proje API, RESTful API, CQRS ve Mediator Design Patterns ve Onion Architecture konularını kavramamı sağladı.",3,0,2024,2024,1,https://github.com/batuhanyalin/CarBookProject
Mediator,rmediator,"RmediatoR is a Python package inspired by the MediatR library available on NuGet. It allows developers to implement the mediator design pattern in their applications, promoting a clean separation of concerns by centralizing request/response logic and eliminating direct dependencies between components.",3,0,2024,2025,1,https://github.com/ffekirnew/rmediator
Mediator,ECommerceCleanArchitecture,"A scalable e-commerce platform built with ASP.NET Core Web API, Clean Architecture, and modern design patterns like CQRS and Mediator. It includes features like user authentication with JWT, email confirmation, OTP password reset, order status management, and background services, ensuring a secure and maintainable solution.",3,0,2024,2025,1,https://github.com/Ma-wardany/ECommerceCleanArchitecture
Mediator,CqrsCarBook,"ASP.NET Onion Architecture, CQRS Design Pattern, Mediator Design Pattern",2,0,2024,2025,1,https://github.com/sevvalyldrrm/CqrsCarBook
Mediator,chat-app-mediator,Chat app using mediator design pattern.,2,1,2022,2023,2,https://github.com/shamelj/chat-app-mediator
Mediator,User-Management-System,Using Adapter And Mediator Design Patterns,2,0,2019,2022,1,https://github.com/shashwatkathuria/User-Management-System
Mediator,MediatorExample,A simple example of Mediator Design Pattern,2,0,2023,2023,1,https://github.com/gsam90/MediatorExample
Mediator,EventHub,Swifty Implementation of the Mediator Design Pattern. Just Like EventBus ,2,0,2017,2018,1,https://github.com/wassimseif/EventHub
Mediator,DesignPatterns,"Some design patterns (Singleton, Simple and Abstract Factory, Builder, Facade, Adapter, Chain of Responsibility, Mediator) examples written in C#",2,0,2018,2024,1,https://github.com/alexandra-valkova/DesignPatterns
Mediator,MediatorSharp,A basic implementation of the Mediator design pattern that is used to promote decoupling between different systems,2,0,2018,2019,1,https://github.com/alexander-scott/MediatorSharp
Mediator,mediator-desing-pattern,Repository consisting of a simple .NET Core project implementing Mediator design pattern using MediatR library.,2,0,2020,2020,1,https://github.com/vaclavnovotny/mediator-desing-pattern
Mediator,CSharp-WPF-DotNET_Five_ExampleApplication,C# - WPF - .NET 5 - How to build a Simple Example Application in WPF System based on .NET 5 and how to use MVVM and Mediator Design Patterns in this application. [Year of Development: 2021],2,2,2021,2024,1,https://github.com/Sullivan008/CSharp-WPF-DotNET_Five_ExampleApplication
Mediator,iterate-and-mediator-design-patterns-slidev,,2,0,2022,2023,1,https://github.com/aminmokhtari94/iterate-and-mediator-design-patterns-slidev
Mediator,aspnet-CarrierSelectApp,"This GitHub repository contains a project built using several design patterns and technologies such as Onion Architecture, Generic Repository Design Pattern, CQRS, Mediator Pattern, Entity Framework Core-Code First, ASP.NET Core 6 API, MSSQL, and Swagger UI.",2,0,2023,2024,1,https://github.com/srknea/aspnet-CarrierSelectApp
Mediator,CQRSDesignPatternSchedulerProject,"I performed Crud management with CQRS + Mediator Design Pattern by keeping the person's annual to-do list on a Jquerybased Schedule. Technologies I Use: Asp.Net Core 7.0, C#, Entity Framework Code First, MSSQL, CQRS, Mediator, MediatR",2,0,2023,2024,1,https://github.com/zehrasbr/CQRSDesignPatternSchedulerProject
Mediator,edu-ark-ai-bot,.NET | Machine Learning | Image Understaning And Processing | Django |  Angular | Azure  | Entity Framework Core | Microsoft SQL | Code First Approach | Clean Architecture | C# | Type Script | Python | CQRS | Mediator Pattern | Repository Design Pattern ,2,1,2023,2024,2,https://github.com/Avdunusinghe/edu-ark-ai-bot
Mediator,design-pattern-mediator,The Mediator Design Pattern is used to control and reduce complexity of communication among groups of objects.,1,2,2020,2023,1,https://github.com/BrijeshSaxena/design-pattern-mediator
Mediator,Virtualdars.DesignPatterns.Mediator,Mediator design pattern,1,0,2022,2023,1,https://github.com/dFarkhod/Virtualdars.DesignPatterns.Mediator
Mediator,Mediator,Mediator Design Pattern,1,0,2017,2017,1,https://github.com/devenfr/Mediator
Mediator,mediator_pattern,Mediator Design Pattern in Java,1,0,2019,2019,1,https://github.com/parsa-JPM/mediator_pattern
Mediator,MCR-MEDIATOR-PATTERN,Implémentation du design pattern Mediator.,1,0,2019,2024,5,https://github.com/Enophi/MCR-MEDIATOR-PATTERN
Mediator,MediatorDesignPattern,Asp.Net Core Mediator Design Pattern,1,0,2024,2024,1,https://github.com/burak-guler/MediatorDesignPattern
Mediator,java_mediator,Mediator design pattern implemented in Java,1,1,2013,2013,1,https://github.com/mryndzionek/java_mediator
Mediator,DesignPattern-Mediator,Example implementation of Mediator design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Mediator
Mediator,Flask-Design-Patterns,"Design Patterns(Singleton,Adapter,Mediator) with flask framework",1,0,2020,2022,2,https://github.com/mzuvin/Flask-Design-Patterns
Mediator,CQRS-and-Mediator-Design-Pattern-RentCar,CQRS ve Mediator Design Pattern ile RenCar Projesi,1,0,2024,2024,1,https://github.com/oguzturan92/CQRS-and-Mediator-Design-Pattern-RentCar
Mediator,Multi-User-Chat-Room-JAVA-,"JAVA Design patterns: mediator, bridge, singleton, factory, observer.",1,0,2012,2013,1,https://github.com/yaxing/Multi-User-Chat-Room-JAVA-
Mediator,mediator_design_patter,Implementation of the mediator design pattern in golang,1,0,2023,2023,1,https://github.com/Creatorjason/mediator_design_patter
Mediator,PhpDesignPatterns-Mediator,Mediator,1,0,2017,2022,1,https://github.com/Jagepard/PhpDesignPatterns-Mediator
Mediator,CQRS-Mediator-RentACar-MyAkademi7,CQRS ve Mediator Design Pattern ile Rent A Car ,1,1,2024,2024,1,https://github.com/yucesefa/CQRS-Mediator-RentACar-MyAkademi7
Mediator,mediatr-sample-api,Sample .Net8 API implementation using the Mediator Design Pattern,1,0,2019,2024,1,https://github.com/salihigde/mediatr-sample-api
Mediator,Ex9-Template-Visitor-Mediator,05506230-Design Patterns In Object-Oriented Programming,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex9-Template-Visitor-Mediator
Mediator,Design_Patterns,Design Pattern Examples,1,0,2022,2022,0,https://github.com/mertcanuygun/Design_Patterns
Mediator,CarBook,Asp.Net Core Api 8.0 / Onion Architecture / CQRS Design Pattern / Mediator Design Pattern / Json Web Token,1,0,2024,2024,1,https://github.com/celalcolak94/CarBook
Mediator,dotnetCore_Api__React,"use CQRS, Mediator design pattern, JWT (JSON Web Token) Authentication",1,0,2019,2019,1,https://github.com/MahbubAhmedTonmoy/dotnetCore_Api__React
Mediator,RentACarProject,CQRS ve Mediator Design Pattern ile oluşturulmuş Araç Kiralama Projesi,1,0,2024,2024,1,https://github.com/elfrkn/RentACarProject
Mediator,MediatorDesignPattern,Asp.Net Core Web Application ile tek katmanda Mediator Design Pattern kullanarak proje geliştiriyorum.,1,0,2024,2024,1,https://github.com/CicekHuseyin/MediatorDesignPattern
Mediator,masstransit-rabbitmq,Masstransit RabbitMQ in fanout exchange using Mediator Design Pattern with MediatR library,1,0,2024,2024,1,https://github.com/haovn2411/masstransit-rabbitmq
Mediator,MovieProject,Movie API  Project - AspNet Core 9.0 Onion Architecture CQRS & Mediator Design Patterns,1,0,2025,2025,1,https://github.com/ipekgulsencelik/MovieProject
Mediator,CirculationMediator,Design Pattern project in June 2015 at HEIG-VD / HESSO - University of Applied Sciences Western Switzerland,1,0,2015,2024,3,https://github.com/ValentinMinder/CirculationMediator
Mediator,to-do-app,A .NET Clean Architecture REST API using design patterns such as CQRS pattern with Mediator,1,0,2022,2023,1,https://github.com/kemalozer23/to-do-app
Mediator,Car-Book,"Project Using CQRS, Mediator, .Net8, Onion Architecture, Repository, Unit of Work, Chain of Responsibility Design Patterns.",1,1,2023,2023,1,https://github.com/enessariyildiz/Car-Book
Mediator,Clean-Architecture,"MSQL Server, .NET 6 API, EFCore Code First Approach, DTOs, Design Patterns, Generic Repository, CQRS, Mediator.",1,0,2023,2023,1,https://github.com/karimelsaeedd/Clean-Architecture
Mediator,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Mediator,mediator-design-pattern,We used our mediator design pattern in a project where the goal was to try to find the ideal bus stop for Lebanese citizens to use,1,0,2022,2025,2,https://github.com/hadimhanna123123/mediator-design-pattern
Mediator,MultiShopMikroService,"Redis,Dapper,Docker,MongoDb,PostgreSQL,MSSQL,SQLLite,Google Drive Entegreli Fotoğraf Yükleme,Identity Server,Api Gateway,Ocelot Gateway,Postman,SwaggerOnion Architecture,CQRS Design Pattern,Mediator Design Pattern,Repository Design Pattern,AspNet Core Api,Api Consume,Rapid Api,Authentication,Authorization,Json Web Token,JWT Bearer,SignalR,Ajax",1,0,2024,2024,0,https://github.com/FurkanAykan/MultiShopMikroService
Mediator,desktop-application-for-quick-customer-handle,"This is a desktop application (Java) that can handle customer food orders quickly. This application is made using 6 different design patterns. Such as builder, decorator, fly-weight, interpreter, chain of responsibility and mediator design patterns.",1,0,2024,2024,1,https://github.com/Varnitha12345/desktop-application-for-quick-customer-handle
Mediator,CQRSArchitectureConcept,Se trata de uma prova de conceito que realiza a aplicação do Design Pattern Mediator em conjunto com o modelo de projeto CQRS.,1,0,2023,2023,1,https://github.com/HitaloNunes/CQRSArchitectureConcept
Mediator,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Mediator,Design_Patterns,You can find examples of design patterns in this project. How many design patterns we have and you can see how some of them are used.,1,0,2022,2023,1,https://github.com/EnesSERENLI/Design_Patterns
Mediator,vitaRes-,"Three design patterns are used by the program to enable users to order ""VITARES"" restaurant items online and have them delivered to their homes:  template method mediator strategy",1,0,2024,2024,1,https://github.com/hayatvyhr/vitaRes-
Mediator,Online-Realtor,"Online Realtor is a framework for an online real estate application. The goal of this application was to design loosely coupled software using multiple software design patterns. I used the mediator, factory, and singleton design patterns to create a mock framework for a real estate application. ",1,0,2020,2020,1,https://github.com/dhirajdesign/Online-Realtor
Mediator,CQRS-with-MediatR-CleanArchitecture,"The MediatR pattern, facilitated by the MediatR library in.NET Core, is an implementation of the Mediator design pattern aimed at simplifying the management of requests (commands and queries) and their corresponding handlers within an application.",1,0,2024,2025,1,https://github.com/Bezyl-Mophat-Otieno/CQRS-with-MediatR-CleanArchitecture
Mediator,BankApiRest_Onion_Architechure,"ApiRestful project with .Net Core 7.0 ,Microsoft SQL Server, Entity Framework, CQRS with Mediator,Repository ,Specification design Patterns ,Redis Cache,Authentication and Authorization process with JWT and Identity Framework Core,Unit Test for commands and querys handler  using Moq,Wrapper(Decorator patter),Extension (Factor patter),Cust Middlewar",1,0,2023,2024,1,https://github.com/omarsilvayepes/BankApiRest_Onion_Architechure
Mediator,SSD_Mediator,A template to practice Mediator design pattern,0,6,2019,2019,1,https://github.com/KeeUka/SSD_Mediator
Mediator,Jala-university-Aula18,This is a repository created during the eighteen class that I taught the students of the second class of bootcamp Brasil Jalasoft/Jala-university about the mediator design pattern.,0,4,2022,2022,1,https://github.com/jonatasolmartins/Jala-university-Aula18
Mediator,AHY.CQRS,CQRS Design Pattern & Mediator Design Pattern,0,0,2022,2022,1,https://github.com/ahakanyildiz/AHY.CQRS
Mediator,DesignPatternMediator,Design Pattern - Mediator,0,1,2022,2022,1,https://github.com/ivanslongarai/DesignPatternMediator
Mediator,BYT_Design_Patterns_01,Mediator design pattern ,0,0,2015,2015,1,https://github.com/tieorange/BYT_Design_Patterns_01
Mediator,CSharp-Design-Patterns-Mediator,Mediator design pattern ,0,0,2019,2020,0,https://github.com/racharya/CSharp-Design-Patterns-Mediator
Mediator,Mediator,design pattern,0,0,2017,2017,1,https://github.com/asmcpluss/Mediator
Mediator,mediator,Mediator  design pattern ,0,0,2018,2018,1,https://github.com/yassinechabli/mediator
Mediator,Mediator,Design Pattern Mediator,0,0,2022,2022,1,https://github.com/aliounemane2/Mediator
Mediator,MediatorDesignPattern,Mediator Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/MediatorDesignPattern
Mediator,OrderProcessingSystem,Mediator Design Pattern,0,0,2023,2023,1,https://github.com/thanmayee07/OrderProcessingSystem
Mediator,pattern_mediator,Design pattern mediator,0,0,2015,2015,1,https://github.com/DenQ/pattern_mediator
Mediator,mediator-design-pattern,mediator-design-pattern,0,0,2023,2023,1,https://github.com/Pedrothh/mediator-design-pattern
Mediator,MediatorDesignPattern,Mediator Design Pattern,0,0,2024,2024,0,https://github.com/Mithu0229/MediatorDesignPattern
Mediator,Codigo-048---Chat,Design Pattern Mediator,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-048---Chat
Mediator,Mediator,Mediator Design Pattern,0,0,2023,2024,1,https://github.com/burakkertn/Mediator
Mediator,Mediator,Behavioral Design Pattern in C# | Mediator Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Mediator
Mediator,MediatorDesignPattern,Mediator design pattern demo,0,0,2021,2021,1,https://github.com/rajan4study/MediatorDesignPattern
Mediator,CSharp_Behavioral_Mediator,Behavioral Mediator Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_Mediator
Mediator,Mediator-Design-Pattern,Mediator Design Pattern Tutorial,0,0,2019,2019,1,https://github.com/jeffpignataro/Mediator-Design-Pattern
Mediator,CS356_MediatorDemo,Mediator Design Pattern Demo,0,0,2017,2017,0,https://github.com/calebzchong/CS356_MediatorDemo
Mediator,note-manager,Mediator design pattern example. ,0,0,2021,2021,1,https://github.com/havinhphu188/note-manager
Mediator,C-Design-Patterns-Mediator,C# Design Patterns: Mediator,0,0,2022,2022,1,https://github.com/Krishneil1/C-Design-Patterns-Mediator
Mediator,mediator-pattern,C# - Mediator design pattern,0,0,2024,2024,1,https://github.com/flcristian/mediator-pattern
Mediator,EmployeeCommunicationPortal_MediatorDesignPattern,Mediator Design Pattern Example,0,0,2021,2021,1,https://github.com/VaibhavBhapkar/EmployeeCommunicationPortal_MediatorDesignPattern
Mediator,mediator,Mediator Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/mediator
Mediator,MediatorPattern,Behavioral Design Pattern in C#,0,0,2020,2020,1,https://github.com/J0rgeSerran0/MediatorPattern
Mediator,mediator_singleton,Homework3_design_patterns,0,0,2021,2021,1,https://github.com/Diyana98/mediator_singleton
Mediator,Mediator,Implementation of Mediator design pattern.,0,0,2019,2019,0,https://github.com/eulersexception/Mediator
Mediator,SDP_Mediator,Software Design Patterns Project Mediator,0,0,2020,2020,0,https://github.com/CarraigMcNulty/SDP_Mediator
Mediator,Mediator,Mediator Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Mediator
Mediator,Mediator_DesignPattern,Implementação do Design Pattern Mediator,0,0,2020,2020,1,https://github.com/luisfdgois/Mediator_DesignPattern
Mediator,patternmediator,Demonstração do Design Pattern Mediator.,0,0,2017,2019,1,https://github.com/myrondavid/patternmediator
Mediator,CS124_MidtermProject,Memento and Mediator Design Patterns,0,0,2015,2015,3,https://github.com/raphaelreventar/CS124_MidtermProject
Mediator,CQRSPatternWithMediator,CQRS Design Pattern With Mediator,0,0,2022,2022,1,https://github.com/necatierlus/CQRSPatternWithMediator
Mediator,CS5800HW7_MediatorAndMemento,Mediator and memento design patterns,0,0,2024,2024,1,https://github.com/DanielVAppel/CS5800HW7_MediatorAndMemento
Mediator,Mediator-Pattern,Behavioral Design Patterns: Mediator Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Mediator-Pattern
Mediator,java_gof_mediator,"design pattern ""mediator"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_mediator
Mediator,MediatorExampleJava,Example of design pattern Mediator,0,0,2017,2017,1,https://github.com/myrondavid/MediatorExampleJava
Mediator,MediatorPatternDemo,Demo of Mediator Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/MediatorPatternDemo
Mediator,Mediator,Exemplo do Design Pattern Mediator.,0,0,2022,2022,1,https://github.com/PudiMari/Mediator
Mediator,larium_executor,Implementation of mediator design pattern,0,0,2014,2019,1,https://github.com/Larium/larium_executor
Mediator,DesignPatternMediator,Design Pattern Observer,0,0,2019,2019,1,https://github.com/jobihormyroniuk/DesignPatternMediator
Mediator,Mediator-Observer-Roi-Zamir,Design Patterns demo.,0,0,2020,2020,1,https://github.com/Roza13-bit/Mediator-Observer-Roi-Zamir
Mediator,3-2-DesignPatterns-Mediator,"Design Patterns in Object-Oriented Programming ninth Tasks ""Mediator Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Mediator
Mediator,MediatorDesignPattern,Ejemplo aplicación de Mediator - Design Patterns,0,0,2021,2021,1,https://github.com/1alejandro1/MediatorDesignPattern
Mediator,DesignPatterns,Builder and Mediator,0,0,2018,2018,1,https://github.com/badamosor/DesignPatterns
Mediator,qmlsample-dpdirector,Qml sample for design pattern : mediator,0,0,2023,2023,1,https://github.com/vforkliu/qmlsample-dpdirector
Mediator,PHPMediatorPattern,Implementing Mediator Design Pattern with PHP,0,0,2019,2019,0,https://github.com/Sunuba/PHPMediatorPattern
Mediator,Design-patterns,Implématation des design patterns Mediator & Visitor,0,0,2025,2025,1,https://github.com/kadluc005/Design-patterns
Mediator,Mediator,Implementation of the Mediator design pattern.,0,0,2018,2018,1,https://github.com/arnoGH/Mediator
Mediator,mediator-design-pattern,Implement mediator design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/mediator-design-pattern
Mediator,php-design-patterns-mediator,PHP Design Patterns - Mediator Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-mediator
Mediator,Mediation,Implementation of the mediator design pattern.,0,0,2024,2024,1,https://github.com/Olbrasoft/Mediation
Mediator,Mediator_exapmle,"This repository contains Mediator design pattern code, and presentation about said design pattern",0,0,2024,2024,1,https://github.com/Janchuks/Mediator_exapmle
Mediator,MediatorImplementation,Real world implementation of mediator design pattern.,0,0,2017,2017,1,https://github.com/kinathru/MediatorImplementation
Mediator,mediator-pattern,Implementation by JavaScript (Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/mediator-pattern
Mediator,mediator,Simple project demonstrating the mediator design pattern,0,0,2022,2022,1,https://github.com/Piazzi/mediator
Mediator,Mediator,Simplistic implementation of the Mediator Design Pattern.,0,0,2019,2024,1,https://github.com/TheOtherMonkey/Mediator
Mediator,Mediator,Simple project that implements mediator design pattern.,0,0,2020,2020,0,https://github.com/uros-veljkovic/Mediator
Mediator,mediator_design_pattern_flutter,"Mediator Design Pattern in Flutter | Behavioral Design Patterns in Flutter | 26 June, 2023",0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/mediator_design_pattern_flutter
Mediator,CS553_Mediator,Practice exercise messaging with Mediator Design Pattern,0,0,2017,2017,1,https://github.com/rogers1lt/CS553_Mediator
Mediator,DesignPatter-Mediator,Mediator design pattern example implemented in c++,0,0,2018,2018,1,https://github.com/VCharatsidis/DesignPatter-Mediator
Mediator,patterns-mediator,A demonstration of the Mediator design pattern,0,0,2023,2023,1,https://github.com/michaellucasnzl/patterns-mediator
Mediator,Medi8r,C# implementation of the mediator design pattern,0,0,2022,2023,2,https://github.com/racccoooon/Medi8r
Mediator,mediator-example,An example of 'Mediator' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/mediator-example
Mediator,DesignPattern-CQRS-Mediator,CQRS and MEDIATOR design pattern sample project,0,0,2024,2024,1,https://github.com/receptuna/DesignPattern-CQRS-Mediator
Mediator,MediatorDesignPattern,Sample .js files for using Mediator Design Pattern,0,0,2015,2015,1,https://github.com/hamdiceylan/MediatorDesignPattern
Mediator,DesignPatternMediator,Mediator Design Pattern no ASP.NET Core,0,0,2024,2024,1,https://github.com/cristianofran/DesignPatternMediator
Mediator,mediator-example2,An example of 'Mediator' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/mediator-example2
Mediator,mediator-design-pattern-java,Example of mediator design pattern in Java,0,0,2019,2019,1,https://github.com/Pethryth/mediator-design-pattern-java
Mediator,mediator-design-pattern,Example implementation of the mediator design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/mediator-design-pattern
Mediator,MECQRS,Implementation of CQRS and Mediator design pattern,0,0,2023,2023,1,https://github.com/bulbul16/MECQRS
Mediator,designPatternMediatorJs_Exemplo,Exemplo de Design Pattern Mediator em Javascript.,0,0,2020,2020,1,https://github.com/LucasPires50/designPatternMediatorJs_Exemplo
Mediator,MediatorDesignPatternExample,Exemplo simples do Design Pattern Mediator com C#,0,0,2017,2017,1,https://github.com/myrondavid/MediatorDesignPatternExample
Mediator,Cpp-GoF-DesignPatterns,DesignPattern Mediator as Observer,0,0,2018,2021,1,https://github.com/GerdHirsch/Cpp-GoF-DesignPatterns
Mediator,MediatorPattern,Learn how to use Mediator design pattern in .Net,0,0,2021,2021,1,https://github.com/ssukhpinder/MediatorPattern
Mediator,Mediator,Exemplo de Design Pattern (Mediator) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/Mediator
Mediator,DesignPatterns,"Builder, Factory, Command, Mediator, State, Observer etc.",0,0,2023,2023,1,https://github.com/duhayildirim/DesignPatterns
Mediator,Mediator-Observer_Remade,Duo Project For Design Patterns class,0,0,2020,2020,1,https://github.com/NadavLitver/Mediator-Observer_Remade
Mediator,MediatorDesignPattern,It's a demo to understand Mediator Design Pattern,0,0,2024,2024,1,https://github.com/LucasRomero/MediatorDesignPattern
Mediator,mediator,A starter code for using the mediator design pattern,0,0,2023,2023,1,https://github.com/FahimaGold/mediator
Mediator,CqrsMediatorSampleApi,CQRS and Mediator Design Patterns in .Net 6,0,0,2022,2022,1,https://github.com/kannan-kiwitech/CqrsMediatorSampleApi
Mediator,mediator-demo,Demo of the mediator design pattern in Javascript,0,0,2015,2015,0,https://github.com/tmbritton/mediator-demo
Mediator,mediator_design_pattern_implementation,Implementation of the mediator design pattern in Java,0,0,2024,2024,1,https://github.com/juancamilocorralesosvath/mediator_design_pattern_implementation
Mediator,MediatorDP,This is an example codes implemented by Mediator Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/MediatorDP
Mediator,project-manager-ceng431,Project Manager in Java with Mediator design pattern.,0,0,2018,2018,1,https://github.com/xerdink/project-manager-ceng431
Mediator,java-simple-mediator-design-pattern-implementation,A simple implementation of the mediator design pattern,0,0,2022,2022,1,https://github.com/Buncarski/java-simple-mediator-design-pattern-implementation
Mediator,chat-mediator-pattern-example,C# - Mediator design pattern example with chat room,0,0,2024,2024,1,https://github.com/flcristian/chat-mediator-pattern-example
Mediator,engComp.padroesDeProjeto.mediator,Mediator design pattern based on erick banas videos,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.mediator
Mediator,MediatR-Demo,How to implement Mediator design-pattern using MediatR,0,0,2022,2022,1,https://github.com/lmaddalena/MediatR-Demo
Mediator,nst-coe-mediator,Mediator design pattern code example for NST CoE,0,0,2022,2022,1,https://github.com/carlosjasso/nst-coe-mediator
Mediator,CsDesignPatterns_Mediator,Mediator,0,0,2020,2020,1,https://github.com/Jagepard/CsDesignPatterns_Mediator
Mediator,JavaDesignPatterns-Mediator,Mediator,0,0,2020,2020,1,https://github.com/Jagepard/JavaDesignPatterns-Mediator
Mediator,DesignPatterns,"Singleton, Factory method, Adapter, Facade, Command, Mediator, Observer, Repository, Builder",0,0,2022,2022,1,https://github.com/Xakimov1610/DesignPatterns
Mediator,RbDesignPatterns-Mediator,Mediator,0,0,2020,2020,1,https://github.com/Jagepard/RbDesignPatterns-Mediator
Mediator,DesignPatternCommandAndMediator,A Example of Design Pattern Command,0,0,2022,2022,1,https://github.com/GustavoGodoy/DesignPatternCommandAndMediator
Mediator,MediatorPattern,Ini adalah contoh aplikasi sederhana Behavioural Design Pattern menggunakan Mediator Pattern,0,0,2020,2020,1,https://github.com/rahadiandwiputra/MediatorPattern
Mediator,cab-service,Application for Cab Booking Service using Mediator Design Pattern,0,0,2023,2023,1,https://github.com/NadunIsuruB/cab-service
Mediator,js-oop-behavioral-desing-patern-mediator,Example of OOP Mediator (Behavioral) Design Pattern in JS,0,0,2019,2019,1,https://github.com/edwards33/js-oop-behavioral-desing-patern-mediator
Mediator,Real-Estate-Manager,OOP Finals - Real Estate Manager using Mediator design pattern,0,0,2022,2024,4,https://github.com/ucelery/Real-Estate-Manager
Mediator,MediatorPattern,This Java project provides a working example of the Mediator design pattern.,0,1,2015,2015,1,https://github.com/LikeLikeAteMyShield/MediatorPattern
Mediator,mediator-pattern,A simple mediator design pattern for Agentic model architecture,0,0,2024,2024,1,https://github.com/data-kinetic/mediator-pattern
Mediator,MediatRDemo,On CQRS and the Mediator design pattern with MediatR,0,0,2022,2022,1,https://github.com/Wolemercy/MediatRDemo
Mediator,DesignPatterns-Mediator,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Mediator
Mediator,theoryforums-mediator-pattern,Forum application making use of CQRS design pattern,0,0,2019,2019,1,https://github.com/KyoDCN/theoryforums-mediator-pattern
Mediator,DesignPatterns.Mediator,,0,0,2022,2022,1,https://github.com/wboliver/DesignPatterns.Mediator
Mediator,DesignPatterns_Mediator,,0,0,2024,2024,1,https://github.com/crimsoncero/DesignPatterns_Mediator
Mediator,DesignPatterns-Mediator,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Mediator
Mediator,FPDesignPatternDhika,Implementation Code for Mediator Design Pattern for Final Project,0,0,2024,2024,1,https://github.com/dhikryaaa/FPDesignPatternDhika
Mediator,DesignPatterns-Mediator,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Mediator
Mediator,DesignPatternsMediator,,0,0,2018,2018,0,https://github.com/xufeixianggithub/DesignPatternsMediator
Mediator,DesignPatterns-Mediator,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Mediator
Mediator,DesignPatterns_Mediator,,0,0,2024,2024,1,https://github.com/Freedom-Coding/DesignPatterns_Mediator
Mediator,DesignPatterns-Mediator,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Mediator
Mediator,DesignPatterns.Mediator,Utilização básica do padrão de projeto Mediator de modo manual e através do package MediatR,0,0,2022,2024,1,https://github.com/RLGHISLENI/DesignPatterns.Mediator
Mediator,smart-home-simulation,Basic Smart Home Simulation with using Mediator Design Pattern,0,0,2023,2023,2,https://github.com/burakkececi/smart-home-simulation
Mediator,DesignPatterns.Mediator,,0,0,2024,2024,1,https://github.com/AugustoPeter/DesignPatterns.Mediator
Mediator,JavaScript-design-patterns,"For the past two decades, programmers have structured both their code and their conversations about code around the patterns first described in Design Patterns, the classic Gang of Four book. JavaScript programmers have participated in these conversations, but the patterns discussed mostly fit in the world of orthodox object-oriented programming. In this course, Emmanuel Henri explains how these patterns fit with JavaScript. He demystifies the purpose of some of the most common patterns, providing code examples along the way. Learn about key creational, structural, and behavioral design patterns, and how you can apply each of them in your JavaScript code. Topics include: What's a pattern? What's the role of callbacks? Functions as first-class citizens in JavaScript Creational patterns, including Singleton and Factory Structural patterns, including model-view-controller Behavioral patterns, including Memento and Mediator",0,2,2019,2019,1,https://github.com/RafinBiswas/JavaScript-design-patterns
Mediator,Mediator,This little project was used to learn about the Mediator design pattern,0,0,2021,2021,1,https://github.com/MarceloMra/Mediator
Mediator,ElevatorProject,This project uses both state and mediator java design patterns,0,0,2021,2021,1,https://github.com/JacobGonzales116/ElevatorProject
Mediator,DesignPatterns-Behavioral-Mediator,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-Mediator
Mediator,DesignPatterns_GOF_Mediator,,0,0,2020,2020,1,https://github.com/riklef/DesignPatterns_GOF_Mediator
Mediator,CQRSCinemaApp,Cinema App implementing CQRS and mediator design pattern - Learning project,0,0,2023,2023,0,https://github.com/asdenc/CQRSCinemaApp
Mediator,DesignPatterns,"This repository contain demo implementation of Singleton, Factory, Abstract Factory, Repository, Mediator and CQRS design patterns.",0,0,2023,2023,1,https://github.com/parthivhirani/DesignPatterns
Mediator,PJATK_BYT_DESIGN_PATTERNS,"Bulider, Mediator, Chain Of Responsibility",0,0,2017,2017,0,https://github.com/qubuss/PJATK_BYT_DESIGN_PATTERNS
Mediator,ProgramacaoAvancada,Classe com implementação de Design Patterns GoF do método Mediator,0,0,2020,2020,1,https://github.com/svitorsannttos2/ProgramacaoAvancada
Mediator,MPTraffic,Simple traffic control system app for describe mediator design pattern,0,1,2022,2022,2,https://github.com/f0urs/MPTraffic
Mediator,Mediator-Observer-DesignPatterns,,0,0,2021,2021,1,https://github.com/infinite1000darc/Mediator-Observer-DesignPatterns
Mediator,simple-chat-with-vanilla-js,⌨️💬The Simple Chat App using Mediator Design Pattern,0,0,2019,2020,1,https://github.com/denys-fominykh/simple-chat-with-vanilla-js
Mediator,MediatorTutorial,"Source code examples describes design pattern Mediator, also is describe in blog devman.pl",0,0,2017,2017,1,https://github.com/Slaw145/MediatorTutorial
Mediator,Behavioral-Mediator,This is a short implementation of the Mediator design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Mediator
Mediator,noteator,note editor to showcase the mediator design pattern in java,0,0,2018,2018,1,https://github.com/azohc/noteator
Mediator,Software-Engineering-2-Course---UNIFEI,Just a simple game. Used Command and Mediator design patterns. ,0,0,2020,2020,1,https://github.com/terciosato/Software-Engineering-2-Course---UNIFEI
Mediator,MediatorDesignPattern,Example of Mediator design pattern usage with GTest + GMock testing framework and configured CMake ,0,0,2021,2021,1,https://github.com/WojciechWro/MediatorDesignPattern
Mediator,ATCMediator,C# version of Mediator pattern example from https://www.geeksforgeeks.org/mediator-design-pattern/,0,0,2019,2019,1,https://github.com/godfathr/ATCMediator
Mediator,MediatorPattern_Example,You can reach the article via https://thecodeprogram.com/explanation-of-mediator-design-pattern,0,0,2020,2020,1,https://github.com/thecodeprogram/MediatorPattern_Example
Mediator,MediatorStructural,"Learning the mediator design pattern, which enables you to encapsulate object interaction with loose coupling. ",0,0,2025,2025,1,https://github.com/asiri92/MediatorStructural
Mediator,mediator,Project made with Java to study purposes. Software implements the Mediator Design Pattern.,0,0,2018,2018,0,https://github.com/amandatavares/mediator
Mediator,skeet-mediator,C++ impementation of the Mediator Design Pattern in the Skeet game.,0,0,2023,2023,1,https://github.com/scottlefoll/skeet-mediator
Mediator,MediatorDesignPatternInDotNetCSharp,Learn about the Mediator Design Pattern in .NET C# with code samples.,0,0,2022,2023,1,https://github.com/AhmedTarekHasan/MediatorDesignPatternInDotNetCSharp
Mediator,DesignPatternsHW4_Mediator,,0,0,2021,2021,1,https://github.com/georger18-meet/DesignPatternsHW4_Mediator
Mediator,Design-Patterns,"Mediator, Composite, Decorator, State, Strategy, Observer, Abstract Factory, SOLID",0,0,2019,2020,1,https://github.com/ozdemiryucel/Design-Patterns
Mediator,mediator-pattern,Design pattern comportamental Mediator para reduzir as dependências caóticas entre objetos,0,0,2021,2021,1,https://github.com/Jhow-R/mediator-pattern
Mediator,Design-Patterns,"Repository with multiple design patterns, ex: command, mediator, observer, strategy, etc.",0,0,2022,2022,1,https://github.com/fredowisk/Design-Patterns
Mediator,Exemplo-mediator-design-patterns,"exemplo de padrão de projetos Comportamental ""Mediator"".",0,0,2015,2015,1,https://github.com/flavionasc/Exemplo-mediator-design-patterns
Mediator,MediatorDesignPattern,Code example for an implementation of the mediator design pattern in a smart home application,0,0,2024,2024,1,https://github.com/TienDat8605/MediatorDesignPattern
Mediator,Mediator-Pattern-Implementation,Implementation of a simple use case of the Mediator Design Pattern.,0,0,2019,2019,1,https://github.com/odcmello/Mediator-Pattern-Implementation
Mediator,ZCW-Design-Mediator-AirportControlTower,Create an implementation of the mediator pattern mentioned here: https://sourcemaking.com/design_patterns/mediator,0,0,2017,2018,2,https://github.com/Zipcoder/ZCW-Design-Mediator-AirportControlTower
Mediator,Mediator-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Mediator-Pattern
Mediator,mediator-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Mediator em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/mediator-java
Mediator,Design-Patterns,"Ejemplos de implementación de los patrones de diseño Command, Iterator y Mediator. ",0,0,2021,2021,2,https://github.com/Marcosmh0199/Design-Patterns
Mediator,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Mediator,.Net-Core-8.0--Onion-Architecture--Car-Rental-with-mediator-design-pattern,".Net Core 8.0, Onion Architecture, Car Rental with mediator design pattern",0,0,2024,2024,1,https://github.com/rumeysakocc/.Net-Core-8.0--Onion-Architecture--Car-Rental-with-mediator-design-pattern
Mediator,OOP-Design-Pattern,A Design Pattern project with Facade (Structural pattern) and Mediator (Behavioral pattern). ,0,0,2023,2023,2,https://github.com/baolong110904/OOP-Design-Pattern
Mediator,MediatorVisitor-Slides,This repository contains educational material and code examples to understand and apply the Mediator Visitor design pattern.,0,0,2023,2024,2,https://github.com/ikariscraft/MediatorVisitor-Slides
Mediator,design-patterns-mediator,,0,0,2020,2020,1,https://github.com/Pampa-Devs/design-patterns-mediator
Mediator,design-patterns-mediator,,0,0,2021,2021,1,https://github.com/MaloPolese/design-patterns-mediator
Mediator,mediator-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/mediator-design-patterns
Mediator,-coronavirus-simulation,"ITERATOR AND COMPOSITE, Model_View_Controller, Fly Weight and Mediator Design Patterns",0,0,2021,2021,1,https://github.com/fatihOguz/-coronavirus-simulation
Mediator,Design-Patterns-Mediator,,0,0,2023,2024,1,https://github.com/FabricioCruzz/Design-Patterns-Mediator
Mediator,computer-simulator,I have designed and developed this project for learn Mediator design pattern .,0,0,2023,2024,1,https://github.com/MrWebAppDeveloper2/computer-simulator
Mediator,design-patterns-mediator,,0,0,2022,2022,1,https://github.com/svitorsannttos/design-patterns-mediator
Mediator,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
Mediator,design-patterns-mediator,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-mediator
Mediator,design-patterns-mediator,,0,0,2020,2020,1,https://github.com/felipe-allmeida/design-patterns-mediator
Mediator,design_pattern_mediator,"Develop a system that uses the pattern given in class. ""Mediator"" design pattern. ",0,0,2021,2024,1,https://github.com/sc0v0ne/design_pattern_mediator
Mediator,mediator-pubsub-attempt,Try to implement mediator and pubsub design patterns and made them work together,0,0,2017,2017,1,https://github.com/karalkou/mediator-pubsub-attempt
Mediator,mediator.js,An implementation of the mediator design pattern in ES6 compiled to ES5 with Traceur.,0,0,2015,2023,1,https://github.com/isaacrankin/mediator.js
Mediator,demo-ecommerce,"App to try ASP.NET Web API, Mediator Design pattern with Docker, Postgres",0,0,2024,2024,1,https://github.com/SatyanarayanaMutyala/demo-ecommerce
Mediator,CoreWebApplicationDBFirst,.Net Core 2.0 WebAPI Application using EntityFramework along with design pattern Mediator.,0,0,2017,2017,0,https://github.com/mbharathbhushan/CoreWebApplicationDBFirst
Mediator,shared.js,A factory for a passive mediator design pattern in <25 lines of Javascript ,0,0,2015,2015,1,https://github.com/andy9775/shared.js
Mediator,C_sharp_pluralsight_design_patterns_Mediator,Apply Mediator Pattern with C# by follow Pluralsight course,0,0,2020,2020,0,https://github.com/ahmed-hamdy90/C_sharp_pluralsight_design_patterns_Mediator
Mediator,CSharpDesignPatternsMediator,,0,0,2021,2021,1,https://github.com/rodrigo-portilio/CSharpDesignPatternsMediator
Mediator,Exemplo-Design_Patterns_Mediator,,0,0,2023,2023,1,https://github.com/JoaoVictorFBarros/Exemplo-Design_Patterns_Mediator
Mediator,PubSub-Mediator-Events-Javascript-Design-Pattern,"Pubsub design pattern (publish/subscribe), which allows us to decouple our modules.",0,0,2017,2017,2,https://github.com/yamitrvg12/PubSub-Mediator-Events-Javascript-Design-Pattern
Mediator,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Mediator,moviestore-cqrs-mediator,Movie Store: A simple project practicing Clean Architecture to demonstrate CQRS and Mediator Design Pattern,0,0,2022,2022,1,https://github.com/ACavdar/moviestore-cqrs-mediator
Mediator,design-patterns-exercises-with-java,Examples including: Mediator & State & Strategy & Observer & Abstract Factory & Decorator & Composite Design Patterns & SOLID principles  ,0,0,2022,2022,1,https://github.com/hasanyeniada/design-patterns-exercises-with-java
Mediator,CarRental,CQRS ve Mediator Design Pattern'larını kullanarak admin panelli bir Araç Kiralama sitesi oluşturdum.,0,0,2024,2024,1,https://github.com/turkay-sagir/CarRental
Mediator,Chat-Room-using-Mediator-Design-Pattern,This is my Mediator Design Pattern project at Ho Chi Minh University of Science,0,0,2021,2021,1,https://github.com/nthehai01/Chat-Room-using-Mediator-Design-Pattern
Mediator,UdemyCarBook,Asp .Net Core Web API 8.0 - Onion Architecture - CQRS - Mediator -Repository Design Patterns,1,0,2024,2025,1,https://github.com/yucesefa/UdemyCarBook
Mediator,Fortinet_Mediator_Pattern,This is what i learned about Design Patterns and how i have used them in past. ,0,0,2017,2017,1,https://github.com/smalhotra1/Fortinet_Mediator_Pattern
Mediator,Mediator,"Mediator Design Pattern that can handle requests and responses, support pipeline behaviors (e.g., for logging, validation), and handle results asynchronously.",0,0,2024,2024,0,https://github.com/PatternLib/Mediator
Mediator,DesignPattern,A project with examples of design patterns,0,0,2020,2021,1,https://github.com/aliyildizoz/DesignPattern
Mediator,java_design_patterns_mediator_model,java设计模式_中介者模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_mediator_model
Mediator,c-sharp-design-patterns-mediator,,0,0,2022,2022,1,https://github.com/atul-sirsode/c-sharp-design-patterns-mediator
Mediator,JavaDesignPatterns,"Multiple examples of design patterns  : Adapter, Command, Composite, Decorator, State, Fabric, AbstractFabric, FlyWeigth, Mediator, Observer, Prototype, Singleton, Strategy, TemplateMethod",0,0,2022,2022,1,https://github.com/leo77777/JavaDesignPatterns
Mediator,MockSensorApp,"Academic project with implementation of four different design patterns: Observer, Mediator, Reactor and Abstract Factory",0,0,2019,2019,1,https://github.com/adelindobre/MockSensorApp
Mediator,OOP-Decorator-Mediator-Singleton,"Demonstrating the implementation of Object-Oriented Programming principles, Decorator Pattern, Mediator Design Pattern, and Singleton Pattern.",0,0,2023,2023,1,https://github.com/YoungOnef/OOP-Decorator-Mediator-Singleton
Mediator,cs4773-hw4,"Assignment to create a javafx project that implements mvvm, facade, and observer/mediator design patterns.",0,0,2022,2022,1,https://github.com/sampleauto/cs4773-hw4
Mediator,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Mediator,exemploMediatr,Exemplo de utilização da biblioteca Mediatr com ASP.NET Core para implementação Design Pattern Mediator,0,0,2020,2020,2,https://github.com/rodrigo00737/exemploMediatr
Mediator,Mediator-Design-Pattern,A simple Java app that facilitates the employee profile data entry process to practice the mediator design pattern. ,0,0,2020,2020,1,https://github.com/dmensah1/Mediator-Design-Pattern
Mediator,Reactivities,A social network in react.js & .NET Core (following clean architecture with CQRS + Mediator Design Pattern),0,0,2020,2020,1,https://github.com/Inderjit-fullstack-dev/Reactivities
Mediator,Onion-Architecture,"MSQL Server, .NET 6 API, EFCore Code First Approach, DTOs, Design Patterns, Generic Repository, CQRS, Mediator.",0,0,2023,2023,1,https://github.com/muhammedsaamy/Onion-Architecture
Mediator,C---Validator,"A C# program that validates incoming user entry data using mediator, state and decorator design patterns",0,0,2020,2020,1,https://github.com/Anesthet1ze/C---Validator
Mediator,Mediator-Pattern-ChatRoom-Study,Small class library to implement a simple chat room using the mediator design pattern. 100% TDD-style.,0,0,2022,2022,1,https://github.com/AngelIntension/Mediator-Pattern-ChatRoom-Study
Mediator,Todo-List-Application,"Simple Todo List Application made using JAVA, with the purpose of learn Design Pattern Mediator, State, Observer",0,0,2021,2021,1,https://github.com/mfaisalghozi/Todo-List-Application
Mediator,Mediator,"This project demonstrates a basic implementation of the Mediator design pattern in C#, aimed at managing communication between multiple objects without them needing direct references to each other.",0,0,2024,2024,1,https://github.com/mr2079/Mediator
Mediator,automapper_mediatr_api,A web api built using Mediator design patterns (CQRS) with help from the Mediatr and Automapper libraries,0,0,2023,2023,1,https://github.com/mariothiago/automapper_mediatr_api
Mediator,MediatR-Example,An example of how you can set up the mediator design pattern using MediatR in .NET Core. ,0,1,2019,2022,1,https://github.com/RoundTheCode/MediatR-Example
Mediator,AirTrafficController,The project aim is to demonstrate the mediator design pattern by implementing an air traffic controller simulation.,0,0,2021,2021,1,https://github.com/HasanFidan/AirTrafficController
Mediator,File_Explorer,Duyệt và mở một số loại tệp. Ứng dụng Winform sử dụng Mediator và Visitor design pattern.,0,0,2023,2023,1,https://github.com/anhnb206110/File_Explorer
Mediator,MediatorExample,Mediator is a behavioral design pattern that lets you reduce chaotic dependencies between objects. The pattern restricts direct communications between the objects and forces them to collaborate only via a mediator object.,0,0,2021,2021,1,https://github.com/Mahmoud02/MediatorExample
Mediator,iridium-web,"iridium-web is a clean monolith architecture developed using domain driven design, cqrs and mediator design pattern",0,0,2023,2025,1,https://github.com/fatihaydin9/iridium-web
Mediator,Jet_Arac_Car_Rental_Site,A car rental site built using Asp.Net Core Onion Architecture and CQRS and Mediator design patterns,0,0,2025,2025,1,https://github.com/soreitaS/Jet_Arac_Car_Rental_Site
Mediator,WebApi_CleanArchitecture,An Api With Clean Architecture And CQS Design Pattern With Mediator And SQL Server And Asp.Net Library,0,0,2022,2022,1,https://github.com/MSOheil/WebApi_CleanArchitecture
Mediator,DesignPatternFinalAssignment,"Design Pattern Assignment implemented with strategy,singleton,bridge,mediator,observer,abstract factory,command,composite,chain of responsibility patterns",0,0,2019,2019,1,https://github.com/fahmidf3053/DesignPatternFinalAssignment
Mediator,MediatorPattern,"The Mediator design pattern defines an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.",0,0,2023,2023,1,https://github.com/SyedMdKamruzzaman/MediatorPattern
Mediator,Go_Mediator_Pattern,"A Go project demonstrating the Mediator pattern by centralizing communication between components. This repository showcases best practices in design patterns, and decoupled component interaction.",0,0,2024,2024,1,https://github.com/arthurfp/Go_Mediator_Pattern
Mediator,E-commerce-Platform-Leveraging-Design-Patterns,"The implemented e-commerce platform in java leverages the Strategy, Mediator, and Template Method design patterns for flexible payment handling, efficient communication, and standardized processes.",0,0,2023,2023,1,https://github.com/Labonnya/E-commerce-Platform-Leveraging-Design-Patterns
Mediator,CarBook,"A real project featuring CQRS, Mediator, and Repository design patterns, as well as JWT and SignalR! (Development in progress.)",0,0,2024,2025,1,https://github.com/MertKacar99/CarBook
Mediator,MediatorPattern-PartnerClass,"This project implements the Mediator design pattern, which centralizes communication between multiple components through a mediator object. This reduces direct dependencies between objects, facilitating system maintainability and extensibility by promoting a more modular and decoupled design.",0,0,2024,2024,1,https://github.com/MauricioResmar/MediatorPattern-PartnerClass
Mediator,CS4800-HW6-Iterator-Mediator-Memento-Design-Patterns,,0,0,2024,2024,1,https://github.com/kevinlwong/CS4800-HW6-Iterator-Mediator-Memento-Design-Patterns
Mediator,ECommerce_Light,"Implementation of a web api using DDD architecture - CQRS - Custom Mediator design pattern, based on .NET Core 3.1 & C#",0,0,2022,2023,1,https://github.com/WARIDKhalil/ECommerce_Light
Mediator,AHY.JWTApp,| Onion Arch | API + MVC (API Consume) | CQRS + Mediator Design Patterns | API JWT | MVC Auth With JWT From API | EF 7 | ,0,0,2022,2023,1,https://github.com/ahakanyildiz/AHY.JWTApp
Mediator,JwtLoginTask,"jwt security ile login yapılan, rolleme uyguladığım, Mediator Design Pattern kullandığım Admin ve User paneli olan bir contact task proje.",0,0,2024,2025,1,https://github.com/ondercebeci/JwtLoginTask
Mediator,API.NetCore,"Code Refactor using SOLID principles, Design Patterns (CQRS, Mediator, Factory Method, Repository -implemented two data sources-, etc), REST principles, Security.",0,0,2023,2023,3,https://github.com/kopelmannnico/API.NetCore
Mediator,Microservice-ECommerce,Redis  Dapper  Docker  MongoDB  PostgreSQL  MSSQL  SQLLite  Google Drive Entegreli Fotoğraf Yükleme  Identity Server  Api Gateway  Ocelot Gateway  Postman  Swagger  Onion Architecture  CQRS Design Pattern  Mediator Design Pattern  Repository Design Pattern  AspNet Core Api  Api Consume  Rapid Api  Authentication  Authorization  Json Web Token  JWT ,0,0,2025,2025,1,https://github.com/zehrasbr/Microservice-ECommerce
Mediator,ECommerece,"An e-commerce API that utilizes nine design patterns: FACTORY METHOD, PROTOTYPE, BUILDER, PROXY, FACADE, ADAPTER, CHAIN OF RESPONSABILITY, MEDIATOR, COMMAND",0,0,2024,2024,1,https://github.com/MunMihai/ECommerece
Mediator,Behavioral_Patterns_Implementation,"Console program that implements Command and Mediator, Behavioral Design patterns, done as part of a test in the Design course at ITCR.",0,0,2020,2021,2,https://github.com/JesusJimenezValverde/Behavioral_Patterns_Implementation
Mediator,DesignPattern-Mediator,"This C# implementation demonstrates the Mediator design pattern, centralizing communication between objects to promote loose coupling. It highlights how to manage interactions between colleagues through a mediator for a more flexible and maintainable system.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Mediator
Mediator,go-mediator,This repository demonstrates the implementation of the Mediator Design Pattern in Golang. The Mediator Pattern provides a centralized communication mechanism that reduces direct dependencies between components by introducing a mediator object that manages interactions and communication logic.,0,0,2024,2025,1,https://github.com/sakethsusarla/go-mediator
Mediator,heitech.Mediator,Mediator Design pattern with two flavors. A simple one which allows to call interface methods of registered interfaces. And a complexer one that deals with Messageobjects that each registered Type can intercept and use in its on right.,0,0,2018,2020,1,https://github.com/TimoHeiten/heitech.Mediator
Mediator,Online-Shop-Platform-Utilizing-Design-Patterns,"This e-commerce platform is implemented in Java and incorporates three design patterns to enhance its functionality and maintainability: Strategy, Mediator, and Template Method. By incorporating these design patterns, this e-commerce platform becomes more flexible, scalable, and maintainable.",0,0,2023,2023,1,https://github.com/mehzabin-haque/Online-Shop-Platform-Utilizing-Design-Patterns
Mediator,mvcm-model-view-controller-service-mediator,"A sample project demonstrating the use of the Mediator Design Pattern along with the MVC pattern, attempting to formalize the combination of these patterns as an official design methodology.",0,0,2018,2023,1,https://github.com/mariojvargas/mvcm-model-view-controller-service-mediator
Mediator,csharp-mediator,"Based on the C# Design Patterns: Mediator Course on Pluralsight. Discovering how to work with the mediator pattern why it exists and when to use it. Different examples such as Chat App, Marker Positions and use of the nuget package MediaR.",0,0,2021,2021,1,https://github.com/muhamedkarajic/csharp-mediator
Mediator,CQRS_MediatorPattern_API,This project aids better understanding of CQRS Architecture and Mediator Software Design Pattern. The Mediator pattern was used to implement the separation of read and write commands/queries in line with the CQRS Architecture pattern. The project as also made use of Redis as Distributed Caching mechanism to improve the performance of endpoints. ,0,0,2021,2021,1,https://github.com/AtolagbeMuiz/CQRS_MediatorPattern_API
Mediator,-AntFarm-Simulation-using-Design-Patterns-,"The AntFarm Simulation System models ant colony behaviors using C++ and various design patterns, including Singleton, Factory, Builder, Decorator, and Mediator. It simulates activities such as foraging, building, and defending. The command-line interface (CLI) allows for interactive user engagement, creating an immersive simulation experience.",0,0,2024,2024,1,https://github.com/GhaziaArsh/-AntFarm-Simulation-using-Design-Patterns-
Mediator,Intro-To-Mediator-Design-Pattern,Mediator is a behavioral design pattern that lets you reduce chaotic dependencies between objects. The pattern restricts direct communications between the objects and forces them to collaborate only via a mediator object.,0,0,2022,2024,1,https://github.com/ParsaMehdipour/Intro-To-Mediator-Design-Pattern
Mediator,360t-two-players,That is a test project done for 360T. It is a simple console application that implements the Mediator design pattern and multithreading using Java.,0,0,2024,2024,1,https://github.com/mahammad-mostafa/360t-two-players
Mediator,Mediator-Design-Pattern,"mediator design pattern reduces communication complexity between multiple object. ""Defines an object that encapsulates how a set of objects interact. Promotes loose coupling by keeping the objects from referring to each other directly"". For detailed explanation visit - https://youtu.be/x_H4_bbLZ8Y and https://youtu.be/r8mThhyuh9U",0,1,2020,2021,1,https://github.com/raigenics/Mediator-Design-Pattern
Mediator,da-resto,"Game using java, which focuses on the use of multithreading and using Design Pattern (Mediators, Factories, Observer, State and others)",0,0,2024,2024,1,https://github.com/wllchrst/da-resto
Mediator,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Mediator,design-patterns-in-java,TR: Java dizayn mimarileri kullanılmış ve UMLleri verilmiştir.  EN: Java design patterns with UML,0,0,2019,2019,1,https://github.com/mertselimb/design-patterns-in-java
Mediator,college-classes-schedule-parser,Classes Schedule Parser for my college classes. The program opens the college's website using Selenium and gets the data about my classes. Using the Composite Design Pattern and the Mediator Design Pattern I implemented a parsing algorithm. After the parsing the data is inserted in a MySQL database.,0,0,2021,2021,1,https://github.com/romanovadrian/college-classes-schedule-parser
Mediator,Traffic-Control-System,This project was developed in order to control the traffic through a centralized system. This solution was development with the technology stack of Java SE along with the mediator design pattern,0,0,2023,2023,1,https://github.com/Sisuka2003/Traffic-Control-System
Mediator,E-Commerce-System-with-Behavioral-Design-Patterns,"The E-Commerce System with Behavioral Design Patterns project is a Java-based e-commerce system management that demonstrates the use of behavioral design patterns to create a flexible, scalable, and maintainable system. ",0,0,2024,2024,1,https://github.com/barannmeisterr/E-Commerce-System-with-Behavioral-Design-Patterns
Mediator,E_Commerce,"This E-Commerce Microservice Project uses a modern, scalable microservice architecture. It features Redis for caching, MongoDB and PostgreSQL for databases, and employs CQRS and the Mediator Design Pattern for efficient data management.",0,0,2024,2024,1,https://github.com/Fahrettinsolak/E_Commerce
Mediator,CisStudent,Communication System between Students and Jobs and Training using  Asp.net Core Api and Clean Architecture and CQRS Design Pattern,0,0,2019,2021,1,https://github.com/AmrElshaer/CisStudent
Mediator,ChainAbuse,"A modular software solution that uses the ChainAbuse API to identify fraudulent Crpyto addresses. Implements design patterns like Mediator, Observer, Singleton, and Factory Method for scalability and maintainability. Features automated JSON parsing and report generation.",0,0,2025,2025,1,https://github.com/emanueldavidov/ChainAbuse
Mediator,JwtApp,It is a small-scale project that performs user verification and distributes tokens with json web token and where 2 applications communicate via API. Json Web Token / CQRS / Repository Design Pattern / AutoMapper / Mediator Pattern / Api,0,0,2023,2023,1,https://github.com/egemenagustos/JwtApp
Mediator,deepstream-IVA,"Real-time computer vision app with video streaming - Intelligent Video Analytics. Uses Nvidia Deepstream SDK, Kafka, and the mediator design pattern.  Secured with Cryptlex so that on start it verifies its local deploy keys to avoid unlicensed use.",0,0,2023,2025,1,https://github.com/SuperElectron/deepstream-IVA
Mediator,CSE-308-Software-Engineering-Sessional,"This sessional course corresponds to the theory course CSE 307 taught by BUET CSE department at Level 3- Term 1.  This course includes code implementation of widely used different software design patterns, such as Adapter, Builder, Composite, Observer, Mediator etc.",0,0,2023,2023,1,https://github.com/SaffatZabin-17/CSE-308-Software-Engineering-Sessional
Mediator,.Net-Core-Api-8.0-CarBook,"The CarBook library developed using .NET Core API 8.0 incorporates several modern software development techniques. Among these techniques are essential components such as CORS (Cross-Origin Resource Sharing), the Mediator design pattern, and JWT (JSON Web Token) based authorization.",0,0,2024,2024,1,https://github.com/ayetullahk/.Net-Core-Api-8.0-CarBook
Mediator,Tugas-Besar-CCDP-10116073-10116076,"Repository ini digunakan untuk menyimpan file atau project dari tugas besar clean code dan design pattern. Pada repository ini ada 3 tipe design pattern yang diimplementasikan yaitu creational, structural, dan behavioral pattern. Dimana diambil dua contoh pattern dari ketiga tipe tersebut. Dimana untuk creational dipilih abstrac factory pattern dan prototype pattern, untuk structural dipilih proxy pattern dan composite pattern, dan untuk behavioral dipilih mediator pattern dan iterator pattern.",0,0,2020,2020,1,https://github.com/fritsonagung/Tugas-Besar-CCDP-10116073-10116076
Mediator,BankingOperations,"A small simulation of the banking system. Part of the project was done in spring practice in Sigma Software. The project corrected the shortcomings and presented as a term paper. The application is built on the MVC pattern. Design patterns such as Mediator, Specification etc. are also used.",0,0,2020,2020,1,https://github.com/ThreePhaseCurrent/BankingOperations
Mediator,PHP-MVC-Framework,"PHP MVC is an application design pattern that separates the application data and business logic (model) from the presentation (view). MVC stands for Model, View & Controller. The controller mediates between the models and views.  Think of the MVC design pattern as a car and the driver.  The car has the windscreens (view) which the driver (controller) uses to monitor traffic ahead then speed or brake (model) depending on what he sees ahead.",0,0,2019,2019,1,https://github.com/aaphane/PHP-MVC-Framework
Memento,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Memento,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Memento,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Memento,svelte-undoable,Memento design pattern in Svelte,45,1,2020,2024,1,https://github.com/MacFJA/svelte-undoable
Memento,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Memento,GoDesignPatterns,"We will analyze Strategy, Observer, Prototype and Memento Design Pattern in Go Lang.",8,0,2021,2022,0,https://github.com/borakasmer/GoDesignPatterns
Memento,MementoDesignPattern, Memento Design Pattern in C#,5,0,2024,2024,1,https://github.com/Mshiravi10/MementoDesignPattern
Memento,Memento-Pattern-Swift,Memento Design Pattern in Swift,5,1,2018,2019,1,https://github.com/appcoda/Memento-Pattern-Swift
Memento,Mediator_Memento_DesignPatterns,,4,0,2021,2022,1,https://github.com/nebinebili/Mediator_Memento_DesignPatterns
Memento,MementoSharp,"MementoSharp is a extension of memento design pattern on object type , to save state of object and restore it on runtime by state index. ",4,0,2021,2023,1,https://github.com/mstbardia/MementoSharp
Memento,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Memento,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Memento,design-pattern-memento,Another behavioral design pattern called the Memento Design Pattern which is used to restore the state of an object to a previous state.,3,3,2020,2024,1,https://github.com/BrijeshSaxena/design-pattern-memento
Memento,Minesweeper,"Exercising the Memento design pattern, in a fully playable game of Minesweeper :smirk:",3,0,2021,2025,1,https://github.com/Joknaa/Minesweeper
Memento,PhpDesignPatterns-Memento,Memento,2,0,2017,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Memento
Memento,GenericMemento,"Generic Memento Design Pattern, for all types (struct, class)",2,0,2020,2022,1,https://github.com/yonivav/GenericMemento
Memento,webale-chess,"Build a type of chess called Webale chess using Java, and implemented different ""Gang of 4 Design Patterns"" including MVC, singleton, strategy, memento, etc.",2,2,2020,2025,4,https://github.com/LiewKuanYung/webale-chess
Memento,CMemento11,Memento Design pattern in C++ 11 to add the undo/redo features to a class (QML ListView example),2,0,2017,2018,1,https://github.com/evildead/CMemento11
Memento,ChessGame,Developed a classic chess game utilizing a graphical user interface (GUI) and integrated extra features like an undo button using memento design pattern.,2,0,2024,2024,1,https://github.com/zeyadamgad7/ChessGame
Memento,UndoRedoOperationsonAngular6,"I used memento Design pattern for Undo Redo operations on an Angular 6 projects. I created single job application page. And whenever model changed, I pushed it into container list. When I want to undo last change, I move to previous index on container list and take previous model with this current index. And If I want to Redo on current model, I move to next index on container list and take next model with this current index. I created user control for Undo Redo process. And I put all bussines in it. Undo - Redo buttons disabled condition. Model history container list and current Index are keep in this controller. So I used this controller on every page with less codes.",2,1,2018,2018,1,https://github.com/borakasmer/UndoRedoOperationsonAngular6
Memento,Memento-Design-Pattern,Memento-Design-Pattern,1,0,2021,2021,1,https://github.com/osmnbkrerk/Memento-Design-Pattern
Memento,DesignPattern-Memento,Example implementation of Memento design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Memento
Memento,memento,Implementation of the Memento Design pattern in Go,1,0,2016,2016,1,https://github.com/agundy/memento
Memento,memento-go,cool example of memento design pattern in golang,1,0,2024,2024,1,https://github.com/Andrea-Cavallo/memento-go
Memento,memento_design_pattern,Implementation of the memento design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/memento_design_pattern
Memento,Observer-Memento,Design patterns Observer e Memento  in C# :carousel_horse:,1,0,2021,2022,1,https://github.com/EduardoReisDev/Observer-Memento
Memento,MomentoProject,Sudo pos to implement the memento design pattern,1,0,2019,2019,2,https://github.com/Schlitzohr101/MomentoProject
Memento,Memento-Design-Pattern-,My first Application of Memento Design Pattern with Java ,1,0,2024,2024,1,https://github.com/JoseWald/Memento-Design-Pattern-
Memento,design-patterns,Design patterns in C#,1,0,2020,2022,1,https://github.com/luisfrcarvalho/design-patterns
Memento,memento-design-pattern,This is a sample for memento design pattern in java ,1,0,2021,2021,0,https://github.com/omidhaghighatgoo/memento-design-pattern
Memento,designpatterns,Projeto que abrange diversos design patterns,1,0,2018,2023,1,https://github.com/lelodois/designpatterns
Memento,BlueLibrary,"Design pattern illustration: Singleton, MVC, Decorator, Adapter, Facade, Observer, Memento.",1,0,2017,2020,1,https://github.com/ngominhtrint/BlueLibrary
Memento,OOD,"Design Patterns project: MVC, Singleton, file iterator, Observer, Command, Memento.",1,0,2023,2023,1,https://github.com/RamDvlp/OOD
Memento,software-quality-and-testing,"Design patterns: Factory, Builder, Adapter, Decorator, Strategy, Memento, and others.",1,0,2021,2022,1,https://github.com/sabrinalupsan/software-quality-and-testing
Memento,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Memento,DNDFinalProject,"Personal repo for Design Patterns Final Project. Dungeons and Dragons Style program with implementation of multiple Design Patterns(Memento, Decorator, Strategy, Factory)",1,0,2020,2020,1,https://github.com/wolffcol/DNDFinalProject
Memento,udemy_DesignPatterns,"Course instructed by Dmitri Nesteruk that taught about SOLID principles and creational, structural and behavioral patterns such as Factory,Builder, Singleton*, Memento and a little bit of IOC and dependency injection. ",1,0,2018,2022,1,https://github.com/iuryamicussi/udemy_DesignPatterns
Memento,StoreCashier_OODesign2021A,"Object-Oriented-Design course project JavaFx, MVC, Design Patterns: Command, Memento, File Iterator, Singleton, Threads...",1,0,2021,2021,2,https://github.com/ShahaRaz/StoreCashier_OODesign2021A
Memento,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Memento,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Memento,JogoCobrinhaDesignPatterns,"Simples jogo da cobrinha, desenvolvido em C++ no QtCreator, e fazendo uso de padrões de projeto.  Os padrões utilizados são State, Singleton e Memento.",1,0,2019,2019,1,https://github.com/mauriciobenigno/JogoCobrinhaDesignPatterns
Memento,Store_Final_Project_Design_Patterns," Streaming Binary I/O, Collections, Design Patterns: Comparator, Iterator (For file), List Iterator, Observer, MVC, Singleton, Command, Adapter, Decorator, Memento and Multi Treading Systems",1,0,2021,2022,1,https://github.com/RonShmaya/Store_Final_Project_Design_Patterns
Memento,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Memento,VehicleAgency,"This project is a vehicle agency graphical user interface (GUI) implemented in Java. It incorporates various design patterns to enhance code organization and functionality. The design patterns utilized include the thread pool, memento, observer, singleton, abstract factory method, and decorator patterns.",1,0,2023,2025,1,https://github.com/RonyBubnovsky/VehicleAgency
Memento,Memento,Basic project depicting the memento OO software design pattern.,0,2,2015,2015,1,https://github.com/snowcycle/Memento
Memento,mementoJS,Design Pattern,0,0,2019,2019,2,https://github.com/DeyvyMY/mementoJS
Memento,Memento-Design-Pattern,Behavioral Design Patterns: Memento Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Memento-Design-Pattern
Memento,Memento,Behavioral Design Pattern in C# | Memento Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Memento
Memento,Codigo-049---Vida,Design Pattern Memento,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-049---Vida
Memento,Memento,design pattern memento,0,0,2023,2023,2,https://github.com/BjakubowskiUKSW/Memento
Memento,Memento,Design Pattern Memento,0,0,2022,2022,1,https://github.com/aliounemane2/Memento
Memento,challenge_memento,Design pattern Memento,0,0,2024,2024,1,https://github.com/math-dev-24/challenge_memento
Memento,MementoDesignPattern,Memento Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/MementoDesignPattern
Memento,mementopattern1.01,Memento Design Pattern,0,0,2019,2019,1,https://github.com/danplo1/mementopattern1.01
Memento,MementoSwift,memento Design pattern exmple,0,0,2020,2020,1,https://github.com/angeloXcoder/MementoSwift
Memento,MementoDesignPattern,Memento Design Pattern Demo,0,0,2021,2021,1,https://github.com/rajan4study/MementoDesignPattern
Memento,MementoDemo_DP,Memento design pattern demonstration,0,0,2019,2019,1,https://github.com/Nawfal07/MementoDemo_DP
Memento,DPMemento,Design Pattern Behavioral Memento,0,0,2020,2020,1,https://github.com/panji140299/DPMemento
Memento,miniTextEditor,Using memento design pattern,0,0,2021,2021,1,https://github.com/Learning-Sandile-C/miniTextEditor
Memento,patterns-memento,Memento Design pattern example,0,0,2022,2022,1,https://github.com/maksymyavorovych/patterns-memento
Memento,memento-design-pattern,C# - Memento design pattern.,0,0,2023,2023,1,https://github.com/flcristian/memento-design-pattern
Memento,memento,Memento Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/memento
Memento,CSharp_Behavioral_Memento,Behavioral Memento Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_Memento
Memento,ThirdVoyage,Mementos. Behavioural Design Pattern,0,0,2021,2021,1,https://github.com/justinepillay/ThirdVoyage
Memento,memento,Design patterns with Memento,0,0,2021,2021,1,https://github.com/John-Rocha/memento
Memento,Memento,Testing Memento Design Pattern,0,0,2017,2017,1,https://github.com/spamproof2010/Memento
Memento,MementoImplementation,Implementation of Memento Design Pattern,0,0,2017,2017,1,https://github.com/kinathru/MementoImplementation
Memento,MementoPatternDemo,Demo for Memento Design pattern,0,0,2020,2020,1,https://github.com/TobyXYan/MementoPatternDemo
Memento,DP_Command_Memento,design pattern exercise,0,1,2016,2016,1,https://github.com/ksmulti/DP_Command_Memento
Memento,PatternMemento-Example,Behavioral design patterns,0,0,2018,2018,1,https://github.com/amarqueze/PatternMemento-Example
Memento,design_patterns_memento,remembering design patterns,0,0,2021,2021,1,https://github.com/whoismaikl/design_patterns_memento
Memento,MementoDesignPattern_Example,Example to Memento Design Pattern,0,1,2019,2019,1,https://github.com/samsaavel/MementoDesignPattern_Example
Memento,MementoDesignPatternJava,Memento Design Pattern in Java,0,0,2020,2020,1,https://github.com/smarigowda/MementoDesignPatternJava
Memento,Memento,Memento Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Memento
Memento,Memento,Software Design Patterns - Memento Pattern,0,0,2020,2020,1,https://github.com/ShaneMcGinley/Memento
Memento,CollisionSimulator,Implementation of Memento design pattern,0,0,2019,2020,1,https://github.com/Pietrov98/CollisionSimulator
Memento,CS5800HW7_MediatorAndMemento,Mediator and memento design patterns,0,0,2024,2024,1,https://github.com/DanielVAppel/CS5800HW7_MediatorAndMemento
Memento,java_gof_memento,"design pattern ""memento"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_memento
Memento,ObjectiveC_Memento,Example of design pattern Memento,0,0,2018,2018,1,https://github.com/Yura-Savchuk/ObjectiveC_Memento
Memento,MementoDesignPatter,CECS 277 Memento Design Pattern Project,0,0,2018,2018,0,https://github.com/zance1054/MementoDesignPatter
Memento,MementoDesignPattern,Memento Design Pattern example using C++,0,0,2022,2022,1,https://github.com/Beloin/MementoDesignPattern
Memento,MementoDesignPattern,Implementation of C# Memento Design Pattern,0,0,2017,2017,1,https://github.com/ruifaguiar/MementoDesignPattern
Memento,CS124_MidtermProject,Memento and Mediator Design Patterns,0,0,2015,2015,3,https://github.com/raphaelreventar/CS124_MidtermProject
Memento,Memento-design-pattern,Usage of memento design pattern,0,0,2022,2022,0,https://github.com/hazeemcool/Memento-design-pattern
Memento,MementoColoringApplication,An Example on Memento design pattern,0,0,2016,2016,1,https://github.com/mo3taz1705/MementoColoringApplication
Memento,MementoDemo01,Demo project for Memento Design pattern,0,0,2017,2017,1,https://github.com/kinathru/MementoDemo01
Memento,memento-pattern,Design Pattern Memento in Java,0,0,2017,2017,1,https://github.com/igor-couto/memento-pattern
Memento,memento,A test of Memento design pattern ,0,0,2021,2021,1,https://github.com/tranthithuhan/memento
Memento,MementoDP,Simple project that implements memento design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/MementoDP
Memento,memento,Program to explain Memento Design Pattern,0,0,2022,2022,1,https://github.com/girtsva/memento
Memento,Memento,Memento design pattern real life example,0,0,2022,2022,1,https://github.com/nipunajayaweera/Memento
Memento,DesignPatterns,Memento Pattern added,0,0,2023,2025,1,https://github.com/serhatmazlum/DesignPatterns
Memento,MementoSimpleApp,A Simple Example on Memento design pattern,0,0,2016,2016,1,https://github.com/mo3taz1705/MementoSimpleApp
Memento,MementoDesignPattern,C++ Implementation showcasing the Memento Design Pattern,0,0,2022,2022,1,https://github.com/jono-rams/MementoDesignPattern
Memento,memento-pattern,Implementation by JavaSript(Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/memento-pattern
Memento,MementoDraw,made drawing thing while learning  memento design pattern,0,0,2022,2022,1,https://github.com/maksmart96/MementoDraw
Memento,mementoCase,A small app representing the memento design pattern,0,0,2024,2024,1,https://github.com/iremgureltosun/mementoCase
Memento,Memento,A pratical implementation of Memento design pattern,0,0,2020,2021,0,https://github.com/vuchauthanh-agilityio/Memento
Memento,php-design-patterns-memento,PHP Design Patterns - Memento Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-memento
Memento,memento-example2,An implementation of 'Memento' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/memento-example2
Memento,vlspoljar_zadaca_3,"Design Patterns - COMPOSITE, COR, MEMENTO, MVC",0,0,2015,2015,1,https://github.com/vlspoljar/vlspoljar_zadaca_3
Memento,memento_design_pattern_flutter,Memento Design Pattern in Flutter | Behavioral Design Patterns in Flutter | 01 July 2023,0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/memento_design_pattern_flutter
Memento,MementoSchoolProject,A school project using the memento design pattern,0,0,2016,2017,1,https://github.com/K3ikoku/MementoSchoolProject
Memento,timeMachine,Project to show Memento Design Pattern,0,0,2017,2017,1,https://github.com/sidneynakatani/timeMachine
Memento,ThirdVoyage,Memento Design Pattern Implementation in WPF,0,0,2021,2022,1,https://github.com/Reuel-T/ThirdVoyage
Memento,memento,Simple project representing the memento design pattern. This project used the same example from my state design pattern project,0,0,2022,2022,1,https://github.com/Piazzi/memento
Memento,memento_project,CIS 476 Software Architecture and Design Patterns Project done on the Memento Design Pattern without guidance.,0,0,2018,2021,1,https://github.com/ashleybm/memento_project
Memento,Memento,A program written with the Memento design pattern,0,0,2019,2019,1,https://github.com/SentryMan/Memento
Memento,Memento,Exemplo de Design Pattern (Memento) implementado em Java,0,0,2018,2018,1,https://github.com/Renan4783/Memento
Memento,MementoSalutem,Educational project to explore different kinds of Design Patterns.,0,0,2019,2019,1,https://github.com/Le0nX/MementoSalutem
Memento,BallboyProject,"A demo project implementing SOLID principles, factory design pattern, strategy design pattern, observer design pattern, and memento design pattern.",0,0,2022,2022,1,https://github.com/kewensu/BallboyProject
Memento,Memento,The Memento Pattern is a behavioral design pattern,0,0,2024,2024,1,https://github.com/IsabelaGomesSilva/Memento
Memento,Chess-Game,"Object-Oriented Java Project with the implementation of Design Pattern (State Design Pattern, Memento Design Pattern)",0,0,2024,2024,1,https://github.com/Kazeirokie/Chess-Game
Memento,memento-example,An example of 'Memento' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/memento-example
Memento,MementoPattern,from dotnet lead (http://www.dotnetlead.com/design-patterns/memento),0,0,2016,2016,0,https://github.com/markloud/MementoPattern
Memento,MementoDP,This is an example codes implemented by Memento Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/MementoDP
Memento,memento,memento design pattern example graph avec java et javaswing,0,0,2023,2023,1,https://github.com/salimkouki/memento
Memento,dotnet_lab3,Memento design pattern in player state save,0,0,2021,2023,1,https://github.com/nikitabubriak/dotnet_lab3
Memento,DesignPatterns_Task6,DesignPatterns - Task With Memento Pattern,0,0,2022,2024,1,https://github.com/aykhan019/DesignPatterns_Task6
Memento,dio-desafio-java-padroes-de-projeto,Exemplo de implementação do design pattern Memento,0,0,2023,2023,1,https://github.com/GustavoRodriguesdeBrito/dio-desafio-java-padroes-de-projeto
Memento,Memento-SwiftUI,Memento Design Pattern - with DocEditor SwiftUI example,0,0,2024,2024,1,https://github.com/KiranSarella/Memento-SwiftUI
Memento,memento-design-pattern,Example implementation of the memento design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/memento-design-pattern
Memento,memento-design-pattern,Implimentation of memento design pattern using python,0,0,2019,2019,1,https://github.com/Sarvesh-Kedia/memento-design-pattern
Memento,CS124Memento,sample source code of Memento Design Pattern,0,0,2020,2020,1,https://github.com/robinchua/CS124Memento
Memento,DesignPatterns,Examples of memento and command design patterns,0,0,2024,2024,1,https://github.com/DominikBudzynski/DesignPatterns
Memento,message-memento-pattern-example,C# - Memento design pattern example with messages,0,0,2023,2023,1,https://github.com/flcristian/message-memento-pattern-example
Memento,Memento_Prototype_Singleton,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/Memento_Prototype_Singleton
Memento,DesignPatternsAndroid,Flyweight and Memento Patterns using android,0,0,2014,2014,1,https://github.com/enriquesoto/DesignPatternsAndroid
Memento,JavaDesignPatterns-Memento,JavaDesignPatterns-Memento,0,0,2020,2020,1,https://github.com/Jagepard/JavaDesignPatterns-Memento
Memento,ios-memento-pattern,This repo demonstrates memento design pattern in swift  ,0,0,2020,2020,1,https://github.com/mdo91/ios-memento-pattern
Memento,memento-springboot-angular,Testing memento design pattern with springboot and angular,0,0,2021,2021,1,https://github.com/YuriiAndreitsev/memento-springboot-angular
Memento,DesignPatterns-Memento,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Memento
Memento,DesignPatterns-Memento,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Memento
Memento,DesignPatternsMemento,,0,0,2022,2022,1,https://github.com/TansenSilva/DesignPatternsMemento
Memento,Memento-Design-Pattern,Final Project Perancangan Perangklat Lunak C : Design Pattern ,0,0,2021,2021,1,https://github.com/naufalfabian/Memento-Design-Pattern
Memento,designPatterns_Memento,,0,0,2023,2023,1,https://github.com/pkrodrigues/designPatterns_Memento
Memento,DesignPatterns-Memento,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Memento
Memento,DesignPatterns-Memento,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Memento
Memento,transaction-manager,A simple transaction manager using Memento Design Pattern.,0,0,2021,2021,1,https://github.com/shahabes/transaction-manager
Memento,AS3-Dev-DesignPatterns-MementoPattern,,0,0,2016,2016,0,https://github.com/VladimirCores/AS3-Dev-DesignPatterns-MementoPattern
Memento,memento-java,Exemplificação da implementação do Design Pattern Memento em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/memento-java
Memento,Spreadsheet-Implementation,"Implementation of Interpreter, State, and Memento design pattern",0,0,2019,2019,1,https://github.com/priteshamrelia/Spreadsheet-Implementation
Memento,MementoDesign_patterns,,0,0,2019,2019,1,https://github.com/ahmedco82/MementoDesign_patterns
Memento,The-Memento-Design-Pattern,A seminar paper about the Memento design pattern.,0,0,2014,2015,1,https://github.com/danielgeier/The-Memento-Design-Pattern
Memento,DesignPatterns,"review of memento, observer, adapter (protocol), decorator, facade patterns.",0,0,2016,2016,1,https://github.com/ksatia/DesignPatterns
Memento,DesignPatterns,"Singleton, Decorator, Memento, Adapter, Observer, Delegate, Facade, and MVC",0,0,2017,2017,0,https://github.com/baubrey91/DesignPatterns
Memento,APS-POO,Memento Design pattern implemented in a Java Project,0,0,2021,2021,1,https://github.com/filipemelo2002/APS-POO
Memento,ctrl-s-ctrl-z_memento-design-pattern,Practice your Implementation of the Memento Design Pattern!,0,0,2022,2022,1,https://github.com/super-evil-github-account/ctrl-s-ctrl-z_memento-design-pattern
Memento,StateSnap,Implementation of Memento (PL: Pamiątka) behavioral design pattern,0,0,2025,2025,1,https://github.com/MikeDmoch/StateSnap
Memento,Behavioral-Memento,This is a short implementation of the Memento design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Memento
Memento,Memento-pattern,Memento design patterns on java in git bash-terminal example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Memento-pattern
Memento,memento_books,Example of Memento design pattern in a context of books,0,0,2016,2016,1,https://github.com/audopt/memento_books
Memento,Proj_DesignPatternsMemento,,0,0,2022,2022,1,https://github.com/camposlou/Proj_DesignPatternsMemento
Memento,DesignPatterns-Behavioral-Memento,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-Memento
Memento,Xperiments.DesignPatterns.Memento,,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Memento
Memento,JavaMementoDesign,ASU CSE 494: Advanced OOP with Java - Memento Design Pattern,0,0,2014,2014,0,https://github.com/crsiebler/JavaMementoDesign
Memento,Design-Patterns,Two design patterns implemented in Java like: Memento & Facade,0,0,2021,2021,1,https://github.com/ClaudiuTertiu/Design-Patterns
Memento,Memento-and-Template-method-in-Python,Using Design patterns - Memento and Template methon in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Memento-and-Template-method-in-Python
Memento,cos214-assignment1, implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Prototype design pattern; • implement the Memento pattern;,0,0,2019,2022,2,https://github.com/giovannijoubert/cos214-assignment1
Memento,design-patterns-ts,"Examples for Builder, Facade, Visitor and Memento Design Patterns",0,0,2017,2017,1,https://github.com/BlackHarpy/design-patterns-ts
Memento,DesignPatterns-Memento-JavaImplimentation,,0,0,2021,2021,1,https://github.com/robinpetervkm/DesignPatterns-Memento-JavaImplimentation
Memento,Command_Memento,Learning about Command and Memento Design Patterns with a simple app,0,0,2023,2023,1,https://github.com/juanfranciscocis/Command_Memento
Memento,Design-pattern-Adapter-Factory-Command-Memento,Design pattern with Adapter&Factory&Command&Memento in Java,0,0,2015,2015,1,https://github.com/peterlau0010/Design-pattern-Adapter-Factory-Command-Memento
Memento,Swift-Memento-Pattern,attribution: https://refactoring.guru/design-patterns/memento/swift/example#example-0,0,0,2020,2020,0,https://github.com/cjamie/Swift-Memento-Pattern
Memento,MementoDesignPattern,Design pattern that gives the user the ability to restore an object to its previous state,0,0,2020,2020,1,https://github.com/sandra0498/MementoDesignPattern
Memento,memento-experiment,Experiment in abstracting the Memento design pattern into a reusable C++ template,0,0,2010,2014,1,https://github.com/lambdageek/memento-experiment
Memento,Memento-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Memento-Pattern
Memento,CartMemento,Add items to your shopping cart and undo adding using Memento design pattern,0,0,2022,2022,1,https://github.com/shahrzadabedi/CartMemento
Memento,DesignPatterns-2,"In-Memory Database with Persistence. Design patterns used are Singleton, Memento and Command",0,0,2014,2014,0,https://github.com/PayalGodse/DesignPatterns-2
Memento,JavaScript-design-patterns,"For the past two decades, programmers have structured both their code and their conversations about code around the patterns first described in Design Patterns, the classic Gang of Four book. JavaScript programmers have participated in these conversations, but the patterns discussed mostly fit in the world of orthodox object-oriented programming. In this course, Emmanuel Henri explains how these patterns fit with JavaScript. He demystifies the purpose of some of the most common patterns, providing code examples along the way. Learn about key creational, structural, and behavioral design patterns, and how you can apply each of them in your JavaScript code. Topics include: What's a pattern? What's the role of callbacks? Functions as first-class citizens in JavaScript Creational patterns, including Singleton and Factory Structural patterns, including model-view-controller Behavioral patterns, including Memento and Mediator",0,2,2019,2019,1,https://github.com/RafinBiswas/JavaScript-design-patterns
Memento,Memento-Design-Pattern,Demonstrates Memento Design Pattern by keeping track of animals and their ages,0,0,2019,2019,1,https://github.com/jamilkhan98/Memento-Design-Pattern
Memento,mvc-example,MVC Example with Nest and Angular with Memento Design Pattern,0,0,2017,2017,1,https://github.com/paulomenezes/mvc-example
Memento,AspectJ-Memento,An implmenentation of the Memeno design pattern using Java & the AspectJ library,0,0,2018,2019,1,https://github.com/TheBrokenGod/AspectJ-Memento
Memento,designPatterns1,"Netbeans project for a coffee vending machine using decorator, memento, and adapter design patterns",0,0,2024,2024,0,https://github.com/InduUpadhya/designPatterns1
Memento,design-patterns-memento,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-memento
Memento,memento-design-patterns,,0,0,2020,2020,2,https://github.com/pratap477/memento-design-patterns
Memento,Design-patterns-memento-,,0,0,2021,2021,1,https://github.com/Jan-Jakub-Fleiser/Design-patterns-memento-
Memento,memento-design-patterns,LP5,0,0,2024,2024,0,https://github.com/amanda-faria/memento-design-patterns
Memento,design_pattern_memento,"Develop a system that uses the pattern given in class. ""Memento"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_memento
Memento,DesignPatterns-RPNCalculator,"Reverse Polish Notation Calculator using Design Patterns... Command, Memento, State, Strategy, Interpreter,Singleton, Abstract Factory",0,0,2018,2018,1,https://github.com/swaks1/DesignPatterns-RPNCalculator
Memento,POO_DesignPatterns,"Two programs, one using the Event Aggregator pattern and the other using the Memento pattern",0,0,2023,2023,1,https://github.com/Foxtrot007-ai/POO_DesignPatterns
Memento,Memento,Writes multiple objects out to a binary file using stream I/O showcasing the Momento Design Pattern ,0,0,2019,2019,2,https://github.com/WilliamGusmanov/Memento
Memento,Software-Design-Patterns,"Practice developing Command, Memento and Abstract Factory Patterns",0,0,2021,2023,1,https://github.com/LiamAspell/Software-Design-Patterns
Memento,svg-memento,A console based C# application in Memento Design Pattern to realize undo-redo operation.,0,0,2022,2022,1,https://github.com/longporo/svg-memento
Memento,MementoDesignPattern,This is a sample C# implementation of a Memento design pattern used to implement a user interactive svg canvas,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/MementoDesignPattern
Memento,MementoEmoticonGenerator,This is a project I made using the Memento design pattern to implement the undo/redo functionality. It is an interactive C# Dotnet application with a CLI UI to make operations to make Emoticons. The project also utilizes the Decorator Design Pattern,0,0,2021,2021,1,https://github.com/AlexMaxwell2001/MementoEmoticonGenerator
Memento,Design-Patterns-TicTacToe-Game,"Memento, Decorator, Adapter, Singleton and Command Design Patterns in one System",0,0,2019,2019,1,https://github.com/ShalevL/Design-Patterns-TicTacToe-Game
Memento,DiceGame_DesignPattern,"Project samples using design patterns observer, abstract factory, memento, singleton, strategy",0,0,2021,2021,1,https://github.com/carlNOMBO/DiceGame_DesignPattern
Memento,Game,"2D Game using Design Patterns: Builder, Factory, Observer, Memento, Command (C++)",0,0,2021,2024,1,https://github.com/ranatasha/Game
Memento,Design-patterns-exercise,"Simple exercise with builder, memento and state design paterns",0,0,2019,2019,1,https://github.com/pawelzajglicz/Design-patterns-exercise
Memento,Design-patterns-impl,"Java app implementing design patterns(Memento, singleton, abstract Factory, Strategy, Observer..)",0,0,2020,2021,1,https://github.com/shoussame/Design-patterns-impl
Memento,MementoShapeDrawer,"Implementation of Memento design pattern, simple paint like app with ability to create, move shapes and undo or redo history.",0,0,2020,2020,1,https://github.com/nlins8224/MementoShapeDrawer
Memento,design-patterns,"Simple php design pattern. Memento, State, Strategy, Chain of Responsibility & Decorator",0,0,2021,2021,1,https://github.com/teodoroleckie/design-patterns
Memento,design-patterns-v2,"Adapter Pattern, Command Pattern, Factory Pattern, Memento Pattern",0,0,2014,2020,0,https://github.com/life-is-curiosity/design-patterns-v2
Memento,Connect4,"Java Swing Application, implementing factory, memento, observer, and singleton design patterns.",0,0,2021,2021,1,https://github.com/comc3467/Connect4
Memento,Memento-Observer_Design_Patterns,A GUI tool which implements Undo-Redo in an elegant way,0,0,2018,2019,1,https://github.com/spita90/Memento-Observer_Design_Patterns
Memento,CS5800_HW_7_Memento_Iterator,Matthew Plascencia's homework 6 that Implements Memento and Iterator design patterns,0,0,2024,2024,1,https://github.com/tapatiohaxx/CS5800_HW_7_Memento_Iterator
Memento,Design-Patterns,Made some design patterns in c++. • implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Abstract Factory design pattern • implement the Prototype design pattern; • implement the Memento pattern; and • integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/Design-Patterns
Memento,ShoppingApp,"Shopping app with design patterns. Design patterns such as Factory, Observer, Bridge, Memento, Decorator and Strategy Pattern were used.",0,0,2021,2021,0,https://github.com/melikeyilmaz/ShoppingApp
Memento,memento-observer-design-patterns,,0,0,2020,2020,1,https://github.com/kubradurus/memento-observer-design-patterns
Memento,Memento,"Article State Manager  is an Example of the Memento Design Pattern in Multiple Programming Languages (Python, PHP, JavaScript and TypeScript)",0,0,2024,2024,1,https://github.com/Sanzi87/Memento
Memento,Calculator,Calculator  developed in ASP.NET with basic operations using Memento design pattern,0,0,2019,2019,1,https://github.com/vlatkok/Calculator
Memento,471ICookFinal,"Finished project. Contains Factory Method, Command, Memento, Builder and Singleton Design patterns.",0,0,2021,2021,1,https://github.com/bryanmiller7sixty/471ICookFinal
Memento,Address-Book,"Address Book based on JavaFX with memento, singleton and command design patterns",0,0,2019,2019,0,https://github.com/ShalevL/Address-Book
Memento,DesignPatterns,Padrões de Projeto referentes a avaliação da disciplina Arquitetura de Software 2020.1,0,0,2021,2022,1,https://github.com/DiniZ44/DesignPatterns
Memento,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
Memento,Memento-ST0250-2018-2,In this repository you'll find a simple example implementation of the Memento Design Pattern.,0,1,2018,2018,1,https://github.com/nietoga/Memento-ST0250-2018-2
Memento,Swift-Memento-Design-Pattern,"An Xcode 9 project, written in Swift 4, demonstrating how to implement the memento design pattern.",0,0,2018,2018,1,https://github.com/iosbrain/Swift-Memento-Design-Pattern
Memento,memento-checkpoints,This repository houses an implementation of a game project featuring character movement and checkpoints using the Memento design pattern.,0,0,2023,2023,1,https://github.com/carlosbermudezgalvan/memento-checkpoints
Memento,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
Memento,js-design-patterns,"A project built in Javascript and some patterns like Prototype, Decorator and Memento",0,0,2020,2020,1,https://github.com/guilhermegarcia86/js-design-patterns
Memento,CECS277-DesignPatterns-Project,"Project combining several Common Design patterns including Decorator, Memento, Observer, Singleton, and Factory. Idea is that this models a Roach Motel",0,0,2018,2018,1,https://github.com/zance1054/CECS277-DesignPatterns-Project
Memento,Java-Text-Editor,"Java text editor with design patterns(Iterator, Memento, Builder, Singleton, Command) and UnitTest",0,0,2023,2023,1,https://github.com/kadircopur/Java-Text-Editor
Memento,Test_design_patterns_Question_11_Memento,,0,0,2020,2020,1,https://github.com/GilMuzika/Test_design_patterns_Question_11_Memento
Memento,EditText,"Assignment in Application development course, program is a text editor that uses Memento design pattern to save states and Observer design pattern.",0,0,2023,2023,0,https://github.com/johanssonvincent/EditText
Memento,Mini-in-memorydatabase,"Implemented reactive mini-in-memory database using Command, Memento and Observer design pattern",0,0,2016,2016,1,https://github.com/smithahm/Mini-in-memorydatabase
Memento,State-Memento-Observer-Design-Patterns-Example,UML Homework #7,0,0,2023,2023,1,https://github.com/Huseyn-007/State-Memento-Observer-Design-Patterns-Example
Memento,MementoProject,"The web link below porvides all the details to this project. Effectively, you are writing and reading objects to a .bin file, all the while implementing the Memento Design Pattern.",0,0,2020,2020,1,https://github.com/justingirgis/MementoProject
Memento,memento-pattern,Design pattern comportamental Memento para salvar e restaurar o estado anterior de um objeto sem revelar os detalhes de sua implementação,0,0,2021,2021,1,https://github.com/Jhow-R/memento-pattern
Memento,Memento-Design-Pattern,Memento pattern is a behavioral design pattern. Memento pattern is used to restore state of an object to a previous state. ,0,0,2024,2024,0,https://github.com/KAVINDAPIYUMAL/Memento-Design-Pattern
Memento,ToDoList_UsingDP,This is to do list made in python with help of memento Design pattern,0,0,2023,2023,1,https://github.com/Sheel13345/ToDoList_UsingDP
Memento,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Memento,RollbackRecuerdos,Librerías que permite implementar un concepto de Rollback basado en el patrón de diseño Memento (https://sourcemaking.com/design_patterns/memento),0,0,2017,2017,1,https://github.com/WilsonYesidRiveraCasas/RollbackRecuerdos
Memento,Design-patterns-implementations,"showcases the use of Template,Factory,Abstract Factory,prototype and memento patterns and how to integrate them all together.",0,0,2021,2021,1,https://github.com/ecoryndonbakeruni/Design-patterns-implementations
Memento,Memento-DP,Memento is a behavioral design pattern that lets you save and restore the previous state of an object without revealing the details of its implementation.,0,0,2021,2021,0,https://github.com/Behavioral-Design-Pattern/Memento-DP
Memento,Software-Engineering_Personal-Project,Demo on Memento Behavorial Design Pattern. As a part of principles of software engineering course.,0,0,2023,2023,1,https://github.com/inglevinay/Software-Engineering_Personal-Project
Memento,Chess_Game_Engine,"Chess Game Engine using java built on an MVC architecture, factory and memento design patterns.",0,0,2023,2025,1,https://github.com/shahdelrefai/Chess_Game_Engine
Memento,SoftwareDesignPatterns,"Creational patterns: abstract factory, prototype, singleton, thread safe singleton. Structural patterns: decorator, facade, flyweight. Behavioral patterns:  memento, strategy, command, mediator.",0,0,2022,2022,1,https://github.com/slipenk/SoftwareDesignPatterns
Memento,CanvasCreation-Memento,An interactive UI for a console application to create and add shape svgs to a canvas. Using the Memento Design Pattern for undo/redo functionality.,0,0,2023,2023,1,https://github.com/7eeBurke/CanvasCreation-Memento
Memento,design-pattern-memento,"Repository created to showcase a presentation of a Design Pattern ""memento"" in a seminary on course of management infotmation technology a little editor impplementation with memento",0,0,2023,2023,1,https://github.com/felipheartisan/design-pattern-memento
Memento,Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento,,0,0,2022,2022,1,https://github.com/ZaraBaghdasaryan/Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento
Memento,Design-Pattern,"Example design pattern 3 pattern and 6 design viz Singleton , Builder , Adapter , Decorator , Interpreter and Memento.",0,0,2024,2024,1,https://github.com/kulproffbrter/Design-Pattern
Memento,CS4800-HW6-Iterator-Mediator-Memento-Design-Patterns,,0,0,2024,2024,1,https://github.com/kevinlwong/CS4800-HW6-Iterator-Mediator-Memento-Design-Patterns
Memento,DesignPatterns,Most common design patterns in software architecture.,0,0,2023,2024,1,https://github.com/staivanov/DesignPatterns
Memento,Design-Patterns,A. Structural  1. Adapter - correct  2. Facade - corrected  3. Proxy - correct    B. Creational  1. Singleton  2. Factory  3. Builder    C. Behavioural  1. Chain of responsibility  2. Memento 3. Observer,0,0,2024,2024,1,https://github.com/NehaAgrawal-git/Design-Patterns
Memento,Intro-To-Memento-Design-Pattern,Memento is a behavioral design pattern that lets you save and restore the previous state of an object without revealing the details of its implementation.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Memento-Design-Pattern
Memento,RabbleWabble,"Creating a gaming using the following design patterns MVC, Singleton, Strategy, Delegate, Memento, Observer and builder pattern",0,0,2020,2020,1,https://github.com/oyeleke/RabbleWabble
Memento,Aquarium,"Aquarium application. Using design pattern(singleton, abstract factory, prototype, listener/observer, decorator, memento,state), MVC and threads",0,1,2018,2018,1,https://github.com/KatrinKroin/Aquarium
Memento,Java-Text-Editor,"Using the Command and Memento design patterns, this project provides a simple text editor coded in Java.",0,0,2022,2022,1,https://github.com/JohannTtGit/Java-Text-Editor
Memento,solved-cse522-assignment-2-design-patterns-and-tree-memento,,0,0,2023,2023,1,https://github.com/yaminikali/solved-cse522-assignment-2-design-patterns-and-tree-memento
Memento,COMPSCI701-a03-submission,"Creating maintainable software Kalah assignment. Adds load, save, new game functionality with Command and Memento design pattern use.",0,0,2022,2022,1,https://github.com/KaylaG1510/COMPSCI701-a03-submission
Memento,labwork5,Java implementation for saving and restoring the state of a character in a game using Memento Design Pattern,0,0,2024,2024,1,https://github.com/7910528/labwork5
Memento,State_Machine,In this project we implement a Finite State Automation using State and Memento design patterns and fluent design.,0,1,2021,2021,1,https://github.com/aacastillo/State_Machine
Memento,MemoryGame,"For our school project Design patterns we made a memory game using the patterns Memento, Observer and Factory",0,0,2024,2024,1,https://github.com/SteffanvanderWerf02/MemoryGame
Memento,Command-Pattern,"Implementation of the command, chain of responsibility, and memento design patterns to simulate a draw board of shapes",0,0,2023,2024,1,https://github.com/JaydenPal/Command-Pattern
Memento,OOP_CourseWork,"Course work on the design pattern topics. I've made a graphic redactor using wpf and design pattern, such as: Factory Method, Prototype, Chain of Command, Command, Memento,  Strategy, State",0,0,2023,2023,1,https://github.com/allmallino/OOP_CourseWork
Memento,session-handler-with-memento,This repository contains a simple session handle mechanism that uses the memento design pattern. This architecture can be used in a distributed environment where application state can be maintained across multiple server instances,0,0,2021,2021,0,https://github.com/kusaldushmantha/session-handler-with-memento
Memento,MementoPattern,"The Memento Pattern is a behavioral design pattern that provides a way to capture and externalize the internal state of an object without exposing its internal structure. This allows you to save the object's state at a specific point in time and restore it later, effectively providing the ability to undo or roll back changes made to the object.",0,0,2023,2023,1,https://github.com/MarlonMontenegro/MementoPattern
Memento,hw10_Novak,"Implemented five design patterns—Facade, Factory, Memento, Singleton, and State—using JavaScript to illustrate their practical applications and benefits.",0,0,2023,2023,1,https://github.com/AntoninaNov/hw10_Novak
Memento,DesignPattern-Memento,"This C# implementation demonstrates the Memento design pattern, capturing and restoring the state of an object without exposing its implementation. It highlights how to manage state history through a caretaker, providing a flexible way to revert to previous states.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Memento
Memento,Software-design-patterns,"We picked an existing Memory Match game code from the internet, we did some changed on it then we start to figured out for any software design problem that needs to be solved by choosing an appropriate design pattern. finally, we used Decorator, Facade, Memento, State patterns.",0,0,2019,2019,1,https://github.com/wFahad/Software-design-patterns
Memento,javaFX_Container_Management_System_Follow-Up_Project,"Extended the functionality of the original project using Collections (ArrayList, Set, Map), Lambda expressions and another Design Patterns (Observer, Command, Memento). ",0,0,2023,2023,1,https://github.com/HadarZimberg/javaFX_Container_Management_System_Follow-Up_Project
Memento,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Memento,design-patterns-in-java,TR: Java dizayn mimarileri kullanılmış ve UMLleri verilmiştir.  EN: Java design patterns with UML,0,0,2019,2019,1,https://github.com/mertselimb/design-patterns-in-java
Memento,NotePad,NotePad app built using Tkinter. Implemented an undo/redo function using the Memento design pattern rather then using the built in Tkinter functionality.,0,0,2021,2021,1,https://github.com/Ssweeney20/NotePad
Memento,Mini-Editor,"Simulate a mini text editor behaviors (without GUI), by implementing Command, Memento and Observer design patterns in Java. All included functions have been tested.",0,0,2022,2022,2,https://github.com/dpadonou/Mini-Editor
Memento,Gorny_Slask_The_Game,Easy game in which u can create buildings that give u money over time. GUI using JavaFX. Implements Template Method and Memento Design Pattern,0,0,2020,2021,1,https://github.com/smasiek/Gorny_Slask_The_Game
Memento,RedoUndo,"String editing api that includes add, remove, bold, underline, undo and redo. This simple main app is built using Command and Memento design patterns",0,0,2018,2018,1,https://github.com/OferStempler/RedoUndo
Memento,DesignPatternSwift,"Most common Cocoa design patterns: Creational: Singleton. Structural: MVC, Decorator, Adapter, Facade. Behavioral: Observer, and, Memento has been implemented in this Music Album App",0,0,2016,2016,1,https://github.com/omarfaruqe/DesignPatternSwift
Memento,command-undo,"Mixup dei design pattern Command e Memento per ""undo"" feature. Progetto per l'esame di Ingegneria del Software a Università degli Studi di Firenze",0,0,2020,2023,2,https://github.com/marcodiri/command-undo
Memento,album-store,"album store is an app which implements Singleton, MVC, Delegation, Protocols, Facade, Observer, and Memento patterns. source : http://www.raywenderlich.com/86477/introducing-ios-design-patterns-in-swift-part-1 and http://www.raywenderlich.com/90773/introducing-ios-design-patterns-in-swift-part-2",0,0,2015,2015,0,https://github.com/sergioestebance/album-store
Memento,Data-Structures,"Independently designed and implemented various data structures using TypeScript, including Binary Search Tree (BST), Map, Stack, Queue, and LinkedList. Leveraged design patterns such as Observer, Prototype, Memento, and Strategy",0,0,2022,2024,1,https://github.com/roieGolst/Data-Structures
Memento,SuperMarket-project---Advanced-OOP---Java,"A simple JavaFX program for managing the cashier's office, including managing products and customer subscribers. The main focus was on design patterns, binary files, maps, and threads. The program had to be managed properly using for each action a Command design pattern, as well as Observer, Memento, etc. Enjoy!",0,0,2021,2023,1,https://github.com/omer332/SuperMarket-project---Advanced-OOP---Java
Memento,ZooProject,"Zoo project – zoo with the possibility of feeding animals by type, with emphasis on the following design patterns: Thread Pool, Decorator, Abstract Factory, Prototype, Memento, Observer and Singleton. Written in Java.",0,0,2018,2018,1,https://github.com/ha1m/ZooProject
Memento,214-prac3,"This repository contains the code for Software Modelling (2nd Year) Practical 3. The project integrates four key design patterns: Abstract Factory, Strategy, Memento, and Composite, into a unified and functional codebase.",0,0,2024,2024,2,https://github.com/thendombedzi/214-prac3
Memento,electronic-catalog,"I designed a Java-powered electronic catalog system enabling access for students, assistants, professors, and parents. The system seamlessly incorporates crucial functionalities by employing various design patterns such as Visitor, Observer, Strategy, and Memento.",0,0,2024,2024,1,https://github.com/DragosCioata/electronic-catalog
Memento,CustomSorting," The program was developed using the Memento software design pattern, where we capture the program’s initial state, next and previous states. All these states are stored and can be retrieved at any given moment.",0,0,2024,2024,1,https://github.com/MunyaiMutshidzi/CustomSorting
Memento,Virus-Spread-Simulation,Virus spreading simulation is an OOP implementation in Go using the lightweight game engine ebiten to render graphics. It implements State and Memento design patterns to save and rewind each step of the simulation effectively. ,0,0,2024,2025,1,https://github.com/Kortexik/Virus-Spread-Simulation
Memento,Car-Game,"Academic project: vertical scrolling game of a car that tries to avoid obstacles (autoplay - keyboard commands commented). Design patterns: Factory, Strategy (the car has 3 lifes and has a different behavior for each), Memento (to save state on file).",0,0,2024,2024,1,https://github.com/PaintItBlack5/Car-Game
Memento,HC-codingexercise,"A simple console-based To-Do List Manager with features to add tasks, mark them as completed, view tasks, and undo actions. The implementation follows object-oriented programming principles and includes design patterns such as the Memento and Builder patterns.",0,0,2023,2023,1,https://github.com/aswink2020/HC-codingexercise
Memento,STMS-Sports-Team-Management-System,"A Java-based Sports Teams Management System (STMS) designed for the management of various team sports. It supports creating and managing volleyball and football teams and will extend to additional sports. Implements Command, Factory, and Memento design patterns to ensure extensibility and maintainability.",0,0,2023,2023,1,https://github.com/Flucus/STMS-Sports-Team-Management-System
Memento,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Memento,Peinto,"An object oriented model in Java designed using MVC AP and different design patterns (singleton, strategy, factory, memento and command). It saves and loads drawings using XML and JSON, and supports various geometric shapes with multiple operations as: draw, color, move, copy, undo, redo. ",0,0,2018,2020,3,https://github.com/MayssaraOmar/Peinto
Memento,Object_Oriented_Design_Project,"The aim of this project was to familiarise with OOP design patterns, such as Factory, Builder, Adapter, Iterator, Command, Memento, etc. and learn useful C# features (reflection, serialization, interfaces, data structures). It was carried out as part of the course ""Object Oriented Design"" at the Warsaw University of Technology.",0,0,2023,2023,1,https://github.com/Bakaczor/Object_Oriented_Design_Project
Memento,Restaurant-Reservation,"JavaFX OOP Full Restaurant System to serve Mangers, Waiter, Chefs and Customers. Client can reserve a table during the restaurant working hours, then he can make his order which will be sent to the Chef so he can start preparing it , also to the Waiter so he give them the check with the correct amount, Finally to the Manger who receives every transaction that occurs in the restaurant. Applied Design Patterns MVC, Originator, Memento.",0,0,2020,2021,1,https://github.com/faress-136/Restaurant-Reservation
Observer,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Observer,javascript-design-pattern,:building_construction: Design Pattern With Javascript,91,11,2018,2024,1,https://github.com/tangweikun/javascript-design-pattern
Observer,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Observer,okdp,A design pattern library developed in modern c++.,54,17,2020,2025,2,https://github.com/lkimuk/okdp
Observer,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Observer,vuecommander,VueCommander is a Vuejs application framework utilizing the classic (GoF) command and observer design patterns,50,9,2019,2023,0,https://github.com/jschatz1/vuecommander
Observer,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Observer,servicefabricobserver,This project contains a framework that provides a publisher-subscriber implementation using the Observer design pattern for Service Fabric stateful services and actors.,25,10,2016,2023,2,https://github.com/paolosalvatori/servicefabricobserver
Observer,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Observer,ObserverPattern,Observer is a behavioral design pattern that lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they’re observing.,20,1,2023,2024,1,https://github.com/zied-snoussi/ObserverPattern
Observer,Swift-Observer,Design Patterns in Swift: Observer,19,5,2016,2024,1,https://github.com/kingreza/Swift-Observer
Observer,Software-Design-Patterns,"🎨 A comprehensive exploration of object-oriented design patterns, featuring fully implemented examples like inheritance, composition, observers, decorators, and factory methods. Built with Java to demonstrate their real-world applications in scalable and maintainable software design.",18,15,2024,2025,1,https://github.com/hoangsonww/Software-Design-Patterns
Observer,Messager,"Simple messaging system for Unity, based on the event aggregator design pattern.",18,3,2018,2025,1,https://github.com/Sov3rain/Messager
Observer,design-patterns-in-arabic,Design patterns بالمختصر المفيد 🎈,17,3,2022,2025,2,https://github.com/Abd-Beltaji/design-patterns-in-arabic
Observer,ContactApp,"Contoh project Android untuk implementasi koneksi HTTP pada aplikasi android, implementasi design pattern Observer dan penggunaan beberapa komponen dari Material Design Support Library ",16,7,2015,2018,1,https://github.com/sidiqpermana/ContactApp
Observer,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Observer,tiny-signal,✨ Minimal 228b implementation of the observer design pattern.,12,1,2018,2023,1,https://github.com/mikehwagz/tiny-signal
Observer,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Observer,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Observer,Aprenda-o-Observer-com-Python,Neste repositório temos um script em Python que irá lhe ajudar a entender o design pattern Observer.,11,0,2024,2025,1,https://github.com/Vinicius-DevSys/Aprenda-o-Observer-com-Python
Observer,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Observer,mvc-patterns,"Implementation of the architectural pattern Model View Controller through the composition of the design patterns Observer, Strategy and Composite.",9,1,2018,2024,1,https://github.com/tmscarla/mvc-patterns
Observer,BuildingSurveillanceSystemApplication,This example is part of a tutorial on using the Observer Design Pattern in CSharp,8,8,2020,2024,1,https://github.com/GavinLonDigital/BuildingSurveillanceSystemApplication
Observer,php-design-pattern,PHP Design Pattern definition with example.,8,2,2020,2025,1,https://github.com/hbrawnak/php-design-pattern
Observer,event_dispatcher,event_dispatcher implements a lightweight version of the Observer design pattern,8,0,2013,2024,1,https://github.com/amineasli/event_dispatcher
Observer,GoDesignPatterns,"We will analyze Strategy, Observer, Prototype and Memento Design Pattern in Go Lang.",8,0,2021,2022,0,https://github.com/borakasmer/GoDesignPatterns
Observer,MauiAppSample,"This repo hosts a Maui Application sample that uses some specific (opinionated) design patterns - MVVM (usual pattern), Observer pattern (using Reactive Extensions).",8,0,2022,2024,1,https://github.com/arvindd/MauiAppSample
Observer,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Observer,quark-signal,🚀 Simple and tiny Observer design pattern implementation,7,0,2017,2022,1,https://github.com/fm-ph/quark-signal
Observer,php-design-patterns,"The Decorator Pattern, Adapter Pattern, Template Method Pattern, Strategy Pattern, Observer Pattern",7,0,2021,2024,1,https://github.com/manjeetk/php-design-patterns
Observer,design_patterns,C++ 设计模式  Common design pattern examples:(Factory AbstractFactory Adapter Bridge Command Visistor Observer....etc),7,1,2018,2024,1,https://github.com/cf-zhang/design_patterns
Observer,ofxSimpleEvents,"A alternative events system, based on the Observer design pattern. Inspired by Flash Actionscript events system",7,1,2011,2015,1,https://github.com/peteruithoven/ofxSimpleEvents
Observer,Design_Patterns,"This repository, contains the explanation of the design pattern categories and examples about it.",7,1,2021,2022,1,https://github.com/ezgiyaman/Design_Patterns
Observer,ObserverPatternExamples,"Examples of Observer design pattern in C++, C#, Go, Java, PHP, Python, Ruby, Swift and TypeScript.",6,2,2021,2024,1,https://github.com/AliBayat/ObserverPatternExamples
Observer,Observer-Pattern-Swift,Observer design pattern in Swift,6,2,2018,2024,1,https://github.com/appcoda/Observer-Pattern-Swift
Observer,Design-Patterns,"Patrones de diseño / Clase Template C++ / Parciales / Exámenes de Programación 4 de Facultad de Ingeniería UdelaR - Uruguay. Análisis, Diseño e implementación en C++ usando programación orientada a objetos. UML. Design Patterns, Template C++, exercises...",6,2,2018,2024,2,https://github.com/mathiasuy/Design-Patterns
Observer,observer_design_pattern_for_embedded,Observer design pattern API that can be used in embedded software or other environments.,6,0,2023,2023,1,https://github.com/Alishbz/observer_design_pattern_for_embedded
Observer,SwiftObserver,Swift Observer Design Pattern,5,1,2021,2024,1,https://github.com/Oleg-E-Bakharev/SwiftObserver
Observer,ObserverDesignPattern,Newsletter app with observer design pattern.,5,0,2020,2024,1,https://github.com/ThanosKatrakis/ObserverDesignPattern
Observer,owlMagicComment,"基于AOP实现：注解参数检查，注解返回值类型变更，注解设置请求参数返回参数为null。基础的CRUD封装。大量工具类封装提供。提供各种设计模式的应用实现：例如——类Flex事件机制（观察者模式）。Based on AOP implementation: annotation parameter check（params check）, annotation return value type change, annotation setting request parameter return parameter is null. The basic CRUD package. A large number of tool class packages are available. Provide application implementations of various design patterns: for example——Like Flex Event Mechanism (Observer Mode)",5,0,2018,2021,3,https://github.com/engwen/owlMagicComment
Observer,ObserverPattern-cpp,C++ Observer Design Pattern: IObserver interface and Observable class,4,23,2016,2024,1,https://github.com/kbuffardi/ObserverPattern-cpp
Observer,ObserverDesignPatternDemo,Observer Design Pattern in ASP.NET Core - Demo Project for a blog post available at https://www.ezzylearning.net/tutorial/observer-design-pattern-in-asp-net-core,4,3,2021,2023,1,https://github.com/ezzylearning/ObserverDesignPatternDemo
Observer,Xexeu-View,A view library built for learning purposes. implements the Observer design pattern.,4,2,2017,2019,3,https://github.com/jhonnymichel/Xexeu-View
Observer,ObserverSample_NewsLetter,A Sample of Observer Design Pattern,4,0,2020,2021,1,https://github.com/panosrizos/ObserverSample_NewsLetter
Observer,Observer-Design-Patterns-JS,JavaScript Observer Design Pattern Examples,4,0,2025,2025,1,https://github.com/seferogluemre/Observer-Design-Patterns-JS
Observer,lib-observer,An implementation of the observer design pattern.,4,0,2013,2023,1,https://github.com/kherge-archive/lib-observer
Observer,observer-pattern-c,pure c implementation of observer design pattern ,4,1,2020,2022,1,https://github.com/omarehab2411/observer-pattern-c
Observer,Pizza-Delivery-System,"A pizza delivery system that showcases the usage of Observer, Abstract Factory, Singleton, Command, and Iterator design patterns. ",4,2,2017,2021,1,https://github.com/DuyguKeskek/Pizza-Delivery-System
Observer,poulpe,Lightweight compile-time observer design pattern (c++17 or above),4,1,2020,2023,2,https://github.com/ThomasAUB/poulpe
Observer,js-observer-cryptocurrency-example,This is a sample project for teaching the basics of the Observer Design Pattern.,4,0,2020,2023,1,https://github.com/DevTony101/js-observer-cryptocurrency-example
Observer,Observer_Setter_StrategyDesignPatterns,,4,0,2021,2022,1,https://github.com/nebinebili/Observer_Setter_StrategyDesignPatterns
Observer,TurbinesController,A simple implementation of Turbines Controller with Observer Design Pattern in Rust,4,1,2023,2023,1,https://github.com/mir-moo/TurbinesController
Observer,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Observer,Design-Patterns---PMS---Patient-Information-System-Simple,"Simple Project For Singleton, Abstract Factory, Command, Iterator, Decarator Observer and Adapter Design Patterns, All in One",4,0,2020,2021,0,https://github.com/muammersahin/Design-Patterns---PMS---Patient-Information-System-Simple
Observer,Game-Engine-Design,"A game engine that supports a text based game. This was created as a demonstration of use of multiple design patterns be implemented into a single project but working independently of each other. Includes the State pattern, Factory pattern, basic Facade pattern, Decorator pattern and Observer pattern.",4,5,2018,2024,1,https://github.com/Cermic/Game-Engine-Design
Observer,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Observer,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Observer,SNotificationCenter,"Project provides basic idea and approach to implement the NotificationCenter by using Pubs/Subs Pattern, and Observer design pattern, this pattern oppose to create strong reference cycle because of weak reference of protocol.",4,0,2024,2024,1,https://github.com/email2sunilverma/SNotificationCenter
Observer,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Observer,SporcuTakipUygulamas-,Observer Design Pattern Application Example,3,1,2020,2020,1,https://github.com/mertguven/SporcuTakipUygulamas-
Observer,Events,Observer design pattern-like events system,3,0,2013,2016,1,https://github.com/SugiPHP/Events
Observer,DesignPattern,"Design Pattern Implement——Observer,Undo/Redo,Composite",3,0,2016,2020,1,https://github.com/j444obs/DesignPattern
Observer,Observable,A generic C++ impl. of observer design pattern,3,0,2012,2024,1,https://github.com/yangacer/Observable
Observer,2024GA,"Design Pattern Unity (Singleton, Command, StateMachine, Observer,...Addressable)",3,0,2024,2024,1,https://github.com/mindongun123/2024GA
Observer,Computer-Store-DP,A Java Project using Singleton/ Observer/ Factory Design Patterns,3,0,2022,2023,1,https://github.com/AchillesKastanas/Computer-Store-DP
Observer,Observer-Pattern,Implementation of the Observer pattern from the book Head First: Design Patterns. Changing Java to C#.,3,0,2011,2018,1,https://github.com/osukaa/Observer-Pattern
Observer,Observer-State-Strategy-design-patterns-,,3,0,2021,2024,1,https://github.com/AmiraslanSumgait/Observer-State-Strategy-design-patterns-
Observer,design-patterns,"Examples of the Decorator, Observer, State, and the Visitor design patterns in Java",3,0,2015,2021,0,https://github.com/motasay/design-patterns
Observer,Observer-Strategy-Decorator-Design-Patterns-With-WPF,"In this project; observer, decorator and strategy design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",3,0,2021,2024,1,https://github.com/kamilhan-karaismailoglu/Observer-Strategy-Decorator-Design-Patterns-With-WPF
Observer,DesignPatterns-Web.Core,"Including .Net Core 3.1-5.0-6.0, MVC, Layers Architecture, PostgreSQL, Entity Framework Core, Code First, ChainOfResponsibility, CQRS, TemplateMethod, Observer, UnitOfWork, Repository, Composite, Mediator, Iterator, Facade, Decorator Design Patterns Transactions.",3,1,2023,2024,1,https://github.com/erkanbstn/DesignPatterns-Web.Core
Observer,design-pattern,"This repository talks about some design patterns in OOP (using Java language). It contains the examples about SINGLETON, FACTORY METHOD, ABSTRACT FACTORY, BUILDER, FACADE, BRIDGE, PROTOTYPE, OBSERVER.",3,0,2016,2020,1,https://github.com/phuongsala/design-pattern
Observer,Kata-Hotel-World-Clocks,"Use Robot Framework Maven Plugin, Cucumber-jvm, FitNesse and Java to implement the Hotel World Clocks kata and refactor it to Observer design pattern. In this kata, a hotel has 5 clocks showing the time of Beijing (UTC+8), London (UTC+0), Moscow (UTC+4), Sydney (UTC+10), and New York (UTC-5). You have to consider daylight saving time for cities like London and New York in this kata. When the time of each one of these clocks is set due to incorrect time or start/end of daylight saving period, the time of all other clocks will be set automatically. The hotel would add more clocks for different cities in the future.",3,2,2013,2017,1,https://github.com/wubin28/Kata-Hotel-World-Clocks
Observer,ObserverAndAdapterExample,Example of the observer and adapter design patterns,2,3,2014,2022,1,https://github.com/csc301-fall2014/ObserverAndAdapterExample
Observer,dp-behavioral-observer,Observer is a behavioral design pattern that allows some objects to notify other objects about changes in their state.,2,4,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-behavioral-observer
Observer,Observer-Design-Pattern,Observer is a behavioral design pattern that lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they’re observing.,2,3,2020,2023,1,https://github.com/raigenics/Observer-Design-Pattern
Observer,Harbor-Web-Appplication,Web application designed for a Harbor to manage products-users-cases. applied in an object-oriented way strategy design pattern single ton decorative design pattern observer design pattern.,2,2,2021,2021,1,https://github.com/IamZygote/Harbor-Web-Appplication
Observer,design-patterns,design patterns,2,0,2019,2020,0,https://github.com/wpsumsun/design-patterns
Observer,SE-311-Design-Pattern-Project-Patient-Management-System,"This project was for our Design Patterns course. We used 5 different design patterns which are Observer, Abstract Factory, Template Method, Singleton, Command, in one project.",2,2,2018,2025,1,https://github.com/efeuruk/SE-311-Design-Pattern-Project-Patient-Management-System
Observer,AirportBaggageSystem,Observer Design Pattern in C#,2,1,2018,2023,1,https://github.com/Christian-Schou/AirportBaggageSystem
Observer,Design-Patterns,Design Patterns Decorator Strategy Observer ,2,0,2022,2023,1,https://github.com/Amin-chak99/Design-Patterns
Observer,ObserverSample,Exemple du Observer design pattern implementée en Typescript    ,2,1,2021,2021,2,https://github.com/Mecks01/ObserverSample
Observer,ObserverPattern,Observer Design Pattern Example (Code + Description + UML Diagram),2,0,2021,2021,1,https://github.com/CansuCandan/ObserverPattern
Observer,interface-implementation-in-vba,This is an example of how to uses Interfaces in VBA. This example uses the Observer Design Pattern as a demonstration.,2,2,2020,2023,1,https://github.com/zq99/interface-implementation-in-vba
Observer,Aladdin-2D-Game,"Developed a 2D game in Greenfoot using JAVA which involved implementing Gang of Four design patterns and using Agile Scrum Methodology. Design patterns include Observer pattern, Command Pattern, State Pattern, Template Method Pattern and Factory Method Pattern.",2,2,2017,2024,6,https://github.com/pavankothawade/Aladdin-2D-Game
Observer,TextEditor,"Text editor based on GOF Design pattern book(Observer, Command, Visitor, Strategy, Composite,Command Design patterns)",2,1,2012,2023,1,https://github.com/sjmaharjan/TextEditor
Observer,TetrisDual,"Multiplayer Tetris utilizing observer, factory, and decorator design patterns",2,0,2019,2020,2,https://github.com/MatthewZMD/TetrisDual
Observer,arduino-observer,A simple library for working with the observer design pattern in Arduino,2,0,2024,2024,1,https://github.com/madskjeldgaard/arduino-observer
Observer,ClassQueue,Observer Design Pattern (PUB/SUB & REQ/REP) with ZeroMQ,2,0,2023,2024,4,https://github.com/RaymondSWE/ClassQueue
Observer,DesignPatterns,"Designing and implementing factory ,observer and facade design pattern for phones using java",2,0,2019,2023,1,https://github.com/abdelkaderlagha/DesignPatterns
Observer,Observer-Design-Pattern,In this repository you will find complete implementation of observer design pattern ,2,0,2023,2023,1,https://github.com/akshatsh0610/Observer-Design-Pattern
Observer,DesignPatterns,"DesignPatterns - Padrões Comportamentais - Técnicas de (Strategy, Chain of Responsibility, Template Method, State, Command e Observer)",2,0,2021,2025,1,https://github.com/marcello222/DesignPatterns
Observer,nmevent,A simple C#-like implementation of the Observer design pattern.,2,0,2013,2015,0,https://github.com/nnen/nmevent
Observer,Design-Patterns,All the design patterns which i know,2,0,2021,2023,1,https://github.com/thirtwo/Design-Patterns
Observer,AndroidObserverDesignPatterns,Ease to manage Singleton Class in apps,2,0,2017,2018,1,https://github.com/opannapo/AndroidObserverDesignPatterns
Observer,mvc-calculator,Simple calculator implementing the MVC design pattern alongside the observer pattern.,2,0,2016,2022,0,https://github.com/cesalberca/mvc-calculator
Observer,Swift-Observer-Design-Pattern,"An Xcode 9 project, written in Swift 4, demonstrating how to implement the observer design pattern.",2,0,2018,2023,1,https://github.com/iosbrain/Swift-Observer-Design-Pattern
Observer,ab.signal,Implementation of the Observer Design Pattern written in & for D programming language.,2,0,2012,2014,0,https://github.com/Mezozoysky/ab.signal
Observer,2048,A 2048 Game Project to Get Familiar With MVC and Observer Design patterns and also JavaFX,2,0,2019,2021,1,https://github.com/shayandaneshvar/2048
Observer,designPattern,🧩 Java samples for a popular design pattern.,2,1,2023,2023,1,https://github.com/Haythamasalama/designPattern
Observer,Cleaning-Management,"Robot vacuum simulator, usage of Abstract Factory, Builder, Singleton and Observer design patterns.",2,0,2017,2017,1,https://github.com/irenexychen/Cleaning-Management
Observer,ObserveDesingPattern,The Observer design pattern is a behavioral design pattern that allows other objects to observe and respond when the state of an object changes,2,0,2023,2023,1,https://github.com/serdarkahraman/ObserveDesingPattern
Observer,DesignPattern,"Design pattern ""Gang of Four"" : Proxy, Composite, Decorator, Strategy, Observer, Adapter, Builder, Factory, FactoryAbstract.",2,0,2021,2021,1,https://github.com/belaid1993/DesignPattern
Observer,OOCacheCoherency,Simulate and cache coherency problem in an Object Oriented environment and solve using observer design pattern,2,1,2018,2024,2,https://github.com/pratiksampat/OOCacheCoherency
Observer,Covid19,"TCP soket üzerinden anlık olarak koronavirüs tablosunu paylaşan, veri girişi sağlayan bir projedir.Tasarımında Observer Design Pattern kullanılmıştır.",2,0,2021,2021,1,https://github.com/sorhanselcuk/Covid19
Observer,jsEvents,Adds custom events to Javascript. This is an implementation of the Observer design pattern in Coffeescript. Fully TDD'd,2,0,2011,2015,1,https://github.com/c9952594/jsEvents
Observer,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Observer,Observer-Design-Pattern-WPF---Samples-,"This design pattern is used when there is a change in the state of an object, and other objects that want to be aware of these changes should be notified. I used BindingToMethod in DataBinding.",2,0,2022,2024,1,https://github.com/YusufsKaygusuz/Observer-Design-Pattern-WPF---Samples-
Observer,servicefabricobserver,This project contains a framework that provides a publisher-subscriber implementation using the Observer design pattern for Service Fabric stateful services and actors.,2,1,2016,2022,1,https://github.com/azure-cat-emea/servicefabricobserver
Observer,Movie-Notification,An simple app that notifies you when an anticipated movie or new episode of your favorite Tv show is released using the observer design pattern.,2,0,2021,2022,1,https://github.com/quamejnr/Movie-Notification
Observer,Concurrency-Simulation,"This simulation models an assembly line with dynamic UI setup, concurrent processing, and real-time queue display. Utilizing Java Spring Boot for the backend and Vue for the frontend, it incorporates design patterns like concurrency and observer for enhanced efficiency. Users can interactively manage machines, queues, and simulations.",2,2,2024,2024,3,https://github.com/AbdElRahmanOsama182/Concurrency-Simulation
Observer,Restaurant_Management_System_MVC,"Built a RMS using Java Framework SpringBoot and React for Frontend. Incorporated Design patterns like Factory Pattern, Observer Pattern, Iterator Pattern in this project. Built as a part of Class Project for Subject OOAD Java.",2,0,2024,2024,1,https://github.com/vinay1103/Restaurant_Management_System_MVC
Observer,plugin-container," Plugin-container is a design pattern similar to Observer, but with ore emphasis on data processing, state change, and cancelable actions.   Very useful and simple pattern to add extension points to your APIs or frameworks.",2,0,2018,2019,1,https://github.com/cancerberoSgx/plugin-container
Observer,Stock-Market-Application,A project developed during the Software Requirements and Analysis course. This application is developed using C# and implements the Observer design pattern. This application provides the ability to buy and sell stocks (hypothetically) and the information will be updated in a central information window.,2,1,2014,2018,1,https://github.com/agencare89/Stock-Market-Application
Observer,WORDLE---Amimul,"Designed and implemented a GUI-based UI version of the popular game Wordle applying MVC (Model/View/Controller) Architecture using Object Oriented Programming, JavaFX graphics, and tested using Junit. Made use of Observer-Observable Design pattern to develop a refined and responsive application. Created Documentation using Javadoc.",2,0,2023,2023,1,https://github.com/amimul1/WORDLE---Amimul
Observer,OOSW-Project2-SpaceInvanders,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",2,0,2021,2023,1,https://github.com/johnnylongvo/OOSW-Project2-SpaceInvanders
Observer,observer-and-adapter-example,An example of the observer and adapter design patterns,1,15,2015,2021,1,https://github.com/csc301-fall-2015/observer-and-adapter-example
Observer,observer-pattern-demo,Demo for the Observer software design pattern,1,4,2023,2025,1,https://github.com/chittur/observer-pattern-demo
Observer,design-patterns-observer,,1,2,2017,2018,1,https://github.com/monsterlessons/design-patterns-observer
Observer,Simple-MVC,MVC with an Observer design pattern. Meant to help teach others.,1,2,2016,2016,0,https://github.com/Ant2888/Simple-MVC
Observer,Observer,Observer Design pattern,1,0,2017,2017,1,https://github.com/wangnan1305/Observer
Observer,ObserverPattern,Design Pattern - ObserverPattern,1,0,2019,2019,1,https://github.com/oganetti/ObserverPattern
Observer,DesignPatterns_chapter-2,Observer design pattern,1,0,2014,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-2
Observer,FruitShop-Observer,Design pattern observer,1,0,2020,2020,1,https://github.com/tzecris/FruitShop-Observer
Observer,odp,Observer Design Pattern,1,0,2023,2023,1,https://github.com/majidmostafavi/odp
Observer,DesignPatterns.Observer,Observer Design Pattern,1,0,2022,2023,1,https://github.com/dFarkhod/DesignPatterns.Observer
Observer,Observer,Observer Design Pattern in Java,1,0,2019,2020,1,https://github.com/XingRay/Observer
Observer,Observer,The Observer / Dispatcher Design Pattern,1,0,2019,2020,0,https://github.com/AvishaiAharoni/Observer
Observer,ObserverPattern,Head First Design Patterns C++,1,0,2022,2022,1,https://github.com/grtyvr/ObserverPattern
Observer,ObserverDesignPattern,Observer Design Pattern in C++,1,0,2014,2024,1,https://github.com/roldie/ObserverDesignPattern
Observer,demo-observer-pattern,Design Pattern - Observer Pattern,1,0,2022,2022,1,https://github.com/potato-study/demo-observer-pattern
Observer,observer-pattern,Observer design pattern example,1,0,2022,2024,1,https://github.com/OthDr/observer-pattern
Observer,Observer,Observer design Pattern using Traffic Signal,1,0,2015,2015,0,https://github.com/Vajradehi/Observer
Observer,observer-pattern,Observer design pattern in javascript.,1,0,2022,2023,1,https://github.com/saanny/observer-pattern
Observer,LoggingCPP,Logging using Observer Design Pattern,1,0,2018,2018,0,https://github.com/walidAbbassi/LoggingCPP
Observer,ObserverPattern,Observer Design Pattern for Python App Engine,1,0,2011,2014,1,https://github.com/fairsayan/ObserverPattern
Observer,ObserverPython,Exemplo do Design Pattern Observer em Python,1,0,2024,2024,1,https://github.com/julianabaicar/ObserverPython
Observer,PatternObserver,Design Pattern Observer 模式,1,0,2019,2019,1,https://github.com/VinCleanCode/PatternObserver
Observer,Observer.py,Apprentissage de Design Patterns (Observer),1,0,2024,2024,1,https://github.com/Theorhd/Observer.py
Observer,observer-design-pattern,Observer Design Pattern in Swift,1,0,2020,2024,0,https://github.com/tagaruma/observer-design-pattern
Observer,observer-design-pattern-java,Observer Design Pattern Using Java.,1,0,2019,2019,1,https://github.com/domicoder/observer-design-pattern-java
Observer,ObserverDesignPattern,Fun with Observer  Design Pattern using Java.,1,0,2024,2024,1,https://github.com/devendra1707/ObserverDesignPattern
Observer,observer,Project for study or teach design pattern observer,1,0,2022,2023,1,https://github.com/alexandrehsantos/observer
Observer,cashRegisterProject,"Dynamic single page application created using Javascript, NodeJS, Ajax, jQplot charts, jQuery , HTML, CSS, CRUD operations and the Observer design pattern.",1,2,2015,2020,1,https://github.com/pparonson/cashRegisterProject
Observer,Observer-Design-Pattern-in-Ruby,"Observer design pattern written in Ruby.  From ""Design Patterns in Ruby"" by Russ Olsen",1,0,2011,2014,1,https://github.com/ErikRHanson/Observer-Design-Pattern-in-Ruby
Observer,observer-design-pattern,Simple implementation of observer design pattern,1,0,2019,2020,1,https://github.com/thibeDev/observer-design-pattern
Observer,pie_chart_observer_ufu,Prática sobre o Design pattern Observer,1,0,2021,2023,1,https://github.com/samuel-cavalcanti/pie_chart_observer_ufu
Observer,design-pattern-observer,Simple example using Observer Design Pattern.,1,0,2018,2023,1,https://github.com/augustocolombelli/design-pattern-observer
Observer,DesignPattern-Observer,Example implementation of Observer design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Observer
Observer,ObserverPattern,Example project of Observer Design Pattern with .Net 6,1,0,2021,2021,1,https://github.com/vmutlu/ObserverPattern
Observer,observer,"Observer design pattern using SplObserver, SplSubject interfaces and SplObjectStorage class",1,0,2015,2019,1,https://github.com/PHPiotr/observer
Observer,php-observer,observer design pattern in samle in php,1,0,2024,2024,1,https://github.com/sinazahed/php-observer
Observer,observer-pattern,Basic Implementation of the Observer Design Pattern,1,0,2020,2023,1,https://github.com/JoseCrz/observer-pattern
Observer,python-observer,Observer design pattern in Python with example,1,0,2019,2019,0,https://github.com/katyja/python-observer
Observer,cpp_design_patterns,examples of design patterns in C++,1,0,2022,2023,1,https://github.com/majorx234/cpp_design_patterns
Observer,design-patterns-observer,Sources for the design patterns observer chapter,1,0,2016,2022,1,https://github.com/progund/design-patterns-observer
Observer,ObserverDesignPattern,Exemplo de um dos padrões comportamentais do GoF Design Patterns,1,0,2019,2020,1,https://github.com/LucasSonego/ObserverDesignPattern
Observer,observer-pattern,Aplicação do Design Pattern Observer com Laravel 7,1,0,2020,2021,1,https://github.com/caiotzu/observer-pattern
Observer,Design_Pattern-Observer_Pattern,Implementation of observer design pattern in C#,1,0,2020,2022,0,https://github.com/AntarikshVerma/Design_Pattern-Observer_Pattern
Observer,ObserverPattern,Simple usage observer design pattern using PHP SPL(Standard PHP Library),1,0,2017,2017,1,https://github.com/metallurgical/ObserverPattern
Observer,_ObserverPattern,This is an example of the observer design pattern in c++,1,0,2021,2021,1,https://github.com/SaibanJ/_ObserverPattern
Observer,weather-station-design-pattern,Weather station program implementing observer design pattern.,1,0,2016,2018,1,https://github.com/salmanrameli/weather-station-design-pattern
Observer,gazer,Easier implementation of PHP Observer design pattern.,1,0,2021,2021,2,https://github.com/carloswph/gazer
Observer,Ex8-Strategy-Observer-Command,05506230-Design Patterns In Object-Oriented Programming,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex8-Strategy-Observer-Command
Observer,LightObserverPattern,"A light Observer Design Pattern example, very crude",1,0,2012,2013,0,https://github.com/bundgaard/LightObserverPattern
Observer,observer_design_pattern,Implementation of the observer design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/observer_design_pattern
Observer,react-rxjs-Observer,Observer design pattern using RxJs and React.js,1,0,2020,2020,0,https://github.com/tbhatti/react-rxjs-Observer
Observer,PhpDesignPatterns-Observer,Observer,1,0,2017,2023,1,https://github.com/Jagepard/PhpDesignPatterns-Observer
Observer,Observer-Memento,Design patterns Observer e Memento  in C# :carousel_horse:,1,0,2021,2022,1,https://github.com/EduardoReisDev/Observer-Memento
Observer,observer-design-pattern-cpp,A C++ example for the Observer Design Pattern. ,1,0,2021,2021,1,https://github.com/stgaki/observer-design-pattern-cpp
Observer,ObserverExample,Applicazione d'esempio realizzata per AndroidWorld.it per spiegare il Design Pattern Observer,1,0,2014,2014,1,https://github.com/AWDevCorner/ObserverExample
Observer,Multi-User-Chat-Room-JAVA-,"JAVA Design patterns: mediator, bridge, singleton, factory, observer.",1,0,2012,2013,1,https://github.com/yaxing/Multi-User-Chat-Room-JAVA-
Observer,jeuxdelavie,Jeux de la vie - mvc & design pattern observer,1,0,2012,2014,2,https://github.com/thomasgaillard/jeuxdelavie
Observer,observer-js,Implementation of 'Observer' design pattern in JavaScript using OOP paradigm,1,0,2017,2017,1,https://github.com/Vasniktel/observer-js
Observer,ObserveProducts,making an attempt to use observer design pattern,1,0,2019,2019,1,https://github.com/nataliaKat/ObserveProducts
Observer,ODP-java,Simple Observer Design Pattern example implemented in Java,1,0,2018,2019,1,https://github.com/yektas/ODP-java
Observer,WaterLevelObserver,Simple water level notifier application develpoed using observer design pattern.,1,0,2019,2020,1,https://github.com/PabodaSenevirathne/WaterLevelObserver
Observer,design-pattern-observer,A project with an example using the design pattern Observer,1,0,2022,2023,1,https://github.com/mauricior/design-pattern-observer
Observer,observer-design-pattern,A simple example demonstrating how the Observer Design Pattern works.,1,0,2025,2025,1,https://github.com/fabriciosouza0/observer-design-pattern
Observer,observerPattnMbrry,html/javascript/css component based application using observer design pattern with a responsive design,1,0,2020,2020,1,https://github.com/jolaya182/observerPattnMbrry
Observer,Java-Paint-DesignPatterns,"Paint application in java using design patterns Singleton, Observer ...",1,0,2020,2021,1,https://github.com/HathoutFatna/Java-Paint-DesignPatterns
Observer,design-patterns,"factory method, adapter e observer",1,0,2021,2021,1,https://github.com/Greiciane93x/design-patterns
Observer,smart-air-conditioner-app,object oriented analysis and design assigment\this project includes factory design pattern and observer design pattern,1,0,2022,2023,1,https://github.com/ahadpaksoy/smart-air-conditioner-app
Observer,designpatterns4devs-observer-2022-11-23,Exemplos sobre a aula do design pattern comportamental Observer!,1,0,2022,2022,1,https://github.com/rocketseat-creators-program/designpatterns4devs-observer-2022-11-23
Observer,FactoryPlugAndPlay,Written in Java Using Singleton And Observer Design Pattern.,1,0,2021,2023,1,https://github.com/Rafcon96/FactoryPlugAndPlay
Observer,patterns1,"Iterator, Observer, Strategy, Dependency Injection Design Pattern sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns1
Observer,AirConditioner,"project extended by new functionalities, and design pattern - observer",1,0,2021,2021,2,https://github.com/KKMalysa/AirConditioner
Observer,go-observer,Projeto criado para aprendizagem da metodologia de design patterns Observer em Go.,1,0,2024,2024,1,https://github.com/pietroBragaAquinoJunior/go-observer
Observer,DesignPatterns,"T-Shirts store design using four design patterns: Factory, Observer, Decorator and Simgleton",1,0,2024,2024,1,https://github.com/AymanAttili/DesignPatterns
Observer,designpatterns,Projeto que abrange diversos design patterns,1,0,2018,2023,1,https://github.com/lelodois/designpatterns
Observer,Outfit-Rating-Platform,"This is a Java application to use SOLID Principles, MVC Design Patterns, Swing and Observer Design Pattern.",1,0,2021,2025,1,https://github.com/gurcangul/Outfit-Rating-Platform
Observer,composite_observer_design,"This is a composite, observer design pattern implementation using JAVA from cmpt276",1,0,2020,2023,2,https://github.com/eddie109109/composite_observer_design
Observer,DesignPatterns,This is a simple weather application that demonstrates the use of the observer design pattern.,1,0,2016,2023,1,https://github.com/Criviere/DesignPatterns
Observer,Stock-Observer-DiceDB,Observer Design Pattern with real-time stock price updates stored in DiceDB,1,0,2024,2025,1,https://github.com/pranavbharadwaj007/Stock-Observer-DiceDB
Observer,observer-pattern-football-news,This project aims to demonstrate the behavior of the Observer design pattern.,1,0,2023,2024,1,https://github.com/ricardohsmello/observer-pattern-football-news
Observer,design-patterns,"Practicing design patterns like Command, Flyweight and Observer in Unity.",1,0,2021,2021,1,https://github.com/carreraSilvio/design-patterns
Observer,OOD,"Design Patterns project: MVC, Singleton, file iterator, Observer, Command, Memento.",1,0,2023,2023,1,https://github.com/RamDvlp/OOD
Observer,fantasy-rpg-game,"This project implements Singleton, Factory, Strategy and Observer design patterns.",1,0,2017,2019,1,https://github.com/rd-spring-coder/fantasy-rpg-game
Observer,BlueLibrary,"Design pattern illustration: Singleton, MVC, Decorator, Adapter, Facade, Observer, Memento.",1,0,2017,2020,1,https://github.com/ngominhtrint/BlueLibrary
Observer,DesignPatterns,"Singelton, Observer, Decorator and Factory pattern to design a software for a shop that produces T-shirts.",1,0,2024,2025,1,https://github.com/Hadeel-Abdeljalil/DesignPatterns
Observer,generalization-observer-pattern,"An observer design pattern implementation by C++, for concrete subjects & concrete observer derived from.",1,0,2024,2024,1,https://github.com/thomas5lab/generalization-observer-pattern
Observer,observer-rs,Implementation of the observer software design pattern / an event emitter for the rust programming language.,1,0,2018,2021,2,https://github.com/49nord/observer-rs
Observer,FactoryObserverDesignPatterns,"Execises 3,4 from ExerciseSheet 6 for OMI (AAU Klagenfurt)",1,0,2021,2024,1,https://github.com/yahorpaulson/FactoryObserverDesignPatterns
Observer,Snake-Game,Ssssnake game where i had to use FlyWeight & Observer design pattern,1,0,2022,2022,1,https://github.com/Keydouu/Snake-Game
Observer,AdventureGame,"Java and JavaFX game, testing design patterns. Observer, Strategy, Singleton, Factory.",1,0,2016,2024,1,https://github.com/dsenese/AdventureGame
Observer,Word-Counter-with-Backup-Implementation,"Implemented ""word counter"" command with Visitor, Prototype, and Observer Design Patterns ",1,0,2017,2017,1,https://github.com/schadal1/Word-Counter-with-Backup-Implementation
Observer,common-design-patterns,"[WIP][LEARNING] Annotated Observer, Factory, Singleton, and so on",1,0,2023,2024,1,https://github.com/stuymedova/common-design-patterns
Observer,design-patterns-software-engineering,Studies on design patterns and software engineering.,1,0,2024,2025,1,https://github.com/kastorcode/design-patterns-software-engineering
Observer,sample_thermometer_observer_design_pattern,This is a sample project to get an idea about the observer design pattern,1,0,2017,2017,0,https://github.com/rama41222/sample_thermometer_observer_design_pattern
Observer,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
Observer,Harbour-Wep-Application,Web application designed for a Harbor to manage products-users-cases. applied in an object-oriented way: strategy design pattern single ton decorative design pattern observer design pattern.,1,0,2021,2022,1,https://github.com/SeifAbdelsamea/Harbour-Wep-Application
Observer,csce247ObserverDesignPatterns,,1,0,2020,2022,1,https://github.com/burnworc/csce247ObserverDesignPatterns
Observer,Design-Patterns-Examples,"Repository with several design patterns examples in Java: Strategy, Observer, Decorator, etc.",1,0,2018,2022,1,https://github.com/MarioCavero/Design-Patterns-Examples
Observer,Software-design-patterns.-University-Second-Year,"5 Software design patterns work for IS2: Singleton, Factory, State, Observer, Strategy",1,0,2018,2020,2,https://github.com/lakidain/Software-design-patterns.-University-Second-Year
Observer,Mastering-Design-Patterns-in-Java,"real world examples for singleton, factory, builder, adapter, decorator, observer design patterns",1,0,2024,2024,1,https://github.com/DharshiBalasubramaniyam/Mastering-Design-Patterns-in-Java
Observer,Java-Observer-Pattern,The purpose of this repository is to demonstrate the implementation of the Observer design pattern in Java.,1,0,2025,2025,1,https://github.com/zaselalk/Java-Observer-Pattern
Observer,Library-Book-Tracker-Application,"An application demonstrating the collaboration of State, Singleton, and Observer Design Patterns",1,0,2022,2022,2,https://github.com/aleeckman/Library-Book-Tracker-Application
Observer,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Observer,AspNetCoreDesignPatterns,"Adapter, ChainResponsibility, Command, Composite, Decorator, Observer, Strategy, Template Patterns",1,0,2022,2023,0,https://github.com/MertGuney/AspNetCoreDesignPatterns
Observer,design-patterns,"Mise en oeuvre des design patterns Adapter, Observer, State, Decorator, Proxy, Command et Factory",1,0,2017,2023,3,https://github.com/cdevy/design-patterns
Observer,tiny-observer,A tiny library which implements the observer design pattern (and let you design your own according to an interface),1,0,2021,2024,1,https://github.com/thetinyspark/tiny-observer
Observer,AbstractFactory_Observer_JAVA_Design_Patterns,A simple project for Software Engineering Exam,1,0,2018,2020,1,https://github.com/StivenMetaj/AbstractFactory_Observer_JAVA_Design_Patterns
Observer,Observer-Design-Pattern-Low-Level-Design-,This is complete Tutorial of Observer Design Pattern . Feel Free to add something useful to it .,1,0,2023,2023,1,https://github.com/Neha611/Observer-Design-Pattern-Low-Level-Design-
Observer,DesignPatterns,"This repository is a practical demonstration of some of the widely use object-oriented design patterns used in Java. Includes coding examples to illustrate the implementation of  Singleton,Factory,Decorator,Observer and Adaptor Design Patterns.",1,0,2024,2024,1,https://github.com/umayanganacooray/DesignPatterns
Observer,ordermgt,"Order management full stack application, using redux, observer design pattern, in microservice architecture",1,0,2020,2023,1,https://github.com/victoryeo/ordermgt
Observer,DesignPatterns,"Design Patterns Project: An educational resource showcasing popular patterns like Singleton, Factory, Observer, Dependency Injection, and Template Method. Explore code and labeled sections for insights into practical implementation and concepts. Enhance understanding of design patterns easily.",1,0,2023,2023,1,https://github.com/ovinokurov/DesignPatterns
Observer,design-patterns-library,"Sistema bibliotecário com padrões de projetos Strategy, Null objects, Hook methods, Bridge, State e Observer.",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library
Observer,AcountSystemWithObserver,This is a simple project that allow us to make practice all knowledge we already get in Observer Design Pattern,1,0,2022,2022,1,https://github.com/aab595/AcountSystemWithObserver
Observer,Facebook-App-DP,"Facebook app using 6 design patterns (cache Proxy, Factory Method, Builder, Strategy, Observer, Decorator)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-DP
Observer,DP_Publish_Subscribe,a few variations of publish-subscribe Design pattern (also known as Observer or Listener),1,0,2017,2023,2,https://github.com/loliksamuel/DP_Publish_Subscribe
Observer,calculator,"Web Calculator maked with  HTML, CSS and JS using design patterns factory and observer ",1,0,2022,2023,1,https://github.com/cecilia-brito/calculator
Observer,angular-music-player,"a web music player, made in angular, using custom implementation of observer design pattern.",1,0,2018,2023,1,https://github.com/EfiGordon/angular-music-player
Observer,SoftwareDesignPatterns,"A repository that explores various software design patterns, providing code examples, explanations, and use cases for common design patterns like Singleton, Factory, Observer, and Strategy.",1,1,2023,2023,1,https://github.com/migustoo/SoftwareDesignPatterns
Observer,Multiplayer-Tambola-Game-using-Multithreading,"This repository contains a multithreaded application based on 'n' player Tambola game developed using Observer Design Pattern, Singleton Design Pattern and Multi-threading in Java.",1,0,2020,2020,1,https://github.com/neelabhsinha/Multiplayer-Tambola-Game-using-Multithreading
Observer,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Observer,ruby-design-patterns,,1,0,2016,2017,1,https://github.com/kalelc/ruby-design-patterns
Observer,Core-Observer-System,This Project will provide the utility to use various kind of system which are built based on Observer Design Pattern like Signal System.,1,0,2022,2023,1,https://github.com/PAHeartBeat/Core-Observer-System
Observer,Go_Observer,"We will send an email to all customers who preordered the product, which is came in to Stock by using Observer Design Pattern in Go.",1,0,2020,2020,0,https://github.com/borakasmer/Go_Observer
Observer,design_pattern_examples,"This repo includes a little number of C++ design pattern examples (e.g. strategy, observer)",1,0,2022,2023,1,https://github.com/czm35388/design_pattern_examples
Observer,war-games,A project from my java university course. Some game mechanics and Observer design pattern implementation.,1,0,2021,2024,1,https://github.com/jdolkowski/war-games
Observer,Java-Design-Patterns,"Java project program to demonstrate design pattern implementation in Java code, such as observer, decorator, and adapter patterns of software design.",1,0,2021,2022,1,https://github.com/drew-m7/Java-Design-Patterns
Observer,BreakOut-Game,"This game is made on Swing in Java using Observer,Command and Composite Design Pattern",1,1,2015,2018,3,https://github.com/jaymmodi/BreakOut-Game
Observer,SentenceGenerator,Observer+Strategy patterns implemented in Java as a part of the Software Design & Patterns course,1,0,2022,2023,1,https://github.com/Elmar2001/SentenceGenerator
Observer,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Observer,observer_design_pattern,this is a silly example of observer design pattern and i know it is silly but read it i am not in good mood today ,1,0,2023,2023,1,https://github.com/rajsoni5197/observer_design_pattern
Observer,design-patterns,Prática dos Design Patterns estudados durante a matéria de Arquitetura de Software.,1,0,2024,2024,1,https://github.com/lucas0headshot/design-patterns
Observer,Design-Patterns-C-Sharp,"here are a few design patterns  implemented in C#. Bridge , Composite , Factory Method , Observer , Singleton , Strategie , Abstract Factory,adapter,Builder ",1,0,2023,2024,1,https://github.com/Jocelynpyw/Design-Patterns-C-Sharp
Observer,alphaCombats,"a 2D interactive PC game developed on Greenfoot using Observer, State, Factory and Composite design patterns",1,0,2017,2019,1,https://github.com/swathisudarshan/alphaCombats
Observer,Framework-Implementing-Design-Patterns,"A framework specially for financial institution like bank, insurance using the best practice of design patterns like Singleton, Factory, Observer, Strategy,  Decorator",1,0,2022,2022,1,https://github.com/lisa99990/Framework-Implementing-Design-Patterns
Observer,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Observer,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Observer,design-patterns,:alien: A list of design patterns implementeds in JAVA that I worked during my graduation,1,0,2017,2019,1,https://github.com/MarceloBritoWD/design-patterns
Observer,connectfour,"Connect4 game implemented for the Production Quality Software class. Uses Builder, Observer, Factory and Singleton design patterns.",1,0,2012,2015,1,https://github.com/hm1021/connectfour
Observer,Pattern-Example,Observer design pattern through an example of a system that notifies students when exam results are published.,1,0,2025,2025,1,https://github.com/Stojanovic94/Pattern-Example
Observer,BicycleObserverPatternApp,"This is my first go at implementing the observer design pattern, in C#. After coding this, I quickly realised how powerful this design pattern can be - especially thinking how it might be used in large-scale enterprise apps. I learned the observer pattern in my programming class, and by looking at sites such as http://www.dofactory.com/Patterns/PatternObserver.aspx.",1,0,2014,2014,1,https://github.com/rattfieldnz/BicycleObserverPatternApp
Observer,Store_Final_Project_Design_Patterns," Streaming Binary I/O, Collections, Design Patterns: Comparator, Iterator (For file), List Iterator, Observer, MVC, Singleton, Command, Adapter, Decorator, Memento and Multi Treading Systems",1,0,2021,2022,1,https://github.com/RonShmaya/Store_Final_Project_Design_Patterns
Observer,Refactoring_and_Implementing_Software_Design_Patterns,"Enhance CPP_OOP_Online_Store by refactoring and integrating software design patterns like Factory, Singleton, Observer, and Strategy. Improve maintainability and scalability while deepening understanding of design patterns in C++.",1,2,2024,2024,1,https://github.com/amaralazizy/Refactoring_and_Implementing_Software_Design_Patterns
Observer,Design_Patterns,You can find examples of design patterns in this project. How many design patterns we have and you can see how some of them are used.,1,0,2022,2023,1,https://github.com/EnesSERENLI/Design_Patterns
Observer,Design-Patterns,"🛠️ Explore key software design patterns with Java demos! This repository features the Adapter, Observer, and Singleton patterns with practical examples to boost your understanding of reusable and scalable code structures. Perfect for developers diving into design principles! 🚀 #DesignPatterns #Java #Coding",1,0,2024,2024,1,https://github.com/Sassri24/Design-Patterns
Observer,PharmaPlus,"CSE-3120 | Software Engineering and Information Systems Laboratory Android studio project with Factory , SingleTon , adapter , Observer Design pattern",1,1,2024,2024,3,https://github.com/Mofazzal874/PharmaPlus
Observer,ObserverPattern,"The Observer Pattern is a design pattern that defines a one-to-many dependency relationship between objects. When the state of a subject (e.g., stock price) changes, all its observers (subscribers) are automatically notified and updated. This pattern is useful for implementing systems like notifications, stock tracking, and event handling.",1,0,2024,2025,1,https://github.com/tunkashwinraj/ObserverPattern
Observer,Cinema_Manager_System,"A Java applicaton for cinema mangment, using JavaFx, designed according to Design-Patterns such as: Observers, MVC, Singleton",1,0,2021,2022,1,https://github.com/rotemmi/Cinema_Manager_System
Observer,MVC_Chef_Game_Application,"A Java client game application based on MVC and other design patterns like Observer, Decorator, Iterator, and Factory.",1,0,2018,2019,2,https://github.com/ZhepuZhao/MVC_Chef_Game_Application
Observer,Books-List-with-SwiftUI,"I have fetched books list from New York times using Alamofire. It is entirely developed using SwiftUI framework. This project uses MVVM architecture and has some standard design patterns integrated as well such as: Singleton Patter, Strategy Pattern, Factory Pattern and  Observer Pattern.",1,1,2020,2023,1,https://github.com/HannyTufail/Books-List-with-SwiftUI
Observer,software-design-patterns-java,"Explore Java code examples for software design patterns—creational (Singleton, Factory), structural (Adapter, Decorator), and behavioral (Observer, Strategy). Master best practices for writing maintainable, flexible, and scalable Java code in this comprehensive repository.",1,0,2023,2023,1,https://github.com/kodiidok/software-design-patterns-java
Observer,shipment-tracker,A simulation of a shipment tracking system implemented in Kotlin to demonstrate the Strategy and Observer OO design patterns,1,0,2022,2023,1,https://github.com/DanielClyde/shipment-tracker
Observer,SimpleCalculator,This is a simple example for design pattern observer & microkernel architecture in this project You see how it works.,1,0,2020,2022,1,https://github.com/elliot31878/SimpleCalculator
Observer,design-patterns,A GitHub repository providing simple explanations and code snippets for various design patterns in JavaScript and Python.,1,0,2023,2023,1,https://github.com/simon-das/design-patterns
Observer,JavaDesignPatternsWorld,"JavaDesignPatternsWorld 🌟: Master Java Design Patterns and SOLID Principles with real-world examples, code snippets, and quizzes. Learn Creational, Structural, and Behavioral patterns, including Singleton, Factory, Adapter, Observer, and more. Perfect for beginners, developers, and architects to create scalable, maintainable software! 🚀",1,0,2024,2024,1,https://github.com/rohitbhardwaj/JavaDesignPatternsWorld
Observer,unityDesignPattern_Holistic3D,"Penny De Byl's Udemy course about useful design patterns for game programming. The course teach a full set of design patterns for many game dev scenarios like singleton, command pattern, observer pattern, etc...",1,1,2021,2022,1,https://github.com/Kassout/unityDesignPattern_Holistic3D
Observer,RESTAURANT-MENU-APP,"A restuarant menu java application implementing Object Oriented Design patterns: Observer, Adapter and Facade and implementing SOLID and GRASP principles  ",1,0,2017,2017,1,https://github.com/Maitri-13/RESTAURANT-MENU-APP
Observer,observer_pattern,"The observer pattern is a software design pattern in which an object, called the subject (Observable), maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods. Here is an implementation in C#",1,0,2020,2020,1,https://github.com/koimiyovo/observer_pattern
Observer,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Observer,NewsApp,"News App - Android studio application utilizing the News API, Android Studio, Java, Room ORM, FirebaseJobService, and various design patterns (Singleton and Observer).",1,0,2018,2018,1,https://github.com/EmilyPascua/NewsApp
Observer,alura-design-patterns-java-I,"Design Patterns Java I: Boas práticas de programação - Não repita código com Template Method, Saiba da importancia de estudar os Padrões de projeto, Resolva problemas de muito Ifs usando Strategy, Adicione comportamentos ao seu objeto com Decorator, Crie diferentes ações com Observer, Use o Builder para criação de objetos complicados",1,0,2020,2022,1,https://github.com/Edufreitass/alura-design-patterns-java-I
Observer,DotNet,"System development for driving students, testers and driving tests. Using MVVM architecture, Design Patterns (Observer ,Contract ,Factory Method ,Singleton), and XML DOM.",1,0,2018,2021,1,https://github.com/DvoraRit/DotNet
Observer,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Observer,Sport-Competitions-3rd-homework-OOP,"A Java program that manages sports competitions (teams registration, matches, rankings calculation). Multiple design patterns have been used: Singleton, Factory, Visitor, Observer, Strategy.",1,0,2020,2022,1,https://github.com/mateipetre/Sport-Competitions-3rd-homework-OOP
Observer,VehicleAgency,"This project is a vehicle agency graphical user interface (GUI) implemented in Java. It incorporates various design patterns to enhance code organization and functionality. The design patterns utilized include the thread pool, memento, observer, singleton, abstract factory method, and decorator patterns.",1,0,2023,2025,1,https://github.com/RonyBubnovsky/VehicleAgency
Observer,MonsterHunter,"Java game based on a 2D map, classes of heroes, monsters and treasures. This app implements various design patterns: observer, singleton, factory, strategy, command.",1,0,2018,2023,1,https://github.com/razvanra2/MonsterHunter
Observer,Dental-Managerial-System,"Developed a managerial system for a dental clinic that also helps to automate all required paperwork. Using MVC,Observer,Singleton,and Strategy Design patterns.",1,0,2023,2023,1,https://github.com/Ahmedawad24/Dental-Managerial-System
Observer,asteroids-game,"Asteroids game built using JS, HTML, & CSS. Demonstrates the use of Observer/Observables & Functional Reactive Programming as a coding design pattern for handling asynchronous events.",1,0,2020,2022,1,https://github.com/terencehh/asteroids-game
Observer,Software-Analysis-Design,"UML-driven backend for a trading card game. Utilizes Singleton, Observer, Composite, State Design patterns. Enables card creation, expansion management, and real-time status updates.",1,0,2024,2024,1,https://github.com/TobiZelders/Software-Analysis-Design
Observer,MusicAlbums,"This app shows a Music Album collection and allows you edit the list. It uses different design patterns like Singleton, MVC, Decorator, Adapter, Facade, Observer.",1,0,2017,2018,0,https://github.com/josman185/MusicAlbums
Observer,Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns,"This is an Application Implementing 5 design Patterns like Strategy, Singleton, Builder, Observer and Adapter. It is a Basic Job Posting and Hiring Application implementing login and Register Functionality with Job Posting and Job Hiring , it also sends out SMS Messages to Subscribed Phone Numbers.",1,0,2024,2024,1,https://github.com/SpecteR926/Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns
Observer,twitch-live-chat-library,A simple and easy to use PHP library for reading from and writing to the twitch irc live chats by partially using the observer design pattern,1,0,2023,2025,1,https://github.com/voniersa/twitch-live-chat-library
Observer,three-in-a-row-game-with-design-patterns,"Juego tres en raya, realizado en el lenguaje de programacion JAVA, utilizando el IDE netbeans 8.2. El juego se diseño principalmente para ser aplicado los patrones de diseño los cuales son los siguientes: patron Builder, patron factory, patron singleton, patron observer y patron facade, como resultado final tenemos que el programa tiene funcionalidad optima, trabajando conjuntamente con los patrones de diseño implementados.",1,0,2022,2022,1,https://github.com/bryherna/three-in-a-row-game-with-design-patterns
Observer,Random-Plot-Graph,This project draws randomly generated points in 3 similar styles graph continuously. The goal is to practice different software design patterns such as Observer and Decorator patterns.,1,0,2021,2021,1,https://github.com/toantnguyen99/Random-Plot-Graph
Observer,Soffware-Construction-Project,"This project fulfills the requirements for PSAU's Software Construction course by implementing a bidding system using the Observer design pattern. The project showcases a well-structured, modular approach to handling dynamic bid updates and notifications, highlighting the practical application of design patterns in real-world scenarios.",1,0,2024,2024,1,https://github.com/Abdullah1423/Soffware-Construction-Project
Observer,Patterns,"This repository showcases implementations of fundamental design patterns in C#, covering creational, structural, and behavioral patterns. Each pattern is demonstrated through easy-to-understand, practical examples, illustrating how to solve common software design challenges.",1,0,2024,2024,1,https://github.com/pome1lo/Patterns
Observer,online-shopping-simulation,"This project is an Online Shopping System that implements Singleton, Factory, Decorator, and Observer Design Patterns to manage shopping carts, apply discounts, process payments, and track order statuses.",1,0,2025,2025,1,https://github.com/meliscann/online-shopping-simulation
Observer,Model-Driven-Architecture,"This is the design and implementation of Model Driven Architecture for a GasPump Component using MDA-EFSM and various software design patterns like Observer, Abstract Factory and State Pattern",1,0,2017,2023,1,https://github.com/mohammedshethwala/Model-Driven-Architecture
Observer,MiniRoundabout,"Java program simulating cars navigate along a road and around a roundabout to reach their final destination. This heavily relies on multi-threading, MVC and the observer design pattern.",1,0,2019,2019,1,https://github.com/ConorForsey/MiniRoundabout
Observer,student_loan_services,"Java - Spring Boot Back-End application for students to apply for loans which can be then reviewed by the Bank Representatives and Bank Admins who can approve/reject the applications. The project implements the key design patterns such as the Observer, Strategy, Command, Decorator, Factory and the Interceptor design patterns. ",1,0,2025,2025,1,https://github.com/nikunjpanchal22/student_loan_services
Observer,SocialNetworkManagementSystem,"A platform developed to manage user relationships and groups within a social network. The system leverages design patterns such as Observer, Factory, and Strategy for a scalable and maintainable architecture. It also includes a notification system integrated via the Observer Pattern.",1,0,2024,2024,1,https://github.com/MuhammedOrhantekin/SocialNetworkManagementSystem
Observer,Java-Board-Games,"Implemented three android board games (Sliding Tiles, Simon Says, Matching Card) in a group of five, designed CRC, applied design patterns iterator, observer, serialize and strategy, used exception, interface, etc…. ",1,0,2019,2022,1,https://github.com/joydu902/Java-Board-Games
Observer,DesignPattern_Project,https://youtu.be/bXKfP5Tbnt8 This is a single project where the following design patterns were used: POOL - FACTORY - OBSERVER - STRATEGY - BUILDER - LOOK UP TABLE - MVC - LOCALIZATION MANANGER - SCREEN MANANGER - FLYWEIGHT - PROTOTYPE - EVENT MANANGER,1,0,2021,2022,1,https://github.com/Gmorenoprat/DesignPattern_Project
Observer,Java-Projects,"Java par la pratique, Concepts fondamentaux, les Exceptions,  les Design patterns (Singleton, Factory, Observer, Modèle Vue  Contrôleur), la programmation graphique et évènementielle avec JavaFx, API JDBC, Hibernate 5, Data Access Object Pattern (DAO)",1,0,2021,2022,1,https://github.com/MouhamadouFALL/Java-Projects
Observer,Sudoku,"A Sudoku game with advanced features such as backtracking solver, multiple difficulty levels, undo/redo functionality, hint system, and customizable themes. Built using Python and Tkinter, following MVC architecture and implementing design patterns like Observer.",1,0,2024,2024,2,https://github.com/Austin-bryan/Sudoku
Observer,Water-Level-Management-System-JAVA,"The Water Level Management System is a Java application designed to monitor and manage water levels in various environments, such as tanks and reservoirs. Utilizing the Observer design pattern, the system notifies multiple observers (such as alarms, displays, and SMS senders) in real time when water levels change",1,0,2024,2024,1,https://github.com/Lahiru-Chathumina/Water-Level-Management-System-JAVA
Observer,Magic,"This is a command-line card game, which is similar to Yu-Gi-Oh!, or Magic: The Gathering. The various cards and abilities are implemented using objective-C++ strategies, including polymorphism and the Observer design pattern.",1,0,2020,2023,1,https://github.com/tifchiu/Magic
Observer,AnimeArea,"an eCommerce  site to sell anime t-shirts , this project is an attempt to apply some design pattern such as singleton and observer ,decorator . and the most awesome part is that it's based on  laravel . ",1,0,2017,2022,1,https://github.com/amrHassanAbdallah/AnimeArea
Observer,Software-Architecture,"A course in the 2nd quartile in the 2nd year of my study, Creative Media & Game Technologies. The purpose of this course was to learn code design patterns, such as the Abstract Factory & the Observer pattern.",1,0,2020,2023,1,https://github.com/ngmeijer/Software-Architecture
Observer,Message-passing-broker,"Framework for a distributed, indirect message passing broker system that overcomes the challenges of load balancing, failure handling, security and network traffic in a publisher-subscriber distributed system. The system design follows the Observer design pattern.",1,0,2017,2025,1,https://github.com/adityaadvani/Message-passing-broker
Observer,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Observer,spendWise,"This is the backend for the SpendWise application, built with Spring Boot. It features Auth0 for authentication and role-based access control (RBAC) and employs the Observer Design Pattern for event-driven functionality. Frontend repo: https://github.com/kavindunilshan/spendwise-fo",1,1,2024,2025,1,https://github.com/kavindunilshan/spendWise
Observer,dotNet5782_3723_8408,"Creating a management system of Drones, customer and charging stations while using three-layer architecture. The project includes: creating GUI while using WPF library, multithreading, working with XML files and design patterns such as: observer, contract, factory method and singleton.",1,0,2021,2024,2,https://github.com/pinskishira/dotNet5782_3723_8408
Observer,To-do-notification-application,"Users can create labels for lists such as Grocery, Today, Travel, etc. and add items to them. Users get notified by email on the due date and todo completion. Demonstrated Multiple Design Patterns such as Observer, Decorator, and Command. Developed an Azure DevOps CI pipeline.",1,0,2024,2024,1,https://github.com/mihson95/To-do-notification-application
Observer,SocialNetwork,"Class project: Java Swing desktop application that mimics a fundamental social network. Utilized object-oriented principles, including inheritance and polymorphism, alongside Observer and Factory Method design patterns within an MVC architecture. Handled data input/output with JSON files and maintained application integrity through JUnit testing.",1,0,2024,2024,2,https://github.com/justin-pyne/SocialNetwork
Observer,OOP-SpaceInvaders-game,"A game built on top of the code that was developed for the Arakanoid game (code reuse), implementing a brand new game - the familiar Space Invaders game. Implemented in Java, using OOP concepts such as design patterns (Factory, Observer\Listener), polymorphism & interfaces, inheritance, and more.",1,0,2019,2021,1,https://github.com/israelElad/OOP-SpaceInvaders-game
Observer,BookStoreApplication," Java and JavaFX-based Virtual Bookstore Application, showcasing advanced software engineering and design pattern integration, including Singleton, State, and Observer. This project features a secure login system, versatile book purchasing options, and admin controls, emphasizing both usability and educational value. It's a demonstration",1,0,2023,2024,5,https://github.com/Verifiedz/BookStoreApplication
Observer,library-management-app-gui,"Application for administrating a Book Library, done for the OOP Course. This version uses a Graphical User Interface instead of the Classic Console UI, by using the Qt Framework and its specific Classes. It also implements the Observer Design Pattern and Model-View Controller. ",1,0,2023,2023,1,https://github.com/tudormihaita/library-management-app-gui
Observer,MMU-Simulator,"The application helps to understand how the memory management unit works. All the HW parts are presented by their analogs written in Java. Each process is presented by a separate thread. The project includes cache algorithms implementation (LRU, MRU, Random). Design patterns: Singleton, Observer, Strategy, MVC.",1,0,2019,2023,1,https://github.com/AndrewSergeev/MMU-Simulator
Observer,Parking-System-Application,"Extensive Java project that simulates a Parking System software. The concepts explored for this assignment are: UML diagrams, inheritance, interface classes, design patterns (strategy, factory, command, decorator, observer, and builders), serialization through JSON and JUnit testing. Made for the MS in ICT: Software Design and Programming.",1,0,2022,2022,1,https://github.com/ingridjone/Parking-System-Application
Observer,Astronaut-Daily-Schedule-Organizer,"Astronaut Daily Schedule Organizer is a console-based app that manages tasks by adding, editing, viewing, and removing them, while ensuring no scheduling conflicts. It uses the Singleton, Factory, and Observer design patterns for task management and notifications. The app includes logging, error handling, and supports task prioritization.",1,0,2024,2024,1,https://github.com/SanjanaBasutkar/Astronaut-Daily-Schedule-Organizer
Observer,Real-time-weather-monitoring-and-reporting-service,"This project is a C# console application that simulates a real-time weather monitoring and reporting service. It processes weather data in multiple formats(JSON, XML) and activates various bots based on the data, demonstrating the use of SOLID principles & design patterns like Strategy & Observer. The application is designed to be easily extendable",1,0,2024,2024,1,https://github.com/mahamdeh0/Real-time-weather-monitoring-and-reporting-service
Observer,BrickBraker-Game,"The code demonstrates the fundementals of OOP and makes heavy use of the Observer design pattern, as well as mechanics physics. Obvious objects in this code include: the bricks, the balls, the levels. In addition to the trivial objects stated above, deeper objects exist such as: level objects, background objects, Collidable objects, points, lines and animations as well.",1,0,2022,2022,1,https://github.com/lioz123/BrickBraker-Game
Observer,Carcassonne-Game-Software,"Design and Implemented the Core and GUI of the Carcassonne Game with 5500 lines of Java Code individually. Realized and Demonstrated the Design by UML diagrams including Domain Model, Interactive Diagrams, System Sequence Diagrams and Object Model. Applied OOD design pattern including Strategy Pattern, and Observer Pattern. Fully test the Core part by JUnit test. Utilized Git, Gradle, and TravisCI to manage the project.",1,0,2020,2023,1,https://github.com/chenxi1103/Carcassonne-Game-Software
Observer,OOP-Design-Principles-For-Programmers,"The Object-Oriented Design Principles are the core of OOP programming, but I have seen most of the Java programmers chasing design patterns like Singleton pattern, Decorator pattern, or Observer pattern, and not putting enough attention on learning Object-oriented analysis and design.  It’s important to learn the basics of Object-oriented programming like Abstraction, Encapsulation, Polymorphism, and Inheritance. But, at the same time, it’s equally important to know object-oriented design principles.",1,0,2021,2022,1,https://github.com/lanaflonform/OOP-Design-Principles-For-Programmers
Observer,OOSW-Project2-,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",1,0,2021,2023,1,https://github.com/classicvalues/OOSW-Project2-
Observer,Framework--Apex,"Welcome to the home of the Apex framework. Apex is a tiny PHP MVC framework, that has production-grade caching mechanisms, advanced ORM as well as some other advanced abilities. Among the available features:  *  Easy to learn, the whole framework follows a few basic conventions *  Whole page cache with expiration time *  Page fragment cache with expiration time or expiration logic *  Caching of database-queries with expiration time or expiration logic *  Easy to understand templating, fully seperated from logic *  Automatic loading of resources such as js and css files * support for LESS CSS *  Semi-Automatic CRUD interface generation, including permissions and validation *  Automatic database management - using redbean, the database manages itself *  Automatic REST API generation from data models *  Event driven - libraries follow the observer design pattern and may respond to arbitrary events *  Modular, with fully portable modules *  Tiny ( 143Kb zipped ) *  Little-to-no configuraion - The framework relies mostly on convention",1,0,2016,2020,1,https://github.com/viniciusmelocodes/Framework--Apex
Observer,concentrationApp,"•  An iOS and iPad application designed in seven stages following the CS193p course offered by Paul Hegarty on iTunes.  • Utilized Object Oriented and MVC design pattern.   • Built using Xcode 9 IDE , frameworks like Foundation & UIKit, Swift 4 language, etc. • Tested using iPhone and iPad Simulators, original iPhone 6s and iPad 9.7 for both landscape and portrait modes.   • Demonstrated working of special View Controllers like Navigation Controller, Split View Controller & Tab Bar Controller.  • Demonstrated and utilized the working of View Controller life cycle methods.   • Demonstrated use of Auto layout and NSLayoutConstraints for making the app work on different sized iPhones and iPad in both landscape and portrait modes.   • Utilized Swift-4 Arrays, Optionals,class, struct, Property Observer, Computed Properties, creation of own data Structures, Static Methods and Properties, Dictionary, UIStackView, lazy variables, extensions, trait collections, segues, mutating functions, initializers, type conversion, Countable Range, Tuples, Access Control, Assertions, enum, protocols, Delegation, String, NSAttributedString, Closures, Hashable, Equitable, etc.  • Game Description: This app allows its user to select one of the three provided themes for playing and upon selection displays the game set up with 20 cards and a flip count label. The goal of this game is to flip two cards with same faces randomly at a time for a match using as less number of flips as possible till all cards get matched up which requires the concentration of player. The cards can be flipped by touching the card and upon match the two matched cards will get removed from the game setup. For each flip, the flip count label gets updated. While playing the game, a player can switch to different themes without losing the progress of the game. The game can be played in both landscape and portrait mode and on both iPhones and iPad. It is a game for testing the concentration of an individual playing it.",1,0,2018,2018,1,https://github.com/sonali-developer/concentrationApp
Observer,Observer,this repo contains Observer design pattern implementation using C#,0,46,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/Observer
Observer,10c_DesignPatterns_Observer_interface_II,,0,7,2022,2022,1,https://github.com/archive-FUEM-I-22-10/10c_DesignPatterns_Observer_interface_II
Observer,DesignPatterns-PhonePushNotification,Fake command line Phone push notification (Mostly to practice observer/factory/proxy design patterns),0,2,2015,2015,1,https://github.com/mkohlmann-he/DesignPatterns-PhonePushNotification
Observer,python-design-patterns,"A project built in Python and some patterns like Adapter, Factory and Observer",0,2,2020,2020,1,https://github.com/guilhermegarcia86/python-design-patterns
Observer,android-and-observer-pattern,An example of how to keep the UI updated when the bussiness rules changes using the Observer Design Pattern,0,2,2016,2016,1,https://github.com/Lab2Coders/android-and-observer-pattern
Observer,Electric-Power-System,"C#, UML, CIM, WPF / Used design patterns: Observer, Prototype, Singleton, Command and MVC. More details in ""Project.docx"" and ""Documentation.odt""",0,3,2018,2019,1,https://github.com/Milica94/Electric-Power-System
Observer,observer,Design Patterns,0,0,2024,2024,0,https://github.com/MoniqueSukerman/observer
Observer,ObServer,Design Pattern,0,0,2023,2024,1,https://github.com/burakkertn/ObServer
Observer,Observer,Design pattern,0,0,2019,2019,1,https://github.com/Majk1989PL/Observer
Observer,Observer,design pattern,0,0,2019,2019,1,https://github.com/pororodl/Observer
Observer,Observer,Behavioral Design Pattern in C# | Observer Design Pattern,0,0,2023,2023,1,https://github.com/WunnaThaw/Observer
Observer,observerDP,design pattern,0,0,2020,2020,1,https://github.com/kanishka993/observerDP
Observer,DP_observer1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_observer1
Observer,DP_observer3,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_observer3
Observer,DP_observer2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_observer2
Observer,Observer,"Observer design pattern with ""Head First: Design Patterns"" book",0,0,2016,2016,1,https://github.com/wojtasfi/Observer
Observer,Observer,Observer Design Pattern,0,0,2015,2015,1,https://github.com/DigitalNewt/Observer
Observer,observer,Design Pattern Observer,0,0,2020,2020,1,https://github.com/mydesignpatters/observer
Observer,observer,Observer design pattern,0,0,2024,2024,1,https://github.com/Amir-Sadati/observer
Observer,Observer,Behavioral Design Pattern,0,0,2020,2020,1,https://github.com/rjiosum/Observer
Observer,Observer,Observer design pattern,0,0,2018,2018,1,https://github.com/vterceros/Observer
Observer,Observer,Observer Design Pattern,0,0,2024,2024,1,https://github.com/KausHimanshu/Observer
Observer,Observer,Design Patterns - Observer,0,0,2020,2020,1,https://github.com/euygor/Observer
Observer,Observer,Observer Design Pattern,0,0,2022,2023,1,https://github.com/yusufCanAkier/Observer
Observer,Observer,Design Pattern Observer,0,0,2022,2022,1,https://github.com/aliounemane2/Observer
Observer,observer,Observer design pattern,0,0,2019,2019,1,https://github.com/ramsysproject/observer
Observer,ObserverPattern,Java Design Patterns,0,0,2018,2018,1,https://github.com/balamanova/ObserverPattern
Observer,ObserverPattern,A design pattern,0,0,2013,2014,1,https://github.com/apitest000/ObserverPattern
Observer,ObserverPatterns,Design Patterns Exercises,0,0,2021,2021,1,https://github.com/mitkeys/ObserverPatterns
Observer,ObserverPattern,Applying Design Patterns ,0,0,2019,2019,1,https://github.com/icembakir/ObserverPattern
Observer,ObserverPattern,Observer Design Pattern,0,0,2019,2020,1,https://github.com/KostiaLeo/ObserverPattern
Observer,ObserverPattern,Observer Design Pattern,0,0,2023,2023,1,https://github.com/Dshad-Anon/ObserverPattern
Observer,ObserverPattern,Observer design pattern,0,0,2012,2014,1,https://github.com/WhoIsYourBaby/ObserverPattern
Observer,ObserverPatterns,Observer Design Pattern,0,0,2024,2024,1,https://github.com/ahmetbostanciklioglu/ObserverPatterns
Observer,observerProj,design pattern course,0,0,2017,2017,1,https://github.com/shakedd15/observerProj
Observer,ObserverDesignPattern,Observer Design Pattern,0,0,2024,2024,1,https://github.com/ChandimalPriyamantha/ObserverDesignPattern
Observer,ObserverPattern-Java,Design Patterns Java,0,0,2020,2020,1,https://github.com/danHayworth/ObserverPattern-Java
Observer,ObserverDesignPattern,Observer Design Pattern,0,0,2024,2024,1,https://github.com/ArunAmballa/ObserverDesignPattern
Observer,CPP_Observer,Design Pattern,0,0,2024,2024,1,https://github.com/Levoluti0n/CPP_Observer
Observer,Pattern-Observer,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/Pattern-Observer
Observer,Observer-Pattern,Observer design pattern,0,0,2018,2019,0,https://github.com/h09shais/Observer-Pattern
Observer,paoo-ex2-observer,Design Patterns Observer,0,0,2020,2021,1,https://github.com/JnsFerreira/paoo-ex2-observer
Observer,Codigo-043---Novo-Metereologia,Design Pattern Observer,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-043---Novo-Metereologia
Observer,Observer_Design_Pattern,Observer_Design_Pattern,0,0,2024,2024,1,https://github.com/AprajitaChhawi/Observer_Design_Pattern
Observer,ObserverDesignPatternInJava,Observer Design Pattern,0,0,2012,2013,0,https://github.com/Molter/ObserverDesignPatternInJava
Observer,DP_OBSERVER,OBSERVER design pattern,0,0,2017,2017,0,https://github.com/bsadiki/DP_OBSERVER
Observer,Airport_Observer_Pattern,Observer Design Pattern,0,0,2016,2016,1,https://github.com/romanlukichev/Airport_Observer_Pattern
Observer,observer-pattern,Design patterns -  Observer.,0,0,2022,2022,1,https://github.com/m4t3u2/observer-pattern
Observer,design-patterns,Observer Design Pattern ,0,0,2021,2021,1,https://github.com/badaramoni/design-patterns
Observer,Observer_Design_Pattern,Observer_Design_Pattern,0,0,2023,2023,1,https://github.com/eenesozcan/Observer_Design_Pattern
Observer,design-pattern-observer,Observer design pattern.,0,0,2025,2025,1,https://github.com/mikedr/design-pattern-observer
Observer,Observer_design_pattern,Observer design pattern,0,0,2021,2021,1,https://github.com/indreshchander/Observer_design_pattern
Observer,9-14-23JS-exercise1,observer design pattern,0,0,2023,2023,1,https://github.com/Deborah-McVey/9-14-23JS-exercise1
Observer,OOP-Assignment-4,Observer design pattern,0,0,2024,2024,0,https://github.com/IbroGym/OOP-Assignment-4
Observer,Observer-Pattern,Design Patterns,0,0,2017,2017,1,https://github.com/sbhargava-ashish/Observer-Pattern
Observer,Design-Pattern---Observer,Design Pattern - Observer,0,0,2021,2021,0,https://github.com/michaelangelo2288/Design-Pattern---Observer
Observer,Design_Pattern_Observer,Design_Pattern_Observer,0,0,2022,2022,1,https://github.com/abdel230702/Design_Pattern_Observer
Observer,yazilim-mimarisi-ve-tasarimi,Observer Design Pattern,0,0,2019,2024,1,https://github.com/RukiyeSahin/yazilim-mimarisi-ve-tasarimi
Observer,WeatherStation,Observer Design Pattern,0,0,2018,2018,1,https://github.com/darrellv/WeatherStation
Observer,Observer-Design-Pattern,Observer Design Pattern,0,0,2020,2021,1,https://github.com/priyankasvns/Observer-Design-Pattern
Observer,training-task11,design patterns  | observer,0,0,2021,2021,1,https://github.com/maiqamaj/training-task11
Observer,LLD,Observer_Design_Pattern,0,0,2024,2024,1,https://github.com/Ankul234/LLD
Observer,design-patterns-observer,Design Patterns - Observer,0,0,2019,2019,1,https://github.com/robertosrjr/design-patterns-observer
Observer,dp-observer,Design Pattern Observer,0,0,2019,2019,1,https://github.com/alokkusingh/dp-observer
Observer,observer,Observer Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/observer
Observer,observer-pattern,Design pattern,0,0,2022,2022,1,https://github.com/kumarij701/observer-pattern
Observer,modifiedObserverpattern,Design pattern,0,0,2022,2022,1,https://github.com/kumarij701/modifiedObserverpattern
Observer,Observer,Observer Design Pattern Example,0,0,2016,2016,1,https://github.com/VishalRocks/Observer
Observer,observer-design-pattern,observer-design-pattern ,0,0,2021,2021,1,https://github.com/moniir/observer-design-pattern
Observer,observer-pattern,Observer Design Pattern,0,0,2022,2022,0,https://github.com/red1delta137/observer-pattern
Observer,Casgem_Observer,Observer design pattern ,0,0,2023,2023,1,https://github.com/GokayAcikgoz/Casgem_Observer
Observer,Observer,Custom observer design pattern,0,0,2020,2020,2,https://github.com/mohamadbdeir/Observer
Observer,QuestionObserver,Design Pattern - Observer,0,0,2018,2018,0,https://github.com/kuangderwu/QuestionObserver
Observer,BankObservable,Observer Design Pattern ,0,0,2019,2019,2,https://github.com/Alvenague/BankObservable
Observer,DesignPatternObserver,Design Pattern Observer,0,0,2019,2019,1,https://github.com/jobihormyroniuk/DesignPatternObserver
Observer,observerdesignpattern,Observer Design Pattern,0,0,2019,2019,2,https://github.com/pagliagen/observerdesignpattern
Observer,observer-pattern,Design Pattern - Observer,0,0,2020,2020,0,https://github.com/paulohbraga/observer-pattern
Observer,Observer_Pattern,Observer Design Pattern,0,0,2023,2023,0,https://github.com/lazith17/Observer_Pattern
Observer,FootballScore,Observer Design  Patterns,0,0,2023,2023,1,https://github.com/devSira/FootballScore
Observer,X,observer design pattern,0,0,2024,2024,1,https://github.com/9twy/X
Observer,DesignPatternMediator,Design Pattern Observer,0,0,2019,2019,1,https://github.com/jobihormyroniuk/DesignPatternMediator
Observer,football-display,Design Pattern Observer,0,0,2020,2020,2,https://github.com/kelgwiin/football-display
Observer,Codigo-044---Metereologia-GUI,Design Pattern Observer,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-044---Metereologia-GUI
Observer,DP_Observer,Observer Design Pattern,0,0,2016,2016,1,https://github.com/anupvit/DP_Observer
Observer,designPatterns,Observer Design pattern,0,0,2014,2014,1,https://github.com/swollenBrains/designPatterns
Observer,Observer-design-pattern,Observer design pattern,0,0,2020,2020,0,https://github.com/YuliaAvakyan/Observer-design-pattern
Observer,Codigo-042---Metereologia,Design Pattern Observer,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-042---Metereologia
Observer,dp-assignment-observer-pattern,Design Pattern Class Work: Observer Design Pattern,0,0,2015,2015,0,https://github.com/saif0524/dp-assignment-observer-pattern
Observer,design-pattern_Observer,Design pattern,0,0,2016,2016,1,https://github.com/wuryan/design-pattern_Observer
Observer,ObserverPattern,Java Design Patterns - Observer,0,0,2022,2022,1,https://github.com/healym3/ObserverPattern
Observer,SampleObserverPattern,Design Pattern,0,0,2017,2017,1,https://github.com/JamilehBahri/SampleObserverPattern
Observer,ObserverPattern,Observer design pattern overview,0,0,2019,2019,1,https://github.com/5pence/ObserverPattern
Observer,ObserverPattern,Game Design Pattern Series,0,0,2024,2024,1,https://github.com/emregurkn/ObserverPattern
Observer,ObserverPattern,Observer Software Design Pattern,0,0,2013,2014,1,https://github.com/leroyvaughan/ObserverPattern
Observer,ObserverDP,Observer Design Pattern Example,0,0,2023,2023,1,https://github.com/themervez/ObserverDP
Observer,Observer-Design-Pattern,Design Patterns,0,0,2020,2020,1,https://github.com/AshenSenevirathne/Observer-Design-Pattern
Observer,ObserverPattern,Java Observer Design Pattern,0,0,2019,2019,1,https://github.com/juanchogarcia1234/ObserverPattern
Observer,Design_pattern-OBSERVER,Design Pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-OBSERVER
Observer,Design-Pattern-Observer,Design Pattern,0,0,2016,2016,1,https://github.com/aakash140/Design-Pattern-Observer
Observer,ObserverPattern,design pattern 練習,0,0,2020,2020,1,https://github.com/h86656519/ObserverPattern
Observer,Observer-Singleton-DP,Improvement Observer Design Pattern adding Singleton Design Pattern,0,0,2025,2025,1,https://github.com/devjldp/Observer-Singleton-DP
Observer,ObserverDesignPattern,Obser Design Pattern Example,0,0,2020,2020,1,https://github.com/aasmc/ObserverDesignPattern
Observer,ObserverDesignPattern,Observer design pattern demo,0,0,2021,2021,1,https://github.com/rajan4study/ObserverDesignPattern
Observer,ObserverDesignPattern,Working with design patterns ,0,0,2019,2019,1,https://github.com/Dorlan25/ObserverDesignPattern
Observer,ObserverPatternImplement1,Implementation Observer design pattern.,0,0,2018,2018,1,https://github.com/luksen1991/ObserverPatternImplement1
Observer,Observer,Observer Design Pattern - Behavioral Pattern,0,0,2025,2025,1,https://github.com/kashiiitech/Observer
Observer,observer,Simple Observer design pattern exercise,0,0,2017,2017,0,https://github.com/romacas01/observer
Observer,Observer,Observer Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Observer
Observer,observer,Design Patterns - Observer with PropertyChangeListener,0,0,2021,2021,1,https://github.com/tuliofergulha/observer
Observer,Observer,Aplicando o design pattern - Observer,0,0,2023,2023,1,https://github.com/diegomaustem/Observer
Observer,Observer,Part 4 Behavioral Design Pattern,0,0,2019,2019,1,https://github.com/AvinashKarada/Observer
Observer,observer,Python Implementation: Observer Design Pattern,0,0,2014,2014,1,https://github.com/lorie-castillano/observer
Observer,pattern-Observer,Design Pattern Observable,0,0,2022,2022,1,https://github.com/Java-Design-Pattern/pattern-Observer
Observer,ObserverDesignPatternExample2,Observer Design Pattern 2,0,0,2024,2024,1,https://github.com/olcernaim/ObserverDesignPatternExample2
Observer,Observer_Pattern,Java Design Pattern,0,0,2021,2021,1,https://github.com/sabi-shamshidin/Observer_Pattern
Observer,ObserverDesignPatternExample1,Observer Design Pattern 1,0,0,2024,2024,1,https://github.com/olcernaim/ObserverDesignPatternExample1
Observer,Project-of-Design-Pattern,"Uses Template ,Singelton Design pattern ,factory Design pattern ,observer Design Pattern",0,0,2021,2021,1,https://github.com/jainaagam96/Project-of-Design-Pattern
Observer,ObserverDemo,Implement the observer design pattern,0,0,2017,2017,1,https://github.com/songyuanyoung/ObserverDemo
Observer,ObserverPattern,Study for Java design pattern,0,0,2022,2022,1,https://github.com/malcano/ObserverPattern
Observer,ObserverDemo,Demo of Observer Design Pattern,0,0,2018,2018,2,https://github.com/aimenux/ObserverDemo
Observer,ObserverWeather,"Observer Design pattern, weather example.",0,0,2017,2024,0,https://github.com/c0desBym3ta/ObserverWeather
Observer,tic-tac-toe,Using Observer design pattern and Strategy design pattern,0,0,2020,2020,1,https://github.com/girmam/tic-tac-toe
Observer,C-Users-KGrabowski-Workspace-005-Observer,Design Pattern,0,0,2017,2017,0,https://github.com/kpgrabowski/C-Users-KGrabowski-Workspace-005-Observer
Observer,Observer-Design-Pattern-Example---With-Singleton,Observer Design Pattern Example with Singleton design pattern.,0,0,2017,2018,1,https://github.com/AhmedEltorky/Observer-Design-Pattern-Example---With-Singleton
Observer,ObserverPattern,Implementing observer pattern design pattern,0,0,2023,2023,1,https://github.com/ashraybharambe/ObserverPattern
Observer,ObserverTest,descript java observer design pattern,0,0,2018,2018,1,https://github.com/yikeshu7351/ObserverTest
Observer,ObserverDP,Observer Design Pattern from https://www.newthinktank.com/2012/08/observer-design-pattern-tutorial/,0,0,2024,2024,1,https://github.com/pattyl11/ObserverDP
Observer,observer_pattern_practice,design pattern study,0,0,2019,2019,1,https://github.com/Helloezzi/observer_pattern_practice
Observer,Java-Observer-Pattern,“Observer” design pattern demo.,0,0,2021,2022,1,https://github.com/Marko19907/Java-Observer-Pattern
Observer,Design_patterns_observer,Observer Design Pattern Implementation,0,0,2022,2022,1,https://github.com/AnnaGawrysiak/Design_patterns_observer
Observer,Sensor-Monitoring,Observer Design Pattern Training,0,0,2024,2024,1,https://github.com/Rhogger/Sensor-Monitoring
Observer,Observer-Design-Pattern,Observer Design Pattern tasarladım,0,0,2024,2024,1,https://github.com/yusufortacdeveloper/Observer-Design-Pattern
Observer,ObserverDesignPattern,LLD for Observer Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/ObserverDesignPattern
Observer,ObserverPatternJava,Observer Design Pattern example codes.,0,0,2021,2021,1,https://github.com/BerkayYazici0/ObserverPatternJava
Observer,Observer.Pattern,Example observer design pattern,0,0,2020,2020,1,https://github.com/js118578/Observer.Pattern
Observer,ObserverPatternPHP,Observer Design Pattern in PHP,0,0,2020,2020,1,https://github.com/bariscimen/ObserverPatternPHP
Observer,Observer-pull,Design Pattern Observer-pull,0,0,2022,2022,1,https://github.com/fagenius/Observer-pull
Observer,Observer-Pattern,Observer design pattern example,0,0,2013,2013,1,https://github.com/objectDisorientedProgrammer/Observer-Pattern
Observer,Unity-Observer-Design-Pattern,Unity Observer Design Pattern,0,0,2024,2024,1,https://github.com/adag21044/Unity-Observer-Design-Pattern
Observer,Observer-Desing-Pattern,Observer Design Pattern example,0,0,2021,2025,1,https://github.com/gurcangul/Observer-Desing-Pattern
Observer,PatternModelisation,Design Pattern Observable / Observer,0,0,2018,2018,1,https://github.com/dononcharles/PatternModelisation
Observer,simon-game,Observer Design Pattern Implementation,0,0,2012,2014,1,https://github.com/kunalbalani/simon-game
Observer,JS-Observer,JavaScript Observer Design Pattern,0,0,2019,2019,1,https://github.com/diogobessa/JS-Observer
Observer,observer-pattern,Design pattern: Observer pattern,0,0,2021,2021,1,https://github.com/TomSawyer404/observer-pattern
Observer,patterns-observer,Observer Design pattern example,0,0,2022,2022,1,https://github.com/maksymyavorovych/patterns-observer
Observer,SPT_BasicFrame,Observer Design Pattern Base,0,0,2024,2024,1,https://github.com/Chitnaymin/SPT_BasicFrame
Observer,CSharp_Behavioral_Observer,Behavioral Observer Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_Observer
Observer,ObserverDesignPattern,Observer Design Pattern Sample Project,0,0,2021,2021,0,https://github.com/ManeiR/ObserverDesignPattern
Observer,ObserverDesignPattern,Observer Design Pattern örneği yapılmıştır,0,0,2024,2024,1,https://github.com/tugbaozmen/ObserverDesignPattern
Observer,Plane_ticket_reservation,Observer design pattern example,0,0,2022,2022,1,https://github.com/suzanastojkovic88/Plane_ticket_reservation
Observer,Unscramble,"viewmodel, observer design pattern",0,0,2023,2023,1,https://github.com/abdultanveer/Unscramble
Observer,DesignPatterns-Observer,Java - Design patterns - Observer,0,0,2016,2016,1,https://github.com/djnx80/DesignPatterns-Observer
Observer,comp373_Observer,Observer Design Pattern Implementation,0,0,2016,2016,1,https://github.com/ConnorMacDonell/comp373_Observer
Observer,JAVA--Pile,"Design Pattern : Observer, Strategy.",0,0,2020,2020,1,https://github.com/HanluHU/JAVA--Pile
Observer,ObserverDesignPattern,Study on observer design pattern.,0,0,2019,2019,1,https://github.com/ramacpr/ObserverDesignPattern
Observer,ObserverDesignPattern,Observer Design Pattern Using Java.,0,0,2023,2023,1,https://github.com/Satya190597/ObserverDesignPattern
Observer,Student-Backup-System-Observer-pattern,Observer-pattern Design Patterns,0,0,2017,2017,1,https://github.com/viraj4422/Student-Backup-System-Observer-pattern
Observer,marjane-Observer,add design pattern Observer,0,0,2023,2023,1,https://github.com/AbdelillahElasri1/marjane-Observer
Observer,observer-design,Observer design pattern demo  ,0,0,2024,2024,1,https://github.com/parijatmitra/observer-design
Observer,pattern-observer,Observer design pattern implementation,0,0,2015,2015,0,https://github.com/homeski/pattern-observer
Observer,rindow-event,Observer design pattern library,0,0,2018,2020,1,https://github.com/rindow/rindow-event
Observer,Pogoda,Design patterns exercise - observer,0,0,2019,2019,1,https://github.com/Torath/Pogoda
Observer,STRUCTURAL-DESIGN-PATTERN-Observer-,STRUCTURAL DESIGN PATTERN (Observer),0,0,2022,2022,1,https://github.com/YamiUtsukushi/STRUCTURAL-DESIGN-PATTERN-Observer-
Observer,go-observing,Observer software design pattern,0,0,2023,2025,3,https://github.com/senzing-garage/go-observing
Observer,ObserverDesignPattern,Observer Design Pattern Java Example ,0,0,2018,2018,1,https://github.com/sarwarsm/ObserverDesignPattern
Observer,observer_design_pattern,C++ observer design pattern,0,0,2016,2016,0,https://github.com/tyler3344/observer_design_pattern
Observer,OrleansObserver,Orleans Observer Design Pattern ,0,0,2016,2016,1,https://github.com/borgrodrick/OrleansObserver
Observer,ts_observer,Observer | Design Pattern | TypeScript,0,0,2018,2018,1,https://github.com/jalbertocoder/ts_observer
Observer,observer-design-pattern,C# - Observer design pattern,0,0,2023,2023,1,https://github.com/flcristian/observer-design-pattern
Observer,dp-observer-blogAlarm,design pattern - observer pattern,0,0,2017,2018,1,https://github.com/voyagerwoo/dp-observer-blogAlarm
Observer,observer-pattern,Observer Design Pattern implementation ,0,0,2020,2020,2,https://github.com/luafalcaocode/observer-pattern
Observer,MVC_Observer,Java project - MVC arhitectural design pattern with behavioral design pattern Observer.,0,0,2021,2021,1,https://github.com/Diiiana/MVC_Observer
Observer,observer,Demo of the Observer Design Pattern,0,0,2019,2019,1,https://github.com/mpredli01/observer
Observer,Observer,Observer design pattern example in java,0,0,2019,2019,1,https://github.com/bonggalshn/Observer
Observer,ObserverDesignPatternExample,Example for Observer Design Pattern,0,0,2023,2023,1,https://github.com/guluzadamushvig/ObserverDesignPatternExample
Observer,Observer,Create example for observer design pattern,0,0,2017,2017,0,https://github.com/koko2099/Observer
Observer,observer,Template application using Observer design pattern,0,0,2023,2023,1,https://github.com/machadothi/observer
Observer,observer,Observer design pattern implementation in C++,0,0,2013,2014,1,https://github.com/divyangjp/observer
Observer,observer,Simple demo for observer design patterns.,0,0,2017,2017,0,https://github.com/Jim2013/observer
Observer,ObserverDesPatPOC,Observer Design Pattern Android Example,0,0,2017,2017,1,https://github.com/VadherKhushal/ObserverDesPatPOC
Observer,Observer,Testing out the observer design pattern.,0,0,2015,2015,1,https://github.com/ewu-herrint/Observer
Observer,Observer,Rewrite Observer Design Pattern in C++,0,0,2016,2016,1,https://github.com/ivy-yue/Observer
Observer,Mediator-Observer-Roi-Zamir,Design Patterns demo.,0,0,2020,2020,1,https://github.com/Roza13-bit/Mediator-Observer-Roi-Zamir
Observer,ObserverPattern,Observer from Head Frist Design Patterns,0,0,2020,2020,1,https://github.com/vanDeventer/ObserverPattern
Observer,ObserverJS,Observer behavioral design pattern with typescript,0,0,2023,2023,1,https://github.com/fermendivilt/ObserverJS
Observer,ObserverPattern,Sample project in observer design pattern,0,0,2018,2018,0,https://github.com/sadikuls/ObserverPattern
Observer,Observer_demo,Some design pattern demo,0,0,2015,2015,1,https://github.com/Legio-Augusta/Observer_demo
Observer,ObserverPattern,Temperature Pattern following Observer design pattern,0,0,2015,2015,2,https://github.com/rjalfa/ObserverPattern
Observer,ObserverPattern,Design pattern of the Observer Pattern,0,0,2016,2016,1,https://github.com/Y2zz/ObserverPattern
Observer,ObserverDP,An example of observer design pattern,0,0,2023,2023,1,https://github.com/Jakob-T/ObserverDP
Observer,ObserverPattern,"Observer Pattern, Head First Design Pattern",0,0,2020,2020,1,https://github.com/khabib97/ObserverPattern
Observer,ObserverPattern,Observer design pattern example in c++,0,0,2021,2021,1,https://github.com/SC-One/ObserverPattern
Observer,ObserverPattern,Sample implementation for Observer Design Pattern,0,0,2023,2023,1,https://github.com/ShehabSalah/ObserverPattern
Observer,ObserverPattern,Implementation of observer design pattern example ,0,0,2019,2019,1,https://github.com/TheShip1948/ObserverPattern
Observer,ObserverExample,Simple example of observer design pattern.,0,0,2019,2019,1,https://github.com/vaske05/ObserverExample
Observer,ObserverPattern,Observer Design Pattern Demo in C++,0,0,2020,2022,1,https://github.com/KeyC0de/ObserverPattern
Observer,observer-pattern,C++ implementation of Observer design pattern example from Head First Design Patterns,0,0,2013,2014,1,https://github.com/salgotrav/observer-pattern
Observer,java_ObserverDesgin,java observer design patterns demo project,0,0,2013,2014,0,https://github.com/xalexchen/java_ObserverDesgin
Observer,ObserverDesignPattern,Simple example of observer design pattern. ,0,0,2017,2017,1,https://github.com/krawat10/ObserverDesignPattern
Observer,DP_ObserverPattern,Small Project using Observer Design Pattern.,0,0,2024,2024,1,https://github.com/iAmSidh108/DP_ObserverPattern
Observer,ObserverDemoCode,Code tbv lesdemo Observer Design Pattern,0,0,2020,2020,1,https://github.com/ronaldKamphuis/ObserverDemoCode
Observer,ObserverDesignPattern,color selector using observer design pattern,0,0,2017,2017,1,https://github.com/dykim96/ObserverDesignPattern
Observer,ObserverDesignPattern,Practice implementing the observer design pattern,0,0,2022,2022,1,https://github.com/BackToTech-Study/ObserverDesignPattern
Observer,Atividade-Java-Observer,Exercício de design patterns ,0,0,2022,2022,1,https://github.com/ViniciosLemos/Atividade-Java-Observer
Observer,ObserverPatternDemo,Demo of design pattern of Observer,0,0,2020,2020,1,https://github.com/TobyXYan/ObserverPatternDemo
Observer,Observer,My take on the Design pattern : Observer,0,0,2015,2015,1,https://github.com/JGLaferte/Observer
Observer,Observer,A design pattern Observer in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Observer
Observer,observer,To learn Observer Design Pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/observer
Observer,observer,Simple project demonstrating the observer design pattern,0,0,2022,2022,1,https://github.com/Piazzi/observer
Observer,Observer,observer design pattern implemented with undoAbleString class,0,0,2022,2023,1,https://github.com/sagir567/Observer
Observer,Observer,Orders and Notifications (practicing Observer Designed Pattern),0,0,2020,2020,1,https://github.com/KorneliaJagodzinska/Observer
Observer,Observer,Observer design pattern ready for Javadoc generation.,0,0,2018,2018,0,https://github.com/scyzeq/Observer
Observer,observer-pattern-lt-v0.0.1,Software Design pattern,0,0,2022,2022,1,https://github.com/namkatcedrickjumtock/observer-pattern-lt-v0.0.1
Observer,3-2-DesignPatterns-Observer,"Design Patterns in Object-Oriented Programming Eighth Tasks ""Observer Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Observer
Observer,ObserverPattern,An example implementation of observer design pattern ,0,0,2022,2022,1,https://github.com/FaezehNozari/ObserverPattern
Observer,ObserverTraining,Trying to use the observer design pattern,0,0,2020,2020,1,https://github.com/mrlagowsky/ObserverTraining
Observer,ObserverPattern,Java implementation of the Observer Design Pattern,0,0,2019,2019,1,https://github.com/dvcodetraining/ObserverPattern
Observer,ObserverPattern,Second Concept from Head First Design Patterns,0,0,2017,2017,1,https://github.com/rajajawahar/ObserverPattern
Observer,ObserverDP,Simple project that implements observer design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/ObserverDP
Observer,ObserverPatter,Observer patter challenge from design patterns courses,0,0,2022,2022,1,https://github.com/MRoschin1999/ObserverPatter
Observer,Student-Courses-Backup,Observer Design Pattern using BST,0,0,2019,2019,1,https://github.com/KunalKulkarni/Student-Courses-Backup
Observer,Observer-Pattern-Typescript,Observer design pattern in Typescript,0,0,2021,2021,1,https://github.com/NullTrisp/Observer-Pattern-Typescript
Observer,Dp_observer,implementation du design pattern observer,0,0,2022,2022,1,https://github.com/Nzonbi/Dp_observer
Observer,go-observer-pattern,Observer design pattern in golang,0,0,2023,2023,1,https://github.com/AntonFridlund/go-observer-pattern
Observer,ObserverDesign,Dhruv Pai CS247 Observer Design Pattern Assignment,0,0,2019,2019,1,https://github.com/thatpaiguy/ObserverDesign
Observer,edp-observer,Example of design patterns Observer,0,0,2019,2019,1,https://github.com/RafaelAlmeidaDaSilva/edp-observer
Observer,Temperature-Sensor,Observer Design Pattern(Event Handler),0,0,2024,2024,1,https://github.com/AhmedOmarDarwish/Temperature-Sensor
Observer,DesignPattern_Observer,Observer design pattern in c#,0,0,2017,2018,1,https://github.com/PlumpMath/DesignPattern_Observer
Observer,UG-market-python,"Design Patterns homework: Observer, Visitor",0,0,2021,2021,1,https://github.com/mrybarczyk/UG-market-python
Observer,observer_pattern,[ Observer Pattern ] Design Pattern Demo,0,0,2021,2021,1,https://github.com/zero0rder/observer_pattern
Observer,training-task12,Observer Design Pattern handling Multithreading,0,0,2021,2021,1,https://github.com/maiqamaj/training-task12
Observer,observer-DP,Example of observer design pattern,0,0,2025,2025,1,https://github.com/devjldp/observer-DP
Observer,design-patterns-observer,Review on Observer Design Pattern,0,0,2021,2021,1,https://github.com/marciodegan/design-patterns-observer
Observer,observer-design-pattern,Typescript observer design pattern - OOP,0,0,2023,2023,1,https://github.com/gabrielmedeirossouza/observer-design-pattern
Observer,JavaDesignPatterns-Observer,Observer Design Pattern in Java,0,0,2016,2016,1,https://github.com/shailendra-singh-dev/JavaDesignPatterns-Observer
Observer,listen-event, a design pattern observer (listener),0,0,2016,2016,1,https://github.com/hoanganh25991/listen-event
Observer,Observer-01,"Design Pattern, Observer, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/Observer-01
Observer,DesignPattern-Observer,Test of Observer Design Pattern,0,0,2020,2020,1,https://github.com/FerrazFerrara/DesignPattern-Observer
Observer,Observer-Design-Pattern,Implementation of Observer Design Pattern,0,0,2023,2023,2,https://github.com/SmritiSharmaBG/Observer-Design-Pattern
Observer,Observer-Pattern,Behavioral Design Patterns: Observer Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Observer-Pattern
Observer,ObserverPattern,This is an example of design pattern,0,0,2017,2017,1,https://github.com/nahidhasan-kakon/ObserverPattern
Observer,Weather-Station,"Weather Stations, Observer Design Pattern",0,1,2012,2023,1,https://github.com/adagio/Weather-Station
Observer,Parking,Observer and Strategy design patterns,0,0,2017,2017,1,https://github.com/gonzalezrodero/Parking
Observer,Crypto-Observer-Design-Pattern,Observer design pattern using Java,0,0,2023,2023,1,https://github.com/dominikgubo/Crypto-Observer-Design-Pattern
Observer,java_gof_observer,"design pattern ""observer"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_observer
Observer,Observer-Singleton,First Use of Design Patterns,0,0,2024,2024,1,https://github.com/Claudel-D-Roy/Observer-Singleton
Observer,KattenObserver,Design patterns observer pattern kattenvariant,0,0,2022,2022,1,https://github.com/Taapke/KattenObserver
Observer,observer_design_pattern,Learning about design pattern OBSERVER,0,0,2022,2022,2,https://github.com/eduardophilip/observer_design_pattern
Observer,BuildingSurveillanceSystemApplication,Learning The Observer Design Pattern,0,0,2023,2023,1,https://github.com/CamrynBowWow/BuildingSurveillanceSystemApplication
Observer,observer-pattern,Implementation of  observer design pattern,0,0,2019,2019,1,https://github.com/shubh007/observer-pattern
Observer,observer-pattern,demo of observer design pattern,0,0,2021,2021,1,https://github.com/NikhilBamania/observer-pattern
Observer,Observer-Pattern-,Observer Design Pattern in Unity,0,0,2024,2024,1,https://github.com/zaidi-cj/Observer-Pattern-
Observer,EventListener,Design Pattern Observer with Events,0,0,2020,2020,1,https://github.com/quentinrinaldi/EventListener
Observer,Observer-Pattern-JavaScript,Observer design pattern in JavaScript,0,0,2022,2022,0,https://github.com/Coding4life92/Observer-Pattern-JavaScript
Observer,APP-Assignment-3,Observer design pattern with AspectJ,0,0,2022,2022,2,https://github.com/mikasa511/APP-Assignment-3
Observer,DesignPatternObserverOnDotNet,Design Pattern Observer on .NET,0,0,2022,2022,1,https://github.com/juliocelon/DesignPatternObserverOnDotNet
Observer,ooans_observer_example,Example for design pattern Observer.,0,0,2019,2019,1,https://github.com/MichaelaBalazova/ooans_observer_example
Observer,hfdp-observer,Head First Design Patterns : Observer,0,0,2018,2020,1,https://github.com/fenwickjb/hfdp-observer
Observer,Observer-Design-pattern,Observer design pattern using java,0,0,2021,2021,0,https://github.com/Sandaruwan-Jayasundara/Observer-Design-pattern
Observer,MVVMLogin,MVVMLOgin and observer design pattern,0,0,2018,2018,0,https://github.com/KethuY/MVVMLogin
Observer,FolderWatcher,Using observer + factory design patterns,0,0,2018,2018,1,https://github.com/sandalu95/FolderWatcher
Observer,Java_DesignPatterns-Observe,Estudo do design pattern Observer,0,0,2021,2021,1,https://github.com/fernando-cadalso/Java_DesignPatterns-Observe
Observer,observer-dp,Observer Design Pattern on PHP,0,0,2023,2023,2,https://github.com/mtrosin/observer-dp
Observer,Estacao-Climatica-Observer,Design Patterns exercise Observer pattern,0,0,2023,2024,1,https://github.com/kevindepolli/Estacao-Climatica-Observer
Observer,Oberserver-Design-Pattern,Observer design pattern in Django.,0,0,2025,2025,1,https://github.com/OrkunAvci/Oberserver-Design-Pattern
Observer,hw1,design-pattern homework1 - observeral pattern ,0,0,2013,2014,1,https://github.com/amumcu/hw1
Observer,uneviederobot,entrainement au design pattern observer,0,0,2017,2017,1,https://github.com/CamilleBarbe/uneviederobot
Observer,ObserverDesignPattern,Example to use of Observer design pattern,0,0,2018,2018,1,https://github.com/ketanMuttha/ObserverDesignPattern
Observer,ObserverPatternExample,Implement some mechanism with Observer Design Pattern.,0,0,2023,2023,1,https://github.com/shellyHBG/ObserverPatternExample
Observer,observerPatternEvent,This is for practicing observer design pattern ,0,0,2022,2022,0,https://github.com/mayur360/observerPatternEvent
Observer,ObserverDesignPattern,Java implementation of the Observer Design Pattern.,0,0,2023,2023,1,https://github.com/Sanegv/ObserverDesignPattern
Observer,Library-Book-Logger---Observer-Design-Pattern,"a simplified version of the Observer design pattern. (C++, Observer Design Pattern, Inheritance, LinkedList)",0,0,2021,2021,1,https://github.com/winds-13/Library-Book-Logger---Observer-Design-Pattern
Observer,ObserverDesignPattern,Behavioral Observer Design Pattern Implementation in C#,0,0,2022,2022,1,https://github.com/Zaupower/ObserverDesignPattern
Observer,ObserverPatternKotlin,Example of observer design pattern in kotlin,0,0,2021,2021,1,https://github.com/davidCabrera11/ObserverPatternKotlin
Observer,observer,a TypeScript package implementing the Observer design pattern,0,0,2023,2024,2,https://github.com/taylorhmorris/observer
Observer,Observer,Exemplo de Design Pattern (Observer) implementado em Java,0,0,2018,2018,1,https://github.com/Renan4783/Observer
Observer,Observer,"Inspired by: ""Head First! Design Patterns"" Eric Freeman",0,0,2021,2021,1,https://github.com/smykal/Observer
Observer,observer,Design Patterns (project created for Java programming classes),0,0,2018,2018,1,https://github.com/Izzzu/observer
Observer,CECS-277_ObserverProject,Java project implementing the Observer design pattern.,0,0,2022,2023,1,https://github.com/sddao17/CECS-277_ObserverProject
Observer,Observer,design pattern associated with the software architecture discipline,0,0,2023,2023,1,https://github.com/alvaro-veiga/Observer
Observer,J6_ObserverPattern,An exercice around the Observer design pattern,0,0,2019,2019,1,https://github.com/aPurpleDev/J6_ObserverPattern
Observer,Observer-design-pattern-example,an Example of Publisher-Subscriber design pattern which is a Behavioral Design Pattern. ,0,0,2024,2024,1,https://github.com/ayaalshouha/Observer-design-pattern-example
Observer,ObserverTest,"Observer design pattern test. Code coverage: 80,8%",0,0,2020,2020,0,https://github.com/davidgpdeveloper/ObserverTest
Observer,ObserverTWO,Practical exercise about the Observer behavioral design pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/ObserverTWO
Observer,ObserverPattern,Observer Design Pattern Exercise Project- Using Unity 3D,0,0,2022,2022,1,https://github.com/aydemirberk/ObserverPattern
Observer,ObserverProject,Implementation of Observer Design Pattern using stock shares,0,0,2019,2019,3,https://github.com/WilliamGusmanov/ObserverProject
Observer,ObserverPattern,How to use observer design pattern in .Net,0,0,2021,2021,1,https://github.com/ssukhpinder/ObserverPattern
Observer,ObserverPattern,My representation of the GoF Observer design pattern.,0,0,2018,2018,1,https://github.com/j-runser/ObserverPattern
Observer,novi-backend-SD-BE-DP-ObserverPattern_MatchExample,"Opdracht uit het boek ""design patterns""",0,0,2022,2022,0,https://github.com/gerardheuvelman/novi-backend-SD-BE-DP-ObserverPattern_MatchExample
Observer,observer-pattern,A demo of Observer Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/observer-pattern
Observer,Patterns-Observer,POC utilizando o design pattern Observer,0,0,2020,2020,1,https://github.com/raphatorres89/Patterns-Observer
Observer,observer-dp,sample implementation of observer design pattern,0,0,2021,2021,1,https://github.com/rwedzony/observer-dp
Observer,ObserverDesignPattern,A java implementation of the observer design pattern,0,0,2021,2021,1,https://github.com/atakangah/ObserverDesignPattern
Observer,observer_pattern,TypeScript Implementation of Observer Design Pattern,0,0,2021,2021,1,https://github.com/asiancoderyoda/observer_pattern
Observer,Observer,A small demo that uses Observer JS design pattern,0,0,2017,2017,1,https://github.com/matherton/Observer
Observer,observer,Example of an implementation of the observer design pattern.,0,0,2019,2019,1,https://github.com/Giogurt/observer
Observer,Observer,Example of the observer design pattern and system architecture,0,0,2024,2024,1,https://github.com/RickardEkstedt/Observer
Observer,observer-example,An implementation of 'Observer' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/observer-example
Observer,Observer,Observer / Builder Design Pattern Implementation for Student records Backup,0,0,2016,2016,0,https://github.com/hprem991/Observer
Observer,observer-pattern,Implementation by Java Script (Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/observer-pattern
Observer,BallboyProject,"A demo project implementing SOLID principles, factory design pattern, strategy design pattern, observer design pattern, and memento design pattern.",0,0,2022,2022,1,https://github.com/kewensu/BallboyProject
Observer,design-patterns,Recreating design patterns,0,0,2021,2022,1,https://github.com/zsomborjoel/design-patterns
Observer,observer,My own implementation of observer design pattern in typescript.,0,0,2020,2020,1,https://github.com/pwk-czerwinski/observer
Observer,MVC_Desgin_Pattern,"MVC design pattern implemented using composite, observer and strategy design patterns",0,0,2019,2019,1,https://github.com/pratheekshadr/MVC_Desgin_Pattern
Observer,aula-padroes-observer,"Lesson of  Design Pattern ""Observer"" - example",0,0,2016,2016,1,https://github.com/ads-2016-1/aula-padroes-observer
Observer,observer_dp_ts,The Observer Design Pattern in TypeScript,0,0,2021,2021,1,https://github.com/edkaresli/observer_dp_ts
Observer,Observer_design_pattern,basit bir observer design pattern örneği,0,0,2024,2024,1,https://github.com/mehmettok76/Observer_design_pattern
Observer,DesignPatternsClass,Observer Pattern Lab,0,0,2014,2014,1,https://github.com/Marihebert-Leal/DesignPatternsClass
Observer,design-pattern-observer,GOF observer behavioral design pattern example,0,0,2014,2014,1,https://github.com/a-cordier/design-pattern-observer
Observer,ObserverPattern,This code demonstrates the observer and command design pattern,0,0,2018,2019,0,https://github.com/guhanMurugesan/ObserverPattern
Observer,diet-control-observer,Design pattern(Observer) for diet control,0,0,2018,2020,1,https://github.com/bartoszkrych/diet-control-observer
Observer,Design_Pattern_Observer_Class,Design_Pattern PHP Observer-Update Class,0,0,2017,2017,1,https://github.com/KhogaEslam/Design_Pattern_Observer_Class
Observer,lab-09,Lab 9: The Observer Design Pattern,0,0,2023,2023,0,https://github.com/kalharbi/lab-09
Observer,observerdesignpattern,This is a design pattern called observer.,0,0,2022,2022,1,https://github.com/balensphillip/observerdesignpattern
Observer,observer-design-pattern,Example of the design pattern observer,0,0,2019,2019,1,https://github.com/robrig92/observer-design-pattern
Observer,ObserverPattern,.Net Implementation of the Observer Design Pattern with UnitTests,0,0,2016,2020,1,https://github.com/guntbert/ObserverPattern
Observer,SubjectObserverPattern,Learning Git and Practicing Design Patterns,0,0,2017,2017,1,https://github.com/Rick-Myers/SubjectObserverPattern
Observer,Pattern-Observer-Pattern,Android Design Patterns: The Observer Pattern,0,0,2018,2018,1,https://github.com/danisluis6/Pattern-Observer-Pattern
Observer,ObserverPattern,Observer design pattern. Also called as Pub Sub Model,0,0,2024,2024,1,https://github.com/Pankaj4Quest/ObserverPattern
Observer,observer-design-pattern,[Software Project class] Observer design pattern.,0,0,2020,2022,0,https://github.com/koallann/observer-design-pattern
Observer,DesignPattern-Observer,codes to realize observer design pattern,0,0,2020,2020,1,https://github.com/jwj04ok/DesignPattern-Observer
Observer,Subscription,Design Pattern Demo for topics(Observer),0,0,2015,2015,0,https://github.com/Balaj-Manogar/Subscription
Observer,Observer-Pattern-mit-Singleton,Observer Design Pattern mit Singleton Pattern,0,0,2024,2024,1,https://github.com/norakertesz/Observer-Pattern-mit-Singleton
Observer,observer-design-pattern,Implement observer design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/observer-design-pattern
Observer,java-observer-design-pattern,Java Observer Design Pattern sample prjec,0,0,2018,2019,1,https://github.com/Eric-Jalal/java-observer-design-pattern
Observer,lab-09,Lab 9: The Observer Design Pattern,0,1,2023,2024,1,https://github.com/cpit252/lab-09
Observer,paoo_odp_pt1,Observer Design Pattern Exercise Part 1,0,0,2020,2020,1,https://github.com/tatyvssq/paoo_odp_pt1
Observer,design_pattern_observer_C214,Trabalho prático sobre design pattern Observer,0,0,2023,2023,2,https://github.com/Lauraellen/design_pattern_observer_C214
Observer,Extraclase2,Example of the Observer design pattern.,0,0,2020,2020,1,https://github.com/AdrChacon/Extraclase2
Observer,ObserverPattern,Our first in class Example on Observer Design pattern,0,0,2020,2020,1,https://github.com/asifbux/ObserverPattern
Observer,HotelReservation,simple example of Observer design pattern,0,0,2015,2015,1,https://github.com/JedynakD/HotelReservation
Observer,publisher-subscriber,in java using observer design pattern,0,0,2019,2019,1,https://github.com/Adiba07/publisher-subscriber
Observer,Chatbox,Chatbox using observer design pattern / Java,0,0,2019,2019,1,https://github.com/Adiba07/Chatbox
Observer,python_django_Observer_Design_Pattern,Django Heirarchical Application(Observer Design Pattern),0,0,2020,2020,1,https://github.com/prernaniraj/python_django_Observer_Design_Pattern
Observer,observable,Design Pattern Observer implementation using mailtrap,0,0,2023,2023,1,https://github.com/sostenesapollo/observable
Observer,seal_observer_cplus,Observer Design Pattern example in phases,0,0,2020,2020,1,https://github.com/petterinloota/seal_observer_cplus
Observer,TaskObserverSample,Observer Design Pattern Fully functional Implementation,0,0,2014,2014,1,https://github.com/ostanmarc/TaskObserverSample
Observer,Observer-DesignPattern,Observer Design Pattern Implementation in C#,0,0,2020,2020,1,https://github.com/KJayanthKumar/Observer-DesignPattern
Observer,ObserverTutorial,Week 5 tutorial focusing on the Observer design pattern,0,0,2023,2023,1,https://github.com/Jamelas/ObserverTutorial
Observer,wcs-quest-java-listener,WCS. Java. Design Pattern 02 : Observer,0,0,2024,2024,1,https://github.com/ArseniiT/wcs-quest-java-listener
Observer,software-design-and-architectures,"Design patterns: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/oblakov0372/software-design-and-architectures
Observer,observerdesignpattern,Maven MVP+ServiceLayer Observer design pattern project,0,0,2019,2019,1,https://github.com/JOCuendet/observerdesignpattern
Observer,Observer-Design-Pattern-in-JS,Learning JS and Observer Design Pattern ,0,0,2019,2019,1,https://github.com/SinisaVukmirovic/Observer-Design-Pattern-in-JS
Observer,Mediator-Observer_Remade,Duo Project For Design Patterns class,0,0,2020,2020,1,https://github.com/NadavLitver/Mediator-Observer_Remade
Observer,DesignPattern-Observer,Simple app demonstrating Observer design pattern,0,0,2021,2021,1,https://github.com/manjprabhu/DesignPattern-Observer
Observer,Observer-Design-Pattern,C++ implementation for observer design pattern ,0,0,2018,2018,0,https://github.com/IsmailSamirIbrahim/Observer-Design-Pattern
Observer,AbstractFactory_Observer,Multiple pattern example in Design patterns,0,0,2018,2018,1,https://github.com/nybbble/AbstractFactory_Observer
Observer,observerPattern,Examples of two variations of the Design Pattern Observer.,0,0,2018,2018,1,https://github.com/SidonioCamara/observerPattern
Observer,DeliveryApp,Studies in the Observer design pattern,0,0,2022,2022,1,https://github.com/mfxavier/DeliveryApp
Observer,Sprint3_tasca2,"Design Patterns(Observer, Callback, Dependency Injection)",0,0,2023,2023,1,https://github.com/emmanuelCajas/Sprint3_tasca2
Observer,swe-incompleto,"Design Patterns Observer, Abstract Factory, Strategy",0,0,2024,2024,1,https://github.com/polynomialspac3/swe-incompleto
Observer,example-java-observer-design-pattern,Example of observer design pattern implementation,0,0,2019,2019,1,https://github.com/ersyatechstax/example-java-observer-design-pattern
Observer,AniversarioSurpresa,An implementation of  Design Pattern Observer,0,0,2022,2022,1,https://github.com/alcantaraafonso/AniversarioSurpresa
Observer,news-application,Java News application - Observer Design Pattern,0,0,2021,2023,0,https://github.com/afzal-s/news-application
Observer,Auctions,Implementation of the Observer design pattern.,0,0,2021,2021,1,https://github.com/gilkom/Auctions
Observer,eventbus,An implementation of observer design pattern.,0,0,2024,2024,1,https://github.com/Alioth4J/eventbus
Observer,splitwise,Splitwise using java design pattern (Observer),0,0,2017,2017,0,https://github.com/5r1balaji/splitwise
Observer,php-design-patterns-observer,PHP Design Patterns - Observer Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-observer
Observer,cool-game,Uses Observer and Strategy design patterns.,0,0,2018,2018,1,https://github.com/chassitae/cool-game
Observer,Unity-Design-Pattern-Observer-,Observer Design Pattern Implementation with Unity,0,0,2020,2020,1,https://github.com/arkarmintun1/Unity-Design-Pattern-Observer-
Observer,DesignPattern_observateur,Model for design pattern : observer (finished) ,0,0,2018,2018,1,https://github.com/Motzee/DesignPattern_observateur
Observer,FruitShop,Class_Exercise_with_Observer_Design_Pattern,0,0,2020,2020,1,https://github.com/MichaelVardakis/FruitShop
Observer,DesignPatterns-Observer2,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Observer2
Observer,DesignPatterns-ObserverPattern,Observer pattern with BST(Updating the backup BST's),0,0,2022,2022,1,https://github.com/saikrishnakovuru/DesignPatterns-ObserverPattern
Observer,DesignPatterns-ObserverPattern,,0,0,2024,2024,1,https://github.com/MohamedElhanchir/DesignPatterns-ObserverPattern
Observer,ObserverPatternAssignment,This is an assignment of the Design Pattern Course,0,0,2017,2017,2,https://github.com/code-sweet-code/ObserverPatternAssignment
Observer,ObserverDesignPattern,Implementing observer design pattern for a simple lottery app.,0,0,2022,2022,1,https://github.com/fatemenozari/ObserverDesignPattern
Observer,ObserverDesignExample,An iOS sample application for the Observer design pattern,0,0,2018,2018,1,https://github.com/josh-marasigan/ObserverDesignExample
Observer,ObserverDesignPattern,This program explains the Observer(Publisher-subscriber) design pattern,0,0,2020,2020,1,https://github.com/BharateshChivate/ObserverDesignPattern
Observer,ObserverDesignPattern,A project for explain and apply Observer design pattern,0,0,2021,2021,1,https://github.com/Fatihprlg/ObserverDesignPattern
Observer,ObserverDesignPattern,Impelement a weather display program with observer design pattern ,0,0,2024,2024,1,https://github.com/FarzinPourabdolahi/ObserverDesignPattern
Observer,ObserverPattern-DesignPatterns,Creates a sample observer patterns ,0,0,2019,2019,1,https://github.com/dinith95/ObserverPattern-DesignPatterns
Observer,ObserverDesignPattern,Mini project made to learn the observer design pattern,0,0,2020,2020,1,https://github.com/Fukubi/ObserverDesignPattern
Observer,ObserverDesignPattern,Example of observer design pattern and OOP in Java.,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/ObserverDesignPattern
Observer,Observer-Pattern,An implementation of the Observer design pattern.,0,0,2016,2016,0,https://github.com/jdgillespie91/Observer-Pattern
Observer,observer_pattern,An example of an observer design pattern,0,0,2019,2019,1,https://github.com/leandrolavore/observer_pattern
Observer,observer-example,Observer Design Pattern example for my mentees,0,0,2023,2024,1,https://github.com/gentoosiast/observer-example
Observer,advprog-tutorial-7-bambangshop,Observer - Design Pattern Observer - Module 7 Tutorial Advance Programming,0,0,2024,2024,2,https://github.com/restuaar/advprog-tutorial-7-bambangshop
Observer,observer-workshop,Observer Design Pattern demonstrated through practical examples,0,0,2022,2024,1,https://github.com/ValentinTyanov/observer-workshop
Observer,design_patterns,"Implementing 3 design patterns in java(Strategy, observer and prototype design pattern)",0,0,2017,2017,1,https://github.com/shruti-14/design_patterns
Observer,Pacman_Observer,An exemple of design patterns Observer : Pacman,0,0,2014,2014,1,https://github.com/mushishi06/Pacman_Observer
Observer,DirectoryObserver,design pattern consumer producer in 2006.7,0,0,2017,2021,1,https://github.com/istanadodan/DirectoryObserver
Observer,Java_ObserverDesignPattern,Simple implementation of the Observer Design Pattern in Java,0,0,2015,2015,1,https://github.com/David2Walker/Java_ObserverDesignPattern
Observer,ObserverDesignPatternExample,Observer Design Pattern example which supports my Medium article.,0,0,2020,2020,1,https://github.com/tugkanmeral/ObserverDesignPatternExample
Observer,ObserverDesignPatternExample,Example code of a Observer Design Pattern in C#.,0,0,2019,2019,1,https://github.com/Freelancer-it/ObserverDesignPatternExample
Observer,observerPattern,This is an example of Observer Design Pattern in JAVA,0,0,2023,2024,1,https://github.com/ClarkBelen/observerPattern
Observer,ObserverPattern,Creating a weather station app using the Observer Design Pattern,0,0,2022,2022,1,https://github.com/magosto/ObserverPattern
Observer,ObserverDP,This is an example codes implemented by Observer Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/ObserverDP
Observer,DesignPatterns,"Observer, decorator and strategy usage.",0,0,2023,2023,1,https://github.com/jordanmruczynski/DesignPatterns
Observer,DesignPattern-Observer,A Simple Observer design pattern in PHP,0,0,2020,2020,1,https://github.com/helmis123/DesignPattern-Observer
Observer,Design-pattern-OBSERVER,A basic example from design pattern observer,0,0,2020,2021,1,https://github.com/LucasJCM-coder/Design-pattern-OBSERVER
Observer,WeatherApplication-Observer,Weather app which uses Observer Design Pattern,0,0,2023,2023,1,https://github.com/JingleBellczyk/WeatherApplication-Observer
Observer,observer-design-pattern,Example implementation of the observer design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/observer-design-pattern
Observer,Observer-Design-Pattern,Student courses backup using Observer Design pattern,0,0,2018,2018,1,https://github.com/DivyaKharbanda/Observer-Design-Pattern
Observer,Observer-design-pattern,Implementation of clock using observer design pattern,0,0,2019,2019,1,https://github.com/Gayane05/Observer-design-pattern
Observer,Design-Patterns-Observer,Observer design pattern testing ground in C++,0,0,2018,2018,1,https://github.com/jflopezfernandez/Design-Patterns-Observer
Observer,DESIGN_PATTERN_Observer, Source code demo cho Design Pattern Observer,0,0,2021,2021,1,https://github.com/mirushi/DESIGN_PATTERN_Observer
Observer,design-pattern-observer,A exercise with the Observer design pattern,0,0,2021,2021,1,https://github.com/moorejlayne/design-pattern-observer
Observer,observer-design-pattern,Add example code for observer design pattern,0,0,2022,2022,1,https://github.com/bit-sahti/observer-design-pattern
Observer,design-pattern-observer,Modelo de projeto de design pattern - observer,0,0,2023,2023,1,https://github.com/guilhermeviso/design-pattern-observer
Observer,DesignPatterns-ObserverPattern_JAVA,JAVA project to design a Backup System for Student Course Allocations using Observer Pattern and Prototype Pattern,0,0,2017,2017,1,https://github.com/shahnish009/DesignPatterns-ObserverPattern_JAVA
Observer,Design_patterns,observer,0,0,2022,2022,1,https://github.com/khanaza88/Design_patterns
Observer,observer-design-pattern,Short Java implementation of Observer design pattern,0,0,2021,2021,2,https://github.com/chitwan-a/observer-design-pattern
Observer,observer-pattern-learner,Project for learning the observer design pattern,0,0,2018,2018,1,https://github.com/creikey/observer-pattern-learner
Observer,observer_design_pattern,my implementation of the observer design pattern,0,0,2019,2019,1,https://github.com/oLazy/observer_design_pattern
Observer,ObserverDesignPattern,This is a Java implementation of the Observer design pattern,0,0,2020,2020,1,https://github.com/AlexMaxwell2001/ObserverDesignPattern
Observer,ObserverPatternSample,This is an example that how observer design pattern works,0,0,2022,2022,1,https://github.com/snaresh22sec/ObserverPatternSample
Observer,DesignPatternObserver,An example of using design pattern Observer,0,0,2020,2020,1,https://github.com/thiennguyenhieu/DesignPatternObserver
Observer,observer_design_pattern,Simple project for practicing observer design pattern,0,0,2023,2023,1,https://github.com/brngylni/observer_design_pattern
Observer,ObserverDesignPattern,An example of how to implement the observer design pattern,0,0,2017,2017,1,https://github.com/aishwaryakapse/ObserverDesignPattern
Observer,treinoPadraoObserver,Treino em Java do design patterns Observer,0,0,2020,2020,1,https://github.com/Osmar-Araujo/treinoPadraoObserver
Observer,observer-design-pattern,A simple Observer  Design Pattern using JavaScript,0,0,2023,2023,0,https://github.com/SochiCodes/observer-design-pattern
Observer,observer-example2,An example of 'Observer' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/observer-example2
Observer,DesignPatterns_ObserverWithRx,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_ObserverWithRx
Observer,observerDesignPattern,A project that illustrates how to use observer design pattern.,0,0,2023,2023,1,https://github.com/OlisaPaul/observerDesignPattern
Observer,DesignPatternsWithJava,"Singleton, Observer, Decorator & Strategy",0,0,2024,2024,1,https://github.com/Georgina444/DesignPatternsWithJava
Observer,observer-pattern,Head First Design Patterns PHP - The Observer Pattern,0,0,2017,2017,0,https://github.com/cyclobster/observer-pattern
Observer,Observer-Implementation,Implementation of the Observer design pattern in C++,0,0,2017,2017,1,https://github.com/loganpadon/Observer-Implementation
Observer,weather-monitoring-station-observer,Weather Monitoring Station with Observer Design Pattern,0,0,2019,2019,1,https://github.com/yildizozan/weather-monitoring-station-observer
Observer,PDSW-Observer,A simple app using the Observer design pattern,0,0,2020,2020,0,https://github.com/CarlosM0905/PDSW-Observer
Observer,stock-observer,An simple implementation of the observer design pattern,0,0,2017,2017,1,https://github.com/CaseyG5/stock-observer
Observer,observer_design_pattern_visualization,A simple Visualization for Observer Design Pattern,0,0,2024,2024,1,https://github.com/ramesh-madara/observer_design_pattern_visualization
Observer,DesignPatternsDoc,"Singleton, Strategy and Observer patterns",0,0,2015,2015,1,https://github.com/brunodevesa/DesignPatternsDoc
Observer,Observer-Pattern,The observer pattern is a software design pattern.,0,0,2016,2016,1,https://github.com/cuiwl/Observer-Pattern
Observer,Observer-Pattern,The Observer design pattern sample for Objective-C,0,0,2015,2015,1,https://github.com/yuxiaopeng/Observer-Pattern
Observer,Project-Design-Pattern-Observer,Modela da ultilização de Design Pattern Observer,0,0,2023,2023,1,https://github.com/pedrohjlopes/Project-Design-Pattern-Observer
Observer,observerJava,estudo sobre design patterns java proposto no bootcamp da GIO + GFT,0,0,2023,2023,1,https://github.com/cadorodriguez/observerJava
Observer,Cpp-GoF-DesignPatterns,DesignPattern Mediator as Observer,0,0,2018,2021,1,https://github.com/GerdHirsch/Cpp-GoF-DesignPatterns
Observer,Slide_observer,simple java programe to practise observer design pattern,0,0,2018,2018,1,https://github.com/dilshan11/Slide_observer
Observer,Large-Files-Detector,A project to practice observer design pattern,0,0,2021,2021,1,https://github.com/Tanookh/Large-Files-Detector
Observer,first-java-gui-app,rgb color splitter with observer design pattern ,0,0,2022,2022,1,https://github.com/michal-sternik/first-java-gui-app
Observer,ObserverPattern,"in this oportunity,  i do a representation about Observer design pattern",0,0,2017,2017,1,https://github.com/jazb18/ObserverPattern
Observer,learning-golang-observer-pattern,learning how to build observer design pattern,0,0,2022,2022,1,https://github.com/michelo851a1203/learning-golang-observer-pattern
Observer,PubSub,"PubSub toy app using observer design pattern, singleton design pattern, and Java threads.",0,0,2021,2021,1,https://github.com/OM234/PubSub
Observer,DesignPatterns,Implementation for Command and Observer Patterns,0,0,2015,2016,1,https://github.com/krutipandya/DesignPatterns
Observer,DesignPattern,"Design Pattern Implement——Observer,Undo/Redo,Composite",0,0,2016,2016,1,https://github.com/codemonkey716722/DesignPattern
Observer,Fruit-Ninja,used OOP design patterns observer and factory,0,0,2021,2022,1,https://github.com/Youssefa99/Fruit-Ninja
Observer,pong-game-java,design pattern strategy builder abstract observer singleton,0,0,2021,2021,1,https://github.com/islamOTH/pong-game-java
Observer,frightMachine,A spooky machine with an observer design pattern and an adapter design pattern.,0,0,2017,2017,1,https://github.com/ScottMikul/frightMachine
Observer,Design-Patterns,"Factory, Builder, Adapter, Singleton, Observer Design Pattern",0,0,2024,2024,1,https://github.com/runitrupam/Design-Patterns
Observer,ChatServer,Chat Engine (-ish) using Observer Design Pattern,0,0,2018,2018,1,https://github.com/solaolu/ChatServer
Observer,Programmers-Testers-withObserver-Pattern,An application implementing the observer design pattern.,0,0,2019,2019,1,https://github.com/AnaSfirlea/Programmers-Testers-withObserver-Pattern
Observer,SE3352_Lab3,Demonstration of the Observer object design pattern.,0,0,2019,2019,0,https://github.com/ryanvickr/SE3352_Lab3
Observer,autoplugin-drawapp,"Example for design patterns. Strategy, Observer, Command,",0,0,2020,2020,1,https://github.com/CosminGRG/autoplugin-drawapp
Observer,Monitor_F1,Monitor F1 app - observer design pattern implementation,0,0,2021,2021,0,https://github.com/macblok/Monitor_F1
Observer,car-painter-observer-design-pattern-example,C# - Car painter observer design pattern example,0,0,2023,2023,1,https://github.com/flcristian/car-painter-observer-design-pattern-example
Observer,CS-665-Assignment-2,Software Design Pattern Implementation project: Observer Pattern,0,0,2024,2024,1,https://github.com/AJun01/CS-665-Assignment-2
Observer,Margolis_A-mco252-2017F_asgn04,Using Observable/Observer and Strategy Design Patterns,0,0,2017,2018,1,https://github.com/programmingGal/Margolis_A-mco252-2017F_asgn04
Observer,assignment4,Implementation of factory and observer design pattern,0,0,2023,2023,1,https://github.com/Ryuuukin/assignment4
Observer,Patterns,"Java design Patterns : Singleton, Factory, Builder,Observer",0,0,2020,2020,1,https://github.com/MartinBugar/Patterns
Observer,ItemTracker,Implementation of the Observer Design Pattern. Java,0,0,2023,2023,1,https://github.com/OzyKartike/ItemTracker
Observer,consolApp,simple example of a design pattern observer,0,0,2018,2018,0,https://github.com/gusiushub/consolApp
Observer,stc-web-day-3,Intro to MVC and Observer Design Pattern,0,0,2018,2018,1,https://github.com/ThetHlaing/stc-web-day-3
Observer,ObserverPattern,This Repository hosts how a Observer Design Pattern could be used.,0,0,2019,2023,1,https://github.com/DonkeyKongJr/ObserverPattern
Observer,ObserverPattern,C++ code for Observer pattern from Head First Design Pattern book,0,0,2016,2016,1,https://github.com/anuprulez/ObserverPattern
Observer,stocker-tracker,Stock tracker with Javascript Observer Design Pattern,0,0,2016,2016,1,https://github.com/rinodung/stocker-tracker
Observer,Design_Pattern_JS,"singleton, factory , Observer, Prototype design pattern implemented",0,0,2020,2020,1,https://github.com/Pragati215/Design_Pattern_JS
Observer,DesignPatterns4Examples,Design Patterns Singleton Factory Method Facade Observer ,0,0,2023,2023,1,https://github.com/AJPTechnology/DesignPatterns4Examples
Observer,univ-rennes1-m1miage-aco-observer,Observer design pattern applied to list management,0,1,2020,2021,1,https://github.com/ahenrij/univ-rennes1-m1miage-aco-observer
Observer,Observer,Implementation of Observer Design Pattern in a system of Stocks and Investors.,0,0,2017,2017,1,https://github.com/fsprusokowski/Observer
Observer,DesignPatterns,Observer and Decorator Design Pattern Code Sample,0,0,2022,2022,1,https://github.com/nsabbani/DesignPatterns
Observer,Newsletter,Project to practice the design pattern - Observer,0,0,2022,2023,1,https://github.com/paulolopestech/Newsletter
Observer,INATEL-C214-projeto-observer,Implementação do Design Pattern observer em typescrip,0,0,2022,2022,1,https://github.com/avnerjose/INATEL-C214-projeto-observer
Observer,Event-System,Implementation of Observer design pattern in c++,0,0,2022,2024,1,https://github.com/LanguidBasil/Event-System
Observer,Java-implements-Runnable,Java Concurrency and  Observer Design Pattern İmplementation,0,0,2019,2019,1,https://github.com/Dyurekdeler/Java-implements-Runnable
Observer,DesignPatternsW3,Design Patterns (Week 3): Observer-Pattern Design,0,0,2018,2018,1,https://github.com/omarqe/DesignPatternsW3
Observer,assignment8-Java,Iterator/Iterable and Observer/Observable Design Patterns,0,0,2018,2018,1,https://github.com/kaorios/assignment8-Java
Observer,pyevents,A simple project using observer design pattern,0,0,2023,2023,1,https://github.com/mdesousa-fr/pyevents
Observer,social_media_demo,Demo of observer design pattern in use.,0,0,2025,2025,1,https://github.com/csimp-404/social_media_demo
Observer,SE350_Assignment2,An example of an Observer Design Pattern,0,0,2018,2019,1,https://github.com/Rossmallow/SE350_Assignment2
Observer,Observer,Monitorador climático que utiliza o Padrão de Projeto (Design Patterns) Observer.  :umbrella:,0,0,2020,2023,1,https://github.com/Gwolner/Observer
Observer,ObserverDesignPattern_EnemyAlert,Observer Design Pattern implemented that represents an Enemy Alert System,0,0,2021,2021,1,https://github.com/iamnexxed/ObserverDesignPattern_EnemyAlert
Observer,ObserverPattern-CSharp,"Observer Design Pattern - Checks for which number is greater, using events",0,0,2015,2015,1,https://github.com/wcTGgeek/ObserverPattern-CSharp
Observer,ObserverPatternJava,The project demonstrates the use of Observer design pattern in Java,0,0,2020,2020,1,https://github.com/praveen-patare/ObserverPatternJava
Observer,Observer-Design-Pattern,Observer Design Pattern that replicates given input as an observer,0,0,2020,2020,1,https://github.com/onkkul/Observer-Design-Pattern
Observer,DESIGN_PATTERN_OBSERVER,IMPLEMENTING THE DESIGN PATTERN OBSERVER IN JAVA CORE,0,0,2021,2021,1,https://github.com/EdgarEmmanuel/DESIGN_PATTERN_OBSERVER
Observer,ObserverDesignPattern,This project shows how correctly realize Observer design pattern in practice,0,0,2017,2017,1,https://github.com/SuleymaniProjects/ObserverDesignPattern
Observer,DesignPatterns_Observer,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_Observer
Observer,DesignPatterns-Observer,,0,0,2021,2021,0,https://github.com/monahans/DesignPatterns-Observer
Observer,DesignPatterns-Observer,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Observer
Observer,DesignPatterns.Observer,,0,0,2018,2018,1,https://github.com/huanglin1/DesignPatterns.Observer
Observer,DesignPatterns.Observer,,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.Observer
Observer,Observer-design-pattern,Implementing Observer design pattern with Undoable string builder,0,0,2022,2022,1,https://github.com/naelaboraya/Observer-design-pattern
Observer,DesignPatterns_Observer,,0,0,2021,2021,1,https://github.com/morzhik02/DesignPatterns_Observer
Observer,observer-design-pattern,Observer Design Pattern implementation in C# .NET CORE,0,0,2018,2018,1,https://github.com/JangirSumit/observer-design-pattern
Observer,observer-pattern-java,Cool example: of design pattern Observer in java,0,0,2024,2024,1,https://github.com/Andrea-Cavallo/observer-pattern-java
Observer,Observer-Pattern-Demo,A small code demo about observer design pattern,0,0,2024,2024,1,https://github.com/stutee16/Observer-Pattern-Demo
Observer,BST_Visitor-Observer,Implemented BST with Observer and Visitor Design Patterns,0,0,2014,2014,1,https://github.com/abhishekwaichal/BST_Visitor-Observer
Observer,DesignPatternsObserver,,0,0,2020,2020,1,https://github.com/jjfloreno/DesignPatternsObserver
Observer,DesignPatterns_Observer,Observer pattern is one of the behavioral patterns. My solution contains two examples. Please read the readme files. It can help a lot to understand I did.,0,0,2020,2020,1,https://github.com/Kvintasz/DesignPatterns_Observer
Observer,DesignPatternsObserver,,0,0,2021,2021,0,https://github.com/RosaOrtega182/DesignPatternsObserver
Observer,DesignPatterns-Observer,,0,1,2016,2017,1,https://github.com/vknez95/DesignPatterns-Observer
Observer,DesignPatterns_Observer,,0,0,2024,2024,1,https://github.com/claudiovdev/DesignPatterns_Observer
Observer,DesignPatterns_Task8,DesignPatterns - Task With Observer Pattern ,0,0,2022,2024,1,https://github.com/aykhan019/DesignPatterns_Task8
Observer,University.DesignPatterns.Chat,Chat modeling with Observer pattern,0,0,2025,2025,1,https://github.com/0x3l4/University.DesignPatterns.Chat
Observer,Observer-SUbject-Design-pattern-PHP,Cas d'utilisation oserver //Subject design pattern,0,0,2023,2023,1,https://github.com/akkramm00/Observer-SUbject-Design-pattern-PHP
Observer,subject-observer-cpp,A C++ Example of Subject-Observer Design Pattern,0,0,2020,2020,2,https://github.com/devnull255/subject-observer-cpp
Observer,Observer-Design-Pattern,A program playing with the observer design pattern.,0,0,2020,2020,1,https://github.com/ChaseFaine/Observer-Design-Pattern
Observer,DesignerPatternsObserver,,0,0,2018,2018,1,https://github.com/marianabarreiros/DesignerPatternsObserver
Observer,Observer_Design_Pattern,A simple implementation of the Observer design pattern.,0,0,2016,2016,1,https://github.com/rokigeorg/Observer_Design_Pattern
Observer,DesignPatternsObserver,,0,0,2018,2018,1,https://github.com/BSzydlowska/DesignPatternsObserver
Observer,DesignPatterns-Observer,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Observer
Observer,DesignPatterns-Observer,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Observer
Observer,DesignPatternsObserver,,0,0,2019,2019,1,https://github.com/mckasap/DesignPatternsObserver
Observer,designsPatterns_Observer,,0,0,2023,2023,1,https://github.com/pkrodrigues/designsPatterns_Observer
Observer,observer,This is an example of design pattern. It's name is observerPattern,0,0,2017,2017,1,https://github.com/nahidhasan-kakon/observer
Observer,DesignPatterns-Observer,,0,0,2022,2022,1,https://github.com/lsilvaHenrique/DesignPatterns-Observer
Observer,DesignPatterns.Observer,,0,0,2024,2024,1,https://github.com/goteEND/DesignPatterns.Observer
Observer,DesignPatternsObserver,,0,0,2023,2023,1,https://github.com/JhonWSilva/DesignPatternsObserver
Observer,DesignPatterns-Observer,Arquitetura de software,0,0,2023,2023,1,https://github.com/jairodornel/DesignPatterns-Observer
Observer,design-pattern-observer,Example about how to implement Observer Design Pattern,0,0,2019,2019,1,https://github.com/fthomasvp/design-pattern-observer
Observer,SecondDesignPatternImplementation-ObserverPattern,Second design pattern explanation code as shown on the book,0,0,2022,2022,1,https://github.com/Landilito/SecondDesignPatternImplementation-ObserverPattern
Observer,DesignPatterns,"Builder, Factory, Command, Mediator, State, Observer etc.",0,0,2023,2023,1,https://github.com/duhayildirim/DesignPatterns
Observer,ObserverPattern,This Project is a demo for  Observer design pattern created in C++.,0,0,2020,2020,1,https://github.com/darpan1118/ObserverPattern
Observer,ObserverPatternEventDispatchers,Practice with the Observer Design Pattern using C++ and various APIs,0,0,2022,2022,1,https://github.com/l-paz91/ObserverPatternEventDispatchers
Observer,DesignPatterns,"Implementation of Adapter, Factory and Observer methods.",0,0,2024,2024,1,https://github.com/aycaayldrn/DesignPatterns
Observer,cpp_observer,An implementation of the Observer design pattern in C++,0,0,2017,2017,1,https://github.com/garrett-may/cpp_observer
Observer,observerPattern,This project is to implement a optimized thread safe Observer Design Pattern,0,0,2021,2021,2,https://github.com/nrt32/observerPattern
Observer,dp.observer,Example of the Behavioral design pattern Observer in Java.,0,0,2016,2016,1,https://github.com/levyoav/dp.observer
Observer,ObserverPattern,This is an example for pub/sub design pattern implementation in C#,0,0,2021,2024,2,https://github.com/JafariShirinn/ObserverPattern
Observer,INATEL-C214-DesignPatterns,Exercicio com design patters Observer,0,0,2023,2023,3,https://github.com/LiviaJacklinne/INATEL-C214-DesignPatterns
Observer,observer-pattern,Projeto e Slide para apresentação do Design Pattern Observer,0,1,2022,2022,1,https://github.com/GabrielAL4/observer-pattern
Observer,Observer_Pattern,A small java project implementing the Observer design pattern,0,0,2021,2021,1,https://github.com/YonatanGurevich/Observer_Pattern
Observer,observer-pattern,This project implements an example of observer design pattern,0,0,2020,2020,1,https://github.com/ahmadshnaiwer/observer-pattern
Observer,springboot-observerpattern,Trabalho de CRUD para demonstrar o design pattern Observer,0,0,2024,2024,1,https://github.com/BrunoLegal/springboot-observerpattern
Observer,Observer-go,An observer software design pattern implemented by Go language.,0,0,2022,2022,1,https://github.com/maxatic/Observer-go
Observer,Observer-pattern,Observer design patterns on java in electronic market example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/Observer-pattern
Observer,tic-tac-toe_observer,Tic-Tac-Toe with the Observer Design Pattern,0,0,2024,2024,1,https://github.com/t-a-s-h/tic-tac-toe_observer
Observer,observer,Example of the observer pattern adapted from the book Head First Design Patterns,0,1,2019,2021,1,https://github.com/omargomez2/observer
Observer,observer-pattern,Learning observer design pattern from SIT Depa scholarship class,0,0,2019,2019,1,https://github.com/mixkungz/observer-pattern
Observer,INF5153-Singleton-Observer,Singlet and Observer design pattern demonstration for INF5153,0,0,2016,2016,1,https://github.com/Morriar/INF5153-Singleton-Observer
Observer,Bridge-And-Observer-Patterns,Practice implementation of bridge and observer design patterns,0,0,2020,2022,1,https://github.com/tylerscottarndt/Bridge-And-Observer-Patterns
Observer,design-patterns-observer-pattern,Source for the “Design Patterns: Observer Pattern” course,0,0,2023,2023,1,https://github.com/codecourse/design-patterns-observer-pattern
Observer,searchJob_-observer_pattern-,un esercizio che usa il design pattern Observer.,0,0,2014,2014,1,https://github.com/Andry86/searchJob_-observer_pattern-
Observer,Builder-Observer-Design-Patterns,"Example of using the Builder, Observer design patterns",0,0,2023,2023,1,https://github.com/emrepektemek/Builder-Observer-Design-Patterns
Observer,observer-design-pattern-php,Simple implementation of observer design pattern in PHP,0,0,2019,2019,0,https://github.com/bdaler/observer-design-pattern-php
Observer,design-patterns,Design patterns implemented in Go,0,0,2022,2023,1,https://github.com/Kartochnik010/design-patterns
Observer,Xperiments.DesignPatterns.Observer,A litttle implementation of Observer pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Observer
Observer,design-patterns---observer-pattern,Design Patterns in Object Oriented Programming - Observer Pattern,0,0,2019,2019,1,https://github.com/zakayothuku/design-patterns---observer-pattern
Observer,observer-pattern-console-app,An example implementation of the Observer design pattern.,0,0,2023,2023,1,https://github.com/danielmanolov/observer-pattern-console-app
Observer,ObserverPatternCpp,Publisher and Subscriber classes that enable use of the observer design pattern.,0,0,2019,2019,1,https://github.com/goodmajo/ObserverPatternCpp
Observer,Java-Design-Patterns,Observer & Decorator,0,0,2023,2024,1,https://github.com/fasahili/Java-Design-Patterns
Observer,Observer,"A lightweight C library implementing the observer design pattern, ideal for embedded systems.",0,0,2025,2025,1,https://github.com/Dinamiet/Observer
Observer,CENG431_HW3,Observer Design Pattern and Model View Controller Design Pattern are used in this project.,0,0,2023,2023,2,https://github.com/polat-code/CENG431_HW3
Observer,temperature-measuring-device,"temperature measuring device with single responsibility, open closed,singleton design patterns,observer design pattern.",0,0,2020,2020,1,https://github.com/kutayyaman/temperature-measuring-device
Observer,design-patterns,"Tests different design patterns such as Singleton, Factory, Adapter,Decorator and Observer design pattern.",0,0,2021,2021,1,https://github.com/Rasi98/design-patterns
Observer,DesignPatterns,Singleton Factory Builder Facade Observer Design patterns examples,0,0,2019,2019,1,https://github.com/Sandaka/DesignPatterns
Observer,Observer-Pattern-Tutorial,The 10th Tutorial about observer design pattern in EE461L,0,0,2019,2019,1,https://github.com/dldbb/Observer-Pattern-Tutorial
Observer,Observer_Design_Pattern,This project implements the Observer Design Pattern in Java. ,0,0,2020,2020,1,https://github.com/justingirgis/Observer_Design_Pattern
Observer,design-pattern-observer,Experimental implementation of the Observer design pattern in Java.,0,0,2014,2018,1,https://github.com/toniesteves/design-pattern-observer
Observer,Observer-Design-Pattern,Example of the Observer Design Pattern applied in Java,0,0,2017,2017,1,https://github.com/MattBax/Observer-Design-Pattern
Observer,Observer-Design-Pattern,This repository is to demonstrate the Observer Design Pattern.,0,0,2018,2018,2,https://github.com/SureshLalchandani/Observer-Design-Pattern
Observer,observer-design-pattern,observer design pattern with java hex octal binary converter,0,0,2022,2022,1,https://github.com/oguzhan2027/observer-design-pattern
Observer,Observer-Design-Pattern,Implementation of Observer Design Pattern in Java using Eclipse.,0,0,2019,2019,2,https://github.com/noor-binte-amir/Observer-Design-Pattern
Observer,Observer-DesignPattern-in-Java,Collection of Observer Design Pattern implementations in Java,0,0,2016,2016,1,https://github.com/rbello/Observer-DesignPattern-in-Java
Observer,blogs.php.observer-design-pattern,A simple observer design pattern implementation in PHP,0,0,2024,2024,1,https://github.com/jsmcm/blogs.php.observer-design-pattern
Observer,Observer-and-State-in-Python,Using design patterns - Observe and State in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Observer-and-State-in-Python
Observer,DesignPattern-Observer,Exemplo de implementação do Design Pattern Observer em Java.,0,0,2023,2023,1,https://github.com/jeziel-almeida/DesignPattern-Observer
Observer,JavaObserverPattern,A learning project to explore the Observer design pattern,0,0,2023,2023,1,https://github.com/Denikaso/JavaObserverPattern
Observer,PadraoObserver,observer design pattern: Um exemplo de como usar o Padrão Observer,0,0,2014,2014,1,https://github.com/rikes/PadraoObserver
Observer,StockPriceObserver,Stock price monitoring program using the Observer design pattern.,0,0,2020,2021,1,https://github.com/cole-maxwell/StockPriceObserver
Observer,POO-DesignPatterns-Observer,Starter code for the students to modify and implement another use of the Observer design pattern,0,0,2024,2024,1,https://github.com/professorfabio/POO-DesignPatterns-Observer
Observer,facape-observer-pattern,Exemplo de implementação do Design Pattern Observer em Java,0,0,2016,2023,1,https://github.com/DjalmoCruzJr/facape-observer-pattern
Observer,design_patterns,"singleton, factory, observer",0,0,2014,2014,1,https://github.com/nightahul/design_patterns
Observer,DesignPatterns-Behavioral-Observer,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-Observer
Observer,SubjectObserverTheory,Just trying to play around w/ some design patterns.,0,0,2013,2015,1,https://github.com/baileylo/SubjectObserverTheory
Observer,DesignPatterns-Beh-Observer,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Beh-Observer
Observer,observer-shopping-cart,shopping cart with observer design pattern (and state management),0,0,2020,2020,1,https://github.com/cembakca/observer-shopping-cart
Observer,Observer-in-C-,Observer design pattern implementation in C++: Before and after,0,0,2020,2020,1,https://github.com/LoukilRihab/Observer-in-C-
Observer,Mediator-Observer-DesignPatterns,,0,0,2021,2021,1,https://github.com/infinite1000darc/Mediator-Observer-DesignPatterns
Observer,ObserverDesignPatterns,,0,0,2019,2019,1,https://github.com/ahmedco82/ObserverDesignPatterns
Observer,ObserversDesignPatterns,,0,0,2020,2020,2,https://github.com/ayasebti/ObserversDesignPatterns
Observer,Observer-Design-Pattern-Solution-Architecture-,Learning about the Observer Design Pattern in Java.,0,0,2022,2022,1,https://github.com/Brian-Adams-code/Observer-Design-Pattern-Solution-Architecture-
Observer,DesignPattern_Observer,Java - Netbeans - Example of how Design Pattern Observer works.,0,0,2023,2023,0,https://github.com/eddiesaliba/DesignPattern_Observer
Observer,observer-design-pattern,implementing observer design pattern in java 11 with PropertyChangeSupport,0,0,2021,2021,0,https://github.com/omidhaghighatgoo/observer-design-pattern
Observer,Tutorial.DesignPatterns.Observer,"The observer pattern is a software design pattern in which an object, named the subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods.",0,0,2022,2022,1,https://github.com/turkerakbulut/Tutorial.DesignPatterns.Observer
Observer,Design-Patterns-Impl,Design Patterns Implementation,0,0,2023,2023,1,https://github.com/TheMIU/Design-Patterns-Impl
Observer,DesignPatterns_Observer-toast-,,0,0,2024,2024,1,https://github.com/KerollosR11/DesignPatterns_Observer-toast-
Observer,observableAjax,this is a ajax with observer design pattern,0,0,2016,2018,1,https://github.com/walker27/observableAjax
Observer,observer_pattern,Follow JavaScript design pattern(observer pattern) and implementing this pattern.,0,0,2015,2015,1,https://github.com/tedshd/observer_pattern
Observer,DPObserver,un exemple d'implémentation du design pattern Observer ,0,0,2021,2021,1,https://github.com/alaafed/DPObserver
Observer,Tetris,Swing-based 2D tetris mvc observer design pattern. ,0,0,2016,2017,1,https://github.com/nhays89/Tetris
Observer,Design-Patterns,"GOF Design Patterns : observer, strategy, command, composite, state",0,0,2017,2017,1,https://github.com/mesurace/Design-Patterns
Observer,campo-minado-swing,desktop java application using the Observer design pattern ,0,0,2020,2020,1,https://github.com/pvandrade/campo-minado-swing
Observer,Gym,"implementing 4 design patterns - Singleton, Strategy, Observer, Decorator. ",0,0,2024,2024,1,https://github.com/Dayana1919/Gym
Observer,observer-test,A simple project to start with the observer design pattern.,0,0,2019,2019,1,https://github.com/luizjacomn/observer-test
Observer,hours-launcher-nodejs,NodeJs App with Design Patterns Factory and Observer,0,0,2021,2021,1,https://github.com/gabrielgpa/hours-launcher-nodejs
Observer,Observator,"Implementation of Observer, behavioral design pattern in C++",0,0,2023,2023,1,https://github.com/JakubDrozd/Observator
Observer,Observer,This is my own personal understanding and coding based on Observer's Design Pattern.,0,0,2024,2024,1,https://github.com/mikerozendo/Observer
Observer,Tetris-Object-Oriented,Flyweight and observer design patterns - Done in Eclipse ,0,0,2017,2017,1,https://github.com/jtraut/Tetris-Object-Oriented
Observer,dispatcher-and-connector,Observer Design Pattern in python + basics of connector,0,0,2018,2018,0,https://github.com/sweettirexkiller/dispatcher-and-connector
Observer,event-emitter,Use observer design pattern to handle JavaScript events,0,0,2021,2024,2,https://github.com/zuhairtaha/event-emitter
Observer,DesignPatterns_Java,"Design Patterns with Java: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/DzhanSali/DesignPatterns_Java
Observer,DesignPatterns,"review of memento, observer, adapter (protocol), decorator, facade patterns.",0,0,2016,2016,1,https://github.com/ksatia/DesignPatterns
Observer,Observer,A C++ program I wrote to come to grips with the observer design pattern,0,0,2016,2017,1,https://github.com/DenisFogarty/Observer
Observer,339-HW5-Design-Patterns,"Examples of Observer, Decorator, and Composite design patterns",0,0,2014,2014,1,https://github.com/TErenberger/339-HW5-Design-Patterns
Observer,instagram-simulator,Instagram Simulator Implement Observer Pattern from Design Pattern ,0,0,2022,2022,1,https://github.com/crisandolindesmanrumahorbo/instagram-simulator
Observer,logger,This is logger created using observer design pattern.,0,0,2020,2020,1,https://github.com/varun-pv/logger
Observer,Behavioral-Observer,This is a short implementation of the Observer design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Observer
Observer,observe,A simple implementation of the Observer design pattern.,0,0,2015,2015,1,https://github.com/hpolthof/observe
Observer,Design-Pattern,Simple Example for Singleton / Proxy / Observer Design Pattern,0,0,2017,2017,1,https://github.com/ognale88/Design-Pattern
Observer,stockmonitoring,implement stock monitoring based on observer design pattern ,0,0,2020,2020,1,https://github.com/izadpoor/stockmonitoring
Observer,DesignPatterns,"Adapter, Builder, Decorator, Chain of Responsibility, Factory, Observer, Singleton",0,0,2022,2022,0,https://github.com/KarynaAliushkevich14/DesignPatterns
Observer,observer-pattern,"Project to study the use of the ""Observer"" design pattern.",0,0,2022,2022,1,https://github.com/wesleyribeirobarbosa/observer-pattern
Observer,design-pattern,"5 design pattern: Singleton, Factory, Adapter, Strategy, Observer",0,0,2018,2018,0,https://github.com/hapro955/design-pattern
Observer,social_network,C++ social network based on Observer Design Pattern,0,0,2019,2019,1,https://github.com/diogodutra/social_network
Observer,DesignPatternTP,"les quatres design pattern : Strategy, Decorator, Observer, Composite",0,0,2021,2021,1,https://github.com/a-maslah/DesignPatternTP
Observer,notify-me-lld,"LLD for ""Notify me "" using observer design pattern",0,0,2024,2024,1,https://github.com/darshDM/notify-me-lld
Observer,ObserverDesignPattern,This repository contains information about the Observer Design Pattern and Sample Java code.,0,0,2017,2017,1,https://github.com/bcopus/ObserverDesignPattern
Observer,DesignPatterns,"Singleton, Decorator, Memento, Adapter, Observer, Delegate, Facade, and MVC",0,0,2017,2017,0,https://github.com/baubrey91/DesignPatterns
Observer,Observer-pattern,Exploring the observer design pattern in a simple java application.,0,0,2022,2022,1,https://github.com/rgdafonso/Observer-pattern
Observer,newsleter-mock,A Newsletter Mock that implements Observer Design Pattern,0,0,2021,2021,1,https://github.com/gabigutu/newsleter-mock
Observer,tutorial-1,Behavioral Design Pattern: Strategy Pattern and Observer Pattern.,0,0,2023,2024,2,https://github.com/CSUI-Adpro/tutorial-1
Observer,PHP-Component-Util-Observer,The Observer behavioural design pattern as a PHP component.,0,0,2013,2013,1,https://github.com/FlorianWolters/PHP-Component-Util-Observer
Observer,The_Observer_Pattern_Unity,Practicing the observer design pattern using Unity Game Engine.,0,0,2021,2021,1,https://github.com/CelilErenKalkan/The_Observer_Pattern_Unity
Observer,-,"Composite,Observer,Undo/Redo design patterns c++ Realization",0,0,2017,2017,1,https://github.com/yzx2000/-
Observer,observer-design-pattern-java,Observer Design Pattern Example made with Java and Maven.,0,0,2019,2019,1,https://github.com/emretanriverdi/observer-design-pattern-java
Observer,lab09_observer_pattern,"Observer Design Pattern
Aj. Veera Boonjing
18/03/15",0,0,2015,2015,1,https://github.com/makemek/lab09_observer_pattern
Observer,observer-pattern-example-cpp,Simple example of the Observer Design Pattern in C++,0,0,2019,2019,1,https://github.com/grzegorz-grzeda/observer-pattern-example-cpp
Observer,Tetris,An example of the Factory design pattern. ,0,0,2019,2021,1,https://github.com/AroniasPrenovost/Tetris
Observer,design-patterns,Design Patterns para apresentação no estágio.,0,0,2021,2022,1,https://github.com/GiovaneFGomes/design-patterns
Observer,design-patterns,Learning Design Patterns.,0,0,2022,2022,1,https://github.com/tnusraddinov/design-patterns
Observer,Design_patterns,"Observer, builder, adapter, decorator",0,0,2023,2023,2,https://github.com/timofeev-vadim-96/Design_patterns
Observer,observer,This repo will assist me in writing my blog post discussing the observer design pattern,0,0,2023,2023,1,https://github.com/eliwines19/observer
Observer,Design-Patterns,"Adapter, Decorator, Observer, Strategy ",0,0,2019,2019,0,https://github.com/deniskutnar/Design-Patterns
Observer,Design-patterns,"command,observer,event ques",0,0,2022,2022,1,https://github.com/Ezzoozz/Design-patterns
Observer,observer_design_pattern,Simple Implementation of Observer Design Pattern in Java. From Geekstogeeks.,0,0,2024,2024,1,https://github.com/jewulo/observer_design_pattern
Observer,ObserverPattern,"Example for the Observer Pattern, used in the Head's Up, Design Patterns book",0,0,2015,2015,0,https://github.com/PatrickvdGraaf/ObserverPattern
Observer,events-example-observerpattern,Example Task for practicing the Observer Design Pattern in c#,0,0,2024,2024,1,https://github.com/ivanwe2/events-example-observerpattern
Observer,Observer_Design_Pattern,Implementation of the observer design pattern in several programming languages,0,0,2023,2023,1,https://github.com/nimamasoumi/Observer_Design_Pattern
Observer,DesignPatterns,"Singleton, Factory method, Adapter, Facade, Command, Mediator, Observer, Repository, Builder",0,0,2022,2022,1,https://github.com/Xakimov1610/DesignPatterns
Observer,JavaObserverDesign,ASU CSE 494: Advanced OOP with Java - Observer Design Pattern,0,0,2014,2014,0,https://github.com/crsiebler/JavaObserverDesign
Observer,Design-Patterns,Observer and Decorator Patterns,0,0,2018,2018,1,https://github.com/DePacifier/Design-Patterns
Observer,DesignPatternsDemo,studying events and observers via a location tracking example,0,0,2019,2019,1,https://github.com/gchaniotakis/DesignPatternsDemo
Observer,Design-Patterns-Observer,A problem and solution codebase for the Observer Design Pattern,0,0,2025,2025,1,https://github.com/FalseNight/Design-Patterns-Observer
Observer,observer,basic port to C# from the observer example (Weather Station) from Head-First Design Patterns,0,0,2015,2015,1,https://github.com/krishermans/observer
Observer,Observer-Design-Pattern-For-Unity,"This project demonstrates the ""Observer"" Design Pattern for unity",0,0,2020,2020,1,https://github.com/harshdulani/Observer-Design-Pattern-For-Unity
Observer,Tp-chain-observer,Tp using design patterns chain of responsibility and observer pattern ,0,0,2020,2020,1,https://github.com/HalaSafiya/Tp-chain-observer
Observer,observer-design-pattern,Observer design pattern with example (News Agency and News Channel),0,0,2021,2021,1,https://github.com/silva-angelo/observer-design-pattern
Observer,observer-design-pattern,"Eliminate polling! use an observer design pattern, demonstrated in ruby",0,0,2022,2022,1,https://github.com/ztbochanski/observer-design-pattern
Observer,observers-design-pattern,Exemplo prático de uso da design pattern observables em javascript,0,0,2023,2024,1,https://github.com/natanaeldeveloper/observers-design-pattern
Observer,Observer-Design-Pattern-Mini-Project,Implemented observer design pattern using example of YouTube channel,0,0,2023,2023,0,https://github.com/Yadav-karan/Observer-Design-Pattern-Mini-Project
Observer,CSharp.DesignPatterns.Behavioral.Observer,,0,0,2021,2021,1,https://github.com/oscarcortez/CSharp.DesignPatterns.Behavioral.Observer
Observer,MeteoData-DesignPatternObserver,Good Practice code in Java with Design Pattern Observer.,0,0,2021,2021,1,https://github.com/Smeud/MeteoData-DesignPatternObserver
Observer,JAVA-DesignPatterns-Observer-Prototype,JAVA project to design a Backup System for Student Course Allocations using Observer Pattern and Prototype Pattern,0,0,2018,2018,1,https://github.com/vdkamdar/JAVA-DesignPatterns-Observer-Prototype
Observer,DesignPatternsProject-Builder-Observer,Builder and Observer design patterns explanation with examples + code practices ,0,0,2020,2020,1,https://github.com/Diaj3/DesignPatternsProject-Builder-Observer
Observer,Java-DesignPatterns-Observer-Prototype,Java project to design a Backup System for Student Course Allocations using Observer Pattern and Prototype Pattern,0,0,2018,2018,1,https://github.com/girishkurkute/Java-DesignPatterns-Observer-Prototype
Observer,ObserverDesignPatternInDotNetCSharp,Learn about the Observer Design Pattern in .NET C# with some enhancements.,0,0,2022,2023,1,https://github.com/AhmedTarekHasan/ObserverDesignPatternInDotNetCSharp
Observer,Observer-Pattern,This is one of the most common Design Patterns in Java.,0,0,2021,2021,1,https://github.com/crptz/Observer-Pattern
Observer,DesignPatterns7---Observer-Example,,0,0,2015,2015,1,https://github.com/surreptakos/DesignPatterns7---Observer-Example
Observer,DesignPatterns_Assignment2Observer,Code for Assigment2 ,0,1,2015,2015,1,https://github.com/jfelts1/DesignPatterns_Assignment2Observer
Observer,JSONandObserver,"Simple presentation of Alamofire, ObjectMapper, Realm, SnapKit and Observer design pattern",0,0,2017,2017,1,https://github.com/elvi117/JSONandObserver
Observer,observer_librairy,My custom implementation of design pattern Observer using generics and encapsulations,0,0,2020,2020,1,https://github.com/rael06/observer_librairy
Observer,DesignPatterns,"Aplicação em Java com implementação de Padrão Factory, Prototype e Observer",0,0,2023,2023,0,https://github.com/RafaTheMonk/DesignPatterns
Observer,nc-ad-observer,Observer pattern example (https://www.tutorialspoint.com/design_pattern/observer_pattern.htm),0,0,2016,2023,0,https://github.com/nhancv/nc-ad-observer
Observer,Stock-Observer-,Stock Observer - A program to practice using the Java Observer Design Pattern,0,0,2019,2019,2,https://github.com/uncmhsu/Stock-Observer-
Observer,Observer,Simulation d'un programme d'achat et de réservation se basant sur le design pattern observer,0,0,2021,2021,2,https://github.com/FidalyAbassePerso/Observer
Observer,JavaProject-4-CompositeDP_ObserverDP_Serialization,"Restaurant management system using composite desig pattern, observer design pattern and serialization",0,0,2020,2022,1,https://github.com/mklsbali/JavaProject-4-CompositeDP_ObserverDP_Serialization
Observer,Inlamningsuppgift---Design-Patterns,Strategy-Observer-Repository-Decorator,0,0,2021,2021,1,https://github.com/GurkanGenc/Inlamningsuppgift---Design-Patterns
Observer,Observer_Scala_Design_Pattern,Design Pattern Implementation of pub/sub Observer Pattern in Scala.,0,0,2021,2021,1,https://github.com/gunishj/Observer_Scala_Design_Pattern
Observer,Design-Patterns-Python,Singleton Template Adapter Observer,0,0,2021,2021,1,https://github.com/sys123-data/Design-Patterns-Python
Observer,design-patterns,Variation of the Observer Pattern,0,0,2021,2021,0,https://github.com/HristiyanaNikolova/design-patterns
Observer,Design-Pattern-JS,A simple Telephone app done with JavaScript that shows the use of design patterns mainly Observer design pattern and Module design patterns.,0,0,2024,2024,1,https://github.com/Odis-ede/Design-Pattern-JS
Observer,Risk-Game,"Built a very popular board game using MVC, JUnit, Observer Design Pattern and Strategy Design Pattern",0,0,2020,2020,1,https://github.com/Arnav-Bhardwaj/Risk-Game
Observer,ObserverPatternWeatherStation,An example implementation of the observer pattern as defined in Head First Design Pattern.,0,0,2024,2024,1,https://github.com/miketr33/ObserverPatternWeatherStation
Observer,observer-design-pattern,"Observer design pattern assignment from CSCE247, example is of Breaking Bad",0,0,2020,2021,1,https://github.com/nghia-t-nguyen/observer-design-pattern
Observer,ElectricityGridObserver,Small exercise to explore the use of the Observer design pattern,0,0,2019,2021,1,https://github.com/LMHuong/ElectricityGridObserver
Observer,example-observer-pattern,This is a simple example of the Observer design pattern implementation,0,0,2022,2022,1,https://github.com/Cterminis/example-observer-pattern
Observer,DesignPatterns,"Same examples using design Patterns such as composite, observer, strategy among others. ",0,0,2020,2020,1,https://github.com/Jm-Correia/DesignPatterns
Observer,observer-design-pattern,Showing some example of the observer design pattern in Laravel 5,0,0,2014,2014,1,https://github.com/WebBusinessGeek/observer-design-pattern
Observer,PlayerObserverPattern,Just a silly project where I practice the Observer design pattern,0,0,2021,2021,0,https://github.com/Woaf/PlayerObserverPattern
Observer,observer-test-vanilla,"Very simple, straight to the point example of Observer Design pattern.",0,0,2022,2022,1,https://github.com/williamarias4/observer-test-vanilla
Observer,observer-pattern-example,An example showing use of both MVC and Observer Design Patterns,0,0,2019,2019,1,https://github.com/Gichure/observer-pattern-example
Observer,Python_DesignPatterns,"Python Design Patterns: Command, Facade, Factory, Monostate, Observer, Proxy, Singleton, State",0,0,2018,2018,1,https://github.com/Milstein/Python_DesignPatterns
Observer,pyobservable,Test of implementing the observer design pattern for python,0,0,2020,2020,1,https://github.com/Philosophistoria/pyobservable
Observer,pub-sub-js,Very basic implementation of observer (pub-sub) design pattern,0,0,2025,2025,1,https://github.com/pankaj485/pub-sub-js
Observer,ObserverPatternDemo,This repo is a brief example of how the Observer Design Pattern Work. (Server Side),0,0,2023,2023,2,https://github.com/murregoh/ObserverPatternDemo
Observer,Design-Patterns-Uppgift-1,"Inlämningsuppgift 1 av Design Patterns (Strategy, Repository, Observer, Decorator)",0,0,2022,2022,1,https://github.com/marcusnilss0n/Design-Patterns-Uppgift-1
Observer,design-patterns-presentation,A presentation on the Observer and Singleton Design Patterns.,0,0,2015,2015,1,https://github.com/maael/design-patterns-presentation
Observer,central-messaging-system,Central messaging system using Singleton and Observer design patterns.,0,0,2021,2021,1,https://github.com/jvirico/central-messaging-system
Observer,PatternsInCpp,"Design patterns coded in C++ (Decorator, Observer, and Factory)",0,0,2016,2016,1,https://github.com/Enriqe/PatternsInCpp
Observer,booklender,Simple book lending app with the observer design pattern,0,0,2020,2020,1,https://github.com/melodyogonna/booklender
Observer,weather-monitoring-station-observer-builtin,Weather Monitoring Station with Java Built-in Observer Design Pattern,0,0,2019,2019,1,https://github.com/yildizozan/weather-monitoring-station-observer-builtin
Observer,mqttFX,Simple JavaFX project to learn about Observer design pattern.,0,0,2017,2017,1,https://github.com/yunusemrebakir/mqttFX
Observer,projet-caisse,utilisation de design pattern observer dans un systéme comptable,0,0,2022,2022,1,https://github.com/Magamou/projet-caisse
Observer,SingletonObserver,Implementation of the observer design pattern using a singleton instance for updates,0,0,2022,2022,1,https://github.com/kirisuna1/SingletonObserver
Observer,designPatterns1,"Code of Design Patterns with many Principles as Composition, Observer patterns.",0,0,2023,2023,1,https://github.com/raulavilesrodriguez/designPatterns1
Observer,DopaminaBox,"Simple game using socket.io, following observer design pattern.",0,0,2019,2020,0,https://github.com/joaovitorzv/DopaminaBox
Observer,Observer-App,A Project of a second year Object Oriented Design Patterns I module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Observer-App
Observer,ObsererPatternPractice,Project to practice implementation of the Observer design pattern,0,0,2023,2023,1,https://github.com/tdtrevathan/ObsererPatternPractice
Observer,cricbuzz,Low level design of cricbuzz with Observer design pattern,0,0,2024,2024,1,https://github.com/coolspencer/cricbuzz
Observer,library-observer,A C++ program to learn about Observer design pattern through library simulation.,0,0,2020,2020,1,https://github.com/mukta-m/library-observer
Observer,Observer_EX,A example of the usage of the Observer design pattern with Unity3D,0,0,2018,2018,1,https://github.com/davidwfranco/Observer_EX
Observer,OOPs-java,"Implementation of various Design patterns namely Singleton, Observer etc.",0,0,2020,2020,2,https://github.com/BH12ri/OOPs-java
Observer,Telephone-Package,Telephone Package using the Observer Pattern - JavaScript Design Pattern,0,0,2023,2023,1,https://github.com/MarsIfeanyi/Telephone-Package
Observer,Straights,Straights card game using decorator and observer design patterns!,0,0,2023,2023,1,https://github.com/derekmaxin/Straights
Observer,DesignPattern,"c++ sample code, about Design Pattern like : Singleton, Observer...",0,0,2023,2023,1,https://github.com/dinhluanbmt/DesignPattern
Observer,design-patterns-project,"Banking System used with Singleton, Strategy, Observer Design Patterns",0,0,2024,2024,1,https://github.com/umutkaleli/design-patterns-project
Observer,Design_Patterns_Five_In_One_Project,Strategy - Builder - Decorator - Observer -Observer by events Pattern   ,0,0,2021,2021,1,https://github.com/ahmedelbassal/Design_Patterns_Five_In_One_Project
State,bloc,A predictable state management library that helps implement the BLoC design pattern,12008,3403,2018,2025,223,https://github.com/felangel/bloc
State,getx_pattern,Design pattern designed to standardize your projects with GetX on Flutter.,1010,232,2020,2025,8,https://github.com/kauemurakami/getx_pattern
State,godot-design-patterns,Code design patterns in Godot and in GDScript. State machines and the likes.,285,19,2020,2025,3,https://github.com/gdquest-demos/godot-design-patterns
State,DesignPatterns,":key:Elements of Reusable Object-Oriented Software:unlock:is a software engineering book describing software design patterns. The book's authors are Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides with a foreword by Grady Booch.",261,73,2017,2025,1,https://github.com/VanHakobyan/DesignPatterns
State,state,The State design pattern. Implemented in PHP and with style.,234,21,2013,2025,1,https://github.com/sebastianbergmann/state
State,astro-examples,"Astro design patterns examples, client-server state management, markdown, caching",203,13,2022,2025,1,https://github.com/MicroWebStacks/astro-examples
State,bloc.js,A predictable state management library that helps implement the BLoC design pattern in JavaScript,191,23,2019,2025,5,https://github.com/felangel/bloc.js
State,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
State,when-ts,When: recombinant design pattern for state machines based on gene expression with a temporal model,115,3,2018,2024,2,https://github.com/voodooattack/when-ts
State,ofxStateMachine,openFrameworks state machine design pattern implementation.,90,33,2011,2024,1,https://github.com/neilmendoza/ofxStateMachine
State,movie-booking,"An example for booking movie seat, combined of Android Data Binding, State Design Pattern and Multibinding + Autofactory. iOS version is: https://github.com/lizhiquan/MovieBooking",83,32,2017,2024,2,https://github.com/tranngoclam/movie-booking
State,derive,Wrapper library to simplify deriving data from client-side database state and rendering context.  Supports Datascript and React/Om but it is intended to be a more general design pattern.,78,4,2014,2019,4,https://github.com/VitalLabs/derive
State,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
State,react-patterns-playground,"A collection of hands-on React TypeScript exercises focusing on component design patterns, state management, and code organization best practices. Practice by attempting exercises multiple times and compare your solutions.",34,3,2024,2025,1,https://github.com/longmauriceproj/react-patterns-playground
State,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
State,StatePattern,An example of the State design pattern in C#,32,21,2018,2024,1,https://github.com/ardalis/StatePattern
State,KotlinBloc,"A predictable state management library for Kotlin and Jetpack Compose, using the BLoC design pattern.",32,2,2021,2025,0,https://github.com/ptrbrynt/KotlinBloc
State,shopping-cart-flutter,Flutter Shopping Cart examples with different state managements and design patterns,29,12,2020,2024,1,https://github.com/xurxodev/shopping-cart-flutter
State,Bloc.NET,A predictable state management library for C# that helps implement the BLoC design pattern.,21,1,2023,2024,1,https://github.com/chickensoft-games/Bloc.NET
State,flutter-mvvm-arch,"Clean Architecture Design Pattern MVVM - Model - View - View Model Pattern ViewModel Inputs and Outputs Base ViewModel and Base UseCase Application Layer - Dependency Injection, Routes Manager and Application class Application Layer - Extensions and Shared Functions Data Layer - Data Sources (Remote Data Source/ Local Data Source) Data Layer - API Service Client (Same as Retorfit in Android) Data Layer - Calling APIs (Remote Data Source) Data Layer - Adding Logger Interceptor Data Layer - Caching APIs responses (Local Data Source) Data Layer - Json Serialization and Annotations Data Layer - Repository Implementation Data Layer - Mapper (Converting responses into Models) Data Layer - Mapper (Using toDomain Concept) Data Layer - Applying Null Safety Data Layer - Creating Mock APIs (Stub APIs) Domain Layer - Models Domain Layer - Repository Interfaces Domain Layer - UseCases Domain Layer - Either Concepts (Left - Failure) / (Right - Success) Domain Layer - Data Classes Presentation Layer - UI (Splash - Onboarding - Login - Register - Forgot Password - Main - Details - Settings - Notification - Search)) Presentation Layer - State Renderer (Full Screen States - Popup States) Presentation Layer - State Management (Stream Controller - RX Dart - Stream Builder) Presentation Layer - Localisations (English - Arabic), (RTL - LTR) Presentation Layer - Assets Manager (Android and Ios Icons and Images sizes) Presentation Layer - (Fonts - Styles - Themes - Strings - Values - Colors) Managers Presentation Layer - Using Json Animations Presentation Layer - Using SVG images Using 18 Flutter Packages Getting Device Info (Android - Ios) Using Abstract classes",17,3,2022,2024,1,https://github.com/Ahmedabdelalem61/flutter-mvvm-arch
State,Swift-State,Design Patterns in Swift: State,16,3,2016,2022,1,https://github.com/kingreza/Swift-State
State,quark-state,🗽 Simple state manager based on Singleton design pattern,16,0,2017,2023,2,https://github.com/fm-ph/quark-state
State,ActionScript-State-Machine,State machine implemented in ActionScript. Optionally supports (using the decorator design pattern) history and event dispatching.,15,1,2010,2022,1,https://github.com/justinmclean/ActionScript-State-Machine
State,cfsm,CFSM - A State Design Pattern for State Machines in C-Language.,14,2,2024,2025,2,https://github.com/nhjschulz/cfsm
State,lazx,A state management library based on the ViewModel design pattern for Flutter.,12,3,2021,2024,1,https://github.com/borombo-git/lazx
State,bloc,A predictable state management library that helps implement the BLoC design pattern,12,2,2021,2023,120,https://github.com/PlugFox/bloc
State,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
State,state_objects,'State' Design Pattern from the Gang of Four book,12,0,2012,2024,1,https://github.com/mwindholtz/state_objects
State,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
State,IndustrialStandard-ODP-PackML,An OWL ontology design pattern of the PackML state machine. PackML is a common standard defining an abstract machine behavior.,11,1,2021,2025,5,https://github.com/hsu-aut/IndustrialStandard-ODP-PackML
State,coffee-vending-machine,"A coffee vending machine simulator program, implemented to showcase the State Design Pattern in action. ",9,3,2022,2025,0,https://github.com/smmehrab/coffee-vending-machine
State,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
State,Dogs-Explorer-BloC-Architecture-example,"Bloc is a fantanstic state mangement approach in flutter — with bloc pattern we would be able to create very high quality and maintainable code if implemented right because bloc uses design pattern which we are most familiar with. This project would be used to show how well we can utilize bloc by building an app that shows dogs according to breeds, their characteristics and several images of dogs.",8,2,2022,2022,1,https://github.com/mayor04/Dogs-Explorer-BloC-Architecture-example
State,wire-transfer-service,"This microservice was developed with Spring Boot to process wire transfers, verifying the current state in the H2 in-memory database and the fields of the request body model, to validate what the next state would be, using software Design Patterns such as the Pattern State and Strategy.",7,2,2021,2022,0,https://github.com/BlueJnr/wire-transfer-service
State,Book_Turf,Turf booking app - Using MVVM design pattern and  Provider state management.,6,2,2022,2024,1,https://github.com/MUHAMMEDSAHALCP/Book_Turf
State,ultimate-board-game-system,"Java | An object-oriented framework for implemeting any 2-player board game such as Tic-Tac-Toe, Othello, Reversi and Checkers. Uses well known design patterns such as Command, Strategy, vistor, and state",6,2,2019,2024,1,https://github.com/psprao95/ultimate-board-game-system
State,DesignPatterns.State,,5,0,2024,2024,1,https://github.com/dFarkhod/DesignPatterns.State
State,aria-state-machines,State machines for WAI Aria Practices Design Patterns and Widgets,5,0,2019,2024,1,https://github.com/illourr/aria-state-machines
State,extended_bloc,A predictable state management library that helps implement the BLoC design pattern,5,0,2020,2022,1,https://github.com/PlugFox/extended_bloc
State,Unity-Reusable-Finite-State-Machine-With-Editor,Implementation of state design pattern in Object Oriented Programming with reusable base class for the state machine and includes the editor to make creating and updating state easier.,5,0,2024,2025,1,https://github.com/DhafinFawwaz/Unity-Reusable-Finite-State-Machine-With-Editor
State,E-Commerce-Store-App,An Ecommerce Store app built with Flutter and Firebase that has Light/Dark Mode. The app utilizes the GetX library for state management and follows the MVC (Model-View-Controller) design pattern.  ,5,1,2023,2024,1,https://github.com/aliasar1/E-Commerce-Store-App
State,my_template_flutter_app,"This project contains all what I need to build a new flutter project structured very well with the best dart packages like (GetX for state management and localization ..etc, Inject.dart for dependency injection and a lot of things used the best practice for clean code and design patterns ..etc)",5,1,2021,2021,1,https://github.com/basharkousa/my_template_flutter_app
State,pepper-state-machine-design-example,"Examples for ""State Machine Design"" pattern",4,2,2015,2015,1,https://github.com/KazNishimura-VR/pepper-state-machine-design-example
State,StatePattern,State design pattern implementation in C++,4,0,2014,2020,1,https://github.com/divyangjp/StatePattern
State,react-typescript-state-design-patterns,Design Patterns for State Management using React and Typescript - Workshop Notes,4,1,2019,2020,0,https://github.com/becca-bailey/react-typescript-state-design-patterns
State,active_record_state_pattern,A Rails plugin that implements the state design pattern in ActiveRecord models.,4,0,2009,2014,1,https://github.com/dcadenas/active_record_state_pattern
State,design_patterns_python,This is my Design Patterns repository containing state of the art examples of practical usage of Design Patterns in Python.,4,0,2021,2024,1,https://github.com/FBorowiec/design_patterns_python
State,breakout,"A dotnet implementation of Michael Nygard's Circuit Breaker state machine, using the Gang of Four's STATE design pattern.",4,1,2020,2020,0,https://github.com/harvey-green/breakout
State,Game-Engine-Design,"A game engine that supports a text based game. This was created as a demonstration of use of multiple design patterns be implemented into a single project but working independently of each other. Includes the State pattern, Factory pattern, basic Facade pattern, Decorator pattern and Observer pattern.",4,5,2018,2024,1,https://github.com/Cermic/Game-Engine-Design
State,MementoSharp,"MementoSharp is a extension of memento design pattern on object type , to save state of object and restore it on runtime by state index. ",4,0,2021,2023,1,https://github.com/mstbardia/MementoSharp
State,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
State,react-firebase-boilerplate,"Get started quickly on your next React JS project with this boilerplate build on Atomic Design Pattern that includes protected routing, common dependencies and packages, such as Material UI components (MUI), Firebase integration, and Redux state management. Includes example components and utilities to help you jumpstart your development",4,2,2023,2025,1,https://github.com/bhattiasad99/react-firebase-boilerplate
State,Translator_app,"A simple Flutter app that translates text between multiple languages. Built with MVVM design pattern and Provider for state management. Features real-time translation, language selection, and responsive design. Demonstrates best practices for clean and scalable Flutter app development.",4,0,2024,2025,1,https://github.com/ZyadWKhedr/Translator_app
State,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
State,design-pattern-memento,Another behavioral design pattern called the Memento Design Pattern which is used to restore the state of an object to a previous state.,3,3,2020,2024,1,https://github.com/BrijeshSaxena/design-pattern-memento
State,OnlineDoctorApplication,Medical Diagnosis Console App. A console application for diagnosing patients based on symptoms and booking appointments with specialized doctors. Implements the State design pattern for flexible behavior.,3,3,2022,2024,3,https://github.com/AlmetovKamil/OnlineDoctorApplication
State,design-pattern-state,Simple project with Design Pattern State,3,0,2018,2023,1,https://github.com/augustocolombelli/design-pattern-state
State,rust-fsm-example,Examples of rust state machine design patterns,3,1,2019,2024,1,https://github.com/leverz/rust-fsm-example
State,state_design_pattern,An implementation of the State Design Pattern in Ruby.,3,1,2014,2015,1,https://github.com/dwayne/state_design_pattern
State,design_patterns_cpp,This is my Design Patterns repository containing state of the art examples of practical usage of Design Patterns in modern C++.,3,1,2020,2023,1,https://github.com/FBorowiec/design_patterns_cpp
State,Observer-State-Strategy-design-patterns-,,3,0,2021,2024,1,https://github.com/AmiraslanSumgait/Observer-State-Strategy-design-patterns-
State,design-patterns,"Examples of the Decorator, Observer, State, and the Visitor design patterns in Java",3,0,2015,2021,0,https://github.com/motasay/design-patterns
State,GetX-Shopping,An app that uses MVC design pattern and GetX package for state management.,3,0,2021,2024,1,https://github.com/BBarisKilic/GetX-Shopping
State,StateDesignPatternSample,The State design pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class.,3,1,2022,2023,1,https://github.com/bezzad/StateDesignPatternSample
State,automata.py,"Python implementation of the State Design Pattern, emphasizing the use of instances instead of individual classes.",3,0,2020,2024,1,https://github.com/eidhernan/automata.py
State,methods-enum,Two macros for easy implementation of 'state' design pattern and other dynamic polymorphism using enum instead of dyn Trait,3,1,2022,2024,1,https://github.com/vvshard/methods-enum
State,twitter-clone,A Twitter clone build using Angular 13 and Firebase. It uses NgRx for state management and reactive programming design pattern. ,3,1,2021,2023,1,https://github.com/akkitheakhil/twitter-clone
State,ValueObjectCore,"A value object is a design pattern that represents an immutable object with equality based on its state, not its identity. ",3,0,2023,2025,1,https://github.com/iPazooki/ValueObjectCore
State,Sample-game,"This code example shows how to use a timer, mouse input, keyboard input, and other elements of a simple game. The example also shows how to use the state design pattern for the three states in the game, the introduction screen, the game, and the game over screen. This complicates the code somewhat, but makes it much easier to add states to the game.  It is not really a game, more of a sketch for a game architecture.",3,2,2020,2024,3,https://github.com/Debasis1963/Sample-game
State,keyware," • Designed the Technical specs of software by building class diagram, sequence & state diagram using UML and used Model View Control Design Pattern • Implemented the database of the application by using flat files to store the data of user’s account. • Designed user-friendly interface of password manager by using Scene Builder in JavaFX. Contributors 1. Mohit Sonwane 2. Patrick Chau 3. Oliver Mancebo 4. Artharv Mangal",3,0,2022,2024,1,https://github.com/sonwamoh/keyware
State,RealState-Bidding-DAPP,Group Project for Blockchain Design Patterns,2,5,2020,2023,4,https://github.com/majid-T/RealState-Bidding-DAPP
State,dp-behavioral-observer,Observer is a behavioral design pattern that allows some objects to notify other objects about changes in their state.,2,4,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-behavioral-observer
State,design-fsm,Finite State Machine design pattern for simplified workflows in enterprise applications.,2,2,2013,2020,2,https://github.com/mkuthan/design-fsm
State,DesignPatterns-StatePattern,Design Patterns - State Pattern,2,0,2018,2022,1,https://github.com/MedHassona/DesignPatterns-StatePattern
State,StateDesignPattern,Example of the state design pattern - taken from https://thomasjaeger.wordpress.com/2012/12/13/the-state-design-pattern-vs-state-machine-2/,2,0,2017,2019,1,https://github.com/Ydiren/StateDesignPattern
State,mario-state-pattern,Simple use case of State Design Pattern from GoF,2,0,2022,2023,1,https://github.com/petrenkorf/mario-state-pattern
State,Aladdin-2D-Game,"Developed a 2D game in Greenfoot using JAVA which involved implementing Gang of Four design patterns and using Agile Scrum Methodology. Design patterns include Observer pattern, Command Pattern, State Pattern, Template Method Pattern and Factory Method Pattern.",2,2,2017,2024,6,https://github.com/pavankothawade/Aladdin-2D-Game
State,Finite-State-Machine-Template,A Template for Finite State Machine Design Pattern in Python,2,0,2021,2021,1,https://github.com/mokeam/Finite-State-Machine-Template
State,DesignPatterns,"Implement common design patterns in programming (factory/singleton/composition/element/observation/state, etc.)",2,0,2021,2023,1,https://github.com/Keneyr/DesignPatterns
State,DesignPatterns,"DesignPatterns - Padrões Comportamentais - Técnicas de (Strategy, Chain of Responsibility, Template Method, State, Command e Observer)",2,0,2021,2025,1,https://github.com/marcello222/DesignPatterns
State,DesignPatterns_Java,"Some Design Patterns example in Java e.g. Observable, State- and Stradegypattern etc.",2,0,2019,2020,3,https://github.com/BenjaminBrodwolf/DesignPatterns_Java
State,Queued-State-Machine,A simple C implementation of Queued State Machine (QSM) LabVIEW Design Pattern.,2,1,2020,2024,1,https://github.com/sherwintiongson/Queued-State-Machine
State,android-bloc,State management library to implement the BLoC design pattern on Android.,2,0,2021,2024,1,https://github.com/tgloureiro/android-bloc
State,ObserveDesingPattern,The Observer design pattern is a behavioral design pattern that allows other objects to observe and respond when the state of an object changes,2,0,2023,2023,1,https://github.com/serdarkahraman/ObserveDesingPattern
State,BLoC,🏢 A predictable state management library that helps implement the BLoC design pattern in Swift. ,2,0,2019,2021,1,https://github.com/minikin/BLoC
State,Lets-Chat,"Chat App, with GetX state-management, using MVC design pattern, with firebase as Backend",2,0,2023,2023,1,https://github.com/anaskhalil123/Lets-Chat
State,bloc, A predictable state management library witch helps implement the BLoC design pattern with Kotlin.,2,0,2019,2020,1,https://github.com/glynskyi/bloc
State,SmartReminder,"SmartReminder app by using BLoC as state management, sqlflite, Bloc Design pattern , Shared preferences , local notification",2,0,2022,2023,1,https://github.com/Amgad22318/SmartReminder
State,BLoc_State_Mgt,🧩 BloC State Management: Elevate your Flutter app's structure with this predictable state management library. Streamline your development using the BLoC design pattern effortlessly. Level up your app's organization and enhance predictability! 🚀 #Flutter #BLoC,2,0,2024,2024,1,https://github.com/yordanos-bogale5/BLoc_State_Mgt
State,Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF,"In this project; composite, iterator, proxy, template method and state design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2022,2022,1,https://github.com/kamilhan-karaismailoglu/Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF
State,macho,"The Machine Objects class library (in short Macho) allows the creation of state machines based on the ""State"" design pattern in straight C++.  Created by Eduard Hiti and copied into GitHub by yattom.",2,2,2015,2023,1,https://github.com/yattom/macho
State,Banking-Application-with-GUI,"Banking App with GUI, allows users to deposit, purchase, withdraw and has memory of previous executions of the application. The program writes and read in files of current customer information. Manager is used to add/delete users and is implemented with a singleton design pattern. The customer uses a state design pattern. All relevant javadocs are included as well as UML diagrams.",2,0,2020,2023,1,https://github.com/JoshMelo21/Banking-Application-with-GUI
State,class_schedule,Mobile app developed in Flutter to manage your school/university schedule and homework. It uses BloC as a design pattern and as a state managment. Saving to local storage is done with sqflite package. ,2,0,2023,2025,1,https://github.com/otovic/class_schedule
State,tab_cash_odc,"Tab cash is a Flutter app that use cubit state management and the mvvm design pattern around cash transactions and has 4 requirements, including a father-daughter control service for orange digital center  eid_hackathon .",2,0,2023,2023,1,https://github.com/wafaMohamed/tab_cash_odc
State,plugin-container," Plugin-container is a design pattern similar to Observer, but with ore emphasis on data processing, state change, and cancelable actions.   Very useful and simple pattern to add extension points to your APIs or frameworks.",2,0,2018,2019,1,https://github.com/cancerberoSgx/plugin-container
State,Observer-Design-Pattern-WPF---Samples-,"This design pattern is used when there is a change in the state of an object, and other objects that want to be aware of these changes should be notified. I used BindingToMethod in DataBinding.",2,0,2022,2024,1,https://github.com/YusufsKaygusuz/Observer-Design-Pattern-WPF---Samples-
State,VisitingCardHolder,This project  is built by following MVC design pattern with state management by Providers (Flutter project with dart). Save contact information by input text as well as scan vising card or take a picture of visiting card.   ,2,0,2022,2024,1,https://github.com/Ariful2016/VisitingCardHolder
State,blockchain-trivia,"This is a web application built using React, Next.js v13, and Context API for state management. It allows users to participate in surveys and earn tokens. The application is designed to be responsive and follows good practices of clean code and design patterns.",2,0,2023,2025,1,https://github.com/thomasbeckford/blockchain-trivia
State,OOSW-Project2-SpaceInvanders,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",2,0,2021,2023,1,https://github.com/johnnylongvo/OOSW-Project2-SpaceInvanders
State,TravelExpress,"Travel Express is a travel base java web application that allows a registered user to book hotels and convenient mode of transportation towards his/her destination.  A user can enter any USA county or state the application will display all the hotels with their prices, allows a user to book their choice of hotel,  propose a convenient travel mode (flight/train/car) and prepares his/her itenary. Technology and architecture:Uses Java Servlet with oracle 11g and JDBC connectivity. The UI changes after every 30 seconds, uses client-side validation and Jquery. Factory design pattern has been implemented with a 3 layered architecture the UI(handles the user interface), the BO(handles the business rules) and the DAO(handles the database connectivity) to provide a hassle free good customer/user experience. Designed the architecture of database and defined Entity relationship using concepts like ER modelling . The layering and the architecture help in debugging and simulates a real live web travel application.",2,1,2017,2021,1,https://github.com/anantpanthri/TravelExpress
State,JavaPatterns_State,Software design patterns - State (Java),1,5,2020,2024,2,https://github.com/brunomnsilva/JavaPatterns_State
State,statelib,C implementation of a basic state design pattern,1,4,2015,2021,2,https://github.com/allali/statelib
State,design-pattern-state,State Design Pattern - a behavioral design pattern that allows an object to change its behavior when its internal state changes.,1,2,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-state
State,StatePattern,State Design Pattern,1,0,2025,2025,1,https://github.com/Telenshaina/StatePattern
State,ContaBancariaEstados,Design Pattern State,1,0,2012,2014,1,https://github.com/lucaslimasouza/ContaBancariaEstados
State,State,exemplo Design Pattern State implementado - Conta Bancária e seus States,1,0,2011,2013,1,https://github.com/JeffersonAlmeida/State
State,YahtzeeKata1,Using FactoryMethod (Design Pattern State)  https://refactoring.guru/design-patterns/state,1,0,2019,2019,1,https://github.com/Natika31/YahtzeeKata1
State,CodingShikshak-StateDesignPattern,State Design Pattern using C#,1,0,2020,2020,1,https://github.com/ashishKumarAgarwal/CodingShikshak-StateDesignPattern
State,Design-Patterns,State & Strategy Design Patterns,1,1,2017,2024,1,https://github.com/malwareninja/Design-Patterns
State,StateDesignPattern,State Design Pattern Study (Plural Sight),1,0,2020,2020,0,https://github.com/francieleoliveira/StateDesignPattern
State,state_pattern,State Design Pattern in Java,1,0,2019,2019,1,https://github.com/parsa-JPM/state_pattern
State,State_Erasmus_Nel,State Design Pattern Example project,1,0,2012,2013,0,https://github.com/ErasmusNel/State_Erasmus_Nel
State,robot_AI,State Design Pattern - Artificial Intelligence,1,0,2015,2021,1,https://github.com/newfylox/robot_AI
State,StateDesignPattern,Simple TrafficLights console app with State Design Pattern,1,0,2024,2024,1,https://github.com/AhmedSalehGhaithan/StateDesignPattern
State,DesignPattern-State,Example implementation of State design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-State
State,State-Design-Pattern-Tutorial,State Design Pattern Tutorial in Python,1,0,2023,2024,1,https://github.com/shubhamwagh/State-Design-Pattern-Tutorial
State,StateManager,Simple state manager to apply state design pattern easily.,1,0,2023,2024,1,https://github.com/Quiry-AAK/StateManager
State,DesignPatternsProject-A-Generic-framework-for-state-search-problems,state space search using design patterns,1,1,2018,2021,2,https://github.com/ParasharaRamesh/DesignPatternsProject-A-Generic-framework-for-state-search-problems
State,Splash,"Raster graphics editor, based on design patterns, written in Java Swing with basic drawing features, layers support, transparency, filters and state saving.",1,1,2016,2022,1,https://github.com/t3rmian/Splash
State,STATE_demo_plain_c_stopwatch,STATE design pattern implemented using plain C.,1,0,2015,2023,1,https://github.com/felixpalta/STATE_demo_plain_c_stopwatch
State,RabbitStateMachine,The state machine design pattern for a rabbit,1,0,2014,2018,1,https://github.com/skooter500/RabbitStateMachine
State,state_semaforo,Utilizo o design pattern State para implementar um semáforo,1,0,2018,2018,1,https://github.com/carolinamaciel1/state_semaforo
State,PadroesProjeto,Implementações com design patterns - state: gumball machine,1,0,2022,2022,1,https://github.com/julyanaribeiro/PadroesProjeto
State,TimeBomb,Using state design pattern for TimeBomb exercise,1,0,2021,2022,1,https://github.com/duyuyenpb/TimeBomb
State,state-machine,Simple Java library implementing finite state machine design pattern,1,0,2015,2023,0,https://github.com/andrejb-dev/state-machine
State,State-SwiftUI,State design pattern in SwiftUI with seat booking example,1,0,2024,2024,1,https://github.com/KiranSarella/State-SwiftUI
State,StateDesignPattern,simple usecase of state design pattern in kotlin for database data fetch,1,0,2021,2021,1,https://github.com/saarazari5/StateDesignPattern
State,design-patterns,Implementation of Design patterns as stated by GOF,1,0,2023,2023,1,https://github.com/rahulrauki/design-patterns
State,Design_Pattern,"Design Pattern, like Singleton, Decorator, State, Strategy, etc",1,0,2023,2024,1,https://github.com/PeterHUistyping/Design_Pattern
State,Snack-Vending-Machine,Snack Machine Project implemented using State design pattern,1,0,2022,2022,1,https://github.com/Faris-Abuali/Snack-Vending-Machine
State,online-marketplace,Sample project for use the state design pattern,1,0,2021,2024,1,https://github.com/ShehanThamoda/online-marketplace
State,Pong-State-Machine,Pong video game recreated in Unity usitilizing State Machine design pattern.,1,0,2024,2024,1,https://github.com/Phoebus/Pong-State-Machine
State,state-pattern-react-mobx,"an implementation of the ""state"" design pattern, using React and Mobx",1,0,2017,2017,1,https://github.com/dudiharush/state-pattern-react-mobx
State,Rumors.CoffeeMachine,CoffeeMachine task with State design pattern and Newtonsoft package,1,0,2021,2022,0,https://github.com/ParsyanAny/Rumors.CoffeeMachine
State,swiftui-bloc,The state management BLoC design pattern implementation for SwiftUI,1,0,2024,2024,1,https://github.com/swift-bloc/swiftui-bloc
State,State-DesignPattern,"state design pattern, providing multiple movements for an agent(system actor), JAVA",1,0,2022,2024,1,https://github.com/OthDr/State-DesignPattern
State,microservice-statemachine-designpattern,Implementing a state machine design pattern for an XML message processing microservice.,1,0,2024,2024,2,https://github.com/Huehnematthew8/microservice-statemachine-designpattern
State,Swift-State-Machine,A swift implementation of the state machine design pattern - with a demo implementation.,1,0,2016,2018,0,https://github.com/mamaral/Swift-State-Machine
State,State-DesignPattern,Exercises for the 6th semester design pattern subject at Hue Universiy of Sciences,1,0,2024,2024,1,https://github.com/thanhdatpb/State-DesignPattern
State,books-app,books app use state management  bloc and design pattern mvvm,1,0,2023,2023,1,https://github.com/Mustfalharis/books-app
State,killer-garage-door-csharp,This Kata was resolved by implementing the State Design Pattern.,1,0,2023,2023,1,https://github.com/RubenZagon/killer-garage-door-csharp
State,ClassGameCPP,Class game made in C++. Implements State/Strategy design patterns.,1,0,2017,2018,1,https://github.com/AustinStephens/ClassGameCPP
State,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
State,Academy-State-Design-Patterns,Made with Unity,1,0,2022,2022,1,https://github.com/huseyinahlatli/Academy-State-Design-Patterns
State,SecureStateProject,Two secure state design pattern implementations with different states and levels of user privilege.,1,0,2023,2023,1,https://github.com/ColbyMoney/SecureStateProject
State,state-design-pattern,This is a quick demo of how to implement the state design pattern in java.,1,0,2021,2023,1,https://github.com/moujar/state-design-pattern
State,signal,"A declarative design pattern for reactive state management, written with Deno",1,0,2024,2024,1,https://github.com/jacob-church/signal
State,StateMachineDesignPattern,This is a simple example of a state machine design pattern by Vladimir Petukhov implemented in terms of modern C++,1,0,2020,2023,1,https://github.com/VPERepos/StateMachineDesignPattern
State,Software-design-patterns.-University-Second-Year,"5 Software design patterns work for IS2: Singleton, Factory, State, Observer, Strategy",1,0,2018,2020,2,https://github.com/lakidain/Software-design-patterns.-University-Second-Year
State,Calculator,A calculator based on a state-machine design pattern and dijkstra algorithm,1,0,2020,2020,1,https://github.com/HanaBenami/Calculator
State,Library-Book-Tracker-Application,"An application demonstrating the collaboration of State, Singleton, and Observer Design Patterns",1,0,2022,2022,2,https://github.com/aleeckman/Library-Book-Tracker-Application
State,AircraftManagement_DesignPatterns,"This repository contains a Java application that implements three design patterns: Builder, Abstract Factory, and State patterns. The project also includes comprehensive JUnit tests to verify functionality and ensure smooth operation.",1,0,2024,2024,1,https://github.com/tuanh00/AircraftManagement_DesignPatterns
State,design-patterns,"Mise en oeuvre des design patterns Adapter, Observer, State, Decorator, Proxy, Command et Factory",1,0,2017,2023,3,https://github.com/cdevy/design-patterns
State,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
State,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
State,design-patterns-library,"Sistema bibliotecário com padrões de projetos Strategy, Null objects, Hook methods, Bridge, State e Observer.",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library
State,Watch,"Here's another personal java project which shed light on the ""State"" design pattern",1,0,2022,2022,1,https://github.com/charmest/Watch
State,java-battleship,Group Java Project to create a basic BattleShip game that uses State Design Pattern,1,0,2018,2019,1,https://github.com/drywaters/java-battleship
State,Design-Patterns,"Simulates a Git-like source control system with Command and State Design Patterns for managing branches, file states, and operations like commit, merge, and review.",1,0,2024,2024,1,https://github.com/FriedmanChani/Design-Patterns
State,PushdownAutomataFiniteStateMachine,"An example of how we can implement a Pushdown Automata FSM, a type of state design pattern, in game development",1,0,2023,2023,1,https://github.com/khimleesi/PushdownAutomataFiniteStateMachine
State,State-Pattern,The State Design pattern is used to switch the behavioral states of an active game object at runtime based on a conditional value.,1,0,2024,2024,1,https://github.com/DylanDorey/State-Pattern
State,JogoCobrinhaDesignPatterns,"Simples jogo da cobrinha, desenvolvido em C++ no QtCreator, e fazendo uso de padrões de projeto.  Os padrões utilizados são State, Singleton e Memento.",1,0,2019,2019,1,https://github.com/mauriciobenigno/JogoCobrinhaDesignPatterns
State,alphaCombats,"a 2D interactive PC game developed on Greenfoot using Observer, State, Factory and Composite design patterns",1,0,2017,2019,1,https://github.com/swathisudarshan/alphaCombats
State,VendingMachine,"Implementation of a vending machine with coffee, tea and milk using State Design Pattern in C#",1,0,2023,2023,1,https://github.com/padath314/VendingMachine
State,COE528-Final-Project,"A desktop banking application (a simple CRUD app), that is implemented with a State Design Pattern",1,0,2020,2020,1,https://github.com/rajatKumar2000/COE528-Final-Project
State,pizzaria-with-pattern,"It is an example of a senary where it encompasses design patterns (Abstract Factory, State and Builder)",1,0,2019,2021,0,https://github.com/kevempedro/pizzaria-with-pattern
State,State-Design-Pattern,The state is a behavioral design pattern that lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.,1,0,2020,2022,1,https://github.com/mehboobali98/State-Design-Pattern
State,react-design-patterns-,"React design patterns ranging from preferred syntax for specific tasks to how to arrange components in the most effective way. Among the topics this repo covers are composition, higher-order components, state hoisting, controlled vs. uncontrolled components, and many other patterns that help a React app develop into a well-organized codebase",1,0,2023,2023,0,https://github.com/just-zoomit/react-design-patterns-
State,blog_with_clean_architect_and_bloc_state_management,"blog app : implemented using the clean architect design pattern, supabase and offline storage as data sources, bloc for state management and fpdart for functional programming",1,0,2024,2024,1,https://github.com/Ihimbru-K/blog_with_clean_architect_and_bloc_state_management
State,pollution-source-flutter,A cross platform app develop with flutter framework and dart language. State management use the BLoC design pattern.,1,1,2019,2023,4,https://github.com/taoyimin/pollution-source-flutter
State,postsApp_clean_architecture_with_bloc,"Post application with fake api , was used:(Clean Architecture Design Pattern)And (Bloc State Management)With Rabee Omran",1,0,2023,2024,0,https://github.com/Mansour25/postsApp_clean_architecture_with_bloc
State,ATW-Task,"login screen that integrates with a Firebase backend, utilizing Cubit for state management and following the MVVM design pattern.",1,0,2023,2024,2,https://github.com/moha-b/ATW-Task
State,Python-Flashcards,"Variations of flashcards using Python, Inquirer for CLI, state and iterator design patterns, and Django in a Docker container.",1,0,2023,2023,1,https://github.com/jonfernq/Python-Flashcards
State,CircleTest,Created for a technical test. Created in Godot 3.X using C#. Makes use of the State design pattern.,1,1,2021,2024,0,https://github.com/Hylek/CircleTest
State,warships-game,"this is a console game with usage of spectre, implementing many design patterns such as singleton, state, factory etc.",1,0,2025,2025,1,https://github.com/Doomalewski/warships-game
State,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
State,Getx,Flutter App Integrated with Firebase uses Getx as a state management for the app with the MVC design pattern,1,0,2021,2023,1,https://github.com/MotasemZiad/Getx
State,mvvm-iOS-Swift4-rxSwift,Basic iOS app using Swift4 implemented with a reactive state management (RxSwift and ReactiveCocoa) and MVVM as a design pattern.,1,0,2018,2018,1,https://github.com/danielbastidasr/mvvm-iOS-Swift4-rxSwift
State,GasPump-Driver,"Implemented a driver for gas-pump using various OOPS design pattern such as abstract factory, state pattern and startegy  pattern",1,0,2017,2018,1,https://github.com/vbimaliit/GasPump-Driver
State,Pokemon,"A Small pokemons projects that utilizes best concepts in flutter from design patterns, directory structure,  state management, testing and workfows",1,0,2022,2022,1,https://github.com/okelloEnos/Pokemon
State,BonanzaGame,Simple Card Game implemented in Java for educational Purposes | Design patterns | Project structures | Strategy pattern |State Patterns |Factory method pattern | Plugin mechanismus | Uni Marburg,1,0,2018,2020,3,https://github.com/moustafarhat/BonanzaGame
State,streamed_controller,An opinionated predictable state management library with prebuilt concurrency helpers that implement the Business Logic Component design pattern without complexity of BLoC.,1,0,2023,2025,1,https://github.com/arxdeus/streamed_controller
State,Blogs-App,"This is a simple blog app created using Flutter and Firebase, with state management handled by GetX and following the MVC design pattern.",1,2,2023,2023,1,https://github.com/aliasar1/Blogs-App
State,assistant-robot,"State is a behavioral design pattern. It is used in those cases when, during the execution of the program, the object must change its behavior depending on its state.",1,0,2022,2023,1,https://github.com/Kostiantyn-Liapkalo/assistant-robot
State,Sokoban-Game-Java-By-Rabah,"Jeu Sokoban en Java, utilisant les principes de la programmation orientée objet et des design patterns comme State et Command pour une architecture robuste",1,0,2024,2024,0,https://github.com/RabahCodeVirtuose/Sokoban-Game-Java-By-Rabah
State,To-do-App,an awesome to-do app which built with a clean flutter architecture with the provider state management design patterns in addition to a wonderful UI,1,0,2021,2023,1,https://github.com/MotasemZiad/To-do-App
State,Software-Analysis-Design,"UML-driven backend for a trading card game. Utilizes Singleton, Observer, Composite, State Design patterns. Enables card creation, expansion management, and real-time status updates.",1,0,2024,2024,1,https://github.com/TobiZelders/Software-Analysis-Design
State,Paintful,A Microsoft's Paint app copy-cat. Using double buffer to prevent flickering when drawing shape. State design pattern also used to manage drawing tools.,1,0,2023,2024,1,https://github.com/mossbee/Paintful
State,SmartWeather,"SmartWeather.. Weather app by using https://www.weatherapi.com/ apis ,BLoC as state management, Dio for APIs handling, Bloc Design pattern , Google Maps, Shared preferences ,GeoLocator",1,0,2022,2022,1,https://github.com/Amgad22318/SmartWeather
State,Yu-Gi-Oh-Game,Simple version of Yu-Gi-Oh game with just one monster slot with some attack buffers. Two important design patterns are applied the state and the decorator! ,1,0,2024,2024,1,https://github.com/AyoubBelhaj/Yu-Gi-Oh-Game
State,kmac,"KMAC is a program build with SOROBAN-SDK that makes an  implementation of an Finite State Machine template,  using knowed design pattern and providing extensible functions capabilities.",1,1,2023,2025,1,https://github.com/huitemagico/kmac
State,AOIDFcpp,AOIDFcpp is an C++ framework library to work with ESP-IDF. The library provide an interface class for implementing active object design pattern and hierarchical state machine.,1,0,2022,2024,1,https://github.com/sukrisl/AOIDFcpp
State,KingDominoGame,"Board game application based off the real-life KingDomino.  Followed a Model-View Controller design pattern. Built domain model, implemented state machines, tested using Gherkin and JUnit tests.",1,0,2020,2021,1,https://github.com/gregorywalfish/KingDominoGame
State,Model-Driven-Architecture,"This is the design and implementation of Model Driven Architecture for a GasPump Component using MDA-EFSM and various software design patterns like Observer, Abstract Factory and State Pattern",1,0,2017,2023,1,https://github.com/mohammedshethwala/Model-Driven-Architecture
State,idempotency-manager,"Design patterns and SDKs for distributed transactions ensuring consistency between internal state and external APIs. Includes techniques for achieving idempotency, chaos engineering validation, and solutions for non-idempotent external APIs.",1,0,2024,2024,1,https://github.com/euxir/idempotency-manager
State,archflow-nvim,**ArchFlow.nvim** is a Neovim plugin designed to simplify and accelerate Flutter development by automating the creation of architecture-based feature structures. The plugin supports popular design patterns and state management libraries.,1,0,2025,2025,1,https://github.com/migbyte-0/archflow-nvim
State,tab_cash,"Tab cash is a Flutter app that use cubit state management and the mvvm design pattern around cash transactions and has 4 requirements, including a father-daughter control service for orange digital center eid_hackathon .",1,0,2023,2023,1,https://github.com/MahmoudAhmed121/tab_cash
State,react-boilerplate,"This react boilerplate repository contains the basic infrastructure to build a massive application using sass, rect routing and context for the state-management. This code base following the atomic design pattern for the folder structure",1,0,2021,2023,1,https://github.com/abhinpai/react-boilerplate
State,VendingMachine_FullSystem-Arch-Implementation-,"Designed and implemented a vending machine using various design patterns, including the State pattern, Strategy pattern, and Abstract Factory pattern. Applied Object-Oriented Programming (OOP) principles to create a vending machine utilizing the Model-Driven Architecture (MDA) EFSM.",1,0,2023,2024,1,https://github.com/sadannd/VendingMachine_FullSystem-Arch-Implementation-
State,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
State,VendingMachine,"A vending machine modelled in Java, aimed at showcasing strong design principles, clear, well documented, and thoroughly tested code. Demonstrating an understanding of fundamental concepts in object-oriented programming like encapsulation, abstraction, inheritance, and polymorphism. Implementing the State Design Pattern.",1,0,2024,2024,1,https://github.com/JWhite212/VendingMachine
State,TrainTicketReservationSystem-,"Train Ticket Reservation System: A Java application implementing a ticket reservation system for trains, featuring GUI interactions for viewing available seats, booking seats, and canceling bookings. Uses design patterns such as Singleton, MVC, and State for efficient and structured development.",1,0,2024,2024,2,https://github.com/Swathikone/TrainTicketReservationSystem-
State,observer_pattern,"The observer pattern is a software design pattern in which an object, called the subject (Observable), maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods. Here is an implementation in C#",1,0,2020,2020,1,https://github.com/koimiyovo/observer_pattern
State,VendingMachine,"This project is a vending machine simulator that uses a state design pattern to shift the machine between having no inserted cash, having inserted cash, being in stock mode, and being out of order. The user can insert money, receive change, purchase products, and more!",1,0,2016,2019,1,https://github.com/ELWarnerII/VendingMachine
State,BookStoreApplication," Java and JavaFX-based Virtual Bookstore Application, showcasing advanced software engineering and design pattern integration, including Singleton, State, and Observer. This project features a secure login system, versatile book purchasing options, and admin controls, emphasizing both usability and educational value. It's a demonstration",1,0,2023,2024,5,https://github.com/Verifiedz/BookStoreApplication
State,Unity3d-Fireman-Story-Masomo-Case,"Bu proje masomo staj döneminde geliştirmiş olduğum aksiyon platformer türünde bir oyun projesidir. Bu projede round sistemi, aksiyon sistemi, enemy aı sistemi, farklı haritalar, impact sistemi vb. sistemler bulunmaktadır. Bu sistemleri tasarlarken kullandığım yapılar şunlardır: finite state machine, object pooling design pattern, enemy aı pattern.",1,0,2023,2024,1,https://github.com/yusufortacdeveloper/Unity3d-Fireman-Story-Masomo-Case
State,FoodNinja,"Food Ninja is flutter app enables us to make orders and see all categories of food and restaurents.(using maps,cubit state management,bloc design patterns,clean code,firebase authentication,firbebase storage,and shared prefrences,Api).The application is not finished yet, modifications are made to it",1,0,2023,2024,1,https://github.com/muhamedadel2001/FoodNinja
State,DotsGame,This is another school assignment where the state of a Dots game board needed to be outlined in an MIS (Modular Interface Specification) and then implemented in Java using the MVC (Model View Controller) design pattern. The game of Dots can be found here: https://www.gamesxl.com/think/two-dots.,1,0,2020,2020,1,https://github.com/yousamasham/DotsGame
State,ObserverPattern,"The Observer Pattern is a design pattern that defines a one-to-many dependency relationship between objects. When the state of a subject (e.g., stock price) changes, all its observers (subscribers) are automatically notified and updated. This pattern is useful for implementing systems like notifications, stock tracking, and event handling.",1,0,2024,2025,1,https://github.com/tunkashwinraj/ObserverPattern
State,Object-Oriented-Design-,"Good software design begins before coding. After establishing the initial software requirements, design practices involve two main activities: conceptual design and technical design. In this the importance of design and object-oriented thinking, and learn how to design software using techniques like CRC cards, UML Class Diagram, Sequecen, State Diagram and many more Design Pattern ",1,0,2021,2023,1,https://github.com/hassaanhameed786/Object-Oriented-Design-
State,pokemon-patterns,"Pokemon Patterns is an investment-time project to help me become more confident with using coding design patterns.   Contrary to best practice I will be specifically designing towards patterns instead of allowing them to manifest organically.  At it's core, this app will create Pokemons (original 150 only!!) and allow them to evolve to reach their end-state.",1,0,2022,2024,1,https://github.com/samithoughtbot/pokemon-patterns
State,BrickBraker-Game,"The code demonstrates the fundementals of OOP and makes heavy use of the Observer design pattern, as well as mechanics physics. Obvious objects in this code include: the bricks, the balls, the levels. In addition to the trivial objects stated above, deeper objects exist such as: level objects, background objects, Collidable objects, points, lines and animations as well.",1,0,2022,2022,1,https://github.com/lioz123/BrickBraker-Game
State,OOSW-Project2-,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",1,0,2021,2023,1,https://github.com/classicvalues/OOSW-Project2-
State,TrafficSignal-Java-Design-Pattern-Behavioral-State-Version,"Traffic Signal exercice, using STATE DP (see https://github.com/Valence-IUT-Info-DUT-M3105/TrafficSignal-Java-Design-Pattern-Behavioral)",0,28,2015,2015,1,https://github.com/cubse2/TrafficSignal-Java-Design-Pattern-Behavioral-State-Version
State,LibraryManagementSystem,Using State Design Pattern and Singleton Design Pattern on QT tool ,0,2,2020,2020,1,https://github.com/ayeshatahreem/LibraryManagementSystem
State,state,State design pattern,0,0,2015,2015,1,https://github.com/PHPiotr/state
State,State,State Design Pattern,0,0,2019,2019,1,https://github.com/mmckanna/State
State,State,Design Pattern State,0,0,2022,2022,1,https://github.com/aliounemane2/State
State,state,Design Pattern State,0,0,2020,2020,1,https://github.com/mydesignpatters/state
State,state,State Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/state
State,sipreman,"Student's achievement manager for state polytechnic of malang final projet, built with native php by implementing mvc design pattern and my own sql builder ",0,4,2024,2024,5,https://github.com/hmdnu/sipreman
State,STATE,Implémentation du Design pattern STATE,0,0,2024,2024,1,https://github.com/OlivierCodes/STATE
State,State,State Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/State
State,DP_state2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_state2
State,DP_state1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_state1
State,state,python module for state design pattern,0,0,2016,2016,1,https://github.com/constituent/state
State,State-Design-Pattern,Behavioral Design Patterns: State Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/State-Design-Pattern
State,State,A design pattern State in java implementation,0,0,2016,2016,0,https://github.com/sinzen/State
State,StatePattern,Software design pattern,0,0,2015,2015,2,https://github.com/suganyat/StatePattern
State,StateDesignPatternExample,State Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/StateDesignPatternExample
State,State_Decorator_Bridge,Design Pattern,0,0,2025,2025,1,https://github.com/funatsuya/State_Decorator_Bridge
State,State,Exemplo de Design Pattern (State) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/State
State,State,Week 6 Day 3   - Homework - Design pattern - State,0,0,2016,2016,1,https://github.com/AdrianTuckwell/State
State,State,design pattern associated with the software architecture discipline,0,0,2023,2023,1,https://github.com/alvaro-veiga/State
State,StateDesignPattern,Реализация State Design Pattern,0,0,2022,2022,1,https://github.com/lananek/StateDesignPattern
State,StatePattern__CC,A Design Pattern example,0,0,2023,2023,1,https://github.com/Blaze940/StatePattern__CC
State,state-pattern,State design pattern,0,0,2021,2021,1,https://github.com/Tjatur-K/state-pattern
State,StateDesignPattern,State design pattern demo,0,0,2021,2021,1,https://github.com/rajan4study/StateDesignPattern
State,Design-Pattern-State,State Design Pattern,0,0,2020,2020,1,https://github.com/kumudinithote/Design-Pattern-State
State,state-design-pattern,State design pattern,0,0,2023,2023,1,https://github.com/spragaa/state-design-pattern
State,DP__Elevator,Design Pattern State,0,0,2022,2022,1,https://github.com/Hicham-Essousy/DP__Elevator
State,pattern-state-atm,State design pattern,0,0,2019,2019,0,https://github.com/kdlug/pattern-state-atm
State,State_DP,state design pattern,0,0,2016,2016,0,https://github.com/SayaKh/State_DP
State,State-Design-Pattern,State Design Pattern,0,0,2021,2021,1,https://github.com/fatihmehmett/State-Design-Pattern
State,State-design-pattern,State design pattern ,0,0,2019,2019,0,https://github.com/ahkhi/State-design-pattern
State,HomeworkWeek5,State Design Pattern,0,0,2020,2020,1,https://github.com/kevwill79/HomeworkWeek5
State,Design-Pattern,State Design Pattern,0,0,2016,2016,0,https://github.com/oWimKunGo/Design-Pattern
State,state-design-pattern-php,State Design Pattern,0,0,2019,2019,1,https://github.com/thicolares/state-design-pattern-php
State,state-design-pattern,state design pattern,0,0,2021,2021,1,https://github.com/anilreddyteekulla/state-design-pattern
State,untitled4,state design pattern,0,0,2022,2022,1,https://github.com/yakir1923/untitled4
State,HomeworkWeek5,State Design Pattern,0,0,2020,2020,1,https://github.com/FortKnox80/HomeworkWeek5
State,Codigo-050---Vida-de-Gato,Design Pattern State,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-050---Vida-de-Gato
State,DesignPatterns-state,design patterns project,0,0,2023,2024,2,https://github.com/LIBBYbrand21/DesignPatterns-state
State,StatePatternJavaPhotoshopKata,State design pattern - Java,0,0,2020,2020,1,https://github.com/smarigowda/StatePatternJavaPhotoshopKata
State,EmployeePortal_StateDesignPattern,State Design Pattern Example,0,0,2021,2021,1,https://github.com/VaibhavBhapkar/EmployeePortal_StateDesignPattern
State,angular-state-design-pattern,Typescript design pattern,0,0,2018,2018,1,https://github.com/miladvafaeifard/angular-state-design-pattern
State,Implementation-of-State,Software design pattern,0,0,2015,2015,1,https://github.com/suganyat/Implementation-of-State
State,StatePattern,The State Design Pattern Implementation.,0,0,2020,2020,1,https://github.com/FawzyMokhtar/StatePattern
State,statemachine,State Machine Design Pattern,0,0,2022,2022,1,https://github.com/goheer/statemachine
State,StatePattern,State Software Design Pattern demo,0,0,2013,2019,1,https://github.com/leroyvaughan/StatePattern
State,poaState,TD design pattern State,0,0,2016,2016,1,https://github.com/Jmedjid/poaState
State,StatePatternExample_the-State-Design-Pattern-P1,the State Design Pattern P1,0,0,2024,2024,1,https://github.com/mohamedtayel1980/StatePatternExample_the-State-Design-Pattern-P1
State,StatePatternPresentation,State Design Pattern Presentation Codebase,0,0,2021,2022,1,https://github.com/kofigithub/StatePatternPresentation
State,State-Pattern,C++ | State Design Pattern,0,0,2023,2023,1,https://github.com/c-rye/State-Pattern
State,State-design-pattern-,Trucks state design pattern ,0,0,2021,2021,1,https://github.com/sandeep-alluri/State-design-pattern-
State,CSharp_Behavioral_State,Behavioral State Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_State
State,PlayStateMachine,Design Pattern State Machine,0,0,2014,2014,1,https://github.com/Ericliu001/PlayStateMachine
State,Popularity-State-Machine-for-YouTube-Channels,Design Patterns project,0,0,2021,2021,1,https://github.com/sbengal2/Popularity-State-Machine-for-YouTube-Channels
State,StateGumBallMachine,State Design Pattern - design/implementation,0,0,2018,2018,1,https://github.com/bwielk/StateGumBallMachine
State,context-state-pattern,context state design pattern,0,0,2024,2024,1,https://github.com/kochul2000/context-state-pattern
State,GallowsGameAndroidDemo,"Asset,state design pattern",0,0,2019,2019,1,https://github.com/gaborPato/GallowsGameAndroidDemo
State,DPStateEtat,Design pattern state etat,0,0,2022,2022,1,https://github.com/fagenius/DPStateEtat
State,InputCalculator,State design pattern assignment,0,0,2020,2020,1,https://github.com/maboros/InputCalculator
State,online-shopping-ceng431,`State Design Pattern` example.,0,0,2018,2018,0,https://github.com/xerdink/online-shopping-ceng431
State,Design-Patterns-Examples-State,Design Patterns Examples State,0,0,2022,2022,1,https://github.com/b-y-t-e/Design-Patterns-Examples-State
State,State-Desing-Pattern-Example,State Design Pattern Example,0,0,2021,2024,1,https://github.com/gurcangul/State-Desing-Pattern-Example
State,State-desing-pattern-,Lotion state design pattern,0,0,2021,2021,1,https://github.com/gopinadh66/State-desing-pattern-
State,TestRandom,State Design Pattern example,0,0,2021,2021,1,https://github.com/ngtom/TestRandom
State,vending-machine,use state design pattern,0,0,2024,2024,1,https://github.com/praadit/vending-machine
State,Lab9-State-Pattern,Lab of design patterns,0,0,2024,2024,1,https://github.com/marko-homulak/Lab9-State-Pattern
State,CIS_452_Assignment_9,Rhythm (State Design Pattern),0,0,2020,2020,1,https://github.com/jburi/CIS_452_Assignment_9
State,From-branching-over-booleans-to-state-dp,The state design pattern ,0,0,2022,2022,1,https://github.com/mirzviz/From-branching-over-booleans-to-state-dp
State,StatePattern,example of the state design pattern,0,0,2015,2015,1,https://github.com/cqly/StatePattern
State,StatePattern,Head First Design Patterns Chapter 10,0,0,2023,2023,1,https://github.com/DNate9427/StatePattern
State,DP_StatePattern,Small Project using State Design Pattern.,0,0,2024,2024,1,https://github.com/iAmSidh108/DP_StatePattern
State,StateDesignPattern,CSCE 247 State Design Pattern HW,0,0,2020,2021,1,https://github.com/katiekopper/StateDesignPattern
State,StatePatternDemo,Demo for the state design pattern,0,0,2024,2024,1,https://github.com/ChitreshN/StatePatternDemo
State,StateDesignPattern,Example for the State Design Pattern,0,0,2021,2022,2,https://github.com/BernhardMaier/StateDesignPattern
State,DesignPattern-StategyJava,Design Pattern Strategy feita em Java,0,0,2024,2024,1,https://github.com/KirinRyu/DesignPattern-StategyJava
State,state-pattern,Implementation of design pattern state,0,0,2022,2022,1,https://github.com/jorgesilvamsbr/state-pattern
State,state_design_pattern_flutter,"State Design Pattern in Flutter | Behavioral Design Patterns in Flutter | 02 July, 2023",0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/state_design_pattern_flutter
State,state-design-pattern,State design pattern for CSCE247,0,0,2021,2021,1,https://github.com/bjr0421/state-design-pattern
State,State-Design-Pattern,"Implementation fro ""State Design Pattern""",0,0,2023,2023,1,https://github.com/amr-amin-ali/State-Design-Pattern
State,design-pattern-state,Review on State Design Pattern,0,0,2021,2021,1,https://github.com/marciodegan/design-pattern-state
State,State-desing-pattern,Television using State design pattern,0,0,2021,2021,1,https://github.com/naveenkanumuri/State-desing-pattern
State,State-Design-Pattern,Example of state design pattern,0,0,2020,2020,1,https://github.com/tamerRaed/State-Design-Pattern
State,State-Design-Pattern,State design pattern for plates,0,0,2021,2021,1,https://github.com/Venkyparchuri/State-Design-Pattern
State,StateDP,Simple project that implements state design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/StateDP
State,StateDesign,Simple example of the State Design pattern,0,0,2017,2017,0,https://github.com/Droma76/StateDesign
State,StatePattern,C# basic implementation of State Design pattern,0,0,2018,2018,1,https://github.com/PraveenNunna/StatePattern
State,DesignPatterns_State,Design Patterns: State pattern sample. ,0,0,2017,2017,1,https://github.com/dyamaletdinova/DesignPatterns_State
State,State-Pattern-Implementation,Bank with design patterns implementation,0,0,2017,2022,1,https://github.com/omergokdere/State-Pattern-Implementation
State,State-Design-pattern,Comic books state design pattern,0,0,2021,2021,1,https://github.com/Priyankanaidubandi/State-Design-pattern
State,php-design-patterns-state,PHP Design Patterns - State Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-state
State,Calculator,Basic Calculator using state design pattern,0,0,2018,2018,1,https://github.com/IssaDev/Calculator
State,java_gof_state,"design pattern ""state"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_state
State,state-design-pattern,State Design Pattern in Swift,0,0,2020,2020,0,https://github.com/tagaruma/state-design-pattern
State,StatePatternWPF,A WPF app demonstrating state design pattern,0,0,2017,2017,1,https://github.com/mickaj/StatePatternWPF
State,gamedev_state_design_pattern,State design pattern for gamedev.,0,0,2015,2015,1,https://github.com/codinpsycho/gamedev_state_design_pattern
State,statepattern,OOP design pattern using state objects,0,0,2022,2022,1,https://github.com/benjaminboruff/statepattern
State,state-pattern-with-dart,State Design Pattern with Dart,0,0,2023,2023,0,https://github.com/burakkurtarir/state-pattern-with-dart
State,statePatternExample,Example of the state design pattern - in process,0,0,2020,2023,1,https://github.com/ndrone/statePatternExample
State,StateDesignPatternExample,Example of a Java State Design Pattern,0,0,2024,2024,1,https://github.com/divpatel03/StateDesignPatternExample
State,design-pattern_tp2,Design pattern tp2: Décorator & State,0,0,2019,2019,0,https://github.com/RoscaS/design-pattern_tp2
State,week5-Assignment-state-Pattern,program on state design pattern,0,0,2021,2021,1,https://github.com/Haseeb1111/week5-Assignment-state-Pattern
State,strategy-and-state-design-patterns,strategy and state design patterns,0,0,2024,2024,1,https://github.com/Pabon1712/strategy-and-state-design-patterns
State,GenericUnityStateMachine,This is a generic state machine used for Unity3d. It is built with the State Design Pattern. It uses States which manipulate the Context<T> and is controlled by a ww_StateHandler class. ,0,2,2014,2014,1,https://github.com/Mayn0020/GenericUnityStateMachine
State,React-State-Reducer-Design-Pattern,React State Reducer Design Pattern,0,0,2021,2021,0,https://github.com/karlidaganil/React-State-Reducer-Design-Pattern
State,designPattern,A State Design Pattern Example,0,0,2023,2023,1,https://github.com/tihomir-chobanov/designPattern
State,week5-Assignment,program on state design pattern,0,0,2021,2021,1,https://github.com/Mykhan12/week5-Assignment
State,calculator,Simple calculator state design pattern,0,0,2021,2021,1,https://github.com/fralderete/calculator
State,FanDemo,FanDemo with State Design Pattern,0,0,2022,2022,1,https://github.com/bhavinjava/FanDemo
State,ATMMachine,Java dilinde State Design Pattern,0,0,2024,2024,1,https://github.com/Mervenuryalcinn/ATMMachine
State,HENDRICE_Masi1_COO_Seance5,Builder & State design patterns exercice,0,0,2023,2024,1,https://github.com/Hendremy/HENDRICE_Masi1_COO_Seance5
State,gumballmachine,Gumball Machine State Design Pattern,0,0,2024,2024,0,https://github.com/jonespeter360/gumballmachine
State,StateDesignPatternProject,"It includes state design pattern, object pool",0,0,2022,2022,1,https://github.com/ShivaniMandoddi/StateDesignPatternProject
State,state-pattern,Implementation by Java Sript (Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/state-pattern
State,state-lab,Lab to learn State design pattern,0,0,2021,2022,1,https://github.com/sylvain-reynaud/state-lab
State,state-pattern,A demo of State Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/state-pattern
State,Chess-Game,"Object-Oriented Java Project with the implementation of Design Pattern (State Design Pattern, Memento Design Pattern)",0,0,2024,2024,1,https://github.com/Kazeirokie/Chess-Game
State,stateMachine,Project to show how work State Design Pattern,0,0,2017,2017,1,https://github.com/sidneynakatani/stateMachine
State,StateSnap,Implementation of Memento (PL: Pamiątka) behavioral design pattern,0,0,2025,2025,1,https://github.com/MikeDmoch/StateSnap
State,State,Implementação de um sistema de vacinação para a COVID-19 usando o Design Pattern State,0,0,2021,2021,1,https://github.com/RodrigoFarias23D/State
State,State-design-pattern,Program for studying state design pattern,0,0,2018,2018,1,https://github.com/Opale13/State-design-pattern
State,State-Design-pattern,Sample code for state design pattern.,0,0,2020,2020,1,https://github.com/f-kh/State-Design-pattern
State,State-Design-Pattern,simple State Design Pattern for learning ,0,0,2023,2023,1,https://github.com/farshidpakro/State-Design-Pattern
State,state-design-pattern,Design pattern dealing with different states,0,0,2020,2021,1,https://github.com/nghia-t-nguyen/state-design-pattern
State,atividade-padroes-state,"Example implementation of  Design Pattern ""State""",0,0,2016,2016,1,https://github.com/ads-2016-1/atividade-padroes-state
State,state-example2,An implementation of 'State' design pattern,0,0,2023,2023,1,https://github.com/vladdubceac/state-example2
State,Design_Pattern_State,SEW EK Aufgabe: Design Pattern State,0,0,2020,2020,0,https://github.com/dkupert-tgm/Design_Pattern_State
State,State-Design-Pattern-,State Design Pattern Using GUI demo,0,0,2017,2017,1,https://github.com/sewlesew/State-Design-Pattern-
State,State-Management,State Management and State Design Pattern lecture ,0,0,2024,2024,1,https://github.com/MarsilPop/State-Management
State,State-Design-Pattern,Stopwatch Functions Using State Design Pattern,0,0,2022,2022,1,https://github.com/hashim-hashi/State-Design-Pattern
State,state-design-pattern,Implement state design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/state-design-pattern
State,CSharpStatePattern,Pluralsight Course on C# Design Patterns,0,0,2019,2019,1,https://github.com/jcoz1968/CSharpStatePattern
State,StateDesignPattern,Simple State Design Pattern for Bank Account Membership.,0,0,2024,2024,1,https://github.com/d33raj/StateDesignPattern
State,state_pattern_atm,Implementação do design pattern com testes,0,0,2021,2021,0,https://github.com/C4st3ll4n/state_pattern_atm
State,states,The state machine design pattern in Processing,0,0,2016,2016,1,https://github.com/skooter500/states
State,stately,Playing around with the State design pattern,0,0,2021,2021,1,https://github.com/huangsam/stately
State,State-Design-Pattern,Java simulation of State Design Pattern,0,0,2020,2020,2,https://github.com/onkkul/State-Design-Pattern
State,Movie-Rental-wState,Refactored with the design pattern State,0,0,2016,2016,1,https://github.com/jonathancbarros/Movie-Rental-wState
State,StateDesignPatternDemo,This Program includes concept of State Design Pattern,0,0,2024,2024,1,https://github.com/Akshay1825/StateDesignPatternDemo
State,Stateless_state_machine,demo project - state design pattern + Statless nuget example,0,0,2023,2023,1,https://github.com/andreeapurta/Stateless_state_machine
State,lab2-state-design-pattern,Lab Assignment 2 : State Design Pattern,0,0,2025,2025,1,https://github.com/gerllyn/lab2-state-design-pattern
State,java-state,This Project Implementation the State Design Patterns,0,0,2020,2020,1,https://github.com/phelliperodrigues/java-state
State,design_patterns_in_typescript,Design pattern implementations in TypeScript,0,0,2024,2024,1,https://github.com/Santiagomrn/design_patterns_in_typescript
State,StateMachine,Simple project for testing State design pattern in WPF,0,0,2015,2015,1,https://github.com/4tuneTeller/StateMachine
State,More-Design-Patterns,-Implemented the State design pattern; - Implemented the Strategy design pattern - Implemented the Decorator design pattern - Implemented the Composite design pattern; - understand UML State Diagrams; and - integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/More-Design-Patterns
State,StateMachineByDesignPatternCpp,State machine sample program (C++) by design pattern,0,0,2021,2021,1,https://github.com/kazumasa-kusaba/StateMachineByDesignPatternCpp
State,state-example,An example of 'State' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/state-example
State,State-Design-Pattern-,State design pattern example simulated in Java,0,0,2019,2019,1,https://github.com/ssrishabh96/State-Design-Pattern-
State,DesignPatternState,Exemplo de implementação do Design Pattern State,0,0,2019,2020,1,https://github.com/thiagotls58/DesignPatternState
State,tennis-state-pattern,Tennis kata using state design pattern (@TypeScript),0,0,2022,2023,1,https://github.com/iLLoReal/tennis-state-pattern
State,State-Design-Pattern,Shaved Ice factory using State design pattern,0,0,2021,2021,1,https://github.com/sugadi/State-Design-Pattern
State,state-card-game,Card game using the state design pattern.,0,0,2022,2022,2,https://github.com/umaryusuf11/state-card-game
State,UnityStateMachine,Basic state machine design pattern for unity,0,0,2021,2021,1,https://github.com/lleetllama/UnityStateMachine
State,Expression-validator,Expression-validator using State design pattern,0,0,2018,2018,1,https://github.com/vantonyy/Expression-validator
State,fsm-rs,State Design Pattern Implementation in Rust,0,0,2024,2024,1,https://github.com/crazyoptimist/fsm-rs
State,stateDesignPattern,for state design pattern assignment CSCE 247 Fall 2019,0,0,2019,2019,0,https://github.com/CanalesLuis/stateDesignPattern
State,GameOfCraps,GameOfCraps simulation using State Design Pattern,0,1,2019,2019,1,https://github.com/dasare/GameOfCraps
State,AutomatedTicketVendingSystem,State design pattern (PL: Wzorzec stanu),0,0,2025,2025,1,https://github.com/MikeDmoch/AutomatedTicketVendingSystem
State,DesignPatternState,A demo of the State design pattern,0,0,2014,2014,1,https://github.com/flmacugay/DesignPatternState
State,Vacination,Implementation of the State-Design-Pattern,0,0,2021,2021,1,https://github.com/tristanbrewee/Vacination
State,Homework5,State Design Pattern for week 5,0,0,2019,2019,1,https://github.com/StillWorking/Homework5
State,week5-Attempt2,java program on state design pattern,0,0,2021,2021,1,https://github.com/Haseeb1111/week5-Attempt2
State,AlarmClockProject,Simple program showcasing state design pattern,0,1,2016,2016,1,https://github.com/XGiles2016/AlarmClockProject
State,design-patterns-templated-method,My review on State Design Pattern,0,0,2021,2021,1,https://github.com/marciodegan/design-patterns-templated-method
State,offline02,Vending machine using state design pattern  ,0,0,2018,2018,1,https://github.com/Mosaddek2020/offline02
State,contextAPI-reducer,React design patterns for state management,0,0,2021,2021,1,https://github.com/DDhanushka/contextAPI-reducer
State,turnstile,The Turnstile Application (State Design Pattern),0,0,2022,2022,1,https://github.com/pkozlov9/turnstile
State,Finite-State-Machine,Finite state machine design pattern in javascript,0,1,2014,2016,1,https://github.com/ecorbett/Finite-State-Machine
State,ProjectSimulation,Simulation for projects (State Design Pattern),0,0,2020,2020,1,https://github.com/Fuzziwig/ProjectSimulation
State,game-state-management,learn the state management/ behavioral design pattern,0,0,2022,2022,1,https://github.com/LittleZoski/game-state-management
State,state-design-pattern,Example implementation of the state design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/state-design-pattern
State,rust-state-pattern,Design pattern State use case with Rust,0,0,2021,2021,1,https://github.com/bravados/rust-state-pattern
State,AudioPlayer-States,Atividade a respeito do Design Pattern States,0,0,2024,2024,1,https://github.com/HanielPro/AudioPlayer-States
State,DesignVendingMachine,Vending Machine with state design pattern,0,0,2023,2023,0,https://github.com/arpitkaushik18/DesignVendingMachine
State,Design-Pattern-State,mettre en plaace le design pattern state,0,0,2020,2020,1,https://github.com/Sylia-RAHMANI/Design-Pattern-State
State,sde_door_state,Simple implementation of the state design pattern.,0,0,2024,2024,1,https://github.com/HZ-HBO-ICT/sde_door_state
State,Microwave---State-Design-Pattern,Use of State Design Pattern as Microwave,0,0,2018,2018,1,https://github.com/dvirvar/Microwave---State-Design-Pattern
State,State-Design-Pattern-Example,Implemented simple Design Pattern example in Unity,0,0,2022,2022,1,https://github.com/volodymyrpukha/State-Design-Pattern-Example
State,StateDesingPattern,State design pattern with a use case (note application),0,0,2021,2021,1,https://github.com/yesyigitcan/StateDesingPattern
State,state-design-pattern-project,group term project for bbm486 - design patterns,0,0,2022,2022,1,https://github.com/berke0bayraktar/state-design-pattern-project
State,StatePattern-SimpleIntCalculator,Create a simple integer calculator using State Design Pattern,0,0,2021,2021,1,https://github.com/TatarDaniel/StatePattern-SimpleIntCalculator
State,DesignPatterns-StatePattern_JAVA,JAVA project to design Airport Security System based on Security Factors (Average Travelers and Average Prohibited Items) using State Pattern,0,0,2017,2017,1,https://github.com/shahnish009/DesignPatterns-StatePattern_JAVA
State,Movie-Selling-and-Renting-Application,"Implementation of Design Patterns, i.e : Singleton, Strategy, Composite, Decorator,State design patterns.",0,0,2017,2017,1,https://github.com/ShailJhaveri/Movie-Selling-and-Renting-Application
State,StateDP,This is an example codes implemented by State Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/StateDP
State,statePattern,This is an example of State Design Pattern in JAVA,0,0,2024,2024,1,https://github.com/ClarkBelen/statePattern
State,DesignPatterns_chapter-10,State Pattern,0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-10
State,State_Pattern,This Project provides an overiew on design pattern ,0,0,2021,2021,1,https://github.com/ChandanSP1123/State_Pattern
State,state-gumball,design pattern example series for the State pattern,0,0,2016,2016,1,https://github.com/runnerdave/state-gumball
State,DesignPatterns,First commit - State pattern,0,0,2017,2017,1,https://github.com/mariocervera/DesignPatterns
State,StateDesign,"working State Design Pattern example, for use in various projects",0,0,2014,2014,1,https://github.com/EasonNYC/StateDesign
State,state-pattern,Repository for presentation of the state design pattern,0,0,2019,2019,1,https://github.com/JonasReichhardt/state-pattern
State,dp-state,A simple example of the State design pattern.,0,0,2025,2025,1,https://github.com/guisouzant/dp-state
State,State_Pattern,small projects for practics with Decorator design pattern,0,0,2024,2024,0,https://github.com/Roman-Svyshch/State_Pattern
State,State-Pattern,The State design pattern is demonstrated in java,0,0,2017,2017,1,https://github.com/zrcharbo/State-Pattern
State,PatternStateExample,Example of the design pattern state in python,0,0,2024,2024,1,https://github.com/waterbottle-1L/PatternStateExample
State,state-pattern,Using state design pattern for solving specific problem.,0,0,2022,2022,1,https://github.com/itachiuchihadev/state-pattern
State,State-pattern,State design pattern on java in jukebox example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/State-pattern
State,DesignPatterns-State,,0,0,2018,2018,1,https://github.com/brianstoiber/DesignPatterns-State
State,DesignPatterns-State,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-State
State,designPatternsState,,0,0,2017,2017,1,https://github.com/fifisailing/designPatternsState
State,DesignPatterns-State,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-State
State,State_Design_Pattern,Csce project focused on the state design pattern,0,0,2020,2020,1,https://github.com/MattyD797/State_Design_Pattern
State,DesignPatterns_State,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_State
State,TrabalhandoComState,Desenvolvendo um algoritmo utilizando o Design Pattern State,0,0,2022,2022,1,https://github.com/k3vinrich4rd/TrabalhandoComState
State,DesignPatternsState,,0,0,2016,2016,0,https://github.com/priyapatil1/DesignPatternsState
State,DesignPatterns-State,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-State
State,DesignPatterns-State,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-State
State,DESIGN_PATTERN_STATE,IMPLEMENTING THE DESIGN PATTERN STATE WITH JAVA CORE,0,0,2021,2021,1,https://github.com/EdgarEmmanuel/DESIGN_PATTERN_STATE
State,robot-state-model,robot model with design pattern (state pattern model),0,0,2021,2021,1,https://github.com/rurouny79/robot-state-model
State,DesignPatternsState,,0,0,2018,2018,1,https://github.com/PawelSobczak/DesignPatternsState
State,DesignPatternsStategy,Aprendizado do padrão estratégico de design,0,0,2022,2022,1,https://github.com/vncsegundo/DesignPatternsStategy
State,DesignPatterns-state,,0,0,2023,2023,2,https://github.com/NameRschool/DesignPatterns-state
State,State-design-pattern,Paper for various purposes using state design pattern,0,0,2021,2021,1,https://github.com/hariprasadberelli/State-design-pattern
State,DesignPatterns_State,,0,0,2024,2024,1,https://github.com/Freedom-Coding/DesignPatterns_State
State,StateDesignPatternDemo,This C# project created for demonstrating the State design pattern,0,0,2018,2018,1,https://github.com/Jamaxack/StateDesignPatternDemo
State,State_Design_Pattern,small projects for practics with State design pattern,0,0,2024,2024,1,https://github.com/Roman-Svyshch/State_Design_Pattern
State,DesignPatterns-State,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-State
State,DesignPatterns.State,,0,0,2018,2018,1,https://github.com/iamdjones/DesignPatterns.State
State,StatePattern-ePortfolio,Material for e-Portfolio presentation about the state design pattern,0,0,2017,2017,0,https://github.com/FBLudwig/StatePattern-ePortfolio
State,STATE_demo_cpp_stopwatch,Example project demonstrating STATE design pattern using C++,0,0,2015,2015,1,https://github.com/felixpalta/STATE_demo_cpp_stopwatch
State,movie_db,flutter training project - state management design pattern,0,0,2022,2022,1,https://github.com/baonq-2356/movie_db
State,DFSParserExperiments,Detector Final State Ontology Design Pattern Populator,0,0,2016,2016,1,https://github.com/charlesvardeman/DFSParserExperiments
State,VendingMachineSimulator,Vending machine simulator using State design pattern,0,0,2019,2024,1,https://github.com/nikolaynikolaevn/VendingMachineSimulator
State,dotnet_lab3,Memento design pattern in player state save,0,0,2021,2023,1,https://github.com/nikitabubriak/dotnet_lab3
State,CSharp,"OOP | SOLID | Singleton, Command & State Design Patterns",0,0,2024,2024,1,https://github.com/cucabel/CSharp
State,Joystick,Implementation of Joystick using State Design Pattern,0,0,2017,2017,1,https://github.com/IvanAntunovic/Joystick
State,flutter_bloc,flutter state management with bloc (design pattern),0,0,2021,2021,1,https://github.com/riansyahrobi8/flutter_bloc
State,url-shortener-frontend,Model View Presenter And State Design Pattern,0,0,2022,2024,1,https://github.com/jenkem1337/url-shortener-frontend
State,AkasztofaJatek,"Java swing,java,kotlin,state design pattern",0,0,2019,2019,1,https://github.com/gaborPato/AkasztofaJatek
State,State_Machine,A easy implementation of the design pattern state machine.,0,0,2016,2022,1,https://github.com/rokigeorg/State_Machine
State,Assignment5,ATM Machine Example of State Design Pattern,0,0,2018,2018,1,https://github.com/farrukhafzaal/Assignment5
State,shopping-cart,Implementing State Design Pattern with React App,0,0,2021,2021,1,https://github.com/GerryLarios/shopping-cart
State,TrafficLightSimulator,Example of State (PL: Stan) design pattern,0,0,2025,2025,1,https://github.com/MikeDmoch/TrafficLightSimulator
State,State_Management,State design pattern to control player character in game,0,0,2023,2023,1,https://github.com/kevinYang0612/State_Management
State,SimuladorDeSemaforo,Exemplo do Design Pattern State e Refactoring,0,0,2019,2019,0,https://github.com/luischagas/SimuladorDeSemaforo
State,TyrePressureMonitoringSys-L2,Implemented in C++ using State Design pattern.,0,0,2025,2025,1,https://github.com/sunil16kadam/TyrePressureMonitoringSys-L2
State,StatePatternExample,This is an example of a State Design Pattern for SDEV426.,0,0,2022,2022,1,https://github.com/ptagliavia/StatePatternExample
State,vuex,Learning Vuex state management and design pattern,0,0,2024,2024,1,https://github.com/md-suhail-git/vuex
State,Observer-and-State-in-Python,Using design patterns - Observe and State in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Observer-and-State-in-Python
State,DesignPatternsStateMashine,,0,0,2024,2024,1,https://github.com/dendefo/DesignPatternsStateMashine
State,State-DesignPatterns-Auto,The project is implemented on the training video: https://www.youtube.com/watch?v=w40qoRAHCrk&list=PLtjuvkyFrt5Wjd-973N117XS7xuuoD6XM&index=9,0,0,2019,2019,1,https://github.com/spyshura/State-DesignPatterns-Auto
State,JAVA-DesignPatterns-State,JAVA project to design Airport Security System based on Security Factors (Average Travelers and Average Prohibited Items) using State Pattern,0,0,2018,2018,1,https://github.com/vdkamdar/JAVA-DesignPatterns-State
State,DesignPatterns-Beh-State,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Beh-State
State,Xperiments.DesignPatterns.State,A litttle implementation of State pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.State
State,DesignPatterns-Behavioral-State,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-State
State,StateMachineDesignParser,a cpp record file parser based on state machine design pattern,0,0,2019,2019,1,https://github.com/shalevdavid/StateMachineDesignParser
State,state-design-pattern,Learning state design pattern from SIT Depa scholarship class,0,0,2019,2019,1,https://github.com/mixkungz/state-design-pattern
State,state-design-ts,Simple example of the state design pattern in TypeScript,0,0,2022,2022,1,https://github.com/kheyenv/state-design-ts
State,statedesignpattern,C# state design pattern to manage complex states of application,0,0,2020,2020,1,https://github.com/kushalseth/statedesignpattern
State,DesignPatterns,"Builder, Factory, Command, Mediator, State, Observer etc.",0,0,2023,2023,1,https://github.com/duhayildirim/DesignPatterns
State,EBookReaderWithStateDesignPattern,Program of Ebook reader with State Design Pattern,0,0,2024,2024,1,https://github.com/assistant1277/EBookReaderWithStateDesignPattern
State,StateDesignPattern_RpgPlayerState,OOD Week 5 - State Design Pattern -  Continuing with the video game theme.,0,0,2021,2021,1,https://github.com/nathanelvfawcett/StateDesignPattern_RpgPlayerState
State,Java_DesignPatterns-State,Estudo do padrão de projeto State ou Estado.,0,0,2021,2021,1,https://github.com/fernando-cadalso/Java_DesignPatterns-State
State,Tc-DesignPatterns-State,,0,0,2023,2023,1,https://github.com/Navid-Mashayekh/Tc-DesignPatterns-State
State,StatePatternJava,This Java Project demonstrates the use of State Design Pattern in Java,0,0,2020,2020,1,https://github.com/praveen-patare/StatePatternJava
State,WizardWithStatePattern,Assignment on: building a wizard using State design Pattern. ,0,0,2016,2016,1,https://github.com/raquibulbari/WizardWithStatePattern
State,design-patterns,Curso de Design Patterns em Java,0,0,2018,2018,1,https://github.com/pedrinhocef/design-patterns
State,State-Design-Pattern-Assignment,State Design Pattern Assignment for CSCE 247 Professor Plante,0,0,2019,2019,1,https://github.com/cameronbrandenburg/State-Design-Pattern-Assignment
State,Behavioral-State,This is a short implementation of the State design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-State
State,TemplatizedState,State design pattern implemented using variadic templates and partial specialization ,0,0,2016,2016,1,https://github.com/jcaicoya/TemplatizedState
State,State-design-pattern---cashpoint,Cashpoint - a study project with using state design pattern,0,0,2018,2019,1,https://github.com/Annusza/State-design-pattern---cashpoint
State,state-pattern,State pattern assignment for CS 330 Design Patterns at UNR.,0,0,2023,2023,1,https://github.com/brown-lyssie/state-pattern
State,simple-state-design-pattern,Learning state design pattern from SIT Depa scholarship class,0,0,2019,2019,1,https://github.com/mixkungz/simple-state-design-pattern
State,nasaq-task,using state design pattern to implement task and task state,0,0,2019,2020,1,https://github.com/bigusef/nasaq-task
State,StateDesignPatternLib,Simple base classes to implement state design pattern in a C++ application.,0,0,2021,2023,1,https://github.com/JanWielgus/StateDesignPatternLib
State,fraction-kata-with-state-pattern,Implémentation du kata Fraction avec le design pattern État,0,0,2023,2023,2,https://github.com/a-petit/fraction-kata-with-state-pattern
State,state,Simple project demonstrating the State design pattern. For this one I made a example which represents states for when you make a Order online.,0,0,2022,2022,1,https://github.com/Piazzi/state
State,SD725-DesignPatterns-State,,0,0,2020,2020,1,https://github.com/bohemian3/SD725-DesignPatterns-State
State,StateDesignPatterns,Examples of State Design Pateerns,0,0,2015,2017,1,https://github.com/swapnilshinde/StateDesignPatterns
State,DesignPatterns,"My templates for Abstract Factory, Adapter, Composite, Command, State",0,0,2018,2018,1,https://github.com/Kropisha/DesignPatterns
State,BikeState-Unity,Demonstrate how to implement the State Design Pattern in Unity,0,0,2022,2022,1,https://github.com/DatTT0706/BikeState-Unity
State,StateDesignPatterns,Using state and context design patterns instead of conditional statements spreading round the code,0,0,2021,2021,1,https://github.com/Jabsal/StateDesignPatterns
State,CannonStatePattern,Implementing State Design Pattern using a cannon as an example,0,0,2018,2018,1,https://github.com/yanyanRYAN/CannonStatePattern
State,Java-Dev-DesignPatterns-StatePattern-UnitMove,,0,0,2017,2017,0,https://github.com/VladimirCores/Java-Dev-DesignPatterns-StatePattern-UnitMove
State,DesignPatterns.CopyMachineState,,0,0,2019,2019,0,https://github.com/hukopo/DesignPatterns.CopyMachineState
State,laveuseMGL805,projet de cours. Application du design pattern State,0,0,2015,2015,0,https://github.com/vidup/laveuseMGL805
State,DesignPattern-StateMachineSample,An example game project to test the State Design Pattern in Unity,0,0,2022,2022,1,https://github.com/mockba1501/DesignPattern-StateMachineSample
State,State-Design-Pattern,Hard-coded state design pattern example for online-shopping-system ,0,0,2016,2016,1,https://github.com/Aidosmf/State-Design-Pattern
State,CoffeeVendingMachine,"Object oriented C++, weekly assignment: state design pattern",0,0,2016,2018,1,https://github.com/nikolehto/CoffeeVendingMachine
State,Spreadsheet-Implementation,"Implementation of Interpreter, State, and Memento design pattern",0,0,2019,2019,1,https://github.com/priteshamrelia/Spreadsheet-Implementation
State,TDState,TD Design Pattern State du cours de POA,0,0,2016,2016,0,https://github.com/bhajar/TDState
State,Design-Patterns,"GOF Design Patterns : observer, strategy, command, composite, state",0,0,2017,2017,1,https://github.com/mesurace/Design-Patterns
State,MonkeyBananaGame,Using state design pattern for various monkey actions,0,0,2017,2017,1,https://github.com/jerrinss5/MonkeyBananaGame
State,Monkey-Banana,Monkey Banana game implementing the State Design Pattern,0,0,2017,2017,1,https://github.com/mbali17/Monkey-Banana
State,MBGame,Small Monkey-Bannana Game using State Design pattern,0,0,2017,2017,1,https://github.com/karanshah21/MBGame
State,MonkeyBananaGame,A game designed on the State Design Pattern.,0,0,2018,2018,1,https://github.com/deepali2208/MonkeyBananaGame
State,cstatepattern,A Sample of State Design Pattern in C.,0,0,2019,2019,1,https://github.com/baryon/cstatepattern
State,VendingMachine,Designed a Vending Machine using state design pattern,0,0,2024,2024,0,https://github.com/arch98/VendingMachine
State,StateDesignPattern,State Design Pattern written by Matthew Graham for CSCE-247 with Portia Plante,0,0,2020,2020,1,https://github.com/grahammc-bit/StateDesignPattern
State,CS5800_HW8_StateAndChainOfResponsibility,CS5800 HW 8 Representing State and Chain of Responsibility Design Patterns,0,0,2024,2024,1,https://github.com/DanielVAppel/CS5800_HW8_StateAndChainOfResponsibility
State,GameHub,"Design pattern CS542 final project made using Object Pool, Snapshot, Singleton, Builder and State Design Pattern.",0,1,2020,2024,1,https://github.com/nihalnihalani/GameHub
State,design-patterns,State pattern,0,0,2014,2014,1,https://github.com/eric-manuguerra/design-patterns
State,State-Design-Pattern,Small Project. An example to State design pattern on java.,0,0,2021,2021,1,https://github.com/Berdugo1994/State-Design-Pattern
State,Cinder-StateDesignPattern-Sample,C++ state design pattern - change implementations of object states efficiently and exstensibly,0,0,2014,2014,1,https://github.com/m1keall1son/Cinder-StateDesignPattern-Sample
State,State-Pattern-Sample-Project,Applied different states for the npc using state design pattern,0,0,2023,2023,1,https://github.com/AbdrahmanSoliman/State-Pattern-Sample-Project
State,state_machine,a silly application using state machine design pattern with smart pointers,0,0,2023,2023,1,https://github.com/machadothi/state_machine
State,js-design-patterns,Examples for design patterns in javascript,0,1,2019,2019,1,https://github.com/AdithyaBhat17/js-design-patterns
State,DesignPatterns-State-TemplateMethod-2024,Repósitorio contendo os códigos do State e Template Method da disciplina de POO - 2024 ,0,0,2024,2024,1,https://github.com/annekarolinneds/DesignPatterns-State-TemplateMethod-2024
State,DesignPatterns_Adaptee_FactoryMethod_State,,0,0,2022,2022,1,https://github.com/yairavital/DesignPatterns_Adaptee_FactoryMethod_State
State,DesignPatternsSolutionWithProblemStatement,,0,0,2020,2020,1,https://github.com/shyamnayak6/DesignPatternsSolutionWithProblemStatement
State,HouseCmdState,a java program that combines the command and state design patterns. ,0,0,2020,2020,1,https://github.com/kwes18/HouseCmdState
State,State_Pattern_Exercise,CS 340 Software Design class exercise for the State design pattern.,0,0,2021,2021,1,https://github.com/king-parker/State_Pattern_Exercise
State,GameOfLife,"This is a Design Pattern study that implements different design patterns on the initial code for GameOfLife. Design Patterns: State, Singleton, Command, Observer, Visitor.",0,0,2023,2023,1,https://github.com/kenhowry/GameOfLife
State,StatePattern_Example,You can reach the article via : https://thecodeprogram.com/explanation-of-state-design-pattern,0,0,2020,2020,1,https://github.com/thecodeprogram/StatePattern_Example
State,unity-state-machine,A lesson on using the state machine design pattern in Unity,0,0,2023,2023,1,https://github.com/buckldav/unity-state-machine
State,DesignPatterns,"Projetos com as metodologias, Builder, Template Method, Cadeia de responsabilidades, Decorator, Observer, State.",0,1,2016,2016,1,https://github.com/diegocar448/DesignPatterns
State,DesignPatterns,"exercises on various design patterns like composite, decorator, state, iterator, observer, strategy, etc.",0,0,2018,2019,1,https://github.com/nirbhay-kekre/DesignPatterns
State,Python_DesignPatterns,"Python Design Patterns: Command, Facade, Factory, Monostate, Observer, Proxy, Singleton, State",0,0,2018,2018,1,https://github.com/Milstein/Python_DesignPatterns
State,designPatterns,"Modeling the anime Bleach to demonstrate the State, Singleton and Factory design patterns.",0,0,2025,2025,1,https://github.com/Curummin/designPatterns
State,state-dp,This is a very simple project to test the State design pattern.,0,0,2023,2023,2,https://github.com/mtrosin/state-dp
State,StatePattern_gumball,"An implementation of the 'State' design pattern, using a gumball machine for the example",0,0,2019,2019,0,https://github.com/roboticsdude60/StatePattern_gumball
State,PatrolSystem-w-StatePattern,"StatePattern is a design pattern that allows an object to completely change its runtime behavior based on its current state. In this project, I produced a project with this design pattern.",0,0,2022,2022,1,https://github.com/oguzhandelibas/PatrolSystem-w-StatePattern
State,StateDesignPatternSandbox,Playing with a Java implementation of the State Design Pattern as described on code-project by thomas_jaeger.<p>http://www.codeproject.com/Articles/509234/The-State-Design-Pattern-vs-State-Machine,0,0,2014,2014,1,https://github.com/buffetboy2001/StateDesignPatternSandbox
State,FSM_StatePattern,Example java project to implement a finite state machine using the state design pattern,0,0,2021,2021,1,https://github.com/sephyld/FSM_StatePattern
State,statemachine,"Simple c++ implementation of state machine design pattern, all in one header file",0,0,2016,2022,1,https://github.com/antkowiak/statemachine
State,state-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern State em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/state-java
State,mk-prg-net.lib,"algorithms, design patterns like repositories, state machines, physical calculations",0,0,2016,2020,1,https://github.com/mk-prg-net/mk-prg-net.lib
State,blackjack-java,blackjack game in java; demonstrates the state design pattern,0,0,2019,2019,0,https://github.com/kriskanya/blackjack-java
State,atm_lld,Simple ATM system design using state machine design pattern,0,0,2024,2024,0,https://github.com/Saswati08/atm_lld
State,TrafficLightSystem,Traffic Light System by using State Design Pattern (C#) ,0,1,2016,2016,0,https://github.com/gmershad/TrafficLightSystem
State,design-patterns,Patron de diseño state,0,0,2023,2023,1,https://github.com/licedrodriguez/design-patterns
State,Traffic,A traffic light implementation using the State Design Pattern,0,0,2025,2025,1,https://github.com/RLittlesII/Traffic
State,Simple-Clock,A simple clock implementation using the State Design pattern,0,0,2017,2017,0,https://github.com/princesden/Simple-Clock
State,TrafficLight,An implementation of State Design Pattern and unit tests,0,0,2020,2020,1,https://github.com/gitkhurram/TrafficLight
State,SoftwareEngineering-DesignPatterns-Exercise4-State,,0,0,2020,2020,1,https://github.com/PinkDraconian/SoftwareEngineering-DesignPatterns-Exercise4-State
State,Demo-Midterm-Design-Pattern,Demo midterm Design Pattern - Visitor Pattern and State Pattern,0,0,2022,2022,1,https://github.com/timothy-pham/Demo-Midterm-Design-Pattern
State,coffee-machine,Coffee Machine project from Hyperskill implementing State Design Pattern,0,0,2020,2020,1,https://github.com/batetolast1/coffee-machine
State,PaperReviewProcess,"Paper review process, learning about the state design pattern",0,0,2020,2020,1,https://github.com/djordjejanjic/PaperReviewProcess
State,observer-shopping-cart,shopping cart with observer design pattern (and state management),0,0,2020,2020,1,https://github.com/cembakca/observer-shopping-cart
State,Worapakorn644259018-StatePatternGM,ชื่อ นายวรปกร จารุศิริพจน์ รหัสนักศึกษา644259018 หมู่เรียน64/45 งาน Gumball Machine (Design Pattern - LinkGitHub),0,0,2023,2023,1,https://github.com/WorapakornJarusiriphot/Worapakorn644259018-StatePatternGM
State,GameOfCraps,finished Game of Craps simulation using State Design Pattern,0,0,2018,2018,1,https://github.com/jkelley1689/GameOfCraps
State,VendingMachine,Vending Machine Low Level Design with State Design Pattern,0,0,2024,2024,1,https://github.com/AtharvT/VendingMachine
State,QSM-with-Event-handler,QUEUED STATE MACHINE WITH PRODUCER-CONSUMER DESIGN PATTERN TEMPLATE,0,0,2019,2019,0,https://github.com/Tsendsuren/QSM-with-Event-handler
State,States-Census-Analyser,Handling Census & Code Data for Multiple Countries with Application of Design Patterns,0,0,2022,2022,1,https://github.com/Viney111/States-Census-Analyser
State,State-Design-Pattern,Example implementation of the State design pattern written in Kotlin for Android.,0,0,2021,2025,1,https://github.com/mosanden/State-Design-Pattern
State,StudentCourseSequencerStateDP,Java Application for Graduation Timeline for Students Using State Design Pattern,0,0,2023,2023,1,https://github.com/khimansusinha/StudentCourseSequencerStateDP
State,State-Management-Projects,This repo is made used for state management techniques and design patterns,0,0,2023,2023,1,https://github.com/Umut-Polat-GM/State-Management-Projects
State,Microwave-State-Pattern,Designed and developed a control system for Microwave using State Design pattern,0,0,2018,2018,1,https://github.com/neha9029/Microwave-State-Pattern
State,StateDesignPattern,I demostrate how the different states of a hair dryer utilizing the state design pattern.,0,0,2021,2021,1,https://github.com/RafaelGutz444/StateDesignPattern
State,DesignPatternState,state design pattern 状态设计模式 C++实现,0,0,2012,2014,1,https://github.com/WhoIsYourBaby/DesignPatternState
State,design-patterns-fellowship,Implemented State pattern,0,0,2022,2022,1,https://github.com/rameezraja275/design-patterns-fellowship
State,Design_Pattern_State,Play with Gum Ball Machine From 'Gang of four' for design pattern,0,0,2021,2021,1,https://github.com/ahmedelbassal/Design_Pattern_State
State,Study-Java-Design-Patterns,A study project using Design Patterns in Java,0,0,2023,2023,1,https://github.com/gabrielteiga/Study-Java-Design-Patterns
State,AtmStateDesignPatternPoC,A possible implementation of an ATM based on State Design Pattern,0,0,2022,2022,1,https://github.com/hasdarius/AtmStateDesignPatternPoC
State,stateful-backend,Creating a stateful application. Understanding Singleton design pattern plus requirement of Pub Sub,0,0,2024,2024,1,https://github.com/SoumyajitGhosh/stateful-backend
State,design-patterns-state,,0,0,2021,2021,2,https://github.com/lukrydz/design-patterns-state
State,Statergy-design-patterns,,0,0,2020,2020,1,https://github.com/ikarrthikse/Statergy-design-patterns
State,DesignPatternsSnake,"Snake game developed using multiple Design Patterns like Observer, Flyweight, Command, Singleton, Servant, Factory, State...",0,0,2022,2023,1,https://github.com/Juggler98/DesignPatternsSnake
State,DesignPatterns-RPNCalculator,"Reverse Polish Notation Calculator using Design Patterns... Command, Memento, State, Strategy, Interpreter,Singleton, Abstract Factory",0,0,2018,2018,1,https://github.com/swaks1/DesignPatterns-RPNCalculator
State,states,"Design Patterns: State, design que resolve problema entre transição de estados de um objeto.",0,0,2016,2016,0,https://github.com/rrodriguess/states
State,state-design-patterns,,0,0,2024,2024,0,https://github.com/amanda-faria/state-design-patterns
State,design-patterns-state,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-state
State,design.patterns.state,,0,0,2021,2021,1,https://github.com/cristianpp/design.patterns.state
State,Design-Patterns--State,,0,0,2024,2024,1,https://github.com/GenadyT/Design-Patterns--State
State,State-Design-Pattern,A sample project to learn a implementation of State Design Pattern in Unity.,0,0,2021,2021,1,https://github.com/Gattai1996/State-Design-Pattern
State,State-Machine-Design-Pattern-Example,"A demonstration of the state machine design pattern, controlling a simulated machine.",0,0,2022,2022,1,https://github.com/airfield20/State-Machine-Design-Pattern-Example
State,design_pattern_state," Develop a system that uses the pattern given in class. ""State"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_state
State,State-Design-Pattern,A design pattern where the class behaviour may change depending on the context,0,0,2023,2023,1,https://github.com/akifislam/State-Design-Pattern
State,memento,Simple project representing the memento design pattern. This project used the same example from my state design pattern project,0,0,2022,2022,1,https://github.com/Piazzi/memento
State,TCP,Transmission Control Protocol for Networking class - uses State design pattern,0,0,2020,2021,1,https://github.com/GuitarMusashi616/TCP
State,ElevatorProject,This project uses both state and mediator java design patterns,0,0,2021,2021,1,https://github.com/JacobGonzales116/ElevatorProject
State,Bank_Account_Management_App,"A bank account management app based on ""State"" design pattern",0,0,2023,2023,1,https://github.com/abrar-alam/Bank_Account_Management_App
State,DesignPatters,"Example of using the state, factory and builder design patterns",0,0,2015,2015,1,https://github.com/jose-zama/DesignPatters
State,flutter_newsapiorg,Uisng MVVM as design pattern and provider as state management.,0,0,2019,2020,1,https://github.com/madz/flutter_newsapiorg
State,Online-Shopping-Android,"Mobile Computing project Design Patterns ,Clean Architecture and state management ",0,0,2023,2024,1,https://github.com/YoussefShaaban-0/Online-Shopping-Android
State,CameraStateMachine,"Implementation of the ""State"" design pattern at example of a typical camera workflow.",0,0,2019,2020,1,https://github.com/saracen24/CameraStateMachine
State,Blender,A Proof-of-Concept project for the State Design Pattern,0,0,2024,2024,1,https://github.com/jcmusic/Blender
State,design-patterns-Facade,Design pattern demo in form of a simple state machine,0,0,2022,2022,3,https://github.com/michal-eclipse/design-patterns-Facade
State,coffee-machine,Coffee machine simulation coded in PHP using State design pattern.,0,0,2024,2024,1,https://github.com/ValdoTR/coffee-machine
State,Jeu_de_Ballon,En java et utilise 2 design-patterns: state et observer,0,0,2024,2024,1,https://github.com/1farahkefi/Jeu_de_Ballon
State,task-state-track-api,implementation of state design pattern in django by using django orm custom managers,0,0,2020,2020,1,https://github.com/motaz-hejaze/task-state-track-api
State,Design_Patterns_example,State/Factory/Strategy pattern example,0,0,2014,2014,1,https://github.com/brunad/Design_Patterns_example
State,multi-platform-technologies-5,"JDBC API. Usage of design patterns (Factory Method, Adapter, State).",0,0,2020,2021,0,https://github.com/v-rublova/multi-platform-technologies-5
State,Flutter-GetX-MVVM-With-REST-APIs,MVVM Design Pattern. GetX for State management with Rest API,0,0,2025,2025,1,https://github.com/JakariaKhan-CSE/Flutter-GetX-MVVM-With-REST-APIs
State,design-patterns,"Demos of event sourcing,  state machine, etc.",0,0,2024,2024,0,https://github.com/jasonw99/design-patterns
State,state-in-ts,Simple example of state design pattern written in Type Script (generated JS also included),0,0,2018,2018,1,https://github.com/mateuszmilewski/state-in-ts
State,DesignPatternsGreenFoot,"The game code has features that demonstrate the design patterns: Observer, State, Factory and Command in Java.",0,0,2015,2017,2,https://github.com/ashwinibalaraman/DesignPatternsGreenFoot
State,Unity-StatePatternExample,The project contains scripts and an example of how to implement the State Design Pattern in Unity3D.,0,0,2022,2022,1,https://github.com/AlexandruPaulescu/Unity-StatePatternExample
State,DesignPatternsJava,"Working and training Java concepts, especially Design Patterns like Strategy, Polymorphism, Chain of Responsability, Template Method, State, Command and Observer. ",0,0,2021,2021,1,https://github.com/Mirajenni/DesignPatternsJava
State,Design-Patterns_State_Pattern,,0,0,2018,2018,1,https://github.com/mpancha1/Design-Patterns_State_Pattern
State,StrangeStateMachineExample,This is a improved version of a state machine design pattern that is found on http://www.codeproject.com/Articles/509234/The-State-Design-Pattern-vs-State-Machine?msg=5079462#xx5079462xx,0,0,2017,2017,1,https://github.com/waqashaneef/StrangeStateMachineExample
State,design-patterns-kotlin,,0,0,2023,2024,2,https://github.com/dya-andrade/design-patterns-kotlin
State,design_patterns-template-state,,0,0,2020,2020,0,https://github.com/TimasJackus/design_patterns-template-state
State,design-patterns-gof-behavioral-state,GoF - Behavioral - State,0,0,2024,2024,1,https://github.com/NelsonBN/design-patterns-gof-behavioral-state
State,DesignPatterns,"Singleton, Factory Method, Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State",0,0,2024,2024,1,https://github.com/huyng1801/DesignPatterns
State,cch-design-patterns-state,Projeto para demonstração do código do padrão de projeto state,0,0,2019,2019,1,https://github.com/viniciuscasani1/cch-design-patterns-state
State,library-design-patterns,"working with factory, state and composite",0,0,2020,2020,1,https://github.com/LauraDevriendt/library-design-patterns
State,Cloud-Design-Patterns,Simple Circuit Breaker State Machine Implementation,0,0,2017,2017,1,https://github.com/shan02/Cloud-Design-Patterns
State,Burger-Ordering-Simulation-System-Assignment,A system that simulates the online burger ordering system involving the Decorator design pattern and State design pattern using Java.,0,0,2021,2021,1,https://github.com/ChooiChunWei/Burger-Ordering-Simulation-System-Assignment
State,JavaStateDesignPattern,This is a project to demonstrate the implementation of State Design Pattern in Java. ,0,0,2020,2021,1,https://github.com/projectOrhan/JavaStateDesignPattern
State,BlackJack-State-Pattern,An implementation of the Classic BlackJack Game using the State and Factory Design Pattern,0,0,2018,2018,0,https://github.com/srijitravi94/BlackJack-State-Pattern
State,senior-state-design-pattern,"an implementation of the state design pattern, using a ceiling fan as an example",0,0,2016,2016,0,https://github.com/tohearstories/senior-state-design-pattern
State,state_pattern_game,A simple space shooter game creaded to demonstrate an implementation of the State design pattern.,0,0,2014,2015,1,https://github.com/hucarv/state_pattern_game
State,State-design-pattern,Use-case of the state design pattern (Turnstile in a metro station) written in python,0,0,2020,2020,1,https://github.com/Farouk-trk/State-design-pattern
State,StatePattern,The state pattern is a behavioral software design pattern that implements a state machine in an object-oriented way.,0,0,2016,2016,1,https://github.com/ySirko/StatePattern
State,design-pattern-state,Explorando o design pattern state em um exemplo que explora diferentes estados de um pagamento,0,0,2022,2022,1,https://github.com/mariasantosdev/design-pattern-state
State,Design-Patterns,"Mediator, Composite, Decorator, State, Strategy, Observer, Abstract Factory, SOLID",0,0,2019,2020,1,https://github.com/ozdemiryucel/Design-Patterns
State,Software-Design-Patterns,Coursework from CS3667 at Appalachian State University,0,0,2021,2021,0,https://github.com/sydneymagee/Software-Design-Patterns
State,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
State,order-food-react-ts,"Sandbox to try out React, Typescript and state management design patterns.",0,0,2018,2019,2,https://github.com/rlloyd2001/order-food-react-ts
State,useProxy,React custom hook that manages global state via proxy design pattern.,0,0,2022,2022,1,https://github.com/ogodeverest/useProxy
State,CoffeeMachineModel,Text based Coffee Machine model. Implementation of State Machine Design Pattern.,0,0,2020,2020,1,https://github.com/JuliaJ7/CoffeeMachineModel
State,s3,🤝 A Simple Sharded Shared State Design Pattern using Standard HashMap ,0,0,2023,2023,1,https://github.com/wildonion/s3
State,EstadosDinamicosCs,Estudando o Design Pattern State com classes que seguem comportamento dinâmico,0,0,2022,2022,1,https://github.com/Antonio91378/EstadosDinamicosCs
State,Design-Patterns,23 design patterns stated by gang of four implemented in Java,0,0,2021,2021,1,https://github.com/Karikari1234/Design-Patterns
State,DesignPatternProject1,"4 Design Pattern(Singleton,State,Strategy,Observer) combined in a project",0,0,2021,2021,1,https://github.com/CemHarput/DesignPatternProject1
State,Trolls_way,A simple command-line game that uses a State Design Pattern,0,0,2023,2023,1,https://github.com/MarcosPatrickExe/Trolls_way
State,ECS160_Design-Patternss,"A demonstration of Singleton, State, and Observer design patterns in Java",0,0,2023,2024,1,https://github.com/andygqw/ECS160_Design-Patternss
State,jq-stopwatch,A basic stopwatch jquery plugin implemented with the state design pattern.,0,0,2021,2021,1,https://github.com/fcemil/jq-stopwatch
State,BomberMan,State and Command Design Patterns Demo while making the Bomberman Game,0,0,2020,2020,1,https://github.com/jmsaylor/BomberMan
State,EntwurfsmusterBasis,"Testat für Software Engineering ||, Anwendung der Design Patterns State und Adapter. ",0,0,2022,2022,1,https://github.com/CocoJasmin/EntwurfsmusterBasis
State,design-patterns,"Simple php design pattern. Memento, State, Strategy, Chain of Responsibility & Decorator",0,0,2021,2021,1,https://github.com/teodoroleckie/design-patterns
State,flutter-MVC-skeleton,Skeleton for flutter using MVC design pattern and Provider state management.,0,0,2023,2023,1,https://github.com/OsamaOmari02/flutter-MVC-skeleton
State,Pinball,"A Java Pinball Machine implementing design patterns (state, composite, singleton, command)",0,0,2021,2022,1,https://github.com/HerbIzzle/Pinball
State,StCmdObsComp,Initial commit of State Design Pattern example for an Order Processor!,0,1,2024,2024,1,https://github.com/THartmanOfTheRedwoods/StCmdObsComp
State,State-Design-Pattern,Implements a State design pattern in a simulated TV CLI to pick what to watch,0,0,2022,2022,1,https://github.com/Felix404-student/State-Design-Pattern
State,Poptart-Dispenser-State-Machine,This program simulates the function of a vending machine using the state machine design pattern,0,0,2019,2019,1,https://github.com/LiamVallance/Poptart-Dispenser-State-Machine
State,state-machine-pattern-experiment,Small platformer experiment project with state machine design pattern created with Unity in fall 2017,0,0,2019,2019,1,https://github.com/jarm111/state-machine-pattern-experiment
State,Refactoring,I am assigned to refactor this java game in my Design Pattern course. https://github.com/Caliduseb/JavaGame,0,0,2021,2021,1,https://github.com/arman18/Refactoring
State,Problem-Statement-on-Design-patterns,,0,0,2024,2024,1,https://github.com/gkramya30/Problem-Statement-on-Design-patterns
State,java_design_patterns_state_mode,java设计模式_状态模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_state_mode
State,Automate-fini-State-Pattern,"exemple d'automate d'éléments finis, design pattern STATE: scenario basic d'un guichet automatique",0,0,2022,2023,1,https://github.com/nacer-lachhab/Automate-fini-State-Pattern
State,flutter-state-management-examples,a practice on how to implement different popular state managements and design patterns in flutter ,0,0,2022,2022,1,https://github.com/namini40/flutter-state-management-examples
State,State-Pattern-Elevator,Implementation of the State design pattern to control the actions and state of a simulated elevator. ,0,0,2023,2024,1,https://github.com/JaydenPal/State-Pattern-Elevator
State,Design-patterns-exercise,"Simple exercise with builder, memento and state design paterns",0,0,2019,2019,1,https://github.com/pawelzajglicz/Design-patterns-exercise
State,state-pattern,Design pattern comportamental State para permitir que um objeto altere seu comportamento quando seu estado interno mudar,0,0,2021,2021,1,https://github.com/Jhow-R/state-pattern
State,Music-Player-Using-State-DP,A music player application written in C++ with the concepts of Design Patterns and inheritance.,0,0,2021,2021,1,https://github.com/Quantum999/Music-Player-Using-State-DP
State,hadoop-statemachine,"Statemachine is a important design pattern in YARN, so stripped out the codes from Hadoop for study",0,1,2018,2018,0,https://github.com/yonger1516/hadoop-statemachine
State,design-patterns,"factory, command, composite, decorator, facade, iterator, mvc, observer, proxy, singleton, state, strategy",0,0,2022,2022,1,https://github.com/apkuznetsov/design-patterns
State,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
State,State_pattern_with_Traffic_light,This shows how a traffic light moves from state to state using a design pattern,0,0,2023,2023,0,https://github.com/i-am-leslie/State_pattern_with_Traffic_light
State,Design-Patterns,"Several small java programs experimenting with design patterns. The design patterns used are the Command, Prototype, Observer, Flyweight, State, and Singleton patterns.",0,0,2019,2019,1,https://github.com/BenDeVries856/Design-Patterns
State,functional-design-patterns,"Monads, free monads, state monads, functors, applicative functors, etc etc",0,0,2018,2018,1,https://github.com/robertbutacu/functional-design-patterns
State,oop-design-patterns,"Understanding Singleton, Factory (+Abstract), Strategy, State, Builder (CPS), Observer, Adapter",0,0,2023,2023,1,https://github.com/xThirteenIII/oop-design-patterns
State,Design-Pattern-State,This repository contains an implementation of the State design pattern studied in my Computer Science bachelor degree.,0,0,2020,2023,1,https://github.com/alcebiadesogamas/Design-Pattern-State
State,MarsRoverFSharp,An attempt to create the MarsRover using a state monad and the state design pattern,0,0,2020,2020,1,https://github.com/jmunsey828/MarsRoverFSharp
State,Lab_11_CalculatorApp,Design calculator app using State design pattern. This project includes UML design and state diagram,0,0,2021,2021,1,https://github.com/htt5059/Lab_11_CalculatorApp
State,ADayAsAnOrc,A simple finite state machine project base for a Design pattern workshop.,0,0,2022,2023,1,https://github.com/merituulie/ADayAsAnOrc
State,lemonade,Practice the click behavior of Jetpack Compose and the State design pattern.,0,0,2023,2023,0,https://github.com/MinhQuan992/lemonade
State,goengine,A simple implementation of a concurrent shared-state design pattern in Go,0,0,2018,2018,1,https://github.com/weijiekoh/goengine
State,WeatherFlutter-Bloc,A predictable state management library that helps implement the BLoC design pattern.,0,0,2019,2019,1,https://github.com/ToanMobile/WeatherFlutter-Bloc
State,EasyGroceryApp,"• Implemented command, observer, state, singleton, composite, iterator design patterns for the app.",0,0,2014,2014,1,https://github.com/shahharsh/EasyGroceryApp
State,State_Machine,In this project we implement a Finite State Automation using State and Memento design patterns and fluent design.,0,1,2021,2021,1,https://github.com/aacastillo/State_Machine
State,repository_pattern_with_getit,A Basic Flutter project using repository design pattern and getit state management ,0,0,2022,2022,1,https://github.com/arorajasman/repository_pattern_with_getit
State,google_bookmarks,Using the State Design Pattern & & Win32 API to automate Google Bookmarks faster,0,0,2019,2019,1,https://github.com/mmulcahy222/google_bookmarks
State,Clean-Architecture,"Build application using clean architecture, MVVM design pattern and Riverpod state management ",0,0,2025,2025,1,https://github.com/rajuislamdev/Clean-Architecture
State,DontFall,"Small platform game made under unity, It uses the State design Pattern.",0,0,2017,2017,1,https://github.com/Halonico/DontFall
State,aps-patterns,Exemplo de cenário usando 3 Design Patterns - State/Observer/Chain of Responsibility,0,0,2019,2019,1,https://github.com/Claudyelle/aps-patterns
State,LibraryCheckout,Library checkout system implementing using state and observer object oriented design pattern.,0,0,2018,2018,1,https://github.com/sdaneshvar/LibraryCheckout
State,pythonTextAdventure,A simple text adventure written to further understand the State design pattern,0,0,2016,2018,1,https://github.com/BugBiteSquared/pythonTextAdventure
State,-State,State design pattern is used to define and manage state of an object |Permite objeto alterar seu comportamento quando estado interno muda,0,0,2021,2021,1,https://github.com/erbson/-State
State,ms-state-handler-template-java,A sample application demonstrating how to do state management of microservices (circuit breaker / state design pattern),0,0,2023,2023,2,https://github.com/rv-nath/ms-state-handler-template-java
State,Design-Patterns,"Primeira etapa do projeto. Desenvolvimento dos padrões State, Strategy, Observer, Null Object & Hook Method.",0,0,2022,2022,1,https://github.com/vini-cavalli/Design-Patterns
State,design-patterns,"implementação dos design patterns: strategy, chain of responsibility, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns
State,SoftwareDevelopment_DesignPatterns,"Creating the Customize Development Framework like Spring framework and Spring Boot by applying the design patterns like.....Singleton,Command,Observer,Facade,Factory,Composit,COR,Strategy,State,Iterator,Adapter,Decorator,Builder,Adapter",0,0,2024,2024,1,https://github.com/HsuMinHtet/SoftwareDevelopment_DesignPatterns
State,TCP-IP-Chat-Application,"TCP/IP Chat Application. An application built in a graduation project of Design Patterns. Implementation of Proxy, Command, State and more design Patterns ",0,0,2023,2023,1,https://github.com/Or-Jerbi/TCP-IP-Chat-Application
State,TCP-IP-Chat-Application-,"TCP/IP Chat Application. An application built in a graduation project of Design Patterns. Implementation of Proxy, Command, State and more design Patterns",0,0,2023,2023,1,https://github.com/AharonMaor/TCP-IP-Chat-Application-
State,code-analysis-state-design-pattern,A code analysis project made to check if a given project folows the State Design Pattern.,0,0,2022,2022,1,https://github.com/savioti/code-analysis-state-design-pattern
State,concurrency_state_models_and_design_patterns,,0,0,2015,2015,2,https://github.com/panmari/concurrency_state_models_and_design_patterns
State,concurrency-state-models-and-design-patterns,,0,0,2017,2018,2,https://github.com/rathrio/concurrency-state-models-and-design-patterns
State,State-Memento-Observer-Design-Patterns-Example,UML Homework #7,0,0,2023,2023,1,https://github.com/Huseyn-007/State-Memento-Observer-Design-Patterns-Example
State,Design-Patterns,"Java implementations of 9 Design Patterns:  Visitor, Factory, State, Strategy, Observer, Singleton, Facade, Composite, Decorator",0,0,2022,2023,1,https://github.com/NLmeng/Design-Patterns
State,Decorator-and-State-Design-Pattern-Combined,Short example of decorator + state design pattern to control view and animation of certain view items ,0,0,2019,2019,1,https://github.com/mariodujic/Decorator-and-State-Design-Pattern-Combined
State,interview-state-problem,A sample code showing how to implement Rule Engine Design pattern for managing a hug number of rules.,0,0,2021,2021,1,https://github.com/vellotocoffe/interview-state-problem
State,State-Pattern,The state pattern is a behavioral software design pattern that implements a state machine in an object-oriented way.,0,0,2017,2017,1,https://github.com/cuiwl/State-Pattern
State,DesignPatternsAndTools,"By the use of projectile pool, state pattern and factory pattern I created mini game where you have to avoid the enemies in order to get score. The goal is simply suriving as long as possible.",0,0,2021,2022,1,https://github.com/TheWeegan/DesignPatternsAndTools
State,Deterministic-Finite-Automata-with-State-design-pattern,An implementation of a DFA machine accepting odd number of 0's with State design patterns,0,0,2019,2019,1,https://github.com/abdullah-taha/Deterministic-Finite-Automata-with-State-design-pattern
State,Tutorial.DesignPatterns.Observer,"The observer pattern is a software design pattern in which an object, named the subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods.",0,0,2022,2022,1,https://github.com/turkerakbulut/Tutorial.DesignPatterns.Observer
State,Design-Patterns,A JavaScript program that implements a Finite State Automaton (FSA) primarily by using the states design pattern.,0,0,2021,2021,1,https://github.com/AdityaTheke/Design-Patterns
State,state-design-car-park,A simple demonstration of the state based design pattern that helped me get my head around its implementation,0,0,2021,2021,1,https://github.com/RaptureAwaits/state-design-car-park
State,Design-Patterns-Demo,Creating a 3d game demo scene using design Patterns (Observer - State Machine - Object Pooling),0,0,2024,2024,1,https://github.com/AlaaaEzzat/Design-Patterns-Demo
State,Clock_Design_Patterns_JavaFx,Digital clock implements observer and state pattern using JavaFx.,0,0,2018,2018,1,https://github.com/heathermortensen/Clock_Design_Patterns_JavaFx
State,Design_Patterns,"Tools and uses of Design Patterns. The like of: Observer, Singleton, State Machine, Object Pooling, MVP and more",0,0,2024,2024,1,https://github.com/sharon123454/Design_Patterns
State,EZStateMachineKit,a easy framework to set up a state design pattern in Objective C,0,0,2021,2021,1,https://github.com/SolistZZJ/EZStateMachineKit
State,flutter_mvc,A Flutter counter project based on MVC Design Pattern and GetX state management.,0,0,2024,2024,1,https://github.com/sphrsgh/flutter_mvc
State,Static-Analyzer,"A context free language which uses the Visitor, State and Builder design patterns.",0,0,2015,2015,2,https://github.com/chriskerley78910/Static-Analyzer
State,LearningDesignPattern,"Learning Design Pattern as Strategy, Chain of responsability, Template Method, State, Command, Observer",0,0,2022,2022,1,https://github.com/BrandonCarlos/LearningDesignPattern
State,testJhipsterAngularProject,Monolithic jhipster generated project for testing design pattern in state management in Angular,0,0,2021,2021,1,https://github.com/ghacupha/testJhipsterAngularProject
State,flutter-base-project,The project uses Clean Architecture as design pattern and Bloc as state management.,0,0,2024,2024,1,https://github.com/iWOLFSTEIN/flutter-base-project
State,redux-basic-duck-pattern,I have implemented a redux state management of bugs using duck-design pattern ,0,0,2021,2021,1,https://github.com/Samin1615088/redux-basic-duck-pattern
State,alarm-clock-pet-project,The Alarm clock is written in OOP style using the design pattern State.,0,0,2024,2024,1,https://github.com/VictorGotsenko/alarm-clock-pet-project
State,Simple-Game-Engine,A simple SFML engine that uses a state design pattern for its entities,0,0,2020,2020,1,https://github.com/Jproque35/Simple-Game-Engine
State,done_module_app,This app is used to implement Provider as state management or design pattern,0,0,2022,2022,0,https://github.com/akhdanpangestuajiwidodo/done_module_app
State,flutter_mvvm,A Flutter counter project based on MVVM Design Pattern and GetX state management.,0,0,2024,2024,1,https://github.com/sphrsgh/flutter_mvvm
State,SDLRPS,Rock paper scissors simulation using the state design pattern to determine current stance,0,0,2024,2024,1,https://github.com/barkmanr/SDLRPS
State,VendingMachineService,Vending machine service is a sample project designed for demonstrating State Design Pattern,0,0,2023,2023,1,https://github.com/kumar0072/VendingMachineService
State,ReObserve,Powerful observable state transition library that utilised Rx.js and Redux design pattern,0,0,2018,2022,1,https://github.com/hlhr202/ReObserve
State,Java-Multi-threads-race-game,"JAVA Game Using Design Patterns  An interactive racing game implemented in Java, showcasing various design patterns and multi-threading.Implemented design patterns: Singleton, Builder, Thread Pool, Factory Method, Prototype, State, Observer-Observable, Decorator, and Delegator",0,0,2024,2025,1,https://github.com/IlanShtilman/Java-Multi-threads-race-game
State,ATM-logic,"Using some good design patterns (state pattern, strategy pattern, abstract factory pattern, etc)",0,0,2015,2015,1,https://github.com/YousMarter/ATM-logic
State,design-patterns1,"aplicação dos padrões de projeto parte 1: strategy, chain, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns1
State,design-patterns,"Projeto simples para fixação de alguns Patterns, tais como: Strategy, Chain of Responsability, State, Template Method, Command e Observer.",0,0,2021,2021,1,https://github.com/E-Rombi/design-patterns
State,TaromApplication---Design-Patterns-State-Template-Method,,0,0,2024,2024,0,https://github.com/TeodorHZR/TaromApplication---Design-Patterns-State-Template-Method
State,StatePatternBubbleGumMachine,"This is an assignment for college that uses the behavioral design pattern called ""State"" to simulate the behavior of a bubble gum machine.",0,0,2023,2025,1,https://github.com/francyelle349/StatePatternBubbleGumMachine
State,Etapa2Atividade2State,"Implementação dos conhecimentos em Design Patterns adquiridos na cadeira de Padrões de Software, ministrada pelo professor João Carlos.",0,0,2021,2021,1,https://github.com/VitorMaverick/Etapa2Atividade2State
State,2D-Jumper-Game-with-JavaAWT,"2D Jumper game and Game engine classes (Renderer2D and Behavior) with design patterns. This project is done for Design Pattern course and includes 6 different design pattern implemented for the game to work. Design patterns include: Template Method, Adapter, Factory Method, Singleton, State and Behavior Patterns.",0,0,2021,2021,1,https://github.com/fGencturk/2D-Jumper-Game-with-JavaAWT
State,Bank_Design_Patterns,"Bank app where I had to implement Command, State and Decorator design patterns during the lectures",0,0,2016,2016,1,https://github.com/wojtasfi/Bank_Design_Patterns
State,status-quo,A simple generic library to implement FSMs (Finite-State Machines) and the State Design Pattern in PHP.,0,0,2020,2021,1,https://github.com/tonix-tuft/status-quo
State,state_management_starting,Project that learning to use flutter to make project with design pattern MVVM and state management like Provider and Riverpod.,0,0,2024,2024,1,https://github.com/htomeload/state_management_starting
State,design-pattern-state,The State design pattern is used when the behavior of an object changes depending on the state of the object.,0,0,2020,2020,1,https://github.com/ajunquit/design-pattern-state
State,cpp-fsm-design-patterns,Apply design patterns to create Finite State Machine with best practice code in c++,0,0,2023,2023,1,https://github.com/omariosman/cpp-fsm-design-patterns
State,design-patterns-snake-game,"Snake Game using MVC for separation of concerns, Observer for game state updates, Singleton for single game instance, State for game status management, Strategy for input handling, and Command for encapsulating actions.",0,0,2024,2024,0,https://github.com/jonnrib/design-patterns-snake-game
State,Design-Patterns,"Introduction to design patterns: Strategy, Observer, Factory, Singleton, Command, Adapter, Faade, Template Method, Iterator, Composite, State, Proxy. Object Oriented design principles, Java/UML. ",0,0,2019,2021,1,https://github.com/YifengQ/Design-Patterns
State,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
State,java-design-patterns,"Design Patterns em Java I: boas práticas de programação. Strategy, Chain of Responsibility, Template Method, State, Command, Observer",0,0,2023,2023,1,https://github.com/Pybony/java-design-patterns
State,alura_design_patterns,"This PHP project represents my studies on design patterns such as Command, Observer, State, Strategy, Iterator, and others",0,0,2025,2025,1,https://github.com/pedro162/alura_design_patterns
State,state-machine,"To ensure correct tracking and updating of each status of each each order, it is necessary to implement the State design pattern.",0,0,2023,2023,1,https://github.com/mayanksdudakiya/state-machine
State,Flutter_todo_app_with_clean_architecture,A simple todo app using clean architecture and BloC design pattern for state management,0,0,2024,2024,1,https://github.com/AliRajab12/Flutter_todo_app_with_clean_architecture
State,design-patterns-unit-tests,"Working with different design patterns like State, Composite, Visitor, Adapter and unit testing via Mockito.",0,0,2020,2020,2,https://github.com/yashj21/design-patterns-unit-tests
State,KomplexaufgabeTaskServicecenterTriebwerk,"Task for SoftwareEngineering. uml modeling and implementation of the design patterns: Observer, COR & State.",0,0,2022,2022,1,https://github.com/CocoJasmin/KomplexaufgabeTaskServicecenterTriebwerk
State,BlueJ-Gumball-Machine,A Java implementation of State design pattern to mimic a real world gumball machine.,0,0,2016,2016,1,https://github.com/Noman-Khan-SJSU/BlueJ-Gumball-Machine
State,ATM-LLd,LLD of ATM (Implemented with combination of state design pattern and chain responsibility pattern),0,0,2024,2024,1,https://github.com/RoshanSharmaCP/ATM-LLd
State,tdd-mars-rover-kata,"A TDD Exercise with  .NET8, xUnit, FluentAssertion.🛰️Design Patterns: Factory Method, State, Command",0,0,2023,2023,1,https://github.com/nicolasrouge/tdd-mars-rover-kata
State,State-Pattern-using-Unity,I learnt about the Finite State Machine design pattern in Unity then implemented it to control how my character moves.,0,0,2020,2020,1,https://github.com/13badjei/State-Pattern-using-Unity
State,GameOfCraps,Game of craps that utilizes state design pattern. Done for Object Oriented Programming class.,0,0,2019,2019,1,https://github.com/nickcostag/GameOfCraps
State,DevOps,"C# + .NET + Onion Architecture + Different design patterns (factory, state, strategy, observer, adapter, template, composite)",0,0,2024,2024,2,https://github.com/CKleijn/DevOps
State,Design-Patterns---JAVA,"Botando em prática os Design Patterns no JAVA (MVC, Abstract Factory, Builder, Factory Method, Singleton, Decorator, Strategy e State)",0,0,2020,2020,0,https://github.com/phbritoo/Design-Patterns---JAVA
State,design-patterns-exercises-with-java,Examples including: Mediator & State & Strategy & Observer & Abstract Factory & Decorator & Composite Design Patterns & SOLID principles  ,0,0,2022,2022,1,https://github.com/hasanyeniada/design-patterns-exercises-with-java
State,designpatterns1,Estudos sobre Design Patterns 1 Strategy - Chain of Responsability - Template Method - State - Command - Observer,0,0,2023,2023,1,https://github.com/mateuscbarbosa/designpatterns1
State,LojaGoF,"Gerenciamento de uma loja de compras simples,utilizando design patterns (singleton, State,Strategy,facade)",0,0,2024,2024,1,https://github.com/MathyLima/LojaGoF
State,Game-Design-Patterns,"Developed a 3 level game using PhaserJS to get hands on State, Command, factory, Proxy and Decorator design pattern.",0,0,2018,2018,6,https://github.com/sricheta92/Game-Design-Patterns
State,JavaDesignPatterns,"Multiple examples of design patterns  : Adapter, Command, Composite, Decorator, State, Fabric, AbstractFabric, FlyWeigth, Mediator, Observer, Prototype, Singleton, Strategy, TemplateMethod",0,0,2022,2022,1,https://github.com/leo77777/JavaDesignPatterns
State,react-design-patterns,"React Design Patterns – A collection of best practices and design patterns for building scalable and maintainable React applications, focusing on component structure, state management, and reusability.",0,0,2024,2025,1,https://github.com/indunil-jay/react-design-patterns
State,StateMachineExample,This is an example of one use for a State Machine design pattern. This illustrates how a security system would activate given different utilization of its states.,0,0,2020,2020,1,https://github.com/bk-wrattler/StateMachineExample
State,xml_parser,An XML Parser written with C++. Uses state machine and a visitor design pattern,0,0,2013,2013,1,https://github.com/oscarhe/xml_parser
State,lightswitch-ts,A TypeScript + VueJS implementation of a dimmable lightswitch based on a state design pattern,0,1,2024,2024,3,https://github.com/ecos-umons/lightswitch-ts
State,QtStateMachine_QtDesignPatterns_Assigment11,,0,0,2021,2021,1,https://github.com/edgecrusher8074/QtStateMachine_QtDesignPatterns_Assigment11
State,Design-Patterns-Java-I,"Curso realizado na plataforma alura,  padrões apreendidos strategy, chain of responsibility, template Method, state, command, Observer",0,0,2023,2023,1,https://github.com/Marcelo-F/Design-Patterns-Java-I
State,Design-Patterns,"Applied various design principles to build software systems using Java. Projects included observer pattern, state pattern, working with threads and locks, visitor pattern, understanding proxy and reflection.",0,0,2017,2018,1,https://github.com/Sethucb/Design-Patterns
State,Design-Patterns-PHP,"Sistema desenvolvido para aplicar os conceitos de padrões de projetos comportamentais (Strategy, Chain Of Responsibbility, Template Method, State, Command, Observer & Iterator)",0,0,2021,2021,1,https://github.com/RenatoAugustoFS/Design-Patterns-PHP
State,Labview-State-Machine-Pipes,State Machine Pipes provides an easy way of implementing the Pipe and Filter design pattern within a state machine in Labview.,0,1,2021,2021,2,https://github.com/oxorigin/Labview-State-Machine-Pipes
State,PatternsPlayground,"Simulating a gaming console runner. Allowing for single-game management using the Singleton design pattern, and game management using the State design pattern for different game states.",0,0,2024,2024,1,https://github.com/Mohamad-Jamal-J/PatternsPlayground
State,Design-Patterns,"This is a game I made in Unity using C# to demonstrate my ability to use design patterns practically. The patterns I use are State, Singleton, Flyweight, Observer, and Simple Factory. ",0,0,2023,2023,1,https://github.com/Dames421/Design-Patterns
State,Bloc-6-flutter-bloc,A predictable state management library that helps implement the BLoC design pattern. v6.0.1,0,0,2020,2020,2,https://github.com/utpal-barman/Bloc-6-flutter-bloc
State,DestiniGame,Game to get comfortable with implementing the MVC design pattern and thinking about the state,0,0,2022,2022,1,https://github.com/yuliyaGrygoryeva/DestiniGame
State,notes-app,"In this application, I use the hive package, design pattern mvc, and state management bloc",0,0,2024,2024,1,https://github.com/ebrahimesmail11/notes-app
State,UnityFPSProject,"Apply design patterns and paradigms such as the Object Pooling, Observer Pattern and State Pattern.",0,0,2024,2024,1,https://github.com/MoistManatee/UnityFPSProject
State,Tokenizer,C++ Tokenizer & SemiExpression builder for C++ and C# code modules using State Based Design Pattern,0,0,2017,2017,1,https://github.com/gsatish90/Tokenizer
State,login-screen,"Flutter login screen with Firebase, Bloc or Cubit for state management and MVVM design pattern",0,0,2024,2024,1,https://github.com/AhmedAshraf200/login-screen
State,coin_rank,Project Structure for calling REST API's using MVVM design pattern and getX state management.,0,0,2022,2022,1,https://github.com/shrijeetx/coin_rank
State,Cafitiria-ordering-system-,"Cafitiria ordering system using some design patterns like : DAO, MVC , BUILDER , STATE , STRATEGY , OBSERVER , VISITOR",0,0,2020,2020,1,https://github.com/esraahabiba/Cafitiria-ordering-system-
State,converter,simple converter app I used to practice on MVVM design pattern and bloc state management.,0,0,2023,2023,1,https://github.com/Ahmed3bdallah1/converter
State,girldev-game,"A game created during the ""Start w GIRLdev"" project. It utilizes the state design pattern.",0,0,2024,2024,1,https://github.com/Alina-1802/girldev-game
State,Software-System-Architecture,"Developed a Java application based on following Design Patterns -  Abstract Factory, Strategy and State pattern",0,0,2018,2018,1,https://github.com/rohanj-0606/Software-System-Architecture
State,3DesignPatternPrograms,"3 demo programs written in Java to demonstrate the command, observer and state design patterns.",0,0,2019,2019,1,https://github.com/GustyWinds24/3DesignPatternPrograms
State,loja.design.patterns,"Estudos junto ao material da Alura sobre o uso e a implementação de design patterns comportamentais : Strategy, Chain of Responsability, Template Method, State, Command, Observer",0,0,2021,2021,1,https://github.com/laismukaizup/loja.design.patterns
State,Puppy-Simulator,A text-based simulator where you play with a puppy! Implements the State design pattern,0,0,2024,2024,1,https://github.com/Kentops/Puppy-Simulator
State,GasPump,"Gas Pump implementation using MDA-EFSM architectural pattern and (Strategy, Abstract Factory, State) design patterns",0,0,2017,2017,1,https://github.com/harshpatil/GasPump
State,Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento,,0,0,2022,2022,1,https://github.com/ZaraBaghdasaryan/Design-Patterns-Abstract-Factory-Adapter-Facade-State-Command-Memento
State,Design_patterns_State-Pattern-to-capture-the-project-requirements,This assignment is to Implement the State Pattern to capture the project requirements - Summer 2020,0,0,2020,2020,1,https://github.com/Shrijeetrupnar/Design_patterns_State-Pattern-to-capture-the-project-requirements
State,Typescript-Design-Patterns,"Object oriented design patterns in pure Typescript. Patterns: Decorator pattern, Observer pattern, Facade pattern, Adapter pattern, State pattern; 2020 Edition - SOLID and all the other patterns",0,0,2017,2020,1,https://github.com/stefantrajkovic7/Typescript-Design-Patterns
State,DoorStatePattern,"A program that shows how state design pattern can be applied to a simple problem like opening, closing, locking and unlocking a door.",0,0,2018,2018,1,https://github.com/vasuag29/DoorStatePattern
State,Design-Patterns,"Explore key software design patterns including Inheritance, Singleton, Adapter, Composite, Observer, Command, State, Decorator, Strategy, Iterator, and MVC. These patterns offer blueprints to solve common design challenges, focusing on object and class communication, not just implementation. ",0,0,2022,2024,1,https://github.com/radubauzh/Design-Patterns
State,the-state-design-pattern-plaground,The state design pattern allows for full encapsulation of an unlimited number of states on a context for easy maintenance and flexibility,0,0,2023,2023,1,https://github.com/BenBella/the-state-design-pattern-plaground
State,Design-Patterns-Summer-2020-Assignment2,In this assignment I have implemented a YouTube Channel using State and Simple Factory Pattern.,0,0,2020,2020,2,https://github.com/ashmeetchhabra/Design-Patterns-Summer-2020-Assignment2
State,csharp-state-machine,Use of State Machine Design Pattern in C#. Based on course by Marc Gilbert. Examples for handling situations based on context or state-based changes.,0,0,2022,2022,1,https://github.com/muhamedkarajic/csharp-state-machine
State,MementoDesignPattern,Design pattern that gives the user the ability to restore an object to its previous state,0,0,2020,2020,1,https://github.com/sandra0498/MementoDesignPattern
State,FragmentExample,This program is an example for simple design pattern and saving the state of the fragment,0,0,2016,2016,0,https://github.com/AnkithaP/FragmentExample
State,LibraryDatabase,"A java implementation of a library database making use of singleton, state, and observer design patterns.",0,0,2019,2019,1,https://github.com/gwboseck/LibraryDatabase
State,ATM_LLD,    Implemented the ATM LLD using the state design pattern and the chain of responsibility for CashDispense,0,0,2024,2024,0,https://github.com/terror26/ATM_LLD
State,Ski-competition,"Java game using the following design patterns: Prototype, Factory Method, Builder, Thread Pool, Decorator, Observer, State",0,0,2021,2021,1,https://github.com/vladich11/Ski-competition
State,transaction_account-console-dotnet,"Projeto em C# que realiza algumas operações em uma conta bancária, utilizando o Design Pattern State",0,0,2022,2023,1,https://github.com/felipetoscano/transaction_account-console-dotnet
State,Unity3DFramework,Contains base classes for Event/Actions & State Machines using design patterns for Unity3D written in C# ,0,0,2017,2017,1,https://github.com/menondj/Unity3DFramework
State,C---Validator,"A C# program that validates incoming user entry data using mediator, state and decorator design patterns",0,0,2020,2020,1,https://github.com/Anesthet1ze/C---Validator
State,SP,"Design Patterns in Java - so long here are Composite, Flyweight, Proxy, Strategy, Iterator, Visitor and State",0,0,2017,2017,2,https://github.com/cpetrescu96/SP
State,cyber-puppy,This is a program that reflects a dog's behavior using Python's design pattern: State.,0,0,2024,2024,0,https://github.com/Dominique-Legaspi/cyber-puppy
State,designpatterns,"Example of use Design Patterns (Strategy, Chain of Responsibility, Template Method, Decorator, State, Builder and Observer)",0,0,2020,2020,1,https://github.com/jagucheski/designpatterns
State,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
State,OOP_CourseWork,"Course work on the design pattern topics. I've made a graphic redactor using wpf and design pattern, such as: Factory Method, Prototype, Chain of Command, Command, Memento,  Strategy, State",0,0,2023,2023,1,https://github.com/allmallino/OOP_CourseWork
State,Object-Oriented-Design-Patterns,"The project demonstrates Object-Oriented Design Patterns in Java, showcasing patterns like Singleton, State, and Strategy through progressive assignments, emphasizing clean, reusable code and thorough testing with JUnit.",0,0,2022,2024,1,https://github.com/shrutivarade/Object-Oriented-Design-Patterns
State,APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS,"Irei estar mostrando na pratica 6 designs patterns na pratica. (Strategy, Chain of responsibility, Template method, State, Command, Observer)",0,0,2021,2021,0,https://github.com/guimeiradev/APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS
State,Memento-Design-Pattern,Memento pattern is a behavioral design pattern. Memento pattern is used to restore state of an object to a previous state. ,0,0,2024,2024,0,https://github.com/KAVINDAPIYUMAL/Memento-Design-Pattern
State,StatePattern,"I wrote this C# program to demonstrate the state design pattern by using an electric car as a subject to 4 states that are: uncharged, minimally charged, low charged, normal charged. Each state prints different strings.",0,0,2021,2021,1,https://github.com/Gegabyt3/StatePattern
State,ChessGame,"Chess Game demonstrating advanced design patterns including Builder, State, and Observer patterns for efficient game state management and piece movement validation.",0,0,2024,2024,1,https://github.com/YoussefHachicha/ChessGame
State,GameCenter,Developed Game-Center in JAVA AWT With using 5+ design-patterns which increase application efficiency by 30% with compare to application without design-patterns. • Game-Center application contains game like Tic-tac-toe and isolation which also implemented save state feature with snapshot design pattern.,0,0,2020,2020,1,https://github.com/Kavan-Patel/GameCenter
State,Todo-List-Application,"Simple Todo List Application made using JAVA, with the purpose of learn Design Pattern Mediator, State, Observer",0,0,2021,2021,1,https://github.com/mfaisalghozi/Todo-List-Application
State,2D-Game,"Side-scroller 2D game (vanilla JS) using sprite animation, state design pattern, parallax background and collision animation ",0,0,2022,2022,1,https://github.com/edwardTunkl/2D-Game
State,State-Design-Pattern,State is a behavioral design pattern that lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.,0,0,2019,2019,1,https://github.com/G0uth4m/State-Design-Pattern
State,rust-state-pattern,The state pattern is an object-oriented design pattern. The crux of the pattern is that we define a set of states a value can have internally. ,0,0,2023,2023,1,https://github.com/ztbochanski/rust-state-pattern
State,OnlineShoppingCart,"An app demonstrating the state design pattern, by simulating the 'cart' feature of an online shopping platform",0,0,2023,2023,1,https://github.com/unniisme/OnlineShoppingCart
State,note_app,A Flutter notepad mobile application with a combination of Hive database and Bloc state management design pattern,0,0,2022,2022,1,https://github.com/TahaAhvazi/note_app
State,Aquarium,"Aquarium application. Using design pattern(singleton, abstract factory, prototype, listener/observer, decorator, memento,state), MVC and threads",0,1,2018,2018,1,https://github.com/KatrinKroin/Aquarium
State,VendingMachine,Design and implement vending machine using State design pattern. This is a Dot Net core console application,0,0,2018,2018,1,https://github.com/JadhavPoonam/VendingMachine
State,Space-Invaders,"the space invader game usingC#, and bunch of design patterns, like Singleton, Factory, Strategy, State and Visitor",0,0,2018,2018,1,https://github.com/Jane-tranquility/Space-Invaders
State,Software-design-patterns,"We picked an existing Memory Match game code from the internet, we did some changed on it then we start to figured out for any software design problem that needs to be solved by choosing an appropriate design pattern. finally, we used Decorator, Facade, Memento, State patterns.",0,0,2019,2019,1,https://github.com/wFahad/Software-design-patterns
State,Intro-To-State-Design-Pattern,State is a behavioral design pattern that lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-State-Design-Pattern
State,cs542-Design-Patterns-Youtube-Channel-Popularity,"A project that relies on the State Pattern and the Factory Pattern, to depict how a Youtube channel can be UNPOPULAR, MILDLY_POPULAR, HIGHLY_POPULAR or ULTRA_POPULAR, and how advertisements of different lengths can be approved or rejected by the Channel based on its Popularity (State).",0,0,2020,2020,2,https://github.com/harshitv95/cs542-Design-Patterns-Youtube-Channel-Popularity
State,Hangman,"Simple Hangman game used for educational purposes to demonstrate the software design patterns state, singleton and template method.",0,0,2023,2023,1,https://github.com/renespeck/Hangman
State,ATM-Model-Driven-Architecture-MDA-,"Design three kinds of ATMs with the following OO design patterns: State pattern, Strategy pattern, Abstract factory pattern",0,0,2014,2014,1,https://github.com/tonymiao2012/ATM-Model-Driven-Architecture-MDA-
State,CS3,These are all my labs for Computer Science 3 Design Patterns from when I attended Kent State University ,0,0,2023,2023,1,https://github.com/jzheng100823/CS3
State,lab-10-guimcarneiro,Laboratório da Semana 10 da Disciplina de Projeto de Software. O tema trabalhado foi o Design Pattern State.,0,0,2020,2020,1,https://github.com/guimcarneiro/lab-10-guimcarneiro
State,Shapes-Game,"A video game that uses advanced software design patterns such as State Pattern, Observer Pattern, and Listener Pattern",0,0,2022,2022,1,https://github.com/Youcef-Sadou/Shapes-Game
State,fruit-ninja,"May 7, 2020, simulation for fruit ninja game, using OOP and Design Patterns (Singleton, Factory, Observer, Command, State)",0,0,2024,2024,1,https://github.com/alexanderkamal/fruit-ninja
State,labwork5,Java implementation for saving and restoring the state of a character in a game using Memento Design Pattern,0,0,2024,2024,1,https://github.com/7910528/labwork5
State,CoffeShopApp_MVC_GETX,"Coffe app to order your coffe, created using MVC as design pattern and GetX as a state management.",0,0,2024,2024,1,https://github.com/Raneem777/CoffeShopApp_MVC_GETX
State,mvc-checkers-web,"Two-player game of Checkers MVC: state OOP design pattern implements logic, FastAPI web UI (dynamic with JS)",0,0,2024,2024,1,https://github.com/and47/mvc-checkers-web
State,pandemic_simulation,"this is a java project that simulates a pandemic, it uses the ""state"" design pattern to simutlate different state of a sickness, and a ""snapshot"" design pattern to let the program save and load simutation's states from different time stamps",0,0,2023,2023,1,https://github.com/Bmil9696pl/pandemic_simulation
State,cos214-assignment2,"During this practical assignment you will be required to implement the Abstract Factory, Strategy and State design patterns.",0,0,2019,2022,2,https://github.com/giovannijoubert/cos214-assignment2
State,Vending-Machine-State-Pattern,This is a Python program with OOP to develop the basic functionality of a vending machine. Here we have tried to maintain a particular Software Design Pattern called State Pattern,0,0,2022,2022,1,https://github.com/Tasmim-Adib/Vending-Machine-State-Pattern
State,java-design-patterns-I-loja,Repositório do curso Jornada do Conhecimento de Back-End Java (Nível Intermediário) - Design Patterns em Java I: boas práticas de programação da plataforma Alura.,0,0,2023,2024,1,https://github.com/Robson-Teixeira/java-design-patterns-I-loja
State,ObserverDesignPattern,Observer is a behavioral design pattern that allows some objects to notify other objects about changes in their state.,0,0,2022,2022,1,https://github.com/HeyBaldur/ObserverDesignPattern
State,News_App, News app using the news API service  with   Flutter. Implement the BLoC design pattern and state management with Bloc.,0,0,2023,2023,1,https://github.com/Josoro/News_App
State,-sF998_design_pattern_observer,Observer is a behavioral design pattern that allows some objects to notify other objects about changes in their state.,0,0,2024,2024,1,https://github.com/ongaikngee/-sF998_design_pattern_observer
State,GameEngines,"Unreal Engine 5 Game Engines, where I used modern design patterns, state machines, and structures in an UE5 project",0,0,2025,2025,1,https://github.com/DylanRothbauer/GameEngines
State,Design-vendingMachine,Design vending machine using various patterns like State Design Pattern and will also use Strategy pattern and observer patterns,0,0,2024,2024,1,https://github.com/anup0507/Design-vendingMachine
State,NUGraduation,"NUGraduation game where students collect points to graduate. Assignment for CSCI 235 class. Design patterns: Abstract Factory, State Patterns.",0,0,2019,2019,1,https://github.com/aidanaimai1/NUGraduation
State,Reactjs_mini_projects,"A collection of small projects built with ReactJS, focusing on interactive UI components, state management, and reusable design patterns.",0,0,2024,2024,1,https://github.com/Rowanour/Reactjs_mini_projects
State,php_observer_pattern,Observer is a behavioral design pattern that allows one objects to notify other objects about changes in their state.,0,0,2020,2020,1,https://github.com/bariseser/php_observer_pattern
State,iOS-MVVM-DataBinding-Observable-Swift, Observer is a behavioral design pattern that allows some objects to notify other objects about changes in their state.,0,0,2022,2022,2,https://github.com/HemantPandagre/iOS-MVVM-DataBinding-Observable-Swift
State,Software-Design-Pattern,"Drawing tool by applying composite, state, command, observer, adapter, expert, controller, and iterator software design patterns using Java AWT.",0,0,2020,2020,1,https://github.com/khushboo520/Software-Design-Pattern
State,hw10_Novak,"Implemented five design patterns—Facade, Factory, Memento, Singleton, and State—using JavaScript to illustrate their practical applications and benefits.",0,0,2023,2023,1,https://github.com/AntoninaNov/hw10_Novak
State,Scribble-App,Converted Figma design to Flutter code. Implemented backend with SQLite database using Provider state management and MVC design pattern.,0,1,2023,2023,1,https://github.com/basitali1509/Scribble-App
State,design-pattern-1,"Com finalidade de conhecimento sobre design patterns nesse projeto pode ser encontrado: Chain of Responsability, Strategy, Command, Observer, State",0,0,2021,2022,1,https://github.com/yhann0695/design-pattern-1
State,Angry_Bird_Recreation,"Implemented a computer game using Greenfoot on java platform and applied different design patterns in order to increase difficulty levels. Added 5 of the total 23 Design Patterns including State, Strategy, Command, Template and Observer.",0,0,2020,2021,1,https://github.com/heli-rawal/Angry_Bird_Recreation
State,redux-thunk-todos-app,Todo app using the extended react ecosystem to implement good practice design patterns. Todo app using the extended react ecosystem to implement good practice design patterns. Uses data persistence to maintain state in local storage.,0,0,2020,2020,1,https://github.com/WilliamJefferies/redux-thunk-todos-app
State,State-Design-Pattern-and-JUnit-Testing-using-BlueJ,This BlueJ project exhibits the State Design Pattern in Java using the example of a gumball machine and JUnit test cases for unit testing of the project.,0,1,2017,2017,1,https://github.com/saurabhgedam/State-Design-Pattern-and-JUnit-Testing-using-BlueJ
State,Gourmand-Restaurant-App,"Gourmand is a restaurant management and food ordering app. This repository contains the complete Design Document for the app along with UML artifacts like Domain Model, Design Model, Sequence Diagrams, Activity Diagrams, State Diagrams, Design Patterns (Observer, State, Abstract Factory, Decorator, Composite, Iterator, Template Method, Singleton, Adapter and Proxy). The MVC architecture also has been applied to the design",0,2,2017,2017,1,https://github.com/mohammedshethwala/Gourmand-Restaurant-App
State,da-resto,"Game using java, which focuses on the use of multithreading and using Design Pattern (Mediators, Factories, Observer, State and others)",0,0,2024,2024,1,https://github.com/wllchrst/da-resto
State,Week5-Attempt2,program on state design pattern which says that  when the State of the Light Bulb is ON then the “Light Bulb is Switched On” or when the State of the Light Bulb is OFF then the “Light Bulb is Switched OFF”. And the above Java program helps us to understand the state design pattern easily.,0,1,2021,2021,1,https://github.com/Mykhan12/Week5-Attempt2
State,designPatternProject,This project is done as a final project for the course design pattern at California State University of San Marcos,0,0,2021,2021,1,https://github.com/azadehiranmehr/designPatternProject
State,EgShop,"EgShop.. e commerce application by using APIS , shared preferences bloc as state management and design pattern Dio for APIs handling",0,0,2022,2022,1,https://github.com/Amgad22318/EgShop
State,Hunger-Games-Simulator,"A multithreaded Java application that demonstrates the use of design patterns such as Observer, Singleton, Template, Strategy, State, and Command.",0,0,2023,2024,1,https://github.com/Hussain-Aziz/Hunger-Games-Simulator
State,VehicleViewExample,Checking status of car using a custom compund view (CarStatusView). We can add additional cars using State Machine Design pattern.,0,0,2018,2018,1,https://github.com/TusharLal/VehicleViewExample
State,Memento,"Article State Manager  is an Example of the Memento Design Pattern in Multiple Programming Languages (Python, PHP, JavaScript and TypeScript)",0,0,2024,2024,1,https://github.com/Sanzi87/Memento
State,online_auction-console-dotnet,"Projeto em C# que gerencia leilões, utilizando o Design Pattern state e com a implementação de testes unitários com xUnit",0,0,2022,2023,1,https://github.com/felipetoscano/online_auction-console-dotnet
State,SDJ2_Assignment_1,"This is an assignment that combines the practice of 3 design patterns: state design, observer, MVVM. Threads are also used",0,0,2022,2022,3,https://github.com/chrfoyer/SDJ2_Assignment_1
State,state_pattern_template,"State machine design pattern in C for PSoC ARM Cortex-M3, using function pointers and LUT in C. Also implemented a serial module using structs and function pointers to static functions to produce encapsulation and abstraction (OOP)",0,0,2021,2022,1,https://github.com/lautarovera/state_pattern_template
State,JFSM,"Java Finite State Machine Implementation, You can use this library to apply the State Design pattern to any Object that has states or modes of operation",0,0,2020,2020,1,https://github.com/mibrhim/JFSM
State,TravelWidget,This widget was developed to demonstrate both UI design and design pattern integration. I utilized MVC and State for this project.,0,0,2015,2015,1,https://github.com/r-caldera/TravelWidget
State,Conta-bancaria-com-estados-dinamicos-Cs,Criando aplicacao com contas bancarias no design pattern State. Possibilitando lidar com metodos de acordo com o estado de uma classe.,0,0,2022,2022,1,https://github.com/Antonio91378/Conta-bancaria-com-estados-dinamicos-Cs
State,micro-services,study of micro services and design patterns associated(saga pattern example implementation with spring state machine based on spring framework guru),0,0,2020,2020,1,https://github.com/creedox2010/micro-services
State,gameOfLife,"An implementation of John Conway's classic game of life. Leverages several design patterns such as state, singleton, command, and observer",0,0,2024,2024,1,https://github.com/jacksonsanger/gameOfLife
State,Humber-Design-Pattern-c-Sharp-Lab5-and-Lab6,"Humber College North Campus , C-Sharp Design Pattern Lab5 and Lab6  for STRATEGY PATTERN, Chain Of Responsibility Pattern and  State Pattern",0,0,2025,2025,1,https://github.com/Gurjit211/Humber-Design-Pattern-c-Sharp-Lab5-and-Lab6
State,DesignPattern-State,"This C# implementation demonstrates the State design pattern, allowing an object to change its behavior when its internal state changes. It showcases how to encapsulate state-specific behavior and make state transitions easy to manage for a flexible and maintainable design.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-State
State,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
State,Sistema-Grupos-Academicos,"Sistema feito em Node JS voltado para operações envolvendo grupos acadêmicos. Desenvolvido para estudar design-patterns (Factory, Observer, State) e arquitetura MVC",0,0,2022,2023,4,https://github.com/PedroGSantos/Sistema-Grupos-Academicos
State,cpp_projects,"OOP & Algorithms in C++  |  OOP - for course Basics of Object Oriented Design containing also design patterns: Abstract factory, Builder, Singleton, State, Command",0,0,2021,2023,1,https://github.com/JuliePrazakova/cpp_projects
State,shop_app,"Shop App Flutter Application (Bloc State Management, MVVM Design Pattern, JSON with Dio, Support 2 Languages (Arabic & English), Dark and Light Mode)",0,0,2021,2022,1,https://github.com/Khaled-Abdelrazeq/shop_app
State,calorie-calculator,Calorie counter application utilized with HTML and pure javascript ran on local storage with a module design pattern and edit state pattern.,0,0,2018,2018,1,https://github.com/olerk16/calorie-calculator
State,todoapp,to do app with Code quality and management Methods of enforcing code quality Design Patterns Performance Security Testing Best practices State management,0,0,2020,2020,0,https://github.com/frlemieux/todoapp
State,Pacman,"A Pacman game utilising design patterns from PacmanV1(https://github.com/JeslynB9/PacmanV1) and with three additional patterns, Strategy, State, and Decorator.",0,0,2024,2024,1,https://github.com/JeslynB9/Pacman
State,Movies_App_MVVM_Flutter,MVVM flutter view model managing business logic Provider for state Management http package for fetching response and much more mvvm design pattern,0,0,2021,2021,1,https://github.com/muhammadarslannasr/Movies_App_MVVM_Flutter
State,DP.20212.03,"Project in the Software Design Patterns course at my university. The project applies design principles, SOLID principles and design patterns such as Singleton, Strategy, Adapter, State,... to refactor the original source code to become better, easy to maintain, easy to expand.",0,0,2022,2023,5,https://github.com/HieuPham2000/DP.20212.03
State,js-react-components,"A library of reusable React components in JavaScript, focusing on UI/UX design patterns, state management, and integration with modern web technologies.",0,0,2025,2025,1,https://github.com/WoodRichWorld/js-react-components
State,FoodStatePattern,"This is continuation of using the Food and baking as the theme. But this time, the status of the Food Order i.e serve or order is being implemented by applying the State Design Pattern to determine the State of the Order.",0,0,2020,2020,1,https://github.com/atiftirmizi/FoodStatePattern
State,Movie-Rental-App,Refractor code by implementing several design patterns like factory pattern and state pattern in order to make the code more efficient and maintainable,0,0,2021,2021,1,https://github.com/xu51a12/Movie-Rental-App
State,FlightWizard,"a C# and Windows forms project for plane ticket reservation, employing the use of the state design patterns (aside other less important ones).",0,0,2024,2024,1,https://github.com/ivanovdimitur00/FlightWizard
State,cellvation,Original attempt at Cellvasion (originally called cellvation). This was developed using cocos2D-X. It has an example of a state machine design pattern. ,0,0,2018,2018,0,https://github.com/jsbennett/cellvation
State,GasPumpSystem,"Used Model driven architecture to design and implement design patterns such as abstract factory, state and strategy to build a Gas Pump system. ",0,0,2017,2017,1,https://github.com/pavithravinay/GasPumpSystem
State,gmod_library,A general LabVIEW module framework that comes with automatic message logging and state configuration saving capabilities. Based on the NI-QMH design pattern. ,0,0,2020,2020,0,https://github.com/hoehner/gmod_library
State,Second-task-with-training-with-Abs.ai,"simple app  with read Data from external  json file and we used in this app With Provider as State M, MVVM design Pattern ",0,0,2023,2023,1,https://github.com/MohammedRostom/Second-task-with-training-with-Abs.ai
State,BikeShopSimulation,"This project simulates a bike shop system using key OOSE principles and design patterns. The application models various bike shop operations, including inventory management, order processing, and customer interactions. It incorporates design patterns such as Factory Pattern, Dependency Injection and State Pattern.",0,0,2024,2024,1,https://github.com/DilhanRubera/BikeShopSimulation
State,Circus-of-Plates,"A 2D Java game designed using many design patterns like : Factory, Singleton, MVC, Object Pool, Iterator, Snap- shot, State and Observer.  The project mainly aimed to be familiar with Object Oriented Programming and Design pattern. Dynamically Loading plates to be dropped was handled.",0,1,2014,2014,0,https://github.com/AGeneidy/Circus-of-Plates
State,Observer-Design-Pattern,"This repository demonstrates the implementation of the Observer Design Pattern, a behavioral design pattern that establishes a one-to-many dependency between objects. Whenever the state of one object (the subject) changes, all its dependent objects (observers) are automatically notified and updated.",0,0,2025,2025,1,https://github.com/Nijz/Observer-Design-Pattern
State,DVDPlayer,"A DVDPlayer object uses the state design pattern to behave appropriately depending on which of the three states the DVDPlayer is in - DrawerOpen, DrawerClosedNotPlaying, or DrawClosedPlaying. Each state class class extends the State interface.",0,0,2020,2021,1,https://github.com/cole-maxwell/DVDPlayer
State,DinoAttack-," GUI based 1-player arcade game with multithreading. Developed in Java with the goal of implementing Strategy, Factory, Singleton, State and Observer design patterns.",0,0,2018,2019,1,https://github.com/alegleason/DinoAttack-
State,flutter-watch-app," flutter Application that enables us to watch movies, series and television programs (using Api ,clean code, cubit state management ,bloc design patterns,greate ui)",0,0,2023,2023,1,https://github.com/muhamedadel2001/flutter-watch-app
State,Pelican-Crossing,Pelican crossing simulated in Java using the state design pattern. Timer threads signal timeout events and a test harness invokes the pedestrian waiting events.,0,0,2023,2023,1,https://github.com/koookee/Pelican-Crossing
State,mg-unity-tools,"Helpful Unity3d scripts, focusing on common design patterns like State Machines or Dependency Injection, and uses of newer Unity Tools like Timeline and DOTS. ",0,0,2019,2019,1,https://github.com/mgreen2/mg-unity-tools
State,event-stream-rxjs-pattern-demo,My own implementation of state management design pattern using RXJS in Angular. This demo provides sample usages along with unit tests practices to follow.,0,0,2020,2020,2,https://github.com/bikashjoshi/event-stream-rxjs-pattern-demo
State,Car_Rental_Management,"Exercise for design patterns (Singleton, Builder, Factory Method, Abstract Factory; Adapter, Decorator, Facade, Proxy; Iterator, Observer, State, Strategy), clean code, SOLID, DRY, KISS, YAGNI",0,0,2024,2024,2,https://github.com/19pawel970415/Car_Rental_Management
State,Trafic-Light,"This is a Java core project focused on design patterns. It implements the STATE pattern to control traffic light states, with the use of OBSERVER and SINGLETON patterns.  This project serves as a hands-on exercise to explore and practice design patterns in Java.",0,0,2023,2024,1,https://github.com/MiroslavKolosnjaji/Trafic-Light
State,Intro-To-Memento-Design-Pattern,Memento is a behavioral design pattern that lets you save and restore the previous state of an object without revealing the details of its implementation.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Memento-Design-Pattern
State,Memento-DP,Memento is a behavioral design pattern that lets you save and restore the previous state of an object without revealing the details of its implementation.,0,0,2021,2021,0,https://github.com/Behavioral-Design-Pattern/Memento-DP
State,model-argument-switching,"An attempt to apply the state design pattern to a common, difficult problem in scientific software: abstract designs that handle a multitude of algorithm implementations.",0,0,2014,2015,1,https://github.com/buffetboy2001/model-argument-switching
State,VFD_Unit_Alarming_System,"System that alarms all or specified VFD Unit, using Observer, State and Strategy design pattern. District Commandant can send Alarm or Test message to units",0,0,2020,2021,1,https://github.com/smasiek/VFD_Unit_Alarming_System
State,minesweeper,"A pure Java console based minesweeper with a strong emphasis in design patterns (like factory, MVC, state etc). Has feature like difficulties, undo, redo etc.",0,0,2024,2024,1,https://github.com/cyu427/minesweeper
State,TaskAssigner,This was the final project for CS 100: Software Construction at UC Riverside. Our group of 3 memebers collaborated to design a task management application with a GUI that demonstrates understanding of 3 design patterns.,0,0,2021,2021,4,https://github.com/shawn636/TaskAssigner
State,Mobile-Application-Game,This is the final project of my Object-Oriented Design Pattern course at Sacramento State University. This projects purpose was to introduce students to OO Design Patterns as well as graphics programming concepts. This project uses Code Name One: A cross platform mobile application development kit.,0,0,2017,2017,1,https://github.com/stephengimpel/Mobile-Application-Game
State,battleTank_improved,Solo Project (Outscal). Developed using MVC & Generic Singleton design pattern. Scriptable objects for Tank Data. State Machine Behaviour for enemy Tanks. Observor pattern for Achievement system.,0,0,2022,2022,1,https://github.com/aryann010/battleTank_improved
State,GuacameleeStyleCharacterLogic,My practice project of implementing State Machine design pattern where I decided to partially implement character logic which I have seen in the video game Guacamele,0,0,2022,2022,1,https://github.com/mihaniania25/GuacameleeStyleCharacterLogic
State,react-component-development,"Develop a complex React component (like a custom data table or a dynamic form builder) that demonstrates advanced state management, component composition, and reusable design patterns.",0,0,2024,2024,1,https://github.com/seatB68/react-component-development
State,recursive_bubble,"Implementation of a recursive ""bubble"" structure. The writing of this small app employs several design patterns for fun, namely Composite, Observer, Iterator, Visitor, and State pattern.",0,0,2015,2015,0,https://github.com/prajogotio/recursive_bubble
State,angular17_signals,Project on Angular 17 practicing all the signals features. Signals are the angular's abstraction for the commonly used design pattern of state in frontend frameworks.,0,0,2024,2024,1,https://github.com/vegadelalyra/angular17_signals
State,game-dev-custom-project,"Custom game project showcasing the implementation of different software design patterns and data structures built in C++. This includes the state, composite, component, command and factory design patterns, as well as a graph/node data structure to represent the game world with different locations with adjacent location nodes.",0,0,2022,2023,1,https://github.com/jamesvovos/game-dev-custom-project
State,Dungeon,"Dans ce jeu, un personnage se déplacera d’une salle à l’autre et rencontrera monstres, trésors et pièges. Outils utilisés : Java, JavaFx, Gradle, design pattern : State",0,0,2021,2022,1,https://github.com/mkzineb/Dungeon
State,bankSimulation,"A modular Java application simulating essential banking operations like account management, multicurrency transactions, customer state handling, and detailed statistical reporting using design patterns for flexibility and scalability.",0,0,2025,2025,1,https://github.com/Rakhmanidze/bankSimulation
State,ObserverPattern,"The Observer design pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.",0,1,2023,2023,1,https://github.com/lechitho/ObserverPattern
State,SoftwareSystemsArchitecture,"The project is to demonstrate the system architectures. It uses MDA EFSM architectural pattern with various design patterns like state pattern, strategy pattern and abstract factory patterns.",0,0,2017,2017,1,https://github.com/adeshp/SoftwareSystemsArchitecture
State,ATM-Machine,Design and Implemention of two ACCOUNT components using the Model Driven Architecture - Extended Finite State Machine(MDA-EFSM).  Implemention of the following OO design patterns in the design:  • state pattern • strategy pattern • abstract factory pattern,0,1,2016,2016,1,https://github.com/anand700/ATM-Machine
State,Observer-Design-Pattern, Observer is a behavioral design pattern. It specifies communication between objects: observable and observers. An observable is an object which notifies observers about the changes in its state,0,0,2021,2021,1,https://github.com/mahmoud3030arafat/Observer-Design-Pattern
State,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
State,International-Draughts-Game,"Implementing an International Draughts board game using a given Game framework (After understanding concepts like abstraction, inheritance and design patterns like MVC, state pattern, strategy pattern, Visitor pattern)",0,0,2020,2020,1,https://github.com/PraveenAravendan/International-Draughts-Game
State,TODO-App,"A TODO application that uses MVC as a flutter design pattern, Provider for state management, firebase authentication for user authentication, firebase firestore for database, notifications and cloud functions ",0,0,2023,2023,0,https://github.com/ikechiorakwe/TODO-App
State,The-Observer-Pattern,Observer is a behavioral design pattern. It specifies communication between objects: observable and observers. An observable is an object which notifies observers about the changes in its state.,0,0,2020,2024,1,https://github.com/wadiemendja/The-Observer-Pattern
State,appexample,"App example with good practices clean architecture, unit tests, integration tests, E2E tests, management state, design patterns, use of sonar for more quality test coverage, code smells, etc, ",0,0,2023,2023,1,https://github.com/viniciusbarross/appexample
State,Java-ObjectOriented-Factory-ObserverStatePattern-Gradle-OOSE-Assignment,"This repository contains the implementation of a Bike Shop simulation project for the Object-Oriented Software Engineering (OOSE) course, Semester 1, 2024. The project demonstrates the application of various design patterns including Factory, Observer, and State patterns using Java. The project is built and managed using Gradle.",0,0,2024,2024,1,https://github.com/RJTLM/Java-ObjectOriented-Factory-ObserverStatePattern-Gradle-OOSE-Assignment
State,Angry_Flappy_Bird,"Implemented a computer game using Greenfoot on java platform and applied different design patterns in order to increase difficulty levels. Added 5 of the total 23 Design Patterns including State, Strategy, Command, Template and Observer. Uploaded the video on YouTube so as to demonstrate the whole setup and demo.: https://youtu.be/6eKw4QWndFA",0,0,2018,2019,1,https://github.com/Harshrajsinh96/Angry_Flappy_Bird
State,Unity-Random-State-Machine,"A simple finite state machine. The project contains a scene where an enemy will switch between three states: patrol, wander and chase. The enemy will also drop coins at random intervals that the player can pick up. This is only a prototype for a state machine design pattern, and not necessarily a part of any game. This project uses the NavMesh fuction of Unity.",0,0,2020,2020,1,https://github.com/Lineweaver/Unity-Random-State-Machine
State,java-oop,In this repo I will be exploring Object Oriented Programming concepts and design patterns as a suppliment to the course I am currently enrolled in at Farming State College.,0,0,2022,2022,1,https://github.com/tedtalksbits/java-oop
State,BankSystem,Utilzies JavaFX to create a simple banking system where an admin can add/delete customers. Customers can withdraw/deposit money and complete merchant transactions. Implements a state design pattern.,0,0,2019,2019,1,https://github.com/ShivamPatel24/BankSystem
State,Generic-Planner,Developed a Generic Planner which implements the 'Abstract Factory' design pattern with the A* search algorithm in order to produce a sequence of actions from an initial state to a goal state for a variety of problems.,0,0,2021,2021,1,https://github.com/danaebantana/Generic-Planner
State,Tut_App,"Clean architecture, MVVM ,Dependency injection ,Design Pattern - MVVM - Model - View - View Model Pattern - Dependency injection - Application Layer - Domain layer - Data layer - Presentation layer - State renderer - Mappers - Data sources - Caching - Localization",0,0,2023,2023,1,https://github.com/fadyZaherEng/Tut_App
State,CoolioCourseReviewer,"Coolio Course Reviewer is a client and server based Java application using a state design pattern, that enables users to post, read and edit course reviews for different university institutions.",0,0,2016,2016,1,https://github.com/muyixs/CoolioCourseReviewer
State,navbar-with-context,"Simple react app to practice the use of react context for storing, updating and accessing current state in a global context accessible to child components with Provider/Consumer design pattern.",0,0,2022,2022,1,https://github.com/CLL-NxtWave-Submissions/navbar-with-context
State,DesignPattern-Observer,"This C# implementation demonstrates the Observer design pattern, enabling a subject to notify multiple observers of state changes automatically. It showcases how subjects manage observers dynamically and propagate updates efficiently.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Observer
State,FlightManagementSystem,"The idea of the project is to represent a light version of the Flight Management System by using GUI, connection to Database, and four design patterns (Observer, Template, Decorator, State).",0,0,2021,2021,1,https://github.com/limitonlythesky/FlightManagementSystem
State,Student,"This Python code defines a versatile Student class with encapsulated attributes, constructor overloading, and instance methods, demonstrating object-oriented principles and incorporating the State Design Pattern while providing a usage example.",0,0,2023,2023,1,https://github.com/Queen-Sarah21/Student
State,DesignPattern-Memento,"This C# implementation demonstrates the Memento design pattern, capturing and restoring the state of an object without exposing its implementation. It highlights how to manage state history through a caretaker, providing a flexible way to revert to previous states.",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Memento
State,214-PA4,"This repository contains the code for Software Modelling (2nd Year) Practical 4. The project integrates five key design patterns:  Composite , State, Decorator, Iterator and Observe, into a unified and functional codebase.",0,0,2024,2024,2,https://github.com/thendombedzi/214-PA4
State,LibraryManagementSystem,"A flexible and scalable library management system built using Java, implementing design patterns such as Composite, Factory, and State for robust book categorization, dynamic book return management, and efficient object creation.",0,0,2025,2025,0,https://github.com/abdchtourou/LibraryManagementSystem
State,what-anime-watched,"Aplicativo em Flutter que eu criei para anotar os animes que eu assisti. Nesse projeto eu foquei em colocar em pratica o que aprendi sobre Design Pattern State, ValueNotifier e Provider.",0,0,2022,2022,0,https://github.com/DouglasSM747/what-anime-watched
State,macho,"The Machine Objects class library (in short Macho) allows the creation of state machines based on the ""State"" design pattern in straight C++. Created by Eduard Hiti, Updated by aeleos to support any number of template parameters using parameter packs.",0,0,2017,2017,1,https://github.com/aeleos/macho
State,UnityCommand_UnityPackage,"UnityCommand is an editor implementation of the command design pattern where the command can be applied, and reverted. The command, once applied, is within that state until the revert is called to represent the initialization and deinitialization of the represented state.",0,0,2023,2025,1,https://github.com/Darkfafi/UnityCommand_UnityPackage
State,RentalBookApp,"Rental Book Store project: Creates a GUI-based bookstore app in groups. Uses UML, state design pattern. Owners manage books/customers. Customers view points, buy books. Helped develop skills in JavaFX, Netbeans",0,0,2023,2023,1,https://github.com/munevvercoskun/RentalBookApp
State,Composer-Observer-Pattern-Example-PHP,"The Observer pattern is a behavioral design pattern that defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.",0,0,2023,2024,1,https://github.com/mohcen-laalaoui/Composer-Observer-Pattern-Example-PHP
State,React-Reaction-App,A simple blog where users can add and react to messages using emojis. This app uses Publisher-Subscriber design pattern along with the useReducer and React's context API for state management,0,0,2022,2022,1,https://github.com/nipunarora-eGov/React-Reaction-App
State,Clean_Archi_with_MVVM,Clean architecture MVVM Dependency injection  Clean Architecture Design Pattern - MVVM - Model - View - View Model Pattern - Dependency injection - Application Layer - Domain layer - Data layer - Presentation layer - State renderer - Mappers - Data sources - Caching - Localization,0,0,2022,2022,1,https://github.com/fadyZaherEng/Clean_Archi_with_MVVM
State,GumballSurfer,"Developed a 3D game in which player has to collect coins to get gumballs. Implemented software design patterns like Observer, State, Prototype, Factory and Chain of Responsibility pattern. Followed Scrum Agile practices.",0,0,2014,2014,1,https://github.com/ankitd89/GumballSurfer
State,COE528-Term-Project,"Developed an OOP Bookstore application using JavaFX. Implemented design patterns (Ex. State Factory) to build POS system for users/admins to buy/sell books. Contributors:  @deep-patel21 (myself),  @Yanny24211, @anmolp476, @Victor2266,  and @ItsVladOoO.",0,0,2023,2023,1,https://github.com/deep-patel21/COE528-Term-Project
State,DiceRoll,"Rendering components with setState. State as props design pattern to create application. Statefull parent component passes its states to stateless child component as their props. Downward data flow, parent components are more statefull",0,0,2020,2020,1,https://github.com/kutukmu/DiceRoll
State,session-handler-with-memento,This repository contains a simple session handle mechanism that uses the memento design pattern. This architecture can be used in a distributed environment where application state can be maintained across multiple server instances,0,0,2021,2021,0,https://github.com/kusaldushmantha/session-handler-with-memento
State,Labirinto-Corridore,"2.5D game implemented in Java using OOP concepts, MVC AP and various design patterns (observer, state, etc...). It is developed using isometric images and animated sprites and has a save and load feature.  ",0,1,2018,2020,3,https://github.com/MayssaraOmar/Labirinto-Corridore
State,Shape-Drawing-Tool,"A tool that can be used to draw Boxes, Circles and Lines with Undo and Redo functionalities. Several Design Patterns including Composite, Command, Iterator, State, Singleton, Controller, Expert are used to develop this tool.",0,0,2020,2020,1,https://github.com/Charan-Venkatesan/Shape-Drawing-Tool
State,Object-Oriented-Programming-Project,"Project developed in Java, within the scope of an Object-Oriented Programming class. This project led me to master this programming paradigm and the use of design patterns such as State, Strategy, and more.",0,0,2024,2025,1,https://github.com/robot-mazeee/Object-Oriented-Programming-Project
State,Library-management,"A library management system using design patterns such as State and Proxy. The system allows users to manage book collections, borrow and return books, and handle reservations with different user roles (premium and non-premium)",0,0,2024,2025,1,https://github.com/Princegabz/Library-management
State,CustomSorting," The program was developed using the Memento software design pattern, where we capture the program’s initial state, next and previous states. All these states are stored and can be retrieved at any given moment.",0,0,2024,2024,1,https://github.com/MunyaiMutshidzi/CustomSorting
State,sport-types-with-bloc-mvvm,"An application that uses a pseudo API that contains the types of sports, the teams you play in, the players, and some details about them. It was used Bloc state management and MVVM design pattern",0,0,2023,2023,0,https://github.com/Mansour25/sport-types-with-bloc-mvvm
State,EventFramework,"EventFramework is a State Transition Framework which can be used to handle millions of concurrent request consistently. The framework follows DDD principle and State Design Pattern to handle events. This framework can be used in multiple domains like Order Management System, Warehouse Management System etc.",0,0,2023,2023,1,https://github.com/ibrahimAnis/EventFramework
State,Virus-Spread-Simulation,Virus spreading simulation is an OOP implementation in Go using the lightweight game engine ebiten to render graphics. It implements State and Memento design patterns to save and rewind each step of the simulation effectively. ,0,0,2024,2025,1,https://github.com/Kortexik/Virus-Spread-Simulation
State,HackerNews-iOS,"This news app demonstrates the integration of SwiftUI and UIKit, allowing UIKit components to be incorporated within SwiftUI. WebKit is used to render web pages, while the Observable Design Pattern is used for state management.",0,0,2023,2023,1,https://github.com/tofuyong/HackerNews-iOS
State,AirBnb-Flutter-Firebase,"This  Flutter application similar to Airbnb app, using Firebase, GetX for state management, and an MVC design pattern. The app includes pages for login, signup, profile, creating new places, and a list of favorite places.",0,0,2024,2024,1,https://github.com/Mostafa3wad/AirBnb-Flutter-Firebase
State,pattenrs-with-custom-hooks,"Project to demonstrate the Observer, State, and Factory Patterns applied to custom hooks. You can read the article about this project at: https://medium.com/@bruna.kcn/design-patterns-para-hooks-customizados-no-reactjs-f4147c72ae4b",0,0,2025,2025,1,https://github.com/brunamendes-02/pattenrs-with-custom-hooks
State,H4X0R,App made with a Udemy course. Worked with SwiftUI Lists and the Identifiable Protocol. Used Navigation View to navigate between the List and a Detail View Advanced State management using the Observer Design Pattern. Incorporated a UIKit component into SwiftUI by using WebKit to display web pages in the app. Used Project Catalyst to run the app on a Mac,0,0,2020,2021,1,https://github.com/GaldinoAllan/H4X0R
State,US-Capitals-Quiz,This is the first iOS app that I built with swift and also my first attempt at incorporating the MVC design pattern. This app is a quiz that tests your knowledge of the state's capitals.,0,0,2016,2016,1,https://github.com/RLijewski/US-Capitals-Quiz
State,GAME_PacmanGamePhase2,"This Pac-Man game improves upon the previous version by implementing additional design patterns: State, Decorator, Strategy, and Prototype. Existing patterns: Singleton, Factory Method, Command, and Observer, have also been upgraded for enhanced functionality and performance.",0,0,2024,2024,1,https://github.com/PierceLe/GAME_PacmanGamePhase2
State,Virtual-book-trackers-Java,"Virtualized book keepers system, written in Java, that can keep logs for books and their status (ie. borrowed, still on shelf, returned ..etc). Emphasis on using good system design pattern, i.e. Singleton, Observer, State patterns",0,0,2019,2021,1,https://github.com/andywu0408/Virtual-book-trackers-Java
State,GumballMachine,"(C#/x86-64/Console App/VS2019) The book, ""Head First Design Patterns,"" illustrates the State Pattern by means of a Gumball Machine application. They write the application in Java; we are doing it here in C#.",0,0,2021,2022,1,https://github.com/astrohart/GumballMachine
State,PhonePe_Replicated_Project,"This project is a simplified clone of the PhonePe app, developed using Flutter. The focus is on building a stateless version of the app, highlighting UI components and design patterns without involving any dynamic state management.",0,0,2024,2024,1,https://github.com/RajalakshmiR24/PhonePe_Replicated_Project
State,Circus-of-Plates-Game,"Developed Java-based Circus of Plates game with Swing GUI, featuring dynamic loading of shape classes, multiple falling object types, customizable difficulty levels, and implementation of 6 design patterns: Singleton, Factory, Iterator, State, Strategy, and Observer",0,0,2024,2024,1,https://github.com/mennasaid247/Circus-of-Plates-Game
State,Observer-Pattern,"Observer Pattern: The Observer Pattern is a behavioral design pattern that defines a one-to-many relationship between objects. When the state of one object (subject) changes, all its dependents (observers) are notified and updated automatically.",0,0,2022,2023,2,https://github.com/Mdsomratakbor/Observer-Pattern
State,ESOF-322,"ESOF 322 is a class taught at Montana State University. It includes software lifecycles, Unified Modeling Language, design patterns, software engineering standards, requirements analysis, development issues, efficiency tools, verification and validation, configuration management, testing and maintenance.",0,0,2019,2019,1,https://github.com/NorhanAbbas/ESOF-322
State,getx_mvvm,Here's a simple Flutter app demonstrating the use of GetX for state management and the MVVM (Model-View-ViewModel) design pattern. This app is a counter application where the user can increment and reset the counter.,0,0,2025,2025,1,https://github.com/JakariaKhan-CSE/getx_mvvm
State,redux-fundamentals,"Flux is a designed pattern, or an application architecture made and used by Facebook for creating a user interface or client-side web app. Redux state management solution combining both functional programming concepts and Flux as well.",0,0,2021,2022,1,https://github.com/galbeiroc/redux-fundamentals
State,Bank-Accounts---Model-Driven-Architecture,"Designed two different bank account components using Model-Driven Architecture. Used UML to depict the architecture and design. Implemented the design using Object-Oriented Design Patterns like Decentralized State pattern, Abstract Factory pattern, Strategy pattern in Java.",0,0,2016,2016,1,https://github.com/skallaje/Bank-Accounts---Model-Driven-Architecture
State,Intro-To-Flyweight-Design-Pattern,Flyweight is a structural design pattern that lets you fit more objects into the available amount of RAM by sharing common parts of state between multiple objects instead of keeping all of the data in each object.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Flyweight-Design-Pattern
State,Observer-Pattern,"The Observer Pattern is a behavioral design pattern that establishes a one-to-many dependency between objects, so that when one object (the subject) changes its state, all its dependent objects (observers) are notified and updated automatically. ",0,0,2024,2024,1,https://github.com/AimanShabbir03/Observer-Pattern
State,atm_controller,A simple and secure ATM controller built using **Queued State Machine** architecture on python. The design pattern is a unique implementation from scratch and is highly scalable. It is easy to add unit tests for this architecture.,0,0,2020,2020,0,https://github.com/bsaisudh/atm_controller
State,CarroOffRoad," This design is for Design Patterns Discipline, where we must apply at least 5 patterns learned in the class. My choices are initially Strategy, State, Observer, Bridge, Composite, Singleton and Factory. But it is likely that other",0,0,2017,2017,1,https://github.com/Paulohncaixeta/CarroOffRoad
State,ObserverDesignPattern,"The observer pattern is a software design pattern in which an object, called the subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods.",0,0,2020,2021,1,https://github.com/mmirzakhani93/ObserverDesignPattern
State,Car-Game,"Academic project: vertical scrolling game of a car that tries to avoid obstacles (autoplay - keyboard commands commented). Design patterns: Factory, Strategy (the car has 3 lifes and has a different behavior for each), Memento (to save state on file).",0,0,2024,2024,1,https://github.com/PaintItBlack5/Car-Game
State,MIS-project-chat-app,"ChatGo, a final project for Mobile Information Systems, is a Flutter app with Firebase authentication, messaging, location sharing, push notifications, and efficient state management. It leverages modern design patterns like Singleton and Component-Based Architecture for maintainability and scalability.",0,0,2024,2024,1,https://github.com/Solunska/MIS-project-chat-app
State,Unexpected-Behavior-When-Modifying-Getter-Only-Method-h98y0,"In Ruby, attempting to assign a value to a method that only has a getter defined will not modify the object's internal state.  This is a common error when misunderstanding Ruby's encapsulation and immutable object design patterns.",0,0,2024,2024,1,https://github.com/Bug-Hunter-X/Unexpected-Behavior-When-Modifying-Getter-Only-Method-h98y0
State,Destini,"This project is about being comfortable with implementing the MVC design pattern and thinking about the state of my app. In addition, I will be reviewing the concept of Swift Structures and using it to separate the Model from the Controller.",0,0,2020,2023,1,https://github.com/VladimirKovalenkoDev/Destini
State,airport-checkin-multithread-simulation,"A multi-thread simulation of check-in system at an airport, with passengers queuing at check-in desks and being assigned to waiting planes. This includes threads, design patterns and a suitable GUI to show the state of the simulation.",0,1,2018,2018,1,https://github.com/suraj95a/airport-checkin-multithread-simulation
State,MyMusic-App,"Java | A music application which lets users search for tracks, artists-albums, play tracks, create and edit playlists. Admin functionalities such as editing albums-tracks-artists are also implemented. Uses well known design patterns such as Singleton, Composite, State, Factory",0,1,2019,2019,4,https://github.com/psprao95/MyMusic-App
State,Design-Pattern-React,"This repository consists of several branches, each branch is about various React design patterns related to composition, higher-order components, state hosting, controlled vs. uncontrolled components, and many other patterns that make React development easy and facilitate a well-organized codebase.",0,0,2023,2023,1,https://github.com/wahid-shuvo/Design-Pattern-React
State,React-advance-concepts,"This project is created to implement advanced path management techniques such as Lazy Load on each Component and Lazy Load per module, and component design patterns in react such as compound components, extensible styles, control props, state initializer, function child and render props",0,0,2022,2023,1,https://github.com/danielmamian99/React-advance-concepts
State,ATM-Design,"To design the ATM I have made use of state design pattern for managing the multiple user operation such as inserting card ,cash withdrawl , deposit amount and to handle the cash processing part i have implemented the chain of responsibility desing pattern.",0,0,2024,2024,1,https://github.com/mkhulbe5/ATM-Design
State,CSE-3311-Object-Oriented,"Study of an agile unified methodology and its application to object-oriented software development. Topics include requirements acquisition, use case derivation, modeling and design of interaction behavior and state behavior, introduction to design patterns, derivation of design class diagrams, implementation considerations, and deployment.",0,0,2023,2023,1,https://github.com/diegovester/CSE-3311-Object-Oriented
State,Do-you-know-your-patterns-,"This is a web application which consists of a quiz on design patterns. Made with Sinatra, Ruby, Sequel, W3.css and just a teensy tiny bit of Javascript. Created for a course on software architecture at Monterrey's Technological Institute, Mexico State Campus",0,0,2018,2023,0,https://github.com/Geada734/Do-you-know-your-patterns-
State,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
State,PizzaShopSystem,"A comprehensive Java-based Pizza Shop Management System that facilitates customer registration, order placement, pizza customization, payment processing, and order tracking. The system features modular functionality with state and strategy design patterns, integrated promo code discounts, star point rewards, and user feedback handling.",0,0,2025,2025,1,https://github.com/MhdAathi/PizzaShopSystem
State,react-essentials,"The project comprises separate tabs showcasing key React essentials such as ""Components"", ""JSX"", ""Props"" and ""State"". In the project there are showcases of using React design patterns such as ""Composition components"", ""Props forwarding"", ""Composition known as Slots"" and ""Dynamic resetting of tag names"".",0,0,2024,2024,1,https://github.com/SahakKDev/react-essentials
State,Awakening_Observer_Pattern,"The Observer pattern is a behavioral design pattern where an object, known as the subject, maintains a list of dependents, known as observers, that need to be notified of any changes in the subject's state. When the subject's state changes, it notifies all its observers, typically by calling one of their methods.",0,0,2024,2024,0,https://github.com/sarojghalan/Awakening_Observer_Pattern
State,Light-Em-Up-Game,"This is the source code to my PHP implementation of the game Light Em Up. This was a web development class project. It focuses on features such as User Management, State Persistence, User Authentication and Account Validation and the use of the MVC design pattern.",0,0,2019,2019,1,https://github.com/MikeMula/Light-Em-Up-Game
State,React-2020," React Basics  - React Router  - Redux  - Redux Saga  - Asynchronous Redux  - React Hooks  - Context API  - React Suspense + React Lazy  - Firebase  - Stripe API  - Styled-Components  - GraphQL  - Apollo  - PWAs  - React Performance  - React Design Patterns  - Testing with Jest, Enzyme and Snapshot testing  - React Best Practices  - Persistance + Session Storage  - State Normalization",0,0,2020,2020,1,https://github.com/daminisinha/React-2020
State,React-E-commerce-Project,"- ReactJS - React Router - Redux - Redux Saga - Asynchronous Redux - React Hooks - Context API - React Suspense + React Lazy - Firebase - Stripe API - Styled-Components - GraphQL - Apollo - PWAs - React Performance - React Design Patterns - Testing with Jest, Enzyme and Snapshot testing - React Best Practices - Persistance + Session Storage - State Normalization",0,0,2019,2019,1,https://github.com/srosajazz/React-E-commerce-Project
State,Tick-Tack-Tow,"A Tick Tack Tow Game combining JavaScript, Bootstrap & jQuery with design patterns resembling React or some other JS Framwork (with pushing most of HTML elements to DOM programatically), and Gaming Framworks with game-state object and event listemers (but without an unnecessary update loop)",0,0,2022,2022,1,https://github.com/hkarmely/Tick-Tack-Tow
State,E-commerce_project,E-commerce project: This is the This project contains all the skills you learned in the flutter course using state-management provider and design patterns MVC in front end site and the back end site using php and MySQL and rest API using post man,0,0,2023,2023,1,https://github.com/loransalkhateeb/E-commerce_project
State,JavaScript-ObserverPattern,"This repository contains a simple JavaScript project that demonstrates the Observer Pattern. The Observer Pattern is a behavioral design pattern where an object, known as the subject, maintains a list of dependents, called observers, that are notified of any changes in the subject's state.",0,0,2024,2024,1,https://github.com/TheEmperor27/JavaScript-ObserverPattern
State,Podcast_Notification,"Podcast studio can notify subscribers when it publishes a new podcast. Releasing a new podcast is what changes the state of the podcast studio, and it causes the subscribers to be notified via email, SMS, and twitter. This was implemented using 'Observer' design pattern",0,0,2022,2022,1,https://github.com/AbdullahBaj5/Podcast_Notification
State,React_Native_COP4468,React Native cross-platform application project. Flex design is used as a UI design pattern. React-Navigation library is used for handle routing. Fetch data from API endpoints via axios library. React State & React Effect hooks are applied. React Native Elements are used to enrich the design.,0,0,2023,2023,1,https://github.com/baransakir/React_Native_COP4468
State,JavaThreadsCompetition,"A Java project with a GUI visualizing a competitive event using multithreading. Each thread represents a participant, with real-time GUI updates. The project demonstrates concurrent programming and uses design patterns like Prototype, State, Decorator, Observer, and Factory Method for object-oriented design and GUI development.",0,0,2024,2024,1,https://github.com/arielperstin10/JavaThreadsCompetition
State,PTCSC.Utilization,"The Utilization application provides a simple equipment state tracking use case on the ThingWorx platform using the building block design pattern. There are three different deployment paths (ThingWorx, Postgres, and SQL data objects) for the Utilization application that allow for the explanation of abstract / implementation concepts.",0,0,2023,2024,1,https://github.com/thingworx-field-work/PTCSC.Utilization
State,Kotlin---Demo-Singletons,"In Kotlin, a singleton is a design pattern that ensures that only one instance of a class is created throughout the application. Properties can be defined in singletons to provide access to the singleton instance or to store state that is shared by all instances of the singleton.",0,0,2023,2023,1,https://github.com/VaibhavMojidra/Kotlin---Demo-Singletons
State,MementoPattern,"The Memento Pattern is a behavioral design pattern that provides a way to capture and externalize the internal state of an object without exposing its internal structure. This allows you to save the object's state at a specific point in time and restore it later, effectively providing the ability to undo or roll back changes made to the object.",0,0,2023,2023,1,https://github.com/MarlonMontenegro/MementoPattern
State,flutter_movie_box,"""Flutter Movie Box"" is a sleek Flutter app showcasing movies from TMDb API. Features include browsing, favoriting, and caching. It's built with Clean Architecture, BLoC, and other design patterns, leveraging technologies like flutter_bloc for state management and http for networking. Dive into cinematic exploration with ease.",0,0,2024,2024,1,https://github.com/KhaledElwazan/flutter_movie_box
State,UML-Application-for-e-voting-e-Voter,"This was project on course ""Specifikacija i modelovanje softvera"" (eng. Software Specification and modelling). ""Application for e-voting: eVoter"" is conceptual solution for republican elections. Contain diagrams for collecting requests and diagrams for modeling system. Also contain use cases, design patterns, state diagram, component diagram and deployment diagram.",0,0,2019,2019,1,https://github.com/djkrstovic/UML-Application-for-e-voting-e-Voter
State,BudgetBuddy,iOS App Final Project from iOS Development Class at Kent State University. Allows user to log expenses and manage budget.  Utilizes a MySQL Back-end database for data storage. Dashboard view give user an overview of their monthly spending. Largely verbose ViewController -> Need to follow better design pattern,0,0,2022,2022,1,https://github.com/connerm27/BudgetBuddy
State,react-project-shop,"The topics covered will be:  - React Basics  - React Router  - Redux  - Redux Saga  - Asynchronous Redux  - React Hooks  - Context API  - React Suspense + React Lazy  - Firebase  - Stripe API  - Styled-Components  - GraphQL  - Apollo  - PWAs  - React Performance  - React Design Patterns  - Testing with Jest, Enzyme and Snapshot testing  - React Best Practices  - Persistance + Session Storage  - State Normalization  + more",0,0,2021,2021,0,https://github.com/damonponder/react-project-shop
State,Employee_Managment_System_Frontend,"The frontend of the Employee Management System is built with React, Next.js, Redux, and the Atomic Design Pattern for a modular and scalable UI. It includes list and grid views, form validation with zod and react-hook-form, profile picture uploads with preview, and Redux state management for efficient data handling.",0,0,2025,2025,1,https://github.com/Janiru17/Employee_Managment_System_Frontend
State,Banking-System-With-JavaFx,"Interactive banking system with GUI using javafx. Implemented using State Design Pattern. Manager can create and delete customer files. Customer can make purchases, withdraw, deposit, etc. Attached UML use case and class diagrams (the report is poorly written because we were limited to tight guide lines in order to receive full marks)",0,0,2019,2019,1,https://github.com/hrutvik1/Banking-System-With-JavaFx
State,Tetris-Revisited,"A game developed in a 4 members team (Sélian ARSENE, Marilou PREUX, Matthieu DELILLE and me), which consists to assemble different shapes to minimize the total space taken up on a grid. The main goal was to manipulate different Design Patterns, and we used MVC, Strategy and State. Third year at university project.",0,0,2024,2024,1,https://github.com/quentin-dumont/Tetris-Revisited
State,High-Order-Component,"A Higher-Order Component (HOC) in React.js is a design pattern used to enhance or reuse component logic. It is a function that takes a component as an argument and returns a new component with additional functionality or props. HOCs are commonly used for tasks like code reuse, state manipulation, and enhancing UI components.",0,0,2025,2025,1,https://github.com/sehgal29/High-Order-Component
State,csc-413-term-project-tank-game,"Created a large Java application for my term project in San Francisco State's Software development course. This project uses the Model-View-Controller software design pattern. The user controls a tank through keyboard input, and has to avoid AI controlled tanks, and receive power ups. The includes several animations and terrain with collision detection. ",0,0,2022,2022,0,https://github.com/HadiRam/csc-413-term-project-tank-game
State,News,"A full stack project developed for news publishing. The project uses Clean architecture. To develop the client side, I used React. Redux Toolkit to manage the state of the application. Axios for communicating with the server side. The server side is based on ASP.NET using various design patterns. I used Entity Framework Core to interact with the db",0,0,2024,2024,1,https://github.com/artemRusachenko/News
State,Movie-Menia,"This repository is basically for React Movie App with API Project.I play with API with thsi projects. Inspired by Javascript Mastery YouTub Channel. This Projects for level up my React js & API knowledge. It's a great project for learning CSS Flex box CSS responsive design patterns and CSS media query, React Component, State, Hooks ",0,0,2022,2023,1,https://github.com/CodeWithMohaimin/Movie-Menia
State,Newday-ToDoList,"Dynamically populated to do list supporting localstorage to save previous tasks and their state. This list supports the option to edit, delete, favorite, and prioritize tasks using drag and drop. It also keeps track of completed, pending , and favorited task count, and the offers a timestamp upon task completion.  The list was developed keeping the MVC design pattern in mind.",0,0,2019,2019,1,https://github.com/Linasaurs/Newday-ToDoList
State,Django-Webapp,"This is a scalable web application which supports an online booking and payment system and uses Django, SQLite, Stripe & Google Analytics. The purpose of this project is to showcase the use of the listed software design patterns. 1. Observer 2. Decorator 3. State Design 4. MVT 5. Factory Method 6. Template Method 7. Iterator Method 8 Adapter Method 9. Chain of Responsibility",0,0,2020,2020,1,https://github.com/David-Bromell/Django-Webapp
State,burger,"This is a burger logger using MySQL, Node, Express, Handlebars and an ORM. It is designed using the MVC design pattern; it uses Node and MySQL to query and route data, and Handlebars to generate the HTML.  Users of the app can create a burger and add it to a database, then devour the burger, which updates the devoured state in the database. After updating the state, the DOM will be updated to display the results on the webpage.",0,0,2019,2019,1,https://github.com/mpieces/burger
State,eatdaburger,"This is a burger logger using MySQL, Node, Express, Handlebars and an ORM. It is designed using the MVC design pattern; uses Node and MySQL to query and route data in your app, and uses Handlebars to generate your HTML.  Users of the app can create a burger and add it to a database, then devour the burger which updates the devoured state in the database. After updating the state, the DOM will be updated to display the results on the webpage.",0,0,2019,2019,1,https://github.com/mtdenni/eatdaburger
State,Kitchen-Chain-of-Responsibility,"In order to make a dish, you have to use a number of appliances and tools to turn raw ingredients into something edible. Using the chain of responsibility design pattern, raw ingredients act as input, while appliances and tools that can handle the ingredient act as states. If an appliance can not or should not handle an ingredient, it passed on to the next state until it can be handled.",0,0,2018,2018,1,https://github.com/Grubbly/Kitchen-Chain-of-Responsibility
State,Ski-game---finished-product," The game simulates a ski game, in which you can choose a number of players, gender and player type, and run them in different competitions. The game combines the technologies: Multithreading, synchronization, locks. compesition and inheritance. The game is written in java and is displayed in java eclipse gui. In addition, the game is designed according to 6 design patterns: 1. prototype 2. factory method 3.Builder 4. decorator 5. observer 6. state   enjoy (:",0,0,2019,2019,1,https://github.com/SapirOhava/Ski-game---finished-product
State,JSP-Servlets,"MVC in JSP MVC in JSP Example of following MVC in JSP MVC stands for Model View and Controller. It is a design pattern that separates the business logic, presentation logic and data.  Controller acts as an interface between View and Model. Controller intercepts all the incoming requests.  Model represents the state of the application i.e. data. It can also have business logic.  View represents the presentaion i.e. UI(User Interface).",0,0,2018,2018,1,https://github.com/MarcinFedorek/JSP-Servlets
State,Design-Pattern-Strategy,"The objective of this case study is to familiarize with the Strategy design pattern through an example and to observe its relationship with other design patterns such as State. The goal is to develop a Java object oriented solution to allow a client to sort an array of integers in different ways (sort by insertion, sort by selection, bubble sort, quick sort, etc) and to display the result. The client does not want to be forced to sort the array in a particular way; instead, it wants to be able to choose dynamically (at runtime) the sorting method it prefers. Moreover, the solution must allow the developer to easily add new ways of sorting the table according to the need and the context without being obliged to modify the clients.",0,0,2020,2021,1,https://github.com/soufianemostafi/Design-Pattern-Strategy
State,QuizApp,"Well, I have completed my Quiz App today and have learnt a great deal about the following:  •MVC (Model View Controller-is a software design pattern used for developinh interfaces that divides the related programming logic intro three interconnected elements)  •SaveInstance (for saving state of screen while rotating screen) . . Furthermore, I used the styleable toast library to make custom toast messages. Styleable Toast Library belongs to AndroidX which is sort of an upgraded version of android support library.",0,0,2020,2020,1,https://github.com/saifali25/QuizApp
State,RealEstateFinder,"A Java Swing Application allowing sellers to post real estate listings and customers to browse listings and add properties they are interested in to their favorites. Customers can also submit their contact information to the seller if they are interested in buying the property. This application utilizes a rich MVC architecture along with utilizing the Strategy design pattern  to create the Property Desciption Page based on the customers actions and recreate the page in real time. This application utilizes serialization for persistence. The application also uses the Observer and Iterator design patterns. This project was created by myself and two other partners for my Object Oriented Design and Programming elective course (COP4331). The design for the application includes Use Cases, CRC diagram, UML Class diagrams, Sequence diagrams, and State diagrams. Tools Used: Java and Java Swing Framework, NetBeans",0,1,2016,2023,3,https://github.com/agr505/RealEstateFinder
State,Farkle,"Delegation is a design pattern that allows objects to communicate with each other. Many of Apple's classes use delegation to request required information from you, for example, UITableView asks you how many rows it should display, and asks you to provide each cell as it needs to display them on the screen. Apple also uses delegation to communicate state changes to you, eg. UIWebView tells you that it has started loading its web page and UIAlertView tells you when the user has pressed a button.",0,0,2015,2015,0,https://github.com/sj24kt/Farkle
State,builder-model-generator,"This plugin is used to automatically generate database entity classes.The purpose is to provide a plug-in that enables the automatically generated entity class to satisfy the builder design pattern, so that it is not necessary to call the setter method of different parameters multiple times when generating the entity object, because the constructor is split in multiple calls during the construction process. The JavaBean in question may be in an inconsistent state.At the same time, variable parameters are provided, and different construction methods are not required for different parameters.",0,0,2019,2019,0,https://github.com/TeslaZY/builder-model-generator
State,Project2016,"Music Store is a web application for searching any track on Google and YouTube using Google’s custom search engine API as well as on local database. You can keep track of your search history on local database and like your Facebook page. The purpose of this web application is to integrate REST Web API into an existing Web API or MVC web application. REST represents Representational State Transfer, which is used to create light weight, scalable and maintainable web services. This web application is implemented using Model-View-Controller (MVC) design pattern, JavaScript, JQuery and Bootstrap CSS bundles to separate application concern.",0,0,2017,2017,1,https://github.com/shahpankti7/Project2016
State,Gas-Pump,"The goal of the project is to design two Gas Pump components using the Model Driven Architecture (MDA) and then implement these Gas Pump components based on this design using the OO programming language. In this project I have implemented the following OO design patterns: State pattern, Strategy pattern and Abstract Factory pattern. Upon Activate() the data is stored in respective database based on the parameters .The execution commences after the START state where the mode of payment is selected , the type of gas is selected based on the menu displayed .Once the selection is done Gas Pump is started and desired amount of gas is pumped out if payment is successful. The user has been provided with two choices upon stopping of the pump whether to print the receipt or not.",0,0,2018,2018,1,https://github.com/KomalParchand/Gas-Pump
State,yaproto,"This is a protocol development platform in JAVA.  Although it serves any application-level protocol defined by its state machine and its messages, it includes some special details that allow you to implement protocols located at the network level, such as routing protocols. To do this, it allows the use of unicast / multicast, and the use of raw sockets. As an example, the RIPv2 protocol is implemented. It also implements the Netlink protocol in order to communicate with Linux kernel.In the case of routing protocols, in addition, the Netlink protocol, which allows to communicate with the core of a Linux system and establish new routes or to be observer is also partially implemented (in relation to route tables, network, ...) of route modifications introduced by other routing protocols or the system administrator.  It is distributed with a state machine design, messages, actions, ie the components of the State design pattern, from which to derive to generate new protocols. As an example, RIPv2 (a state machine for the protocol and a state machine for each route) is implemented, which uses raw socket and broadcast. It also implements the Netlink protocol (network, routing table) for communication with a Linux kernel.  More routing protocols, such as OSPFv2, are being developed.",0,1,2017,2020,4,https://github.com/javierrledesma/yaproto
State,Circus-of-Plates,"A full multiplayer game java application that allows two players to play, one using mouse and the other using the keyboard, Allows save, load, pause, resume and the purpose of the application was to apply the following Object Oriented Design Patterns:  Factory,Singleton, MVC, Object Pool, Iterator, Dynamic Linkage, Snapshot, State and Observer. My role was the Application UI, save, load and some of the back end. Application UI : http://i62.tinypic.com/35ho8s0.jpg                        http://i58.tinypic.com/2m4ojyd.jpg  Game Description: Circus of plates is a two player-game in which every player carries two stacks of plates, and there are several colored plates falling down and he tries to catch them, if he manages to collect three consecutive plates of the same color, then they are vanished and his score increases, the player who gets more score at less time wins. You are free to put rules to handle if the two players stand at the same place",0,0,2015,2015,0,https://github.com/SiefSeif/Circus-of-Plates
State,-KodeCamp-Project,"Problem Definition We want to design a system that can tell us the distance between our location and some other locations which we expect to be supplied to us.   Task We need to design a RESTful API that can collect the information on the different locations for us and also determine the distance between the locations and a configurable location that can be changed or supplied. The formula for calculating the distance between two points can be found here: https://en.wikipedia.org/wiki/Great-circle_distance.  Data Model Define a set of data models that include A location entity with at least the following structure, you can add more to it at your discretion  Id  Location name Description Website (Optional) Phone Contact Person Coordinates You can make use of any database but we recommend PostgreSQL.  Rest API The following RESTful API must be implemented ● Create a new location ● Edit Location ● Delete Location ● Fetch All Locations ● Fetch Specific Location ● Calculate distance   Deliverables A well-documented and working codebase with RESTful API that meets all requirements stated above. The codebase should be delivered via a Github repository. The repository should contain a README with at least the following  Details on how to set up and start the app. Tools used. Areas you would like us to pay special attention to. If you could not finish, specify areas left undone and what you would have done to finish them.  Anything else you feel we should know about e.g. if you used a design pattern that we should note.",0,0,2022,2022,1,https://github.com/Joshclone/-KodeCamp-Project
State,refactored-goggles,"Attending meeting-filled days wearing blue-light glasses, with a pizza slice in one hand and a dumbbell in the other, striking a perfect balance of endorphins and staying healthy, you wonder how the best developer ever gets any work done.  The secret is, he knows coding is only the last-mile to any solution.  We all know one engineer who seems to have the answers to all and everyone’s questions — or, more importantly, knows how to dig out answers.  The one who knows exactly how to deal with that difficult issue you’re facing, or, can elegantly model a complex domain and implement logic in a readable, understandable, and maintainable manner.  Difficult as it may be, I’ll attempt to break down the traits of the best programmer ever.  Business-first mindset. Knowing the business is any developers’ first job.  The best developer produces solutions and writes code that he knows will positively benefit the business. Knowing the what and why leads to effortless implementations (the how).  It becomes easier to write great code when you know which internal code qualities are appreciated. The best developer doesn’t strive to produce the most performant code if the performance for a specific feature is not prioritized or necessary.  The “everything’s an object“ mindset. The best developer obviously has an object-oriented approach and follows the mantra “everything’s an object.” He uses domain models to capture the complexity by creating conceptual blueprints of the world viewed thru the lens of their domains’ context.  Coding is the last activity and is only carried out after having a thorough understanding of the domain, its events, and how different parts interact.  Common issues are dealt with by tailoring known design patterns, allowing them to be implemented effortlessly.  “Everything’s an object” is the perfect mindset that facilitates creating understandable and maintainable applications with ease. Each else-if and switch case is extracted into its own class. Implicit dependencies are levitated to explicit, and interfaces are preferred to concrete classes. The chase for flexible code is never-ending.  Relentlessly accepts new tasks. The only tasks the best developer dreads are those poorly understood. Those that are poorly understood need clarification immediately. Assuming business requirements is always a terrible idea.  The best developer is not shy of setting up meetings with business people. Despite being conscious of the shame, it entails as fellow engineers have read the latest and greats blog post spurting out nonsense like “developers should not attend meetings.”  Project-wide refactorings are a breeze: extract a class there, implement an interface here, turn chaos into order with a set of nifty design patterns.  Every refactoring activity leaves the codebase in a cleaner state.  Commenting with style and purpose. The best developer doesn’t buy into the fairytale that code must be self-documenting. Code is rarely self-documenting. It needs comments.  Documentation is to a large extend about “why” a piece of code exists, and there’s only so-much context a perfectly named class, method, or variable can capture.  He doesn’t comment on language semantics, syntax, or even if a ternary turns crazy. He respects his peers enough to assume they know how to read code. On the other hand, commenting on the reasoning and intent is done so thoughtfully. Everyone does not have the same thought patterns and domain experience. Both are required to understand why some code exists.  This perfectly commented method below exemplifies my point.  Perfectly commented method in the aspnet core source code. Perfectly commented method in the aspnet core source code. It takes time to write good code doc comments. But it takes even longer for the uninitiated to understand why some code exists.   Nicklas Millard is a software development engineer in one of the fastest-growing banks, building mission-critical financial services infrastructure.  Previously, he was a Big4 Senior Tech Consultant developing software for commercial clients and government institutions.",0,0,2022,2022,0,https://github.com/DarpanAbdul/refactored-goggles
Strategy,DesignPatterns,"Come learn about all the Gang of Four patterns (e.g. Adapter, Facade, Strategy, Mediator, Command and more) with C# and food examples!",643,251,2016,2025,2,https://github.com/exceptionnotfound/DesignPatterns
Strategy,PyDesignPattern,"Design Pattern that described by Python, This is the source code for the book of Everybody Know Design Patterns.",287,98,2018,2024,0,https://github.com/spencer-luo/PyDesignPattern
Strategy,100-words-design-patterns-java,"GoF Design Patterns, each pattern described with story from real life.",177,70,2015,2025,2,https://github.com/dstar55/100-words-design-patterns-java
Strategy,laravel-smart-facades,"Strategy design pattern in laravel, the easiest way.",132,12,2019,2025,9,https://github.com/imanghafoori1/laravel-smart-facades
Strategy,HeadFirstDesignPatterns_python,Example code from Head First Design Patterns translated to python,105,41,2021,2025,3,https://github.com/dancergraham/HeadFirstDesignPatterns_python
Strategy,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Strategy,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Strategy,HeadFirstDesignPattern,Head First Design Pattern: Completely Rewrite in C#,51,18,2016,2025,1,https://github.com/dotnet-labs/HeadFirstDesignPattern
Strategy,spring-easy-strategy,a useful framework for use strategy design pattern in spring easily,36,14,2019,2023,4,https://github.com/dsc-cmt/spring-easy-strategy
Strategy,oh-my-design-patterns,🎨 Record the articles and code I wrote while learning design patterns,33,8,2017,2024,1,https://github.com/InnoFang/oh-my-design-patterns
Strategy,MultithreadedWebserver,A multi-threaded proxy web server that uses factory design pattern to support different caching strategies and  server implementations.,31,0,2024,2024,1,https://github.com/omsurase/MultithreadedWebserver
Strategy,SequentialRules,10larca If-Else'in kullanıldığı bir kurallar silsilesinden Chain of Responsibility ve Strategy Design Pattern kullanarak nasıl Single Responsibility'nin sağlanacağını ve kod okunaklığının arttırılabileceğini gösteren bir örnektir.,25,2,2022,2023,1,https://github.com/borakasmer/SequentialRules
Strategy,design-patterns,This is repository of http://androidcode.pl blog design patterns section. It shows uses of design patterns in Java and Android. Most of them are formed and named by Gang of Four ,23,9,2018,2024,1,https://github.com/android-code/design-patterns
Strategy,DesignPatternsPHP-Strategy,Exemplo de implementação Strategy para o canal DifferDev,18,5,2022,2024,1,https://github.com/leoqbc/DesignPatternsPHP-Strategy
Strategy,Strategy-Pattern-in-Unity,An example case of using the strategy design pattern with scriptable objects inside Unity,17,7,2018,2024,1,https://github.com/sharpaccent/Strategy-Pattern-in-Unity
Strategy,spring-boot-strategy-design-pattern-,Demo project for Spring Boot Strategy design pattern,14,4,2020,2023,2,https://github.com/Ikhiloya/spring-boot-strategy-design-pattern-
Strategy,strategy-pattern-in-spring-boot, A very simple implementation of Strategy Design Pattern and Factory Design Pattern to a Spring Boot project.,14,2,2023,2025,1,https://github.com/thegeekyasian/strategy-pattern-in-spring-boot
Strategy,Strategy-Design-Pattern,Strategy Design Pattern,14,0,2019,2024,1,https://github.com/akshayblevel/Strategy-Design-Pattern
Strategy,real-world-design-patterns,"Since there are a lot of misconceptions and some controversy about real-world use cases and the benefits of Design Patterns, I've decided to create this repository where I'll develop and share some implementations of them. Each pattern will have a README file with a components relationship diagram and explanations about it.",13,1,2021,2023,1,https://github.com/j-didi/real-world-design-patterns
Strategy,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Strategy,line-bot-oop, line-bot refactor use oop (design pattern),11,6,2018,2024,1,https://github.com/twtrubiks/line-bot-oop
Strategy,Design-Patterns-,Repository created for solving the exercises in the book and also understanding the specific standards,11,4,2018,2022,1,https://github.com/edward-mn/Design-Patterns-
Strategy,Swift-Strategy,Design Patterns in Swift: Strategy,11,1,2016,2024,1,https://github.com/kingreza/Swift-Strategy
Strategy,Typescript-OOP-pattern,Examples of design patterns written in TypeScript with a detailed explanation.,11,2,2022,2024,1,https://github.com/pestsov-v/Typescript-OOP-pattern
Strategy,CleanCode,"To refactor a very messy AI application code, we will use Strategy, Extract and Interpreter Design Patterns.",11,0,2020,2023,1,https://github.com/borakasmer/CleanCode
Strategy,strategy-pattern,This repository created for Strategy Design pattern example.,10,10,2022,2024,1,https://github.com/halilugur/strategy-pattern
Strategy,strategy-pattern,Design Pattern Implementation,10,1,2021,2023,1,https://github.com/SelimHorri/strategy-pattern
Strategy,mvc-patterns,"Implementation of the architectural pattern Model View Controller through the composition of the design patterns Observer, Strategy and Composite.",9,1,2018,2024,1,https://github.com/tmscarla/mvc-patterns
Strategy,php-design-pattern,PHP Design Pattern definition with example.,8,2,2020,2025,1,https://github.com/hbrawnak/php-design-pattern
Strategy,buildrun-strategy-na-pratica,Código utilizado no vídeo em que ensinamos o passo a passo para você aprender o Design Pattern Strategy na prática!,8,0,2023,2024,1,https://github.com/buildrun-tech/buildrun-strategy-na-pratica
Strategy,GoDesignPatterns,"We will analyze Strategy, Observer, Prototype and Memento Design Pattern in Go Lang.",8,0,2021,2022,0,https://github.com/borakasmer/GoDesignPatterns
Strategy,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Strategy,ValidationFactory,"We will create custom tag attributes. We will validate records for email, date, and string text properties globally. We will encrypt and hash properties, which are marked by custom (encrypt and hash) tags in the Post Request method. We will decrypt, encrypted fields in getting the Request Method. We will create a unique suitable validator for per custom attribute by using reflection. We will create a validator by using the Singleton Pattern and call ""GetValidator()"" method by using Strategy Design Pattern.",8,2,2022,2023,0,https://github.com/borakasmer/ValidationFactory
Strategy,Sales-Tax,Sales Tax Problem Solution in C# using with Abstract Factory and Strategy Design Pattern,7,5,2016,2024,1,https://github.com/gmershad/Sales-Tax
Strategy,php-design-patterns,"The Decorator Pattern, Adapter Pattern, Template Method Pattern, Strategy Pattern, Observer Pattern",7,0,2021,2024,1,https://github.com/manjeetk/php-design-patterns
Strategy,WellsHellGame,This is a demo game running on console. This game is designed to understand the uses of Strategy and Simple Factory Design Patterns.,7,0,2021,2024,1,https://github.com/KeremTAN/WellsHellGame
Strategy,wire-transfer-service,"This microservice was developed with Spring Boot to process wire transfers, verifying the current state in the H2 in-memory database and the fields of the request body model, to validate what the next state would be, using software Design Patterns such as the Pattern State and Strategy.",7,2,2021,2022,0,https://github.com/BlueJnr/wire-transfer-service
Strategy,temporal_adjusters_py,"Adjusters are a key tool for modifying temporal objects. They exist to externalize the process of adjustment, permitting different approaches, as per the strategy design pattern. Temporal Adjuster provides tools that help pinpoint very specific moments in time, without having to manually count days, weeks, or months.",7,0,2024,2025,2,https://github.com/gtkacz/temporal_adjusters_py
Strategy,better-business-logic-with-typescript,"The repository will provide examples on how to use and implement design patterns (like Composite, Builder, Template Method and others) using Typescript. The repository will demonstrate code reuse strategies and extensibility techniques for building robust Angular Services and Business Logic.  The repository will demonstrate how to implement shared Angular services and how to use them in Angular domain services. The services will include rich business logic layers that use the angular-rules-engine and angular-actions NPM packages.",7,0,2017,2021,1,https://github.com/buildmotion/better-business-logic-with-typescript
Strategy,StrategyFileEncrypter,An example of text files encryption using the strategy design pattern.,6,1,2021,2024,1,https://github.com/seigtm/StrategyFileEncrypter
Strategy,ultimate-board-game-system,"Java | An object-oriented framework for implemeting any 2-player board game such as Tic-Tac-Toe, Othello, Reversi and Checkers. Uses well known design patterns such as Command, Strategy, vistor, and state",6,2,2019,2024,1,https://github.com/psprao95/ultimate-board-game-system
Strategy,bookstore,"An e-commerce application using Servlet and JSP.  This serves as a basic project for beginners to learn the concepts of JSP, Servlets, design patterns, best practices and design strategies in JavaEE applications.",5,4,2018,2020,1,https://github.com/tshaheer/bookstore
Strategy,BootcampAssignment_StrategyPattern,Design Patterns - Strategy,4,0,2020,2020,1,https://github.com/panosrizos/BootcampAssignment_StrategyPattern
Strategy,design-pattern-strategy,Simple example using Strategy Design Pattern,4,0,2018,2023,1,https://github.com/augustocolombelli/design-pattern-strategy
Strategy,strategy-pattern-for-effective-ml-pipeline,Python Strategy and Factory Design Pattern for Effective ML Pipeline,4,1,2022,2024,1,https://github.com/ajisamudra/strategy-pattern-for-effective-ml-pipeline
Strategy,Observer_Setter_StrategyDesignPatterns,,4,0,2021,2022,1,https://github.com/nebinebili/Observer_Setter_StrategyDesignPatterns
Strategy,design-patterns-php,Implementation of common design patterns with php 7.4,4,0,2020,2025,1,https://github.com/ahmedalaahagag/design-patterns-php
Strategy,DesignPatterns,Collection of all the Design Patters with code example from HeadFirst Book,4,1,2018,2023,1,https://github.com/jaychakra/DesignPatterns
Strategy,Strategy-Pattern-Java,"In Strategy pattern, a class behavior or its algorithm can be changed at run time. This type of design pattern comes under behavior pattern.",4,0,2021,2022,1,https://github.com/iresh-rajitha/Strategy-Pattern-Java
Strategy,SoftwareEngineeringDesignPatterns,"Here, I have implemented various Software Engineering design patterns separately using Java, including Abstract Factory, Adapter, Bridge, Builder, Chain of Responsibility, Command, Decorator, Facade, Factory, Iterator, Observer, Prototype, Proxy, Singleton, and Strategy.",4,1,2020,2024,1,https://github.com/Rofiquldk1/SoftwareEngineeringDesignPatterns
Strategy,Isabelle,"Isabelle is a Discord Bot that incorporates three design patterns: Singleton, Strategy, and Command. Unit tests were made using jest. ",4,0,2020,2023,5,https://github.com/andreidimaano/Isabelle
Strategy,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Strategy,WholeSaleMavenSpringJPA,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with JPA, Spring and Maven",4,1,2019,2022,1,https://github.com/AnujaKoralage/WholeSaleMavenSpringJPA
Strategy,dp-behavioral-strategy,"Strategy is a behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.",3,5,2022,2024,1,https://github.com/una-eif204-progra2-master/dp-behavioral-strategy
Strategy,java-design-patterns,"Project that implements some design patterns using Java (Facades, Singletons, Bridges, Adapters, Strategy, Decorator, State, Builder, Observer, Factory and much more).",3,6,2020,2024,1,https://github.com/mupezzuol/java-design-patterns
Strategy,DiskSchedulingSimulation,A simple disk scheduling algorithm simulation project with using the strategy design pattern.,3,2,2017,2022,1,https://github.com/mpsijben/DiskSchedulingSimulation
Strategy,DesignPatterns_StrategyPattern,C# Implementation of Examples from Head First Design Patterns,3,1,2019,2023,1,https://github.com/shefsk/DesignPatterns_StrategyPattern
Strategy,DesignPattersJava,In this repository you will find an exemple of the two popular design patterns: Factory design pattern and Strategy design pattern with Java,3,0,2022,2023,1,https://github.com/NourLa/DesignPattersJava
Strategy,ReflectionsDemo,use Reflections to auto get best strategy from the strategy design pattern,3,1,2017,2019,1,https://github.com/xmeng1/ReflectionsDemo
Strategy,Design-Patterns-Strategy-Java,"# DESIGN-PATTERNS-Strategy-Java Esse projeto tem intuito de esclarecer quando utilizar o Padrão de Projeto Strategy e suas vantagens e desvantagens de forma simplificada e clara.  Apesar do código exposto no problema inicial, no segundo commit, ser bem claro e simples de entender, ele pode se tornar um grande problema. Por exemplo, o Correios tem mais que esses dois métodos de entrega, então teríamos que ter vários IF/ELSE para saber qual o método de envio para Calcular o Frete. Além disso, dentro desses IF/ELSE teríamos ainda mais linhas de código para verificar o peso, fragilidade da mercadoria, pois tudo isso contribui para o FRETE. O Resultado seria um método gigantesco, contendo toda lógica de forma bagunçada e isso é péssimo para manter.  Strategy  Quando utilizar?  O Strategy é um padrão que deve ser utilizando quando uma classe possuir diversos algoritmos que possam ser utilizados. No nosso exemplo, poderia facilmente ter vários algoritmos para calcular o Frete e deixar tudo isso no mesmo método não é uma solução escalável.  Vantagens: + Lógica na classe principal reduzida; + Eliminação de várias condicionais (IF/ELSE); + Implementação poder ser trocada em tempo de execução;  Desvantagens: + Aumento da complexidade na criação do projeto; + Aumento do número de classes",3,0,2016,2019,1,https://github.com/ArthurBrito/Design-Patterns-Strategy-Java
Strategy,2d-map-generator-Java,"Simple generator for game level rendering
Users strategy design pattern",3,0,2015,2019,1,https://github.com/6footgeek/2d-map-generator-Java
Strategy,Observer-State-Strategy-design-patterns-,,3,0,2021,2024,1,https://github.com/AmiraslanSumgait/Observer-State-Strategy-design-patterns-
Strategy,desmistificando-design-patterns,"Repo da talk que fiz: ""Desmistificando Design Patterns"" no #poaneters",3,0,2018,2024,1,https://github.com/maiconheck/desmistificando-design-patterns
Strategy,Observer-Strategy-Decorator-Design-Patterns-With-WPF,"In this project; observer, decorator and strategy design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",3,0,2021,2024,1,https://github.com/kamilhan-karaismailoglu/Observer-Strategy-Decorator-Design-Patterns-With-WPF
Strategy,dataobjectexception.powershell.oop,"PowerShell : How to call the PowerShell commands (cmdlet) through the use of design patterns (factory, strategy,...)",3,0,2020,2024,1,https://github.com/thierry-sinassamy/dataobjectexception.powershell.oop
Strategy,Swift-Strategy-DesignPattern,"App showing implementation of the Strategy design pattern, which makes it very easy to switch between different databases in the app: Core Data and Realm. Written for a Medium article",3,1,2020,2023,1,https://github.com/zafarivaev/Swift-Strategy-DesignPattern
Strategy,Mills,"Model View ViewModel design pattern on the example of Nine Men's Morris game, using different strategies",3,1,2017,2025,1,https://github.com/mentalmove/Mills
Strategy,SurveyTrackingSystem,"Class, use-case and activity models of survey tracking system. Used factory, strategy, bridge and composite design patterns also.",3,0,2021,2023,1,https://github.com/eneskzlcn/SurveyTrackingSystem
Strategy,Design-Pattern-Java,"This repo provides key Java Design Patterns 🎯 for writing clean, scalable, and maintainable code! 💻 It includes Creational 🏗️ (e.g., Singleton), Structural 🏢 (e.g., Adapter), and Behavioral 🤖 (e.g., Strategy) patterns to improve your Java development process. 🚀",3,0,2024,2024,1,https://github.com/jathurT/Design-Pattern-Java
Strategy,javascript-strategy-pattern,Implementação do padrão Strategy em Javascript ref: http://www.dofactory.com/javascript/strategy-design-pattern,2,2,2018,2019,1,https://github.com/YuriSalgado/javascript-strategy-pattern
Strategy,Diamond.Core-Patterns,C# libraries to support common design patterns.,2,2,2019,2024,3,https://github.com/porrey/Diamond.Core-Patterns
Strategy,Harbor-Web-Appplication,Web application designed for a Harbor to manage products-users-cases. applied in an object-oriented way strategy design pattern single ton decorative design pattern observer design pattern.,2,2,2021,2021,1,https://github.com/IamZygote/Harbor-Web-Appplication
Strategy,StrategyDesignPattern,Strategy Design Pattern in C#,2,0,2018,2021,1,https://github.com/J0rgeSerran0/StrategyDesignPattern
Strategy,strategy_pattern,Strategy Design Pattern in Java,2,0,2019,2019,1,https://github.com/parsa-JPM/strategy_pattern
Strategy,DesignPatterns-Strategy,Demo Project using design pattern Strategy,2,0,2022,2023,1,https://github.com/vinicius-colutti/DesignPatterns-Strategy
Strategy,Design-Patterns,C# Design Patterns,2,0,2023,2024,1,https://github.com/Faris-Abuali/Design-Patterns
Strategy,Design-Patterns,Design Patterns Decorator Strategy Observer ,2,0,2022,2023,1,https://github.com/Amin-chak99/Design-Patterns
Strategy,DesignPattern-Strategy,A Simple Strategy design pattern in PHP,2,0,2020,2022,1,https://github.com/helmis123/DesignPattern-Strategy
Strategy,DESIGN-PATTERNS-IN-JAVA,"I have implemented Factory method Design pattern, Strategy Design pattern and Adapter Design pattern in Java",2,0,2024,2024,1,https://github.com/KavinduRanawaka/DESIGN-PATTERNS-IN-JAVA
Strategy,StrategyPatternDuck,Head First Design Patterns (Elisabeth Freeman & Eric Freeman) - Chapter 1,2,0,2015,2021,1,https://github.com/grandlear/StrategyPatternDuck
Strategy,social_login_strategy_design_pattern,Example project for practicing strategy design pattern,2,1,2022,2022,1,https://github.com/fuad036/social_login_strategy_design_pattern
Strategy,strategy-chain-responsability,Design Patterns: Strategy + Chain of Responsability + Clean Architecture,2,0,2023,2023,1,https://github.com/luizcalaca/strategy-chain-responsability
Strategy,StrategyDesignPattern,.NET 8 Console application with example of the Strategy Design Pattern,2,0,2024,2024,1,https://github.com/henriquesd/StrategyDesignPattern
Strategy,ViewPagerStrategyPattern,ViewPager with TabLayout implemented by Strategy Design Pattern,2,0,2016,2017,1,https://github.com/antrikshtiwari/ViewPagerStrategyPattern
Strategy,strategy-pattern-api,Strategy Design Pattern in Java with REST API implementation ,2,0,2021,2024,1,https://github.com/gulbalasalamov/strategy-pattern-api
Strategy,designPatterns-Java,"practicing singleton, Strategy, Facade and Spring",2,0,2022,2022,1,https://github.com/m-carecho/designPatterns-Java
Strategy,Strategy-Design-Pattern,This respository includes complete implementation of Strategy Design Pattern with explanation .,2,1,2023,2023,1,https://github.com/akshatsh0610/Strategy-Design-Pattern
Strategy,python-design-patterns-strategy-factory-method-impl,Python 3 Design Patterns Strategy and Factory Method (Impl),2,0,2024,2024,0,https://github.com/andrelsf/python-design-patterns-strategy-factory-method-impl
Strategy,TextEditor,"Text editor based on GOF Design pattern book(Observer, Command, Visitor, Strategy, Composite,Command Design patterns)",2,1,2012,2023,1,https://github.com/sjmaharjan/TextEditor
Strategy,DesignPatterns,"DesignPatterns - Padrões Comportamentais - Técnicas de (Strategy, Chain of Responsibility, Template Method, State, Command e Observer)",2,0,2021,2025,1,https://github.com/marcello222/DesignPatterns
Strategy,webale-chess,"Build a type of chess called Webale chess using Java, and implemented different ""Gang of 4 Design Patterns"" including MVC, singleton, strategy, memento, etc.",2,2,2020,2025,4,https://github.com/LiewKuanYung/webale-chess
Strategy,designPattern,🧩 Java samples for a popular design pattern.,2,1,2023,2023,1,https://github.com/Haythamasalama/designPattern
Strategy,MangoOnlineShop_Algorithms_DesignPatterns,"Assignment with sorting algorithms of Bucket, Quick and Bubble Sort which include strategy pattern for payment methods",2,0,2020,2020,1,https://github.com/ThanosChristidis/MangoOnlineShop_Algorithms_DesignPatterns
Strategy,Factory-Singleton-and-Strategy-Design-Patterns_Examples,"🐉 Solved problems demonstrating the use of Factory, Singleton and Strategy Design Patterns using Java. These problems were solved during the course ""Object Oriented Analysis and Design CS309""",2,1,2018,2025,1,https://github.com/harismuneer/Factory-Singleton-and-Strategy-Design-Patterns_Examples
Strategy,article-spring-boot-convenience-and-limitation,Example project for article `Spring Boot: Strategy Design Pattern - Convenience and Limitation`,2,1,2020,2023,1,https://github.com/khmarbaise/article-spring-boot-convenience-and-limitation
Strategy,DesignPattern,"Design pattern ""Gang of Four"" : Proxy, Composite, Decorator, Strategy, Observer, Adapter, Builder, Factory, FactoryAbstract.",2,0,2021,2021,1,https://github.com/belaid1993/DesignPattern
Strategy,design-patterns,"This repository was created to study all variations of design patterns existent. Among the design patterns studied are: Strategy, Chain of Responsibility and others  :mortar_board:",2,0,2016,2023,1,https://github.com/carloslimasis/design-patterns
Strategy,Hotel-Management-System,"The system is implemented in C++ using various design patterns like Singleton, Factory, and Strategy",2,1,2021,2025,1,https://github.com/Niveshpai/Hotel-Management-System
Strategy,design-pattern-abstract-factory,"In the continuation of my previous article (Strategy vs. Factory Design Patterns in Java), I am here with an article on Abstract Factory Pattern. In this article, I will try to highlight the usage of the pattern along with the difference with the Factory Pattern.",2,4,2020,2021,1,https://github.com/BrijeshSaxena/design-pattern-abstract-factory
Strategy,BankUserManagement,This project demonstrates the use of the Strategy and Factory Method design patterns in a banking system.,2,0,2025,2025,1,https://github.com/Stojanovic94/BankUserManagement
Strategy,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Strategy,Parking-Lot-OOP,"Parking lot management system demonstrating SOLID principles, Object-Oriented-Programming and Design Patterns (Strategy, Iterator, Static Factory Method, Facade etc.)",2,1,2021,2023,2,https://github.com/israelElad/Parking-Lot-OOP
Strategy,gateway-de-pagamento-quarkus,"This repository contains the implementation of a payment gateway using Quarkus and Clean Architecture. Additionally, design patterns such as Factory and Strategy are utilized to promote a flexible and extensible architecture.",2,0,2024,2025,1,https://github.com/KauanRocha/gateway-de-pagamento-quarkus
Strategy,WholeSalePOSWithwithHibernate,"This system was developed for whole sale order and item management system for super market.  System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with Native Hibernate",2,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSalePOSWithwithHibernate
Strategy,CoronaHotel,"Java project: a system that management Corona Hotel. The system is based on several guidelines and implements design patterns such as Singleton, Strategy, Factory Method and MVC. Additional use of Multithreading, Serialization.",2,0,2020,2023,1,https://github.com/ArielleMizrahi/CoronaHotel
Strategy,WholeSaleWithSpringDataJPA,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with JPA, Spring Data JPA",2,1,2019,2019,1,https://github.com/AnujaKoralage/WholeSaleWithSpringDataJPA
Strategy,DunkContest,"An interactive Dunk Contest simulation developed in Java, implementing various design patterns (Strategy, Factory Method, Singleton) to model player interactions, judge evaluations, and scoring logic. This project showcases object-oriented programming skills, intricate algorithms for dunk evaluation, and comprehensive user interaction.",2,0,2024,2024,1,https://github.com/davidxosei/DunkContest
Strategy,L2,"The L2 Project is a collection of twelve programming tasks designed to enhance understanding and implementation of various concepts in Go, including design patterns (such as Facade, Builder, and Strategy), string manipulation, file handling, NTP communication, regular expressions, and the development of basic utilities and custom tools.",2,0,2024,2025,0,https://github.com/mysticalien/L2
Strategy,OOSW-Project2-SpaceInvanders,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",2,0,2021,2023,1,https://github.com/johnnylongvo/OOSW-Project2-SpaceInvanders
Strategy,Priosner-Dilema,"Project 1 In this project, you will develop bots that play a simple game. Each bot has a different strategy. You will pit these bots against each other to determine which strategy is more successful in this context. These bots are incredibly simple, and consist of a few lines of code and methods that represent different strategies of play.  Teams Teams have been assigned for this project and will be posted on Blackboard. They are fixed - no switching or cooperating across team lines. It is up to teammates to ensure that their partner adheres to the American University Honor Code. You may use pair programming, however, you must each take turns in the driver role on your own laptop. I should see commits on Github for each of you to get full credit for this assignment.  Step 0 - Background Research. Both members should review the description for the Prisoner's Dilemma on Wikipedia. You do not need to become familiar with the intimate mathematical details of the Dilemma, just the general mechanism and the difference between the iterated dilemma and the non-iterated version (Introduction through the end of Section 3.1). This topic has been debated endless in a variety of fields, so there is a lot of additional material available if you want to dig deeper. For this assignment, you will only be required to be familiar with the basics (e.g., you will not need to understand the Nash equilibrium or the proof that goes with it). Both members should work together to devise five strategies for ""winning"" the prisoner's dilemma over a long number of iterations. I recommend first writing these strategies down in simple English rather than trying to jump directly into developing code. You may use the 'tit-for-tat' strategy as one of them, or come up with ones of your own. Optional There are several good videos that can help make these concepts a little clearer. I recommend this one, but there are many others. Step 1 - Create the Repo for your Team. Both members of your team will visit this link. This will create a repo for your team in Github. For this assignment, you will share a Github repo with your teammate. If you are the first member of your team to visit the link, you can create the team and the repo - make sure you create the right team. If you are the second member to click the link, then make sure you join the right team. Both members will clone the repository to your local machines (i.e., using git clone <URL>). You will then each have a local repository that is linked to the shared repository, and can work on the code together. As a reference for how to use git, I suggest this site, as it avoids some of the more complicated theory behind git and focuses on the bare minimum practicalities. Step 2 - Review the Provided Code. In the repository is a starter class, Prison, that has the bare minimum for the prisoner's dilemma. There is a variable for the last choice made by each of two prisoners, (i.e., Prisoner A and Prisoner B).  //The last choice of each prisoner.      boolean lastChoicePrisonerA = BETRAYED; //Set initially to BETRAYED for testing     boolean lastChoicePrisonerB; Two examples are given. Prisoner B is using a randomChoice() strategy, in which B will randomly choose to stay silent or betray Prisoner A. This strategy does not use prior information to make the decision - it is equivalent to flipping a coin. The provided code gives an example of a second strategy: betrayIfBetrayed(). If A betrayed last time, then B will betray also. However, if A stayed silent, B will randomly choose to stay silent or betray based on the results of a coin flip. The coin flip is generated using the Random class, a more thorough description of which can be found here.  public static boolean randomChoice(){     Random rand = new Random();     return rand.nextBoolean(); }  public static boolean betrayIfBetrayed(boolean lastChoice){     if(lastChoice == BETRAYED)       return BETRAYED;     else       return randomChoice(); } Step 3 - Write one method for each strategy. Following the design pattern for the example strategies, define one method for each of your team's five strategies (the example methods do not count). Assume that each prisoner can know the outcome of one or more previous encounters with the other prisoner through parameters passed to the method.  Step 3.5 - Commit and Push to Github Remember, this is not like using Blackboard for submitting assignments. As you are working with your teammate, you will need to frequently push code to the Github repo so that your teammate can access it. If you wait to the last minute, you could have conflicts that are difficult to resolve. It is much better to get into a rhythm with your partner early rather. To get full credit for your part in this, I need to see multiple commits from each team member.  Step 4 - Write a method for scoring the outcome If they both stay silent then both prisoners serve 1 year. If a prisoner stays silent and the other betrays, then the prisoner who stayed silent gets 3 years in prison while the other goes free. If both betray, then each prisoner serves 2 years. Write a method that assigns a score to a strategy based upon the outcome. A high score is a bad thing, as each point represents a number of additional years added to the prisoner's sentence.",2,5,2019,2023,1,https://github.com/GiannaW/Priosner-Dilema
Strategy,Weatherlicious,"This is a mobile Android Application design with the newest Android Jetpack Libraries and with a MVVM Design Pattern. With this application you cancheck the weather in your city consuming the data from an Weather API. The App is built in Kotlin using the retrofit library to communicate with the API. It also uses Navigation Components, View Binding, Dagger Hilt for dependency injection, Room for a caching strategy and the MP Android Chart library to display the data in a chart. You can search for the weather forecast in your favourite city and you are also able to use the application offline and see the latest downloaded weather forecast in your device.",2,0,2022,2023,1,https://github.com/agul1no/Weatherlicious
Strategy,experiment-strategy-pattern-impact-maintainability,Evaluating the Impact of the Strategy Design Pattern on DAO Maintainability,1,10,2018,2022,1,https://github.com/EmpiricalStudies/experiment-strategy-pattern-impact-maintainability
Strategy,Hotel-Management-System,"The system is implemented in C++ using various design patterns like Singleton, Factory and Strategy",1,6,2020,2023,1,https://github.com/ShefaliDigikar/Hotel-Management-System
Strategy,strategy,Strategy design pattern description | Description du design pattern Strategy,1,0,2017,2017,1,https://github.com/choubidouap/strategy
Strategy,strategy,Strategy design pattern,1,0,2023,2023,1,https://github.com/starseeker-code/strategy
Strategy,StrategyDesignPattern,strategy design pattern,1,0,2023,2023,1,https://github.com/CodenameOverlord/StrategyDesignPattern
Strategy,StrategyJava,Exercises using design patterns,1,0,2024,2024,1,https://github.com/annaaldz/StrategyJava
Strategy,StrategyPattern,Try to implement the Strategy Design Pattern. Reference book Head First Design Pattern.  ,1,0,2020,2020,1,https://github.com/khabib97/StrategyPattern
Strategy,dp-strategy,Design Patterns - Strategy,1,0,2018,2018,1,https://github.com/bkayranci/dp-strategy
Strategy,strategypattern-kata,Strategy Pattern Design Pattern - Design Patterns I - Coding Dojo @ Gradiant,1,0,2019,2023,3,https://github.com/ivannieto/strategypattern-kata
Strategy,StrategyPattern,CPP Example Of Design Pattern ,1,0,2012,2016,1,https://github.com/dannion/StrategyPattern
Strategy,Strategy_Design_Pattern,Strategy Design Pattern,1,0,2018,2022,1,https://github.com/mtnaln/Strategy_Design_Pattern
Strategy,Strategy-in-C-,Strategy_Design_Pattern,1,0,2024,2025,1,https://github.com/trantien1997/Strategy-in-C-
Strategy,BuildACarUsingDesignPatterns,"Code to build a car, drive it and rent it via Some design patterns - Abstract Factory, Decorator, Template Method, Strategy",1,2,2015,2024,1,https://github.com/pserra77/BuildACarUsingDesignPatterns
Strategy,DesignPatterns_chapter-1,Strategy design pattern,1,0,2014,2015,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-1
Strategy,DesignPatterns,Strategy Design Pattern,1,0,2017,2017,1,https://github.com/sandy47rao/DesignPatterns
Strategy,order-invoicing,strategy design pattern,1,0,2020,2020,1,https://github.com/paulaonea/order-invoicing
Strategy,m3s06-strategy-pattern,Strategy Design Pattern,1,0,2024,2024,0,https://github.com/FullStack-Education/m3s06-strategy-pattern
Strategy,Strategy_Pattern,Design Pattern Strategy exemple,1,0,2017,2022,1,https://github.com/Gwynbl31dd/Strategy_Pattern
Strategy,StrategyStudy,Just simple code about design-pattern ,1,0,2012,2014,1,https://github.com/maldonado/StrategyStudy
Strategy,node-strategy-pattern,NodeJS strategy design pattern,1,0,2020,2023,2,https://github.com/rchuluc/node-strategy-pattern
Strategy,apex-patterns-strategy,Apex Design Patterns - Strategy,1,0,2018,2023,1,https://github.com/jlraes/apex-patterns-strategy
Strategy,strategyDesignPattern,Strategy Design Pattern implementation in Laravel,1,0,2021,2022,2,https://github.com/robert-knepper/strategyDesignPattern
Strategy,Strategy-Design-Pattern-in-Ruby,Strategy Design Pattern from Design Patterns in Ruby by Russ Olsen,1,0,2011,2014,1,https://github.com/ErikRHanson/Strategy-Design-Pattern-in-Ruby
Strategy,exemplo-simples-padrao-strategy,estudo de design patterns,1,0,2023,2023,1,https://github.com/ezequiel-lima/exemplo-simples-padrao-strategy
Strategy,StrategyPatternExample,College project about the Strategy Design Pattern,1,0,2021,2024,1,https://github.com/fzanutto/StrategyPatternExample
Strategy,java_gof_strategy,"design pattern ""strategy"" in java",1,0,2015,2016,1,https://github.com/osbominix/java_gof_strategy
Strategy,MikesMovies,Implementing strategy design pattern,1,0,2020,2021,1,https://github.com/ML3110/MikesMovies
Strategy,JavaPatterns_Strategy,Software design patterns - Strategy (Java),1,2,2021,2024,1,https://github.com/brunomnsilva/JavaPatterns_Strategy
Strategy,Design-Patterns,State & Strategy Design Patterns,1,1,2017,2024,1,https://github.com/malwareninja/Design-Patterns
Strategy,design-pattern-strategy,Design Patterns: The Strategy Pattern,1,0,2021,2021,1,https://github.com/vitalex975/design-pattern-strategy
Strategy,strategy-demonstration-java,Strategy design pattern java demonstration.,1,0,2021,2021,1,https://github.com/amir-shiati/strategy-demonstration-java
Strategy,DpoStrategy,Strategy design pattern implementation in Java,1,0,2011,2014,1,https://github.com/jskvara/DpoStrategy
Strategy,StrategyDesignPattern,A simple example of the strategy design pattern.,1,0,2024,2024,1,https://github.com/jonatasolmartins/StrategyDesignPattern
Strategy,DesignPattern-Strategy,Example implementation of Strategy design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Strategy
Strategy,strategy,Basic port to C# of the Strategy design pattern example (Ducks).,1,1,2015,2019,2,https://github.com/krishermans/strategy
Strategy,Strategy_pattern-in-java,design pattern in java Strategy_pattern,1,0,2015,2023,0,https://github.com/snandasena/Strategy_pattern-in-java
Strategy,Spring-Strategy-DesignPatterns,Design Patterns Implemented in Spring Boot,1,1,2018,2021,2,https://github.com/himsmittal/Spring-Strategy-DesignPatterns
Strategy,Java-Strategy-Design-Pattern,Strategy Design Pattern implemented in Java,1,0,2019,2021,1,https://github.com/ssrishabh96/Java-Strategy-Design-Pattern
Strategy,GuitarHero,Demonstration of Strategy design pattern.,1,0,2015,2017,1,https://github.com/ewu-herrint/GuitarHero
Strategy,strategy-python,Exemplo do Design Pattern Strategy com Python,1,1,2020,2020,1,https://github.com/rrgaya-zz/strategy-python
Strategy,Design-Patterns-PHP,Strategy design pattern in PHP,1,0,2023,2023,1,https://github.com/marsilba/Design-Patterns-PHP
Strategy,Strategy-Design-Pattern,An example for the Strategy design pattern,1,0,2013,2014,1,https://github.com/moztro/Strategy-Design-Pattern
Strategy,DesignPattern-Strategy,Demonstrate Strategy design pattern using Ninject Kernel,1,0,2022,2022,1,https://github.com/cstirbe/DesignPattern-Strategy
Strategy,strategy-pattern-example,A more realistic strategy design pattern example,1,0,2020,2021,1,https://github.com/Alvin-Leung/strategy-pattern-example
Strategy,DesignPatterns.Strategy,A simple implemenation of strategy design patterns,1,0,2018,2018,1,https://github.com/abuzaforfagun/DesignPatterns.Strategy
Strategy,PATTERN_STRATEGY,IMPLEMENTS THE DESIGN PATTERN STRATEGY WITH JAVA CORE,1,0,2020,2023,1,https://github.com/EdgarEmmanuel/PATTERN_STRATEGY
Strategy,Strategy-Pattern,Implementação simples do design pattern strategy em C#,1,0,2019,2022,1,https://github.com/sn0wfl4k3s/Strategy-Pattern
Strategy,StrategyDesignPatternDemo, This C# project created for demonstrating the Strategy design pattern,1,0,2018,2019,1,https://github.com/Jamaxack/StrategyDesignPatternDemo
Strategy,Ex8-Strategy-Observer-Command,05506230-Design Patterns In Object-Oriented Programming,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex8-Strategy-Observer-Command
Strategy,DesignPatterns-Strategy,,1,0,2025,2025,0,https://github.com/Dhananjay-7/DesignPatterns-Strategy
Strategy,DesignPatterns.Strategy,,1,0,2022,2023,1,https://github.com/dFarkhod/DesignPatterns.Strategy
Strategy,DesignPatterns-strategy,,1,0,2022,2022,1,https://github.com/thiagocantero/DesignPatterns-strategy
Strategy,strategy_design_pattern,Implementation of the strategy design pattern with golang,1,0,2023,2023,1,https://github.com/Creatorjason/strategy_design_pattern
Strategy,DesignPatterns,Strategy Pattern exercises,1,1,2019,2019,0,https://github.com/pmestefania/DesignPatterns
Strategy,belajar-strategyPattern,contoh kode sederhana untuk materi mata kuliah design pattern menggunakan java,1,0,2024,2024,1,https://github.com/teukualdieaulia/belajar-strategyPattern
Strategy,expert-guide,Design Pattern - Strategy and Abstract Factory,1,0,2018,2022,0,https://github.com/cvmartins1996/expert-guide
Strategy,ec2-pricing-calculator-api-example,example usage of strategy design pattern,1,0,2024,2025,1,https://github.com/almaas-izdihar/ec2-pricing-calculator-api-example
Strategy,LibraryManagement,Java Swing with Strategy Design Pattern,1,0,2023,2024,1,https://github.com/JDBKJayakody/LibraryManagement
Strategy,DesignPatterns,Strategy & Chain Of Responsibility,1,0,2024,2024,1,https://github.com/kaanberatt/DesignPatterns
Strategy,Strategy,Simulador de criação de patos que utiliza o Padrão de Projeto (Design Patterns) Strategy. :duck:,1,0,2020,2023,1,https://github.com/Gwolner/Strategy
Strategy,python-sorting-strategy,"implementing two sorting algorithm under the ""strategy"" design pattern.",1,0,2019,2020,1,https://github.com/ayoubabozer/python-sorting-strategy
Strategy,implementation-of-strategy-design-pattern-php,Implementation of Strategy Design Pattern on PHP Slide,1,0,2016,2016,1,https://github.com/reyhansofian/implementation-of-strategy-design-pattern-php
Strategy,DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA,"JAVA project to design a Generic Library for Serializing and De-serializing Objects (Check-pointing Objects) using Dynamic Proxy, Java Reflection, and Strategy Pattern",1,0,2017,2020,1,https://github.com/shahnish009/DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA
Strategy,csharp.strategy.pattern.inatan,Just a small project to remenber strategy design pattern ,1,0,2020,2020,1,https://github.com/Inatan/csharp.strategy.pattern.inatan
Strategy,StrategyAndDI,A sample application that uses the Strategy Design Pattern and Inversion of control,1,0,2012,2013,1,https://github.com/adaptives/StrategyAndDI
Strategy,csharp-design-strategies,Some design patterns and strategies in CSharp,1,0,2017,2021,1,https://github.com/learnasyougo/csharp-design-strategies
Strategy,RiverGame,"Used OOP design patterns singleton, command, Strategy",1,0,2021,2022,1,https://github.com/Youssefa99/RiverGame
Strategy,DRF_strategy-pattern,Strategy Design Pattern implemented for using with Django REST Framework,1,1,2022,2024,1,https://github.com/aleesoltani/DRF_strategy-pattern
Strategy,pattern,Mettre en oeuvre le design pattern strategy,1,0,2012,2013,0,https://github.com/rcomone/pattern
Strategy,java-selenium-designPatterns-Strategy,,1,0,2021,2023,1,https://github.com/pcm708/java-selenium-designPatterns-Strategy
Strategy,AtividadePadraoEstrategia,An example of the Strategy design pattern,1,0,2021,2021,1,https://github.com/Luh-Henrique/AtividadePadraoEstrategia
Strategy,DesignPatterns,The most used Design Patterns that softwares engineers work with. ,1,0,2020,2020,1,https://github.com/flaviocr2012/DesignPatterns
Strategy,C214-Strategy,"Tarefa da aula 11 de C214, implementando o design pattern Strategy",1,0,2022,2022,1,https://github.com/ItaloRez/C214-Strategy
Strategy,pattern-strategy,Basic application used to demonstrate the use of the design pattern strategy,1,0,2020,2020,1,https://github.com/KaliaryCisne/pattern-strategy
Strategy,Moving-Strategy,This Java example demonstrates a simple implementation of the Strategy Design Pattern.,1,0,2023,2024,1,https://github.com/vovandreevik/Moving-Strategy
Strategy,go-strategy,Projeto criado para aprendizagem da metodologia de design patterns Strategy em Go.,1,0,2024,2024,1,https://github.com/pietroBragaAquinoJunior/go-strategy
Strategy,designpatterns,Projeto que abrange diversos design patterns,1,0,2018,2023,1,https://github.com/lelodois/designpatterns
Strategy,Strategy-Pattern-with-Swift,Here is a simple example of Strategy design pattern in Swift ,1,0,2022,2022,1,https://github.com/HappyIosDeveloper/Strategy-Pattern-with-Swift
Strategy,musical-battle,OOP project with design patterns Composite and Strategy,1,1,2022,2025,2,https://github.com/fedebayer/musical-battle
Strategy,stratexample,Just a example of strategy design pattern application,1,0,2019,2021,1,https://github.com/joaogabriellima/stratexample
Strategy,splitwise,Splitwise implementation which uses Factory & Strategy Design pattern,1,0,2022,2022,1,https://github.com/chepaiytrath/splitwise
Strategy,Design_Pattern,"Design Pattern, like Singleton, Decorator, State, Strategy, etc",1,0,2023,2024,1,https://github.com/PeterHUistyping/Design_Pattern
Strategy,DesignPatternsPracticeGame,learn how to use the Strategy Pattern!,1,0,2015,2019,2,https://github.com/shamshirz/DesignPatternsPracticeGame
Strategy,design-patterns,"design pattern session MSRIT , Singleton and Strategy Patterns",1,0,2022,2022,1,https://github.com/MSPawanRanjith/design-patterns
Strategy,DesignPattern,collection of Java design pattern implementations,1,0,2024,2025,1,https://github.com/bunu23/DesignPattern
Strategy,HospitalStrategy,A hospital system implementing the strategy design pattern for different user permission levels.,1,0,2023,2023,1,https://github.com/ColbyMoney/HospitalStrategy
Strategy,design-patterns-strategy,Exercício de uma calculadora de impostos utilizando recursos de POO.,1,0,2021,2021,1,https://github.com/vinilpz/design-patterns-strategy
Strategy,strategy-design-patterns,,1,0,2022,2022,1,https://github.com/al-hassan-cse/strategy-design-patterns
Strategy,design-patterns-strategy,"Presentation examples, exercises and solutions for the Design patterns - Strategy chapter of More programming with Java",1,0,2016,2022,1,https://github.com/progund/design-patterns-strategy
Strategy,patterns1,"Iterator, Observer, Strategy, Dependency Injection Design Pattern sample code",1,0,2020,2021,1,https://github.com/lshorser/patterns1
Strategy,statregy,Design Patterns - Strategy Prog. III - Engenharia de Software 2020,1,0,2020,2022,1,https://github.com/GabrielGGH/statregy
Strategy,Dynamic-Proxy-and-Reflection,Java dynamic proxy and reflection with strategy design pattern,1,0,2016,2016,0,https://github.com/hprem991/Dynamic-Proxy-and-Reflection
Strategy,jdbcStratetyTransaction,Api to Manager dababase transaction with strategy design pattern,1,0,2019,2019,1,https://github.com/mreboucas/jdbcStratetyTransaction
Strategy,meanheap_designPatterns,"Minheap implementation with design patterns - iterator , strategy, decorator, filter, null object pattern",1,0,2014,2016,1,https://github.com/Bela2711/meanheap_designPatterns
Strategy,java-design-patterns-strategy,"Esse projeto consite uma API REST para gerenciar notificações de um sistema de pedidos, armazenando no banco os pedidos e seus status, e enviando notificações ao usuário sempre que o status de um pedido for atualizado.",1,0,2024,2024,1,https://github.com/cleosilva/java-design-patterns-strategy
Strategy,5DesignPatterns,Strategy and Factory Pattern,1,0,2020,2020,1,https://github.com/santosh0305/5DesignPatterns
Strategy,Sample-Strategy,Repositório com exemplo prático de utilização do Design Pattern Strategy na aplicação de cálculo de impostos,1,0,2019,2019,1,https://github.com/RLGHISLENI/Sample-Strategy
Strategy,design-patterns-in-action-strategy-book,Design Patterns in Action - Mastering the Strategy Pattern with 11 Real-World Examples,1,0,2024,2024,1,https://github.com/nnikolay/design-patterns-in-action-strategy-book
Strategy,Strategy-Pattern,Implementation of the Strategy pattern from the book Head First: Design Patterns. Changing Java to C#.,1,0,2011,2013,1,https://github.com/osukaa/Strategy-Pattern
Strategy,DesignPatterns,"Java console application factory of t-shirt products implementing strategy pattern. T-shirt has 3 variations  Color, Size, Fabric and three different payment methods Credit/Debit cards, Money/Bank transfer and Cash. The application gives as an output a Strategy  pattern  that  implements  the  variations  and  the  payment methods  under  three  (3)  combined strategies  that  implement  all  the  possible combinations.",1,0,2021,2023,1,https://github.com/kkousounnis/DesignPatterns
Strategy,fantasy-rpg-game,"This project implements Singleton, Factory, Strategy and Observer design patterns.",1,0,2017,2019,1,https://github.com/rd-spring-coder/fantasy-rpg-game
Strategy,UnityPatterns,"Unity Design Patterns UPM package (e.g Singleton, Strategy, Facade...)",1,0,2022,2022,1,https://github.com/mfdeveloper/UnityPatterns
Strategy,ClassGameCPP,Class game made in C++. Implements State/Strategy design patterns.,1,0,2017,2018,1,https://github.com/AustinStephens/ClassGameCPP
Strategy,software-quality-and-testing,"Design patterns: Factory, Builder, Adapter, Decorator, Strategy, Memento, and others.",1,0,2021,2022,1,https://github.com/sabrinalupsan/software-quality-and-testing
Strategy,Mancala-Board-Game,"Mancala game using Java Swing, MVC and Strategy design pattern",1,0,2017,2023,2,https://github.com/aniquedavla/Mancala-Board-Game
Strategy,design-patterns-strategy-multi-dbs,,1,0,2021,2023,1,https://github.com/KollerZx/design-patterns-strategy-multi-dbs
Strategy,STRATEGY-PATTERN,Let's take a look at the explanation of STRATEGY PATTERN of DESIGN PATTERNS through Adventure Game,1,0,2024,2024,1,https://github.com/LastCoderBoy/STRATEGY-PATTERN
Strategy,Payment-Gateways-Springboot,Multiple Payment Gateways implementation using Strategy Design Pattern with Springboot,1,0,2023,2024,0,https://github.com/Savid-Woah/Payment-Gateways-Springboot
Strategy,Iterators-In-C,Implementation of the Iterator and Strategy design patterns in C,1,0,2021,2021,2,https://github.com/IamShubhamGupto/Iterators-In-C
Strategy,strategy-plus-factory-design,(WSU object-oriented-program-and-design) Example of strategy and factory design pattern being used together.,1,0,2019,2019,1,https://github.com/ihartzell/strategy-plus-factory-design
Strategy,strategy-pattern,"Example ""Checkout Feature"" app for learn more about the Strategy Design Pattern. Built with Node and Typescript 🚀",1,0,2022,2022,1,https://github.com/Ricardo-VP/strategy-pattern
Strategy,DesignPatterns,"Exercises and practices for a university course on software design patterns, including Factory, Strategy, Adapter, Composite, Decorator, State, Observer, Singleton, and Facade patterns.",1,0,2024,2024,1,https://github.com/lucasvegalv/DesignPatterns
Strategy,Harbour-Wep-Application,Web application designed for a Harbor to manage products-users-cases. applied in an object-oriented way: strategy design pattern single ton decorative design pattern observer design pattern.,1,0,2021,2022,1,https://github.com/SeifAbdelsamea/Harbour-Wep-Application
Strategy,design-pattern-tutorial,A simple tutorial about Design Pattern in .NET Core using C#,1,0,2021,2024,1,https://github.com/xanwerneck/design-pattern-tutorial
Strategy,golang-strategy,This repository demonstrates the implementation of the Strategy Design Pattern in a serverless architecture using AWS Lambda and Go.,1,0,2025,2025,1,https://github.com/renatofagalde/golang-strategy
Strategy,AdventureGame,"Java and JavaFX game, testing design patterns. Observer, Strategy, Singleton, Factory.",1,0,2016,2024,1,https://github.com/dsenese/AdventureGame
Strategy,design_patterns,"Abstract Factory, Factory Method, Decorator and Strategy patterns Ruby implementation.",1,0,2018,2019,1,https://github.com/OscarMichelH/design_patterns
Strategy,NDAM_KafeOtomasyonu,"Abstract, Strategy and Command design patterns were used in this project",1,0,2018,2018,1,https://github.com/ogulcangumussoy/NDAM_KafeOtomasyonu
Strategy,CS-100-Final-Project,Sudoku Game coded in C++. Implements Strategy and Singleton design patterns.,1,0,2021,2022,1,https://github.com/vmeno0020/CS-100-Final-Project
Strategy,Design-Patterns-TD1-Strategy--Builder,,1,0,2020,2020,2,https://github.com/sebassgb/Design-Patterns-TD1-Strategy--Builder
Strategy,MessageProcessors,A flexible message processor architecture using Strategy and Factory design patterns,1,0,2015,2020,1,https://github.com/hashgit/MessageProcessors
Strategy,solid_webformyself,"SOLID principles( +DESIGN PATTERNS: Strategy, Template Method( - Open/Closed Principle (OCP) ) )",1,0,2021,2021,1,https://github.com/mslobodyanyuk/solid_webformyself
Strategy,php-validator,php validation (like laravel) using strategy design pattern (not complete yet),1,0,2021,2021,1,https://github.com/kareem-torky/php-validator
Strategy,GamePlayStation,GamePlayStation using strategy design pattern(it's button changes it's functionality according to the selected game),1,0,2017,2019,1,https://github.com/loliksamuel/GamePlayStation
Strategy,html-login-page-ui-with-strategy-validate-pattern,create login page ui with custome css and add strateg design pattern for feild validate,1,0,2024,2024,1,https://github.com/Nadeesha699/html-login-page-ui-with-strategy-validate-pattern
Strategy,Swift-Strategy-Design-Pattern-,This is a simple swift playground which shows in simple terms the concept of the Strategy Design Pattern,1,0,2017,2017,1,https://github.com/csanc195/Swift-Strategy-Design-Pattern-
Strategy,gilded-rose-kata-typescript-v2,"My second gilded rose kata solution, this time using the strategy design pattern",1,0,2024,2024,1,https://github.com/Guilherme-07062002/gilded-rose-kata-typescript-v2
Strategy,DNDFinalProject,"Personal repo for Design Patterns Final Project. Dungeons and Dragons Style program with implementation of multiple Design Patterns(Memento, Decorator, Strategy, Factory)",1,0,2020,2020,1,https://github.com/wolffcol/DNDFinalProject
Strategy,Software-design-patterns.-University-Second-Year,"5 Software design patterns work for IS2: Singleton, Factory, State, Observer, Strategy",1,0,2018,2020,2,https://github.com/lakidain/Software-design-patterns.-University-Second-Year
Strategy,Design-Patterns,Studying various design pattern strategies with C#. Cohesive and interactive via the console.,1,0,2022,2023,1,https://github.com/henryfaulkner/Design-Patterns
Strategy,Design-Patterns-Examples,"Repository with several design patterns examples in Java: Strategy, Observer, Decorator, etc.",1,0,2018,2022,1,https://github.com/MarioCavero/Design-Patterns-Examples
Strategy,ShortestSuperstringProblem,An Object Oriented solution to the ShortestSuperstringProblem utilising the strategy design pattern.,1,0,2018,2018,1,https://github.com/caldempsey/ShortestSuperstringProblem
Strategy,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Strategy,design-pattern-strategy-impostos-cidades,Explorando os design patterns com uma aplicação que calcula diferentes tipos de impostos que variam de acordo com a cidade,1,0,2022,2022,1,https://github.com/mariasantosdev/design-pattern-strategy-impostos-cidades
Strategy,AspNetCoreDesignPatterns,"Adapter, ChainResponsibility, Command, Composite, Decorator, Observer, Strategy, Template Patterns",1,0,2022,2023,0,https://github.com/MertGuney/AspNetCoreDesignPatterns
Strategy,ruby-design-patterns,,1,0,2016,2017,1,https://github.com/kalelc/ruby-design-patterns
Strategy,.NET-Core-API-Design-Patterns-Strategy-Demo-Pagamentos,API / Webservice feita em .NET Core 3.0 utilizando o padrão de projeto Strategy em uma demo de pagamentos,1,0,2019,2020,1,https://github.com/pauloroger-io/.NET-Core-API-Design-Patterns-Strategy-Demo-Pagamentos
Strategy,Xonix,"Java game using Model-view-controller, singleton, proxy, strategy and iterator Design Patterns",1,0,2015,2017,1,https://github.com/davidsaechao/Xonix
Strategy,Java-Design-Patterns,This project demonstrates the Strategy and Factory Method design patterns through a practical example.,1,0,2025,2025,1,https://github.com/Stojanovic94/Java-Design-Patterns
Strategy,WordProcessor,A simple word processor in Java using the Visitor and Strategy design patterns.,1,1,2023,2024,1,https://github.com/karsujo/WordProcessor
Strategy,aop-exception-handler,a best practices in some situations in some situation  Using both the strategy design pattern and factory design pattern to handle exception with AOP,1,0,2022,2023,1,https://github.com/chipsk/aop-exception-handler
Strategy,Design-Patterns,"This project implements an arithmetic expressions evaluator using the Composite-, Bridge-, Iterator-, Strategy-, Factory-, Interpreter- and Visitor-Pattern.",1,0,2018,2022,1,https://github.com/MHaselmaier/Design-Patterns
Strategy,design-patterns-library,"Sistema bibliotecário com padrões de projetos Strategy, Null objects, Hook methods, Bridge, State e Observer.",1,0,2020,2020,1,https://github.com/vanessakoch/design-patterns-library
Strategy,java-design-patterns,Design patterns are programming language independent strategies for solving the common object-oriented design problems.,1,0,2024,2025,1,https://github.com/srikanth-josyula/java-design-patterns
Strategy,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Strategy,SoftwareDesignPatterns,"A repository that explores various software design patterns, providing code examples, explanations, and use cases for common design patterns like Singleton, Factory, Observer, and Strategy.",1,1,2023,2023,1,https://github.com/migustoo/SoftwareDesignPatterns
Strategy,robotBehavior,Object orientation in java - utilizes the Behavioral Design Pattern​: ​Strategy​ to determine robot behaviors ,1,0,2021,2022,1,https://github.com/Perrfection/robotBehavior
Strategy,test,some demos of test strategy;api test/unit test/mock/test ng/design pattern,1,0,2016,2019,1,https://github.com/Lily-huang/test
Strategy,Facebook-App-DP,"Facebook app using 6 design patterns (cache Proxy, Factory Method, Builder, Strategy, Observer, Decorator)",1,0,2021,2021,1,https://github.com/atatar1521/Facebook-App-DP
Strategy,TicTacToe,"Classical TicTacToe game implemented using Design Patterns like Factory, Strategy, Builder and Command pattern",1,0,2021,2022,1,https://github.com/anshx/TicTacToe
Strategy,cpu_datapath,Command-line simulation of a CPU Datapath in C++ using the Strategy design pattern,1,0,2016,2018,1,https://github.com/of-el/cpu_datapath
Strategy,sms-sender,A Laravel package to handle SMS sending based on Strategy and Facade design patterns,1,0,2023,2024,3,https://github.com/hamid80386/sms-sender
Strategy,python_lyft,"Assignment  based on Design patterns, unit Test in python solves Abstract factory , strategy patterns ",1,0,2022,2023,1,https://github.com/paerarason/python_lyft
Strategy,Unity3D-SkillSytem,"An RPG skill system created in Unity using strategy, decorator and composite design pattern",1,1,2023,2024,2,https://github.com/ngol0/Unity3D-SkillSytem
Strategy,Fall14-ObjOrientedProg-FinalProject-DesignPatterns-RPG,"A turn based role playing game with a basic GUI. Utilizes many design patterns: Actor, Command, Factory, Strategy, and some composite patterns. ",1,0,2016,2019,1,https://github.com/rehpotsirhc/Fall14-ObjOrientedProg-FinalProject-DesignPatterns-RPG
Strategy,design-patterns,📚 Simple examples of using design patterns. | Фримен Э. Head First. Паттерны проектирования. (2018),1,0,2021,2022,1,https://github.com/never-sleeps/design-patterns
Strategy,php-design-patterns-master,"OOP_PHP implemented software design pattern---Adapter,Decorator,DependencyInjection,Facade,Factory,Iterator,Observer,Proxy,Singleton,Strategy...",1,0,2020,2021,1,https://github.com/mohsin0176/php-design-patterns-master
Strategy,design-patterns,:alien: A list of design patterns implementeds in JAVA that I worked during my graduation,1,0,2017,2019,1,https://github.com/MarceloBritoWD/design-patterns
Strategy,StrategyDesignClock,"This is another example of the Strategy Design pattern, coded in C#. The user can select which format they want to display the time (analogue or digital), and change their choice while the clock is running.",1,0,2014,2014,1,https://github.com/rattfieldnz/StrategyDesignClock
Strategy,design_pattern_examples,"This repo includes a little number of C++ design pattern examples (e.g. strategy, observer)",1,0,2022,2023,1,https://github.com/czm35388/design_pattern_examples
Strategy,SentenceGenerator,Observer+Strategy patterns implemented in Java as a part of the Software Design & Patterns course,1,0,2022,2023,1,https://github.com/Elmar2001/SentenceGenerator
Strategy,StrategyDesignGame,"The primary aim of the implementation here was to learn how to use the Strategy Design pattern. The implementation is coded in C# - my lecturer (Patricia Haden) coded the interface, and I coded the ""engine"" to make the program/game go.",1,0,2014,2014,1,https://github.com/rattfieldnz/StrategyDesignGame
Strategy,Framework-Implementing-Design-Patterns,"A framework specially for financial institution like bank, insurance using the best practice of design patterns like Singleton, Factory, Observer, Strategy,  Decorator",1,0,2022,2022,1,https://github.com/lisa99990/Framework-Implementing-Design-Patterns
Strategy,StrategyPattern,"The Strategy Pattern is a behavioral design pattern that defines a family of algorithms, encapsulates each one, and makes them interchangeable. The client code (or context) can choose the strategy (algorithm) to execute at runtime, and the same interface is used for all strategies.",1,0,2024,2024,1,https://github.com/TheNiks/StrategyPattern
Strategy,logger-with-design-patterns,"Example of a logger with design patterns: strategy, composite, adapter and factory. Based on this video: https://www.youtube.com/watch?v=lqYm2V6J7Gk",1,0,2021,2021,1,https://github.com/rayque/logger-with-design-patterns
Strategy,math-expressions-evaluator,"An interpreter to parse and execute math expressions which implemented by using Design Patterns(Strategy,Interpreter,...)",1,0,2019,2019,1,https://github.com/nimvb/math-expressions-evaluator
Strategy,StrategyDesignEncryptionTool,"This is a very small implementation of the Strategy Design pattern, coded in C#. This little program can encrypt text using ROT13 - a simple Caesar Shift algorithm that changes a letter to the one 13 places ahead of it (with wrap-around).",1,0,2014,2014,1,https://github.com/rattfieldnz/StrategyDesignEncryptionTool
Strategy,Design-Patterns,"Explore a collection of commonly used design patterns implemented in Java. This repository showcases examples of Singleton, Factory, Abstract Factory, Adapter, Strategy, and Builder patterns. Each pattern is implemented in its own package, providing clear demonstrations and usage guidelines.",1,0,2023,2023,1,https://github.com/Meriyemelhajoui/Design-Patterns
Strategy,java-design-patterns-solid-principles,"Java examples of SOLID principles and of the following Design Patterns: Command, Decorator, Fachade, Factory, Memento, Observer, Prototype, Proxy, Singleton, Strategy.",1,0,2018,2023,0,https://github.com/ecristobale/java-design-patterns-solid-principles
Strategy,Refactoring_and_Implementing_Software_Design_Patterns,"Enhance CPP_OOP_Online_Store by refactoring and integrating software design patterns like Factory, Singleton, Observer, and Strategy. Improve maintainability and scalability while deepening understanding of design patterns in C++.",1,2,2024,2024,1,https://github.com/amaralazizy/Refactoring_and_Implementing_Software_Design_Patterns
Strategy,workflow-engine,"Simple workflow engine implemented in Java by utilizing several design patterns like Chain Of Responsibility, Strategy, Criteria",1,0,2019,2019,1,https://github.com/nimvb/workflow-engine
Strategy,Java3Dmaze,"Three-Dimensional maze using DFS and BFS search algorithms. Design patterns: strategy pattern, command pattern ,decorator pattern",1,0,2016,2017,1,https://github.com/dvirHashai/Java3Dmaze
Strategy,software-design-patterns-java,"Explore Java code examples for software design patterns—creational (Singleton, Factory), structural (Adapter, Decorator), and behavioral (Observer, Strategy). Master best practices for writing maintainable, flexible, and scalable Java code in this comprehensive repository.",1,0,2023,2023,1,https://github.com/kodiidok/software-design-patterns-java
Strategy,EvspoID,"Platform E-commerce perlengkapan olahraga dibangun dengan Java menggunakan design pattern factory, abstract factory, strategy, singleton, facade pattern",1,0,2023,2023,1,https://github.com/malikfajarh/EvspoID
Strategy,Books-List-with-SwiftUI,"I have fetched books list from New York times using Alamofire. It is entirely developed using SwiftUI framework. This project uses MVVM architecture and has some standard design patterns integrated as well such as: Singleton Patter, Strategy Pattern, Factory Pattern and  Observer Pattern.",1,1,2020,2023,1,https://github.com/HannyTufail/Books-List-with-SwiftUI
Strategy,Object-Oriented-Programming-Lab,"OOPs Concepts (SEM 3) - Constructor, command line argument, inheritance, Generic program, exception handling, templates, file handling, Strategy Design pattern",1,0,2021,2023,1,https://github.com/shinchancode/Object-Oriented-Programming-Lab
Strategy,shipment-tracker,A simulation of a shipment tracking system implemented in Kotlin to demonstrate the Strategy and Observer OO design patterns,1,0,2022,2023,1,https://github.com/DanielClyde/shipment-tracker
Strategy,Sensor,"A c++ Sensor Class, to read different kinds of sensors. The design is based on the strategy design pattern.",1,1,2016,2020,1,https://github.com/mezorian/Sensor
Strategy,selenium-todo-app-testing,"Structured tests for the todomvc app: Built on Page Object Model right off the bat, and Strategy Design Pattern",1,0,2024,2024,1,https://github.com/ashwiniraokarai/selenium-todo-app-testing
Strategy,Turn-based-strategy-game," A Java/ Java Swing application that implements a turn-based strategy game with user authentication GUI • Players’ credentials and their characteristics were extracted from JSON files • Used design patterns such as Singleton, Factory, Builder and Visitor for the implementation",1,0,2023,2023,1,https://github.com/Indracatana/Turn-based-strategy-game
Strategy,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Strategy,EsiMealApp,"a flutter mobile app for restaurant management  implementig design patterns (chain of responsibility, decorator, factory method, singleton, strategy and facade).",1,1,2020,2020,2,https://github.com/Sihamtahi/EsiMealApp
Strategy,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Strategy,poketerminal-game,"Um projeto de game de Pokemon (Simplificado) via terminal, utilizando conceitos de OOP, TDD e design patterns (Strategy e SimpleFactory)",1,0,2022,2022,1,https://github.com/walexhenrique/poketerminal-game
Strategy,TD-Game,"Strategy Based ""TOWER DEFENSE GAME"". The game provides implementation of different design patterns and communication between them i.e. Singleton patter, Factory pattern, Strategy Pattern etc.",1,1,2016,2016,5,https://github.com/umerkk/TD-Game
Strategy,alura-design-patterns-java-I,"Design Patterns Java I: Boas práticas de programação - Não repita código com Template Method, Saiba da importancia de estudar os Padrões de projeto, Resolva problemas de muito Ifs usando Strategy, Adicione comportamentos ao seu objeto com Decorator, Crie diferentes ações com Observer, Use o Builder para criação de objetos complicados",1,0,2020,2022,1,https://github.com/Edufreitass/alura-design-patterns-java-I
Strategy,GildedRoseWindowsCSharp-refactor-to-strategy-pattern,"This is Emily Bache's Gilded Rose refactoring kata in C#. This version includes adequate pin-down tests, and it has been refactored to the point that it can be refactored to the Strategy design pattern.",1,0,2020,2020,1,https://github.com/rkasper/GildedRoseWindowsCSharp-refactor-to-strategy-pattern
Strategy,Template-Webpack-Typescript,"This project provides a template to jump into a typescript project. Also provides a few design patterns (Factory, Singleton and Strategy)",1,1,2021,2021,0,https://github.com/hectorrodriguez773/Template-Webpack-Typescript
Strategy,Online-Food-Ordering-System,"Hands-on Low Level Designing for ""Food Ordering System"". Leveraging the power of different design patterns like factory, strategy, builder, etc.",1,0,2024,2024,1,https://github.com/i-nikhil/Online-Food-Ordering-System
Strategy,Smart-Calculator,In this project we will create a Smart Calculator step-by-step. We will use the Strategy Design Pattern throughout this project.,1,0,2019,2020,0,https://github.com/bryaneibon/Smart-Calculator
Strategy,Sport-Competitions-3rd-homework-OOP,"A Java program that manages sports competitions (teams registration, matches, rankings calculation). Multiple design patterns have been used: Singleton, Factory, Visitor, Observer, Strategy.",1,0,2020,2022,1,https://github.com/mateipetre/Sport-Competitions-3rd-homework-OOP
Strategy,MonsterHunter,"Java game based on a 2D map, classes of heroes, monsters and treasures. This app implements various design patterns: observer, singleton, factory, strategy, command.",1,0,2018,2023,1,https://github.com/razvanra2/MonsterHunter
Strategy,BonanzaGame,Simple Card Game implemented in Java for educational Purposes | Design patterns | Project structures | Strategy pattern |State Patterns |Factory method pattern | Plugin mechanismus | Uni Marburg,1,0,2018,2020,3,https://github.com/moustafarhat/BonanzaGame
Strategy,csv_file_validation,"Example of how to implement a modularized and maintainable application to perform a csv file validation in php, by using Strategy Software Design Pattern.",1,0,2013,2017,1,https://github.com/thedeveloperworldisyours/csv_file_validation
Strategy,Dental-Managerial-System,"Developed a managerial system for a dental clinic that also helps to automate all required paperwork. Using MVC,Observer,Singleton,and Strategy Design patterns.",1,0,2023,2023,1,https://github.com/Ahmedawad24/Dental-Managerial-System
Strategy,StrategyDesignAnimalShelterApp,"This another C# project where I was learning how to implement the Strategy Design factory. You can select a radio button (Cats, Dogs, Ducks, Rabbits), click on the ""Show Pets"" button, and text-based information about the animals (belonging to the selected species) will be displayed in the listbox. If there are 4 or less of the particular species, their images will be displayed on the right hand side. Through using the Strategy Design pattern, I was able to decouple a lot of code - especially from the form, and attempt to apply Single Responsibility and Open-Closed principles to the application.",1,0,2014,2014,1,https://github.com/rattfieldnz/StrategyDesignAnimalShelterApp
Strategy,Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns,"This is an Application Implementing 5 design Patterns like Strategy, Singleton, Builder, Observer and Adapter. It is a Basic Job Posting and Hiring Application implementing login and Register Functionality with Job Posting and Job Hiring , it also sends out SMS Messages to Subscribed Phone Numbers.",1,0,2024,2024,1,https://github.com/SpecteR926/Job_Hiring_Application_in_Java_Android_Studio_using_Design_Patterns
Strategy,Maze,"In this project, we build a random wrapping and non-wrapping maze game which can be played on GUI and console. To implement it, we used Java and in addition to that,  several design patterns were used such as command, MVC, and strategy design pattern.",1,0,2020,2021,1,https://github.com/ujjvalksharma/Maze
Strategy,comp2511-DungeonMania,This design project was done in pairs and uses design patterns and strategies to build a simple game (More details in the README.md file),1,0,2023,2024,4,https://github.com/desmondloh31/comp2511-DungeonMania
Strategy,SimUDuck,"Ch1 HeadFirst Design Patterns. Uses Strategy pattern to show how to encapsulate what varies, using composition over inheritance, and programming to interfaces instead of implementations. ",1,0,2016,2019,1,https://github.com/SamIAmHarris/SimUDuck
Strategy,Codeless-Platform-for-Data-Management,Implements Object Factory Design Pattern for DAO creation instead of mapping strategies. Introduces expression based templates; providing computational abilities for the entities in cloud hosted database ,1,0,2024,2024,4,https://github.com/Aaditatgithub/Codeless-Platform-for-Data-Management
Strategy,2048,"This project is an implementation of the popular 2048 game, created using HTML, CSS and JavaScript. The game includes three difficulty levels (Easy, Medium and Hard) and supports both keyboard and mouse/touch controls, using design patterns such as MVC and Strategy.",1,0,2025,2025,1,https://github.com/aleksanderpalamar/2048
Strategy,vitaRes-,"Three design patterns are used by the program to enable users to order ""VITARES"" restaurant items online and have them delivered to their homes:  template method mediator strategy",1,0,2024,2024,1,https://github.com/hayatvyhr/vitaRes-
Strategy,student_loan_services,"Java - Spring Boot Back-End application for students to apply for loans which can be then reviewed by the Bank Representatives and Bank Admins who can approve/reject the applications. The project implements the key design patterns such as the Observer, Strategy, Command, Decorator, Factory and the Interceptor design patterns. ",1,0,2025,2025,1,https://github.com/nikunjpanchal22/student_loan_services
Strategy,WholeSalePosWithJPA,"This system was developed for whole sale order and item management system for super market.  System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns",1,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSalePosWithJPA
Strategy,suitable-class-finder,"Given the hierarchy of an abstract class, it detects the appropriate concrete subclass (deterministically) that satisfies certain attributes obtained as a parameter. Useful for implementing the Strategy design pattern.",1,0,2024,2024,1,https://github.com/EzequielPuerta/suitable-class-finder
Strategy,asp.net-northwind,"ASP.NET MVC application leveraging design patterns, including singleton, strategy pattern and factory method. This application connects the user with a Microsoft Access Database (.mdb) via OleDb and Odbc.",1,0,2016,2016,1,https://github.com/mshutter/asp.net-northwind
Strategy,Pagamento-Service,"Aqui aprendi muitas tecnologias novas, que me ajudaram em projetos posteriores, como: MapStruct, Refletion, GlobalException (Para tratar todas exceptions.), Strategy (Design Patterns),  Validação de cpf, Utilização de microservices, com RabbitMQ ",1,0,2025,2025,1,https://github.com/Gabriel-404-search/Pagamento-Service
Strategy,Java-Board-Games,"Implemented three android board games (Sliding Tiles, Simon Says, Matching Card) in a group of five, designed CRC, applied design patterns iterator, observer, serialize and strategy, used exception, interface, etc…. ",1,0,2019,2022,1,https://github.com/joydu902/Java-Board-Games
Strategy,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Strategy,java-spbpu-homework,"A collection of practical Java programming tasks focused on design patterns, custom annotations, a translator program, and Stream API exercises. These tasks enhance understanding of core Java concepts and object-oriented principles.",1,0,2024,2024,2,https://github.com/seigtm/java-spbpu-homework
Strategy,DesignPattern_Project,https://youtu.be/bXKfP5Tbnt8 This is a single project where the following design patterns were used: POOL - FACTORY - OBSERVER - STRATEGY - BUILDER - LOOK UP TABLE - MVC - LOCALIZATION MANANGER - SCREEN MANANGER - FLYWEIGHT - PROTOTYPE - EVENT MANANGER,1,0,2021,2022,1,https://github.com/Gmorenoprat/DesignPattern_Project
Strategy,simple-search-engine-java,"This is a small project i have done with in the JetBrains academy Java developer study plan. I have been using File management, some basic searching algorithms, Collections and the Strategy design Pattern. ",1,1,2021,2021,1,https://github.com/ramelgov/simple-search-engine-java
Strategy,WholeSaleMavenSpringHibernate,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns with JPA, Spring and Maven",1,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSaleMavenSpringHibernate
Strategy,CS108,"Software design and construction in the context of large OOP libraries. Taught in Java. Topics: OOP design, design patterns, testing, graphical user interface (GUI) OOP libraries, software engineering strategies, approaches to programming in teams. ",1,0,2017,2022,0,https://github.com/jennykim1016/CS108
Strategy,rythma,"A Java-based backend for a music streaming service, featuring a comprehensive search system, notification alerts, and audit functionality. Used design patterns such as Command, Strategy, and Observable to facilitate clear and scalable code.",1,0,2024,2024,1,https://github.com/annna7/rythma
Strategy,rule_engine,"Simple RuleEngine where each rule is abstracted using Strategy Design Pattern, keeping in mind that each algorithm can grow separately. A client can chain multiple rules and and execute. Strategy, builder, generics and open closed principles are used out of box to achieve the functionality.",1,0,2018,2020,1,https://github.com/arvindbasant/rule_engine
Strategy,Magic,"This is a command-line card game, which is similar to Yu-Gi-Oh!, or Magic: The Gathering. The various cards and abilities are implemented using objective-C++ strategies, including polymorphism and the Observer design pattern.",1,0,2020,2023,1,https://github.com/tifchiu/Magic
Strategy,quality-control,"This repository hosts a Laravel application named ""Quality Control,"" designed for managing product quality assurance using HMVC architecture and various design patterns such as Repository, Builder, Data Mapper, Strategy, and Factory Method for scalability and maintainability.",1,0,2024,2024,1,https://github.com/ijeyg/quality-control
Strategy,WholeSaleMavenSpringConnectedJPA,"This system was developed for whole sale order and item management system for super market. System was developed using Layered Architecture and Singleton, Factory, DAO, DTO, Strategy design patterns and Spring Framework and Java Persistence API",1,0,2019,2019,1,https://github.com/AnujaKoralage/WholeSaleMavenSpringConnectedJPA
Strategy,Styler,"Welcome to Styler, a beautifully crafted React Native mobile app focused on showcasing innovative styling and UI techniques. This app is a playground for exploring various design patterns, layout strategies, and user interface components in React Native.",1,0,2024,2024,1,https://github.com/Abuzaid-0132/Styler
Strategy,Morra-Morra-Game,Converted the popular Italian game ‘Morra’ into a revamped digital replication. Utilised OOP design patterns such as strategy and factory to implement a flexible CPU.  Strengthened the modularity of the code by applying interfaces and abstract classes. ,1,0,2024,2024,2,https://github.com/zsim710/Morra-Morra-Game
Strategy,VendingMachine_FullSystem-Arch-Implementation-,"Designed and implemented a vending machine using various design patterns, including the State pattern, Strategy pattern, and Abstract Factory pattern. Applied Object-Oriented Programming (OOP) principles to create a vending machine utilizing the Model-Driven Architecture (MDA) EFSM.",1,0,2023,2024,1,https://github.com/sadannd/VendingMachine_FullSystem-Arch-Implementation-
Strategy,trybe-inventory-report,"Tool for generating reports from the REPL terminal of Python. The goal was to learn about OOP (Object-Oriented Programming) with classes, composition, inheritance and polymorphism. Also, how to read data from files (csv, json and xml), how to read terminal aguments with sys.argv and finally, how to implement the Strategy design pattern.",1,0,2022,2022,2,https://github.com/ottomicheletti/trybe-inventory-report
Strategy,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Strategy,SocialNetworkManagementSystem,"A platform developed to manage user relationships and groups within a social network. The system leverages design patterns such as Observer, Factory, and Strategy for a scalable and maintainable architecture. It also includes a notification system integrated via the Observer Pattern.",1,0,2024,2024,1,https://github.com/MuhammedOrhantekin/SocialNetworkManagementSystem
Strategy,OS_Final_Project,"the final project involves developing a C++ program that incorporates both client-server architecture, graph creation, and the implementation of algorithms. The program will utilize several design patterns, including Active Object, Thread Pool, Leader-Follower, and Strategy, to manage tasks efficiently and concurrently.",1,0,2024,2024,1,https://github.com/avihyb/OS_Final_Project
Strategy,Frontend-System-Design,"In this repository, you'll find resources, diagrams, and documentation related to the frontend system design of [Your Project Name]. Explore our user interface architecture, design patterns, and user experience strategies to understand how we create a seamless and user-friendly digital environment",1,0,2023,2024,1,https://github.com/vamshiKodem/Frontend-System-Design
Strategy,emergency-center,"This is code that uses design patterns like singleton, composite and strategy in order to simulate the behavior of an emergency center. The emergency center has access to all the different sensors in all the different locations. Each location and have other sub-locations. ",1,0,2023,2024,1,https://github.com/louisevelayo/emergency-center
Strategy,PhotoAlbumApp,"This project is a desktop-based Photo Album Manager built using Java Swing. It demonstrates the use of key software design patterns: Iterator, MVC (Model-View-Controller), and Strategy. The program allows users to manage a photo album by adding, viewing, deleting, and sorting photos.",1,0,2024,2024,1,https://github.com/andrianthan/PhotoAlbumApp
Strategy,MMU-Simulator,"The application helps to understand how the memory management unit works. All the HW parts are presented by their analogs written in Java. Each process is presented by a separate thread. The project includes cache algorithms implementation (LRU, MRU, Random). Design patterns: Singleton, Observer, Strategy, MVC.",1,0,2019,2023,1,https://github.com/AndrewSergeev/MMU-Simulator
Strategy,Parking-System-Application,"Extensive Java project that simulates a Parking System software. The concepts explored for this assignment are: UML diagrams, inheritance, interface classes, design patterns (strategy, factory, command, decorator, observer, and builders), serialization through JSON and JUnit testing. Made for the MS in ICT: Software Design and Programming.",1,0,2022,2022,1,https://github.com/ingridjone/Parking-System-Application
Strategy,dotpos,"dot. is a Point-of-Sale application developed using Flutter/Dart and Firebase Cloud Firestore as a data structure. This project applied the use of critical software engineering theories such as agile methodologies for development with focusing on implementing an architectural model, design patterns and pre-release testing strategies.",1,0,2024,2025,1,https://github.com/omarelfiki/dotpos
Strategy,Real-time-weather-monitoring-and-reporting-service,"This project is a C# console application that simulates a real-time weather monitoring and reporting service. It processes weather data in multiple formats(JSON, XML) and activates various bots based on the data, demonstrating the use of SOLID principles & design patterns like Strategy & Observer. The application is designed to be easily extendable",1,0,2024,2024,1,https://github.com/mahamdeh0/Real-time-weather-monitoring-and-reporting-service
Strategy,Carcassonne-Game-Software,"Design and Implemented the Core and GUI of the Carcassonne Game with 5500 lines of Java Code individually. Realized and Demonstrated the Design by UML diagrams including Domain Model, Interactive Diagrams, System Sequence Diagrams and Object Model. Applied OOD design pattern including Strategy Pattern, and Observer Pattern. Fully test the Core part by JUnit test. Utilized Git, Gradle, and TravisCI to manage the project.",1,0,2020,2023,1,https://github.com/chenxi1103/Carcassonne-Game-Software
Strategy,OOSW-Project2-,"Project 2: Space Invader - enhanced features and utilizing design patterns For this project, students are allowed to do pair-programming but are not required. Thus, students can choose to do project 2 either individually or pair-programming.  For details of pair-programming, refer to Pair Programming The pair-programming team has an additional requirement specified in ""E. Additional Requirement of Pair-programming Team"" A. Overview of Program Requirements  Your code must be based on Lesson 7. No credits will be given if your code is not based on Lesson 7. The key structures of Lesson 7 student should keep include (but is not limited to): The way Java GUI window is created and initialized. Use of Java GUI other than Swing (with some AWT) is not allowed. I.e., the use of JavaFX is not allowed. The use of MVC architecture: Separation codes among model, view, controller functions. The use of MyCanvas to render graphics: paintComponent() method in JPanel class represents a canvas for drawing The use of the game loop: Events of Timer provides the periodic loop to update canvas rendering and collision processing Add more features to make a better Space Invader game. Add more functionality to the gameplay. Visual changes using graphic images or adding sound effects are not counted for credits. E.g., the use of graphic image files to represent the enemy is not counted for credits. However, you may do it for your own interests. Implement 3 design patterns in the project B. Required Features to Add  The enemies The enemy array goes down by 20 pixels (ENEYMY_SIZE) whenever it changes direction (hits the side walls). When an enemy reaches the bottom, the game ends (showing game over screen) Game Score and Game over Score: 10 points every time an enemy is destroyed. Display the live score updates. ""You Won"" if all enemies are destroyed ""You Lost"" if (1) one of the enemies reaches the bottom or (2) the shooter is hit 4 times by bombs - all 4 squares of the shooter get destroyed. When the game ends, the game over message (""You Won"" or ""You Lost"") with ""score: XXX"" must be displayed on the canvas. The shooter As a bomb hits one of the four squares, the corresponding square is destroyed and disappears from the game scene. When all four squares are destroyed, the game ends C. Add Your Own Ideas  Add your own creative ideas to enhance the functionality of the gameplay Note: Graphic image changes or adding sound effects including background music will not be counted for credits. Credits will be given as you add new features to the gameplay, and the amount of the credits will be determined by the complexity of implementation. You may borrow ideas from the original space invader game or you may add your own ideas to make the game more fun D. Implement 3 Design Patterns   (1) Strategy pattern, (2) Observer pattern, (3) An additional design pattern (other than Strategy and Observer). The third design pattern must be from one of the patterns learned in Lesson 5. If not, it is not counted for credits. i.e., the third design pattern should be one of these: State, Decorator, or Builder You should implement yourself ALL participants in the corresponding design pattern. Utilizing Java libraries is not counted as an implementation requirement (e.g., the use of JButton event listener as observer design pattern). E. Additional Requirement of Pair-programming Team  Implement one more design pattern (the fourth design pattern) from the ones learned in Lesson 5. Two implementations of the same design pattern is not counted. E.g., implementing Observer pattern in two places is not counted. The same requirements in item ""D"" apply Video Presentation Requirements  Video 1: Show running program demo that you've completed ""B. Required Features"" Video 2: Show running program demo about ""C. Your Own Ideas"" Video 3: Show you've correctly implemented the Strategy pattern as follows: From running program, indicate where the Strategy pattern is utilized Show and explain the UML diagram for your implementation of the Strategy pattern Students should mannually draw UML diagrams by a software tool such as draw.io web site The use of automatic UML generator tool is NOT allowed (No credits if violated). Include classes only if they are participants of the Strategy pattern (No credits if other classes are included) In Class UML, show member variables/methods only if they are relevant to the Strategy pattern (No credits if unrelated members are included) Show and explain the source code to prove the Strategy pattern is correctly implemented Explain how your implementation meets (1) the intent of the design pattern and (2) the responsibility of each participant in the design pattern You may not get credits if your explanation is not correct. Video 4: The same as Video 3 but this is for the Observer pattern Video 5: The same as Video 3 but this is for an additional (third) design pattern Video 6 (only for the pair-programming team): The same as Video 3 but this is for the fourth design pattern. Max video length: Each video should not be longer than 4 minutes. Refer to the submission instructions below as to the places you should submit the video links. Submission  Program code Download from GitHub and submit the zip file to Project2 Video presentation Post the URLs of Videos 1 and 2 at the corresponding Student Video Presentation forum (i.e., Videos 1 and 2 are disclosed to all students) Paste the URLs of Videos 3, 4, 5, (6 if pair programming) in the ""Comments"" box of the Program submission page (i.e., Videos 3,4,5,6 are not disclosed to students) Note: D2L keeps only the last submission if you submit multiple times. If you submit again, you should submit everything again together. E.g., submitting the code only or submitting the revised URL only is not allowed. Grading  Program code and ALL videos should be submitted to get credits. If a video is not submitted, zero points will be given for the corresponding part. In videos 3,4,5,6, incorrect explanation of the design pattern implementation will cause significant penalty. Points allocation: Total of 220 points 60 points for ""B. Required Features"" 70 points for ""C. Your Own Ideas"" 90 points for ""D. Design Patterns""; 30 points for each design pattern (22.5 points for each pattern if pair-programming)",1,0,2021,2023,1,https://github.com/classicvalues/OOSW-Project2-
Strategy,GenericEA,"This EA tires to find the solution of a mathematical system that I invented at random. The important stuff is the design pattern organization. The EA tries to be very generic, allowing many different operators for crossover, mutation, selection and stop criteria to be implement using the Strategy Pattern. A factory method helps initializing the EA. And a singleton fixes the random for consistent tests. Also, the ScottPlot package helps us to create an image with the line plot of the evolution.",1,0,2021,2021,1,https://github.com/LeonardoTPereira/GenericEA
Strategy,Strategy,this repo contains strategy design pattern implementation using C#,0,41,2021,2021,1,https://github.com/Tuwaiq-Design-Patterns/Strategy
Strategy,tpv-exercise,"Usage of design patterns (abstract factory, strategy, builder, singleton)",0,41,2020,2022,1,https://github.com/iuresti/tpv-exercise
Strategy,SystemutviklerskolenStrategyPattern,Workshop - Strategy design pattern,0,5,2013,2014,1,https://github.com/HenrikWM/SystemutviklerskolenStrategyPattern
Strategy,strategy-pattern-example,Strategy Design pattern in java with example,0,5,2016,2016,1,https://github.com/java9s/strategy-pattern-example
Strategy,lab-10,Strategy Design Pattern,0,2,2023,2024,1,https://github.com/cpit252/lab-10
Strategy,PRG09-design-patterns-strategy-tank,Startercode voor de opdracht Strategy Tank [PRG09],0,4,2022,2025,1,https://github.com/HR-CMGT/PRG09-design-patterns-strategy-tank
Strategy,strategy-design-pattern-example,The Strategy Design pattern implemented in Java,0,2,2014,2014,1,https://github.com/mpmenne/strategy-design-pattern-example
Strategy,PhotoFunPattern,Photo filter app using the Strategy Object Design Pattern,0,2,2018,2018,2,https://github.com/cs371epp/PhotoFunPattern
Strategy,MiniDuckSimulator,Creating a mini duck simulator using Strategy design pattern as a part of exercise in Head first Design Patterns,0,2,2017,2017,1,https://github.com/jmr12mct/MiniDuckSimulator
Strategy,Strategy,"Strategy design pattern with ""Head First: Design Patterns"" book",0,0,2016,2016,1,https://github.com/wojtasfi/Strategy
Strategy,strategy,Design Patterns - Strategy,0,0,2019,2019,1,https://github.com/pathydruma1000/strategy
Strategy,Strategy,Design Patterns - Strategy,0,0,2023,2024,1,https://github.com/DevDiias/Strategy
Strategy,Strategy,Strategy Design Pattern,0,0,2015,2015,0,https://github.com/DigitalNewt/Strategy
Strategy,Strategy,Strategy Design Pattern,0,0,2017,2017,0,https://github.com/igoratf/Strategy
Strategy,Strategy,Strategy design pattern,0,0,2024,2024,1,https://github.com/OctavioCastillo/Strategy
Strategy,Strategy,Design pattern - Strategy.,0,0,2022,2022,1,https://github.com/vixeba23-design-patterns/Strategy
Strategy,Strategy,Design Pattern Strategy,0,0,2022,2022,1,https://github.com/aliounemane2/Strategy
Strategy,strategy,Design pattern Strategy.,0,0,2023,2023,1,https://github.com/hcardoso81/strategy
Strategy,strategy,Design Patterns - Strategy,0,0,2015,2015,1,https://github.com/hzuim/strategy
Strategy,Strategy,Strategy Design Pattern,0,0,2022,2022,1,https://github.com/Peter421/Strategy
Strategy,Strategy,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/KausHimanshu/Strategy
Strategy,Strategy,Design Patterns - Strategy,0,0,2020,2020,1,https://github.com/euygor/Strategy
Strategy,Strategy,Strategy - Design Patterns,0,0,2024,2024,1,https://github.com/avilagabriella/Strategy
Strategy,Strategy2,Design Patterns,0,0,2023,2023,1,https://github.com/BarbaraOliver9/Strategy2
Strategy,strategy,Strategy Design Pattern,0,0,2022,2022,0,https://github.com/AbuOubaida/strategy
Strategy,Strategy,Strategy Design Pattern,0,0,2021,2021,0,https://github.com/butchtiki/Strategy
Strategy,DP_strategy3,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_strategy3
Strategy,DP_strategy1,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_strategy1
Strategy,DP_strategy2,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_strategy2
Strategy,Strategy-Design-Pattern,Behavioral Design Patterns: Strategy Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Strategy-Design-Pattern
Strategy,Strategy,Exemplo design pattern: strategy,0,0,2023,2023,1,https://github.com/ClaudioNunes/Strategy
Strategy,strategy,Strategy Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/strategy
Strategy,strategy,Behavioral Design Pattern Strategy,0,0,2021,2021,1,https://github.com/tokuga96/strategy
Strategy,strategy,C# Design Patterns: Strategy,0,0,2021,2021,1,https://github.com/ashveer747/strategy
Strategy,Strategy,strategy design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Strategy
Strategy,Strategy,Testing Design Pattern Strategy,0,0,2024,2024,1,https://github.com/rhraRodrigo/Strategy
Strategy,StrategyPattern,Design Pattern num1,0,0,2016,2016,1,https://github.com/synsyh/StrategyPattern
Strategy,StrategyPattern,Design Pattern Java,0,0,2018,2018,1,https://github.com/shrutis18/StrategyPattern
Strategy,StrategyExample,Design Pattern Strategy,0,0,2022,2022,1,https://github.com/ldmaia/StrategyExample
Strategy,StrategyPattern,Design Patterns Course,0,0,2023,2023,1,https://github.com/OscarAntonioRaya/StrategyPattern
Strategy,strategy,Estudos design pattern strategy ,0,0,2023,2023,1,https://github.com/eduardo-araujo1/strategy
Strategy,StrategyPattern,Strategy Design Pattern,0,0,2021,2021,1,https://github.com/BakhtMunirUet/StrategyPattern
Strategy,StrategyPattern,Crash Design Patterns ,0,0,2019,2019,1,https://github.com/MichaelFunke/StrategyPattern
Strategy,StrategyDesignPattern,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/ChandimalPriyamantha/StrategyDesignPattern
Strategy,StrategyDesignPattern,Design Pattern-Strategy,0,0,2020,2020,1,https://github.com/ParthContractor/StrategyDesignPattern
Strategy,StrategyDesignPattern,Strategy Design Pattern,0,0,2016,2016,1,https://github.com/remoteEnterprise/StrategyDesignPattern
Strategy,StrategyPattern-Java,Strategy Design Pattern,0,0,2019,2019,1,https://github.com/hamzaBaig1998/StrategyPattern-Java
Strategy,StrategyDesignPattern,Strategy Design Pattern,0,0,2018,2018,1,https://github.com/ekuetkpodar/StrategyDesignPattern
Strategy,StrategyDesignPattern,Strategy design pattern,0,0,2020,2020,1,https://github.com/semihtr13/StrategyDesignPattern
Strategy,StrategyDesignPattern,Adopter Design Pattern,0,0,2023,2023,0,https://github.com/canavcu/StrategyDesignPattern
Strategy,StrategyDesignPatternExample,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/StrategyDesignPatternExample
Strategy,Strategy-Pattern,Design Patterns,0,0,2024,2024,1,https://github.com/fogasmarci/Strategy-Pattern
Strategy,Pattern-Strategy,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/Pattern-Strategy
Strategy,strategyProjectCorrect1,design pattern course,0,0,2017,2017,1,https://github.com/shakedd15/strategyProjectCorrect1
Strategy,Strategy-Pattern,design-pattern,0,0,2022,2022,1,https://github.com/MotyaMiracle/Strategy-Pattern
Strategy,Strategy-Pattern,Design Patterns,0,1,2015,2018,2,https://github.com/jclayborn/Strategy-Pattern
Strategy,StrategyPattern,c++ code using Strategy Design Pattern (HeadFirst Design Pattern book example),0,0,2016,2016,1,https://github.com/anuprulez/StrategyPattern
Strategy,Strategy,Aula de Design Patterns - Strategy,0,0,2023,2023,1,https://github.com/daysources/Strategy
Strategy,Strategy,Aplicando o design pattern - Strategy,0,0,2023,2023,1,https://github.com/diegomaustem/Strategy
Strategy,Design_pattern-STRATEGY,Design Pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-STRATEGY
Strategy,Strategy,Estudo do design pattern Strategy,0,0,2016,2016,1,https://github.com/vitorfelipep/Strategy
Strategy,strategy,Exemplo do Design Pattern Strategy,0,0,2020,2020,1,https://github.com/mydesignpatters/strategy
Strategy,strategy,Design patterns / Behavioral patterns / Strategy,0,0,2023,2023,1,https://github.com/fortsm/strategy
Strategy,Strategy,Design Pattern Strategy - Example (Java) ,0,0,2021,2021,1,https://github.com/samehsboui/Strategy
Strategy,Strategy,Strategy Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Strategy
Strategy,Strategy,Exercício de Design Patterns Strategy,0,0,2023,2023,1,https://github.com/renanssantana/Strategy
Strategy,strategy,to learn strategy design pattern,0,0,2018,2018,1,https://github.com/joneng2016/strategy
Strategy,StrategyClient,Learn Strategy Design Pattern,0,0,2025,2025,1,https://github.com/potdarswapnil1991/StrategyClient
Strategy,StrategyPattern,my first design pattern,0,0,2023,2023,1,https://github.com/yeswanthkumargurram/StrategyPattern
Strategy,StrategyPattern,Design Pattern for StrategyPattern,0,0,2014,2014,1,https://github.com/gitchange/StrategyPattern
Strategy,StrategyPattern,The Strategy design pattern.,0,0,2019,2019,1,https://github.com/VartikaP06/StrategyPattern
Strategy,StrategyPattern,design pattern strategy pattern,0,0,2020,2020,1,https://github.com/MahdiDroid/StrategyPattern
Strategy,StrategyDesignPattern,Strategy Design Pattern Sample,0,0,2020,2020,1,https://github.com/KrunalG2909/StrategyDesignPattern
Strategy,StrategyDesignPattern,Strategy design pattern demo,0,0,2021,2021,1,https://github.com/rajan4study/StrategyDesignPattern
Strategy,Design-Strategy1,Java Design Patterns - Strategy,0,0,2022,2022,1,https://github.com/healym3/Design-Strategy1
Strategy,Strategy-Pattern,First design pattern found in Head First Design Patterns,0,0,2022,2022,1,https://github.com/CodeMerchant/Strategy-Pattern
Strategy,strategydp,Strategy Design Pattern,0,0,2020,2020,1,https://github.com/rasyidridha547/strategydp
Strategy,StrategyDesignPattern,The Strategy Design Pattern,0,0,2020,2020,0,https://github.com/B9M/StrategyDesignPattern
Strategy,StrategyDesignPattern,Strategy Design Pattern Example,0,0,2020,2020,1,https://github.com/aasmc/StrategyDesignPattern
Strategy,design-strategy,Design Pattern Strategy,0,0,2024,2024,1,https://github.com/sofiaclsantos/design-strategy
Strategy,DP_STRATEGY,STRATEGY design pattern,0,0,2017,2017,0,https://github.com/bsadiki/DP_STRATEGY
Strategy,dp-strategy,Design Pattern Strategy,0,0,2014,2014,1,https://github.com/valdineireis/dp-strategy
Strategy,design_strategy,Design Pattern Strategy,0,0,2024,2024,1,https://github.com/ErickDutra/design_strategy
Strategy,Strategy-Pattern,Java Design Patterns,0,0,2018,2018,1,https://github.com/balamanova/Strategy-Pattern
Strategy,strategy-example,Design Pattern Example,0,0,2021,2021,1,https://github.com/ewertoncmiranda/strategy-example
Strategy,strategy_pattern,Design Pattern strategy,0,0,2015,2015,1,https://github.com/MohamedAmineZAHIR/strategy_pattern
Strategy,Strategy-Pattern,Strategy Design Pattern,0,0,2018,2023,2,https://github.com/mateuszpmroz/Strategy-Pattern
Strategy,Strategy-Pattern,Software Design Pattern,0,0,2024,2024,1,https://github.com/Dominantseptaccord/Strategy-Pattern
Strategy,Strategy-Pattern,HW2-Design Patterns,0,0,2020,2020,2,https://github.com/ofyz/Strategy-Pattern
Strategy,strategy_Pattern,Strategy Design Pattern,0,0,2022,2022,1,https://github.com/Md-Arif-Hasan/strategy_Pattern
Strategy,Strategy-Pattern,Strategy Design Pattern,0,0,2021,2021,1,https://github.com/TharushaWijayabahu/Strategy-Pattern
Strategy,Strategy,Strategy Design Pattern using C++11,0,0,2012,2014,1,https://github.com/VaidyaAtul8/Strategy
Strategy,Strategy,example of the strategy design pattern,0,0,2020,2020,1,https://github.com/washingtonpereira/Strategy
Strategy,StrategyDesignPatternDemoOne,Strategy Design Pattern Example,0,0,2018,2018,1,https://github.com/NicholasFreitas/StrategyDesignPatternDemoOne
Strategy,Strategy,this is the first design pattern,0,0,2018,2018,1,https://github.com/mlatka/Strategy
Strategy,poc-strategy-go,Design Pattern Strategy,0,0,2022,2022,1,https://github.com/ramonmpacheco/poc-strategy-go
Strategy,Strategy_Design_Pattern,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/zarahatsagortsyan/Strategy_Design_Pattern
Strategy,strategy-design-pattern,Strategy design pattern,0,0,2024,2024,1,https://github.com/anilpatro83/strategy-design-pattern
Strategy,strategy_design_pattern,strategy design pattern,0,0,2018,2024,1,https://github.com/AJEETX/strategy_design_pattern
Strategy,Strategy-Design-Pattern,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/RaghavendraHosad/Strategy-Design-Pattern
Strategy,StrategyPattern,Implementation of Strategy Design pattern.,0,0,2017,2017,1,https://github.com/hvrjava3/StrategyPattern
Strategy,Strategy-Design-Pattern,Design Pattern JAVA,0,0,2022,2022,1,https://github.com/syed-rayyanadil/Strategy-Design-Pattern
Strategy,strategydesignPattern,Strategy Design Pattern sample application,0,0,2019,2019,1,https://github.com/ArunaSydu/strategydesignPattern
Strategy,StrategyPattern,Strategy Design Pattern Simple Example,0,0,2017,2017,1,https://github.com/ruifaguiar/StrategyPattern
Strategy,Design_pattern_Strategy,Design_pattern_Strategy,0,0,2022,2022,1,https://github.com/abdel230702/Design_pattern_Strategy
Strategy,design-patterns-strategy-,design patterns (strategy),0,0,2019,2019,1,https://github.com/azibom/design-patterns-strategy-
Strategy,DesignPattern-Strategy,Strategy Design Pattern,0,0,2017,2017,1,https://github.com/RishikeshGIT/DesignPattern-Strategy
Strategy,StrategyPattern,Example of Strategy Design Pattern,0,0,2018,2018,1,https://github.com/haryps/StrategyPattern
Strategy,design-pattern-strategy,Design Pattern Strategy,0,0,2022,2022,1,https://github.com/webertLopes/design-pattern-strategy
Strategy,Strategy-Iterator-Null-Decorator-Patttern-on-Minheap,Design Patterns,0,0,2015,2015,1,https://github.com/rohitvyavahare/Strategy-Iterator-Null-Decorator-Patttern-on-Minheap
Strategy,StrategyHomeworkTest,Using the strategy design pattern,0,0,2021,2023,1,https://github.com/gosusleeper/StrategyHomeworkTest
Strategy,StrategyPatternStudy,Study of Strategy design pattern,0,0,2024,2024,2,https://github.com/albanezguilherme/StrategyPatternStudy
Strategy,StrategyDesignPattern,Implementation of Strategy design pattern,0,0,2022,2022,1,https://github.com/Fiap-TDS2/StrategyDesignPattern
Strategy,StrategyDesignPattern,Strategy Design Pattern in C++,0,0,2014,2014,1,https://github.com/roldie/StrategyDesignPattern
Strategy,StrategyPattern1,Strategy Design Pattern in Java,0,0,2022,2022,1,https://github.com/BananasBro/StrategyPattern1
Strategy,StrategyDesignPattern,practice on Strategy Design pattern,0,0,2021,2022,1,https://github.com/mattf4171/StrategyDesignPattern
Strategy,CaesarCipher,Design patterns - decorator and strategy design patterns,0,0,2015,2015,1,https://github.com/N3ll/CaesarCipher
Strategy,java-design-pattern-strategy,Strategy Design Pattern,0,0,2021,2021,1,https://github.com/dreis2003/java-design-pattern-strategy
Strategy,Design_Pattern_CPP-Strategy,Learning Design Pattern,0,0,2018,2018,1,https://github.com/GeoffreyBacquet/Design_Pattern_CPP-Strategy
Strategy,strategydesignpattern,Impleent strategy design pattern,0,0,2020,2020,1,https://github.com/kushalseth/strategydesignpattern
Strategy,Design-Patterns---Strategy-Pattern,Design Patterns - C#,0,0,2019,2019,1,https://github.com/SergSmith64/Design-Patterns---Strategy-Pattern
Strategy,Strategy,A design pattern Strategy in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Strategy
Strategy,Java_Design-Pattern_Practice_Strategy_Converter,Practicing design patterns with Java using Strategy Design pattern,0,0,2023,2023,1,https://github.com/Jadepat-C/Java_Design-Pattern_Practice_Strategy_Converter
Strategy,strategy,Example code for the Strategy design pattern.,0,0,2023,2023,1,https://github.com/machadothi/strategy
Strategy,CECS-277-Lab-14,Strategy design pattern,0,0,2020,2020,0,https://github.com/Pengyuuu/CECS-277-Lab-14
Strategy,DesignPattern,Strategy Design Pattern,0,0,2018,2018,1,https://github.com/DivyaKharbanda/DesignPattern
Strategy,Elementary_HW14,Design Patterns. Strategy,0,0,2019,2019,1,https://github.com/ElSindarin/Elementary_HW14
Strategy,DesignPattern,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/NayanRR/DesignPattern
Strategy,strategy,To learn Strategy Design Pattern in Java.,0,0,2025,2025,1,https://github.com/pumbatimon473/strategy
Strategy,Design-Patterns,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/praneeth724/Design-Patterns
Strategy,Java_StrategyDesignPattern,Java Strategy Design Pattern Implementation ,0,0,2015,2015,1,https://github.com/David2Walker/Java_StrategyDesignPattern
Strategy,bertoti,Design Patterns - Strategy,0,0,2022,2022,1,https://github.com/pedrowil12/bertoti
Strategy,Strategy,Apresentação referente ao design Patterns de comportamento,0,0,2022,2022,1,https://github.com/Djeniferrezende/Strategy
Strategy,Omar-Abdelbaset,Strategy design pattern,0,0,2021,2021,1,https://github.com/serveo/Omar-Abdelbaset
Strategy,strategy,Aprendendo um pouco sobre Design Pattern Strategy,0,0,2021,2021,1,https://github.com/xThuka/strategy
Strategy,SimUDuck,Strategy Design Pattern,0,0,2024,2024,1,https://github.com/HimanshuLal23/SimUDuck
Strategy,MaxMinArray,Strategy Design Pattern,0,0,2024,2024,2,https://github.com/aksh1501/MaxMinArray
Strategy,DesignPattern_One,Strategy Design Pattern,0,0,2019,2019,1,https://github.com/Srilathaky/DesignPattern_One
Strategy,Strategy,Design Pattern Strategy Question 1 : les tris .,0,1,2020,2020,1,https://github.com/YousraMzouz/Strategy
Strategy,duck-strategy,java strategy design pattern,0,0,2020,2020,1,https://github.com/RiansyahTohamba/duck-strategy
Strategy,strategy-pattern,Design Patterns in Java,0,0,2019,2020,1,https://github.com/sodogan/strategy-pattern
Strategy,strategy-pattern,learning about design pattern,0,0,2024,2024,1,https://github.com/Ytellon/strategy-pattern
Strategy,ts_strategy,Strategy | Design Pattern | TypeScript,0,0,2018,2020,1,https://github.com/jalbertocoder/ts_strategy
Strategy,strategy-design-pattern,Strategy design pattern comprehensive guide with head first design patterns examples,0,0,2020,2020,1,https://github.com/melkorCBA/strategy-design-pattern
Strategy,StrategyDesignPatternExample,This shows the code for the strategy design pattern (basis of all design patterns). ,0,0,2022,2022,1,https://github.com/sonit7/StrategyDesignPatternExample
Strategy,TShirtStrategy,Strategy design pattern example,0,0,2020,2020,1,https://github.com/orestispanago/TShirtStrategy
Strategy,Payment-strategy,Strategy pattern-design patterns,0,0,2021,2021,1,https://github.com/MahmoudMuhammedAli/Payment-strategy
Strategy,dep_strategy,le design pattern Strategy,0,0,2022,2022,1,https://github.com/Nzonbi/dep_strategy
Strategy,strategy-pattern,Strategy design pattern example,0,0,2020,2020,1,https://github.com/miguel0393/strategy-pattern
Strategy,strategy-pattern,Design Pattern: Strategy Pattern,0,0,2023,2023,1,https://github.com/MerwilVarona00/strategy-pattern
Strategy,DOJO-Strategy,DOJO sobre Design Patterns,0,0,2015,2020,2,https://github.com/danilodeLuca/DOJO-Strategy
Strategy,strategy-patten,C++ implementation of Strategy design pattern example from Head First Design Patterns,0,0,2013,2014,1,https://github.com/salgotrav/strategy-patten
Strategy,StrategyPattern,Ducks! Using the Strategy design pattern,0,0,2022,2022,1,https://github.com/magosto/StrategyPattern
Strategy,StrategyPattern,One of the Java design patterns,0,0,2016,2016,0,https://github.com/WY08271/StrategyPattern
Strategy,StrategyPattern,C++ implementation of Strategy Design pattern,0,0,2014,2014,1,https://github.com/Olivianeacsu/StrategyPattern
Strategy,strategyPattern,first lecture from Design Patterns Book,0,0,2018,2018,0,https://github.com/moravcik94/strategyPattern
Strategy,StrategyExample,Example of the design pattern Strategy.,0,0,2021,2021,1,https://github.com/nmcoboj/StrategyExample
Strategy,StrategyDemo,Strategy Design Pattern made in Java,0,0,2020,2020,1,https://github.com/etEthiopia/StrategyDemo
Strategy,StrategyFlex,Flexing on strategy design patterns son!!!!,0,0,2019,2019,0,https://github.com/wbratz/StrategyFlex
Strategy,StrategyPattern,a little practice for design pattern,0,0,2014,2014,1,https://github.com/tingyuchang/StrategyPattern
Strategy,design-patterns-strategy,Design Patterns Comportamentais - Strategy,0,0,2022,2022,1,https://github.com/boabner/design-patterns-strategy
Strategy,DesignPatternStrategy,Implementação Design Pattern: Strategy,0,0,2023,2023,1,https://github.com/LuannaFSCamilo/DesignPatternStrategy
Strategy,CSharp_Behavioral_Strategy,Behavioral Strategy Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_Strategy
Strategy,Strategy-Design-Pattern,Strategy Design Pattern Example,0,0,2019,2019,1,https://github.com/dstyo/Strategy-Design-Pattern
Strategy,Strategy-design-pattern,Strategy Design Pattern Assignment,0,0,2019,2019,1,https://github.com/WenLag/Strategy-design-pattern
Strategy,design_pattern_strategy,C# design pattern practice,0,0,2020,2020,1,https://github.com/bds0900/design_pattern_strategy
Strategy,CSharp_Pokemon_Strategy,Simple design pattern strategy,0,0,2020,2020,1,https://github.com/LeCoyotus/CSharp_Pokemon_Strategy
Strategy,strategy-pattern-kotlin,Strategy design pattern play,0,0,2025,2025,0,https://github.com/jordanst3wart/strategy-pattern-kotlin
Strategy,design-patterns-strategy,Design Patterns - Factory - Strategy,0,0,2023,2023,1,https://github.com/pedrop3/design-patterns-strategy
Strategy,DP_StrategyPattern,Small Project using Strategy Design Pattern.,0,0,2024,2024,1,https://github.com/iAmSidh108/DP_StrategyPattern
Strategy,strategy-design-pattern,Strategy Design Pattern - LaraStack,0,0,2023,2023,1,https://github.com/LaraPlayGround/strategy-design-pattern
Strategy,strategy-example-1,Practicing Strategy Design Pattern.,0,0,2023,2023,1,https://github.com/codedcauliflower/strategy-example-1
Strategy,strategy_design_pattern,Strategy design pattern implementation.,0,0,2021,2021,1,https://github.com/indreshchander/strategy_design_pattern
Strategy,strategy-design-pattern,C# - Strategy design pattern,0,0,2023,2023,1,https://github.com/flcristian/strategy-design-pattern
Strategy,JAVA_Strategy_DP,head first design pattern,0,0,2023,2023,1,https://github.com/LeCanardNoir-cegep/JAVA_Strategy_DP
Strategy,StrategyCSharpExample, .NET C# Strategy Design Pattern Example,0,0,2019,2019,1,https://github.com/pr-dev-repo/StrategyCSharpExample
Strategy,StrategyPatternDemo,Demo of the Strategy Design Pattern,0,0,2016,2017,1,https://github.com/phguen/StrategyPatternDemo
Strategy,Strategy,Design Pattern: Strategy - Atividade Engenharia de Software III,0,0,2023,2023,1,https://github.com/juanmp8/Strategy
Strategy,StrategyPattern_ESOF,Implements the strategy software design pattern,0,0,2016,2016,1,https://github.com/mjtribble/StrategyPattern_ESOF
Strategy,StrategyDesignPattern,LLD Design for Strategy Design Pattern,0,0,2022,2022,1,https://github.com/abhishekjais-124/StrategyDesignPattern
Strategy,StrategyFileConversion,File conversion using strategy design pattern ,0,0,2020,2020,1,https://github.com/bsse1017kavi/StrategyFileConversion
Strategy,Strategy,Week 6 Day 3   - Homework - Design pattern - Strategy,0,0,2016,2016,1,https://github.com/AdrianTuckwell/Strategy
Strategy,Strategy,Implementing the strategy design pattern with Spring Boot,0,0,2021,2021,1,https://github.com/mlibasc/Strategy
Strategy,Strategy,Exemplo de Design Pattern (Strategy) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/Strategy
Strategy,strategy,PHP OOP.  Basic implementation of Strategy Design Pattern,0,0,2017,2017,1,https://github.com/r2tigerwolf/strategy
Strategy,ipt10-strategy-pattern,design pattern: strategy pattern,0,0,2023,2023,1,https://github.com/Bustarde/ipt10-strategy-pattern
Strategy,tic-tac-toe,Using Observer design pattern and Strategy design pattern,0,0,2020,2020,1,https://github.com/girmam/tic-tac-toe
Strategy,factory-strategy-design-pattern,factory strategy design pattern,0,0,2024,2024,1,https://github.com/KadirAksoy/factory-strategy-design-pattern
Strategy,3-2-DesignPatterns-Strategy,"Design Patterns in Object-Oriented Programming Eighth Tasks ""Strategy Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Strategy
Strategy,strategy-design-pattern-example,Strategy Design Pattern Example,0,0,2018,2018,0,https://github.com/uguranium/strategy-design-pattern-example
Strategy,csharp-design-patterns-strategy,C# Design Patterns: Strategy,0,1,2021,2023,1,https://github.com/jasarsoft/csharp-design-patterns-strategy
Strategy,calculadoraImposto_dp_strategy,Estudo - Design Patterns - Strategy,0,0,2019,2019,1,https://github.com/andrelake/calculadoraImposto_dp_strategy
Strategy,the-strategy-design-pattern,The Strategy Design Pattern,0,0,2022,2022,1,https://github.com/sdbala81/the-strategy-design-pattern
Strategy,Labb3-DP-Strategy,C++ Design pattern Strategy,0,0,2017,2017,1,https://github.com/ragnar2014/Labb3-DP-Strategy
Strategy,Strategy-01,"Design Pattern, Strategy, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/Strategy-01
Strategy,StrategyDP,Simple project that implements strategy design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/StrategyDP
Strategy,strategyPattern,Simple project to demostrate strategy design pattern.,0,0,2017,2017,1,https://github.com/povilaszvirblis/strategyPattern
Strategy,hfdpStrategy,Head First Design Pattern Strategy,0,0,2018,2018,1,https://github.com/AM903103/hfdpStrategy
Strategy,strategy-dp,Strategy Design Pattern on PHP,0,0,2023,2023,1,https://github.com/mtrosin/strategy-dp
Strategy,PaymentStrategy,Strategy design pattern - basic example,0,0,2025,2025,1,https://github.com/MikeDmoch/PaymentStrategy
Strategy,TIC-TAC-TOE_using_MVC_STRATEGY,EXPAMPLE OF USING MVC design pattern along with STRATEGY design pattern,0,0,2021,2021,1,https://github.com/PES1201800182/TIC-TAC-TOE_using_MVC_STRATEGY
Strategy,strategy-pattern,Design Pattern Strategy in Java,0,0,2024,2024,0,https://github.com/joaovictormcz/strategy-pattern
Strategy,Design_Strategy,Aula de design Patterns - strategy,0,0,2016,2016,1,https://github.com/DanielCauser/Design_Strategy
Strategy,StrategyDesignPatternInJava,Strategy design pattern inplemented in java,0,0,2012,2014,1,https://github.com/Molter/StrategyDesignPatternInJava
Strategy,Impl-mentation-Design-Pattern-Strategy,Implémentation Design Pattern Strategy,0,0,2024,2024,1,https://github.com/amine-elh12244/Impl-mentation-Design-Pattern-Strategy
Strategy,StrategyJM,Aprendendo o design pattern strategy no Java,0,0,2023,2023,1,https://github.com/bem343/StrategyJM
Strategy,SoftwareDesignStrategyPatternPractice,Practice Design Pattern Practice,0,0,2024,2024,1,https://github.com/iFernandez96/SoftwareDesignStrategyPatternPractice
Strategy,VendaStrategy,Projeto com Design Pattern Strategy,0,0,2019,2019,1,https://github.com/NewtonCesarRoncari/VendaStrategy
Strategy,StrategyPattern,example strategy design pattern with phpunit tests,0,0,2018,2018,1,https://github.com/websysforever/StrategyPattern
Strategy,StrategyClass,Sample using in my Design Pattern class.,0,0,2017,2017,0,https://github.com/FringeFar/StrategyClass
Strategy,strategy-pattern,A design pattern in Java,0,0,2017,2019,0,https://github.com/zoeleesss/strategy-pattern
Strategy,PracticeOfDesignPattern_Strategy,Design Pattern of Strategy,0,0,2022,2022,1,https://github.com/david22294/PracticeOfDesignPattern_Strategy
Strategy,strategy,Strategy Design Pattern in Java 7 and Java 8,0,0,2018,2018,1,https://github.com/ObjectMatrixServices/strategy
Strategy,Strategy,Example of the Strategy design pattern and system architecture,0,0,2024,2024,1,https://github.com/RickardEkstedt/Strategy
Strategy,StrategyDesignPattern,Simple implementation of the strategy design pattern,0,0,2023,2023,1,https://github.com/abhirath14/StrategyDesignPattern
Strategy,strategyDesignPattern,Example to use of Strategy design pattern,0,0,2018,2018,1,https://github.com/ketanMuttha/strategyDesignPattern
Strategy,3-2-DesignPatterns-TemplateToStrategy,"Design Patterns in Object-Oriented Programming ninth Tasks ""Strategy Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-TemplateToStrategy
Strategy,strategyPatternExample,Game example of the Strategy design pattern,0,1,2025,2025,1,https://github.com/JVentulett-WSU/strategyPatternExample
Strategy,strategy-design-pattern,Strategy Design Pattern in Swift,0,0,2020,2020,0,https://github.com/tagaruma/strategy-design-pattern
Strategy,design-pattern-strategy,example of design pattern strategy  ,0,0,2023,2023,1,https://github.com/Bouzidhadjer/design-pattern-strategy
Strategy,Estrategia,Exemplo design pattern strategy,0,0,2024,2024,0,https://github.com/ClaudioNunes/Estrategia
Strategy,strategy,Implementando o Design Pattern Strategy na prática com Java,0,0,2024,2024,2,https://github.com/johnenderson/strategy
Strategy,DesignPattern-Strategy,Test of design pattern Strategy,0,0,2020,2020,1,https://github.com/FerrazFerrara/DesignPattern-Strategy
Strategy,Software-Construction-Lab-6,Design Pattern: Strategy Pattern ,0,0,2021,2021,3,https://github.com/IngridAMorales/Software-Construction-Lab-6
Strategy,training-pattern-strategy,Esempio tratto da Design Patterns,0,0,2014,2014,1,https://github.com/piemme/training-pattern-strategy
Strategy,design-patterns-strategy,Studies about Strategy Design Pattern,0,0,2019,2019,1,https://github.com/diedona/design-patterns-strategy
Strategy,headfirstpatterns,Testing Design Pattern Strategy,0,0,2023,2023,1,https://github.com/aldosilva6/headfirstpatterns
Strategy,strategy-api-demo,Demonstration on Strategy Design Pattern.,0,0,2020,2020,1,https://github.com/m1nhtu99-hoan9/strategy-api-demo
Strategy,Strategy-Design-Pattern,LLD of Strategy Design Pattern,0,0,2023,2023,0,https://github.com/YASH515/Strategy-Design-Pattern
Strategy,StrategyDesignPattern,Evaluate math expression using Strategy design pattern,0,0,2020,2020,1,https://github.com/kilicars/StrategyDesignPattern
Strategy,csce247,Design patterns and strategies,0,0,2019,2019,1,https://github.com/ishitathumati/csce247
Strategy,Strategy-Design-Pattern,Example of Strategy Design Pattern,0,0,2022,2022,1,https://github.com/mossad1998/Strategy-Design-Pattern
Strategy,strategy-design-pattern,Demo for Strategy design pattern,0,0,2022,2022,0,https://github.com/Alaa-94/strategy-design-pattern
Strategy,duck-simulator,Simple Strategy Design Pattern,0,0,2016,2016,1,https://github.com/AloYzy/duck-simulator
Strategy,Strategy,Basic project depicting the strategy OO software design pattern.,0,1,2015,2015,1,https://github.com/snowcycle/Strategy
Strategy,ATM,Strategy Design pattern ATM,0,0,2021,2021,0,https://github.com/vvasan11/ATM
Strategy,SdpDesignPattern,Strategy Design Pattern demo,0,0,2021,2021,0,https://github.com/biswajeetnk/SdpDesignPattern
Strategy,DuckConsoleApp,Demonstrates Strategy Design Pattern,0,0,2018,2018,1,https://github.com/darrellv/DuckConsoleApp
Strategy,strategy-pattern-php,Strategy Design Pattern in PHP,0,0,2020,2020,1,https://github.com/federico-boncaldo/strategy-pattern-php
Strategy,go-strategy-pattern,Strategy design pattern in golang,0,0,2023,2023,1,https://github.com/AntonFridlund/go-strategy-pattern
Strategy,Assignment_Three,Construct Strategy design pattern ,0,0,2021,2021,1,https://github.com/IlyaKraev/Assignment_Three
Strategy,DesignMonsterAssignment3,Design patterns - Strategy-Assignment,0,0,2025,2025,1,https://github.com/ciphercraftsman/DesignMonsterAssignment3
Strategy,DesignPattern-Strategy,"Design pattern strategy practice, Java",0,0,2016,2016,1,https://github.com/moustaidayoub/DesignPattern-Strategy
Strategy,node-strategy-implementation,Implementation of Strategy Design Pattern,0,0,2020,2020,1,https://github.com/douglasffilho/node-strategy-implementation
Strategy,strategy-pattern-typescript,practicing typescript and design patterns,0,0,2020,2023,1,https://github.com/juan-cantero/strategy-pattern-typescript
Strategy,book-strategy-api,implementation of strategy design pattern,0,0,2022,2022,0,https://github.com/pablohdzvizcarra/book-strategy-api
Strategy,Design-Pattern---Strategy,Exercicio de design pattern strategy,0,0,2024,2024,1,https://github.com/v1ckkky/Design-Pattern---Strategy
Strategy,BeerTournament,Strategy design pattern implementation,0,0,2021,2021,1,https://github.com/jmburgues-UTN-Projects/BeerTournament
Strategy,JAVA--Pile,"Design Pattern : Observer, Strategy.",0,0,2020,2020,1,https://github.com/HanluHU/JAVA--Pile
Strategy,StrategyDesignPatternExample,An example of the strategy design pattern.,0,0,2020,2020,1,https://github.com/keller-b/StrategyDesignPatternExample
Strategy,strategyPatternNodeJS,Using a famous design pattern in NodeJS,0,0,2020,2020,1,https://github.com/Ladgelson/strategyPatternNodeJS
Strategy,study-design-pattern-strategy,Estudos do design pattern: Strategy.,0,0,2023,2023,1,https://github.com/dougdasilva/study-design-pattern-strategy
Strategy,Design-Pattern-Strategy-Pattern,Strategy Design Pattern in c#,0,0,2019,2019,1,https://github.com/BenzhaminKim/Design-Pattern-Strategy-Pattern
Strategy,StrategyPattern,just an example of the strategy design pattern,0,0,2021,2021,1,https://github.com/Ga8/StrategyPattern
Strategy,Laravel-strategy-design-pattern,Laravel Strategy Design Pattern Tutorial,0,0,2023,2023,1,https://github.com/BabakNiknejad/Laravel-strategy-design-pattern
Strategy,StrategyPattern,Example implementation of a strategy interface design pattern,0,0,2022,2022,1,https://github.com/alex-varga14/StrategyPattern
Strategy,StrategyONE,Practical exercise about the Strategy Behavioral Design Pattern,0,0,2019,2019,1,https://github.com/fundaments-of-software-development/StrategyONE
Strategy,StrategyPattern,A simple demonstration of the strategy design pattern,0,0,2023,2023,0,https://github.com/BlanketGuy/StrategyPattern
Strategy,TShirtStrategyPatternExercise,Implementation of strategy design pattern,0,0,2020,2020,1,https://github.com/OdisseasKorovesis/TShirtStrategyPatternExercise
Strategy,strategy-js,Strategy - Design Pattern implementado com javascript.,0,0,2021,2021,1,https://github.com/lucasemanuel/strategy-js
Strategy,hfdp-strategy,Head First Design Patterns Strategy Pattern,0,0,2015,2015,1,https://github.com/sandorjanssen/hfdp-strategy
Strategy,strategy-pattern,A demo of Strategy Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/strategy-pattern
Strategy,PadraoStrategy,Uma implementação do design pattern Strategy,0,0,2018,2018,1,https://github.com/diegosamsoares/PadraoStrategy
Strategy,StrategyPattern,StrategyPattern from Head-First Design Pattern Book Ch01,0,0,2024,2024,1,https://github.com/AShrafAbbas98/StrategyPattern
Strategy,Strategy_pattern,"C++, Software design pattern: Strategy pattern",0,0,2020,2020,3,https://github.com/MarcJimenez99/Strategy_pattern
Strategy,strategy-design,A demo on strategy design pattern,0,0,2024,2024,1,https://github.com/yashdaga03/strategy-design
Strategy,Strategy,Demonstra em C# o padrão de projeto (design pattern) strategy.,0,0,2021,2021,1,https://github.com/MarcosCalazans/Strategy
Strategy,strategy-php,Strategy design pattern with php example,0,0,2019,2019,1,https://github.com/florincornea/strategy-php
Strategy,strategy_pattern,TypeScript implementation of Strategy Design Pattern,0,0,2021,2021,1,https://github.com/asiancoderyoda/strategy_pattern
Strategy,strategy-pattern,Implementation by Java Script (Design Pattern),0,0,2023,2023,1,https://github.com/zohreh-moazezi/strategy-pattern
Strategy,kata-strategy,kata for the strategy design pattern,0,0,2021,2021,0,https://github.com/318Thorne/kata-strategy
Strategy,StrategyDesignPattern,Simple implementation of Strategy Design pattern in Java,0,0,2020,2020,1,https://github.com/jagmeet-21/StrategyDesignPattern
Strategy,atividadeStrategy,Atividade sobre o Design Pattern Strategy.,0,0,2024,2024,1,https://github.com/GuiHeinrich/atividadeStrategy
Strategy,PocketBeasts-Strategy,"A card game using the ""Strategy"" Design pattern for Year 2 Software Design Patterns module. ",0,0,2023,2024,1,https://github.com/shanerob1106/PocketBeasts-Strategy
Strategy,strategy-design-pattern-example-2,strategy-design-pattern-example-2,0,0,2017,2017,1,https://github.com/DesignPatterns101/strategy-design-pattern-example-2
Strategy,CardGame,Projeto de Design Patterns,0,1,2024,2024,3,https://github.com/AdrianoReusSavi/CardGame
Strategy,Strategy,Implementação do padrão de projeto de software Strategy (Design Pattern),0,0,2023,2023,1,https://github.com/V1ctorGip/Strategy
Strategy,strategy-and-state-design-patterns,strategy and state design patterns,0,0,2024,2024,1,https://github.com/Pabon1712/strategy-and-state-design-patterns
Strategy,StrategyDesignPattern,An example of strategy design pattern using Java,0,0,2015,2015,1,https://github.com/LiteObject/StrategyDesignPattern
Strategy,Payment_StrategyPattern,This is sample implementation of Strategy design pattern.,0,0,2020,2020,1,https://github.com/paulvineeth/Payment_StrategyPattern
Strategy,strategy-design-pattern-example-1,strategy-design-pattern-example-1,0,0,2017,2017,1,https://github.com/DesignPatterns101/strategy-design-pattern-example-1
Strategy,StrategyPatternStudy,Simple project to study the Strategy Design Pattern,0,0,2023,2023,1,https://github.com/caiopc/StrategyPatternStudy
Strategy,Design-Pattern-Strategy-Product-Sorter,Strategy Design Pattern with React,0,0,2024,2024,1,https://github.com/MylesJMoore/Design-Pattern-Strategy-Product-Sorter
Strategy,strategy-design-pattern,Example of strategy design pattern java,0,0,2017,2017,1,https://github.com/aka-danger/strategy-design-pattern
Strategy,exportacaoStrategyFactory,Exemplo de Design Patterns - strategy & factory,0,0,2018,2018,1,https://github.com/silmarbaggio/exportacaoStrategyFactory
Strategy,Design-Patterns-Strategy,Implementation of the Strategy Design Pattern,0,0,2021,2021,1,https://github.com/gianniskatsa/Design-Patterns-Strategy
Strategy,design_pattern_strategy,projet applicatif du design pattern Strategy,0,0,2023,2023,1,https://github.com/kheffache-cherif/design_pattern_strategy
Strategy,tax-strategy-study,Um estudo sobre design pattern Strategy,0,0,2023,2023,1,https://github.com/kyogeti/tax-strategy-study
Strategy,Strategy_design_pattern,basit bir strategy design pattern örneği,0,0,2024,2024,1,https://github.com/mehmettok76/Strategy_design_pattern
Strategy,Strategy_Design_Pattern,Implementation basique du design pattern Strategy.,0,0,2023,2023,1,https://github.com/ElmaghraniChaimae/Strategy_Design_Pattern
Strategy,strategy-pattern-calculator,Calculator implemented using Strategy Design Pattern.,0,0,2022,2022,0,https://github.com/ia-Simon/strategy-pattern-calculator
Strategy,nodejs-strategy-pattern,Strategy design pattern in Node.ja,0,0,2024,2024,1,https://github.com/dev-scripts/nodejs-strategy-pattern
Strategy,tdd-refactoring-strategy,"learning tdd, refactoring and design pattern",0,0,2017,2017,2,https://github.com/TracyLu/tdd-refactoring-strategy
Strategy,evolving-database-strategy,Design pattern for implementing evolving database,0,0,2020,2020,0,https://github.com/lawrencecrane/evolving-database-strategy
Strategy,strategy-design-pattern,Implement strategy design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/strategy-design-pattern
Strategy,strategy-design-pattern,Strategy design pattern project for CSCE247,0,0,2021,2021,1,https://github.com/bjr0421/strategy-design-pattern
Strategy,strategy-pattern-cpp,Design Pattern Strategy feito em C++,0,0,2022,2022,0,https://github.com/gabriel-russo/strategy-pattern-cpp
Strategy,study-strategy-watcher,Strategy and Watcher Design Patterns Study,0,0,2023,2023,1,https://github.com/esmolic/study-strategy-watcher
Strategy,strategy-estacionamento-java,strategy design pattern study using java,0,0,2022,2022,1,https://github.com/VictorKano/strategy-estacionamento-java
Strategy,demo-strategy-pattern, a demo of strategy design pattern,0,0,2016,2016,1,https://github.com/hunnuxiaobo/demo-strategy-pattern
Strategy,strategy-design-pattern,Strategy Design Pattern for sending message.,0,0,2021,2023,1,https://github.com/badrnezhad/strategy-design-pattern
Strategy,engComp.padroesDeProjeto.strategy,Strategy Design pattern in Java,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.strategy
Strategy,StrategyPattern,Short example of the Strategy Design Pattern using taxes,0,0,2020,2020,1,https://github.com/Jeschusmorio/StrategyPattern
Strategy,StrategyExample,Projeto de exemplo para utilização do Design Pattern Strategy,0,0,2024,2024,1,https://github.com/FelipeTD/StrategyExample
Strategy,StrategyTraining,A repository where I tried the Strategy design pattern,0,0,2020,2020,1,https://github.com/mrlagowsky/StrategyTraining
Strategy,StrategyCartas,Atividade Prática 01  Design Patterns (Padrões de Projeto) - Strategy,0,0,2025,2025,1,https://github.com/Alexssandro49/StrategyCartas
Strategy,StrategyPattern,Projeto feito para estudar sobre o Strategy Design Pattern,0,0,2020,2020,1,https://github.com/Fukubi/StrategyPattern
Strategy,strategy-pattern-game-character,Strategy Design Pattern - Game Character - TS,0,0,2020,2020,1,https://github.com/smarigowda/strategy-pattern-game-character
Strategy,designPatterns-strategyPattern,,0,0,2022,2022,0,https://github.com/AdityaTulasidas/designPatterns-strategyPattern
Strategy,StrategyPattern-DesignPatterns,,0,0,2024,2024,1,https://github.com/FullstackEsther/StrategyPattern-DesignPatterns
Strategy,Design-Patterns-Practice-Strategy,My practice of design patterns (Strategy),0,0,2017,2017,1,https://github.com/impuls93/Design-Patterns-Practice-Strategy
Strategy,BallboyProject,"A demo project implementing SOLID principles, factory design pattern, strategy design pattern, observer design pattern, and memento design pattern.",0,0,2022,2022,1,https://github.com/kewensu/BallboyProject
Strategy,StrategyDesignPattern,A simple implementation of Strategy Design Pattern in C#,0,0,2021,2021,1,https://github.com/EhsanYzp/StrategyDesignPattern
Strategy,hfdp-strategy,Head First Design Patterns : Strategy : Duck behaviors,0,0,2018,2018,1,https://github.com/fenwickjb/hfdp-strategy
Strategy,Strategy-pattern,pattern strategy from Head First Design Patterns,0,0,2022,2022,1,https://github.com/VladislavDemchenko/Strategy-pattern
Strategy,DesignPatterns-StrategyPattern,,0,0,2024,2024,1,https://github.com/MohamedElhanchir/DesignPatterns-StrategyPattern
Strategy,DesignPatterns_StrategyPattern,,0,0,2022,2022,2,https://github.com/FernandoOliva18212205/DesignPatterns_StrategyPattern
Strategy,php-design-patterns-strategy,PHP Design Patterns - Strategy Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-strategy
Strategy,strategy-example,An example of 'Strategy' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/strategy-example
Strategy,Pattern-Strategy, A demo on the design pattern strategy,0,0,2023,2023,1,https://github.com/BoubacarSIDDY/Pattern-Strategy
Strategy,StrategyDesignPattern,Example of implementing the strategy design pattern in Java.,0,0,2020,2020,1,https://github.com/kriscfoster/StrategyDesignPattern
Strategy,Strategy-Pattern,This repository will keep Design Patterns examples,0,0,2016,2016,1,https://github.com/berkanercan/Strategy-Pattern
Strategy,java-strategy,This Project Implementation the Strategy Design Patterns,0,0,2020,2020,1,https://github.com/phelliperodrigues/java-strategy
Strategy,FightArena,Strategy Design Pattern Example (Java),0,0,2019,2019,1,https://github.com/bonggalshn/FightArena
Strategy,Gof,Design pattern -  factory and strategy,0,0,2020,2021,0,https://github.com/waspryo/Gof
Strategy,Codigo-051---C-es-Polim-rficos,Design Pattern Strategy e Polimorfismo,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-051---C-es-Polim-rficos
Strategy,Sorting-program,Implementation of Strategy design pattern,0,0,2018,2018,1,https://github.com/MacrinaAshraf/Sorting-program
Strategy,prize,Strategy design pattern simple example,0,0,2017,2017,0,https://github.com/aokicassio/prize
Strategy,TextComposition,Homework of design pattern: Strategy ,0,0,2019,2019,0,https://github.com/lowerboundtenhours/TextComposition
Strategy,DesignPatterns,Basic Strategy Design Pattern Example,0,0,2022,2022,1,https://github.com/codedr0id/DesignPatterns
Strategy,DesignPatterns,CSCE 247 Strategy Design Pattern,0,0,2021,2024,1,https://github.com/AndrianiP/DesignPatterns
Strategy,DesignPattern,Strategy Design Pattern is added,0,0,2022,2022,2,https://github.com/Sanjay-31/DesignPattern
Strategy,Design-Patterns,examples for strategy design pattern,0,0,2023,2024,1,https://github.com/SamithDarshana/Design-Patterns
Strategy,RuntimeSortingProject,Implementation of strategy design pattern,0,0,2022,2023,1,https://github.com/AtifButt123/RuntimeSortingProject
Strategy,calculator,Strategy Design Pattern basic implementation,0,0,2024,2024,1,https://github.com/konri326/calculator
Strategy,PokemonStrategy,An example of the Strategy design pattern.,0,0,2023,2023,1,https://github.com/emacabrera/PokemonStrategy
Strategy,Strategy_DPattern,Demo code for Strategy Design pattern implementation,0,0,2024,2024,1,https://github.com/ajinkyawankhede30/Strategy_DPattern
Strategy,DuckGame,Homework of design pattern: Strategy,0,0,2019,2019,1,https://github.com/lowerboundtenhours/DuckGame
Strategy,session-1-14-may-22,Basics on Strategy Design Patterns,0,0,2022,2022,1,https://github.com/Shivam4415/session-1-14-may-22
Strategy,NotaFiscal,Aplicação do design pattern Strategy,0,0,2017,2017,1,https://github.com/hullopes/NotaFiscal
Strategy,Design-Pattern,Strategy and Proxy Design Pattern,0,0,2022,2022,1,https://github.com/UsmannArshad/Design-Pattern
Strategy,simDuck,Learning of design pattern Strategy,0,0,2025,2025,1,https://github.com/batgr/simDuck
Strategy,Strategy-Pattern,Strategy Design Pattern with C# Console Application,0,0,2023,2023,1,https://github.com/cecesenpai/Strategy-Pattern
Strategy,StrategyDesignPattern,Example of strategy design pattern and OOP in Java.,0,0,2023,2023,1,https://github.com/NikolaVuckovic01/StrategyDesignPattern
Strategy,AppStrategy,an example of the strategy design pattern,0,0,2023,2023,1,https://github.com/jramaral/AppStrategy
Strategy,canards,Strategy and Adapter design pattern,0,0,2017,2017,2,https://github.com/mschultz-epsi-oss/canards
Strategy,JavaDucks,Strategy Design Pattern - implementation/practice,0,0,2017,2017,1,https://github.com/bwielk/JavaDucks
Strategy,OOP_a4,Strategy and Factory Design Pattern,0,0,2020,2020,1,https://github.com/luwang-laura/OOP_a4
Strategy,Design_Pattern_1,"Design Pattern - Template Method, Strategy ",0,0,2023,2024,1,https://github.com/Dongwoongkim/Design_Pattern_1
Strategy,design_lab3,scool project - design pattern strategy,0,0,2015,2015,1,https://github.com/DavidNr2/design_lab3
Strategy,paoo_sdp_pt1_thayna,Strategy Design Pattern Exercício 1,0,0,2020,2020,1,https://github.com/tatyvssq/paoo_sdp_pt1_thayna
Strategy,sdp_1a,Singleton and Strategy design patterns,0,0,2023,2023,1,https://github.com/shajnimak/sdp_1a
Strategy,strategy-pattern,Strategy Design pattern In java + Spring boot,0,0,2019,2019,1,https://github.com/gurubabujampala/strategy-pattern
Strategy,strategy-pattern,Example app showing the strategy design pattern,0,0,2023,2023,0,https://github.com/Arkoma/strategy-pattern
Strategy,Parking,Observer and Strategy design patterns,0,0,2017,2017,1,https://github.com/gonzalezrodero/Parking
Strategy,Strategy_design_pattern,Strategy design pattern from Derek Banas tutorial: http://www.newthinktank.com/2012/08/strategy-design-pattern-tutorial/,0,0,2020,2020,1,https://github.com/PiotrDawidziuk/Strategy_design_pattern
Strategy,OOPT-4,Course work: Strategy design pattern,0,0,2016,2016,1,https://github.com/JPEF/OOPT-4
Strategy,assignment5,module6 incorporating strategy design pattern,0,0,2018,2018,1,https://github.com/dysturm/assignment5
Strategy,OOP-2,design Patterns composite and strategy,0,0,2018,2018,1,https://github.com/gauranga07/OOP-2
Strategy,StrategyDesignPatternExample,Example code of a Strategy Design Pattern in C#.,0,0,2019,2019,1,https://github.com/Freelancer-it/StrategyDesignPatternExample
Strategy,Object-Oriented-Design_Strategy-Pattern,Examples of object oriented design patterns.,0,0,2023,2023,1,https://github.com/khuber23/Object-Oriented-Design_Strategy-Pattern
Strategy,example-java-strategy-design-pattern,Implementation of strategy design pattern example,0,0,2019,2019,1,https://github.com/ersyatechstax/example-java-strategy-design-pattern
Strategy,strategy-design-pattern,Example implementation of the strategy design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/strategy-design-pattern
Strategy,StrategyExample,A little example that tries to show Strategy design pattern,0,0,2017,2017,1,https://github.com/Wikiko/StrategyExample
Strategy,CompositeAndStrategy,Lab in class Design Patterns in OOP,0,0,2023,2023,1,https://github.com/muzzz555/CompositeAndStrategy
Strategy,padrao-java-strategy,Exemplo de Design Pattern Strategy em Java,0,0,2021,2021,1,https://github.com/giovanicaf/padrao-java-strategy
Strategy,StrategyPattern,This is to learn how to implement Strategy Design Pattern,0,0,2022,2022,1,https://github.com/svsarathi111/StrategyPattern
Strategy,strategy-pattern-characters,Practical use of the Strategy design pattern,0,0,2018,2018,1,https://github.com/Testosternus/strategy-pattern-characters
Strategy,CalculatorStrategyPattern,Simple Calculator implemented using strategy design pattern,0,0,2022,2022,1,https://github.com/OrestisKefis/CalculatorStrategyPattern
Strategy,strategy-design-pattern,Add example code for strategy design pattern,0,0,2022,2022,1,https://github.com/bit-sahti/strategy-design-pattern
Strategy,StrategyDP,Proper Implementation of the Strategy Design Pattern using Plugin system,0,0,2019,2019,0,https://github.com/joslat/StrategyDP
Strategy,StrategyPattern,Intro to Design Patterns. Strarting to work with Strategy Pattern,0,0,2018,2018,1,https://github.com/josephmc1332/StrategyPattern
Strategy,IosStrategyExample,Example app for the Strategy design pattern,0,1,2021,2021,0,https://github.com/tiagogomez/IosStrategyExample
Strategy,csc462strategy,Chapter 1 of Head First Design Patterns,0,0,2015,2018,1,https://github.com/ComputingSciencesAtElon/csc462strategy
Strategy,strategy-example2,An example of 'Strategy' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/strategy-example2
Strategy,StrategyDP,This is an example codes implemented by Strategy Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/StrategyDP
Strategy,strategyPattern,This is an example of Strategy Design Pattern in JAVA,0,0,2024,2024,1,https://github.com/ClarkBelen/strategyPattern
Strategy,MOSTCOMMON_DESIGN_PATTERN_CSHAPR_STRATEGY_PATTERN,MOSTCOMMON_DESIGN_PATTERN_CSHAPR_STRATEGY_PATTERN,0,0,2020,2020,1,https://github.com/tanviredu/MOSTCOMMON_DESIGN_PATTERN_CSHAPR_STRATEGY_PATTERN
Strategy,MVC_Desgin_Pattern,"MVC design pattern implemented using composite, observer and strategy design patterns",0,0,2019,2019,1,https://github.com/pratheekshadr/MVC_Desgin_Pattern
Strategy,CS356_RobotStrategyDesignPattern,Animated GUI with Strategy Design Pattern,0,0,2015,2015,1,https://github.com/hssakaria/CS356_RobotStrategyDesignPattern
Strategy,Strategy-Pattern,An exercise to practice the Strategy Pattern (https://github.com/davidgf/design-patterns-in-ruby) Design Patterns in Ruby,0,0,2018,2018,0,https://github.com/TomSpencerLondon/Strategy-Pattern
Strategy,BubbleSort-Strategy-Pattern,Exercise in using the Strategy design pattern,0,0,2013,2014,1,https://github.com/rylo/BubbleSort-Strategy-Pattern
Strategy,poc_design_pattern_strategy,Project to learn behavioral design pattern strategy,0,0,2024,2024,1,https://github.com/CastroArrudaBeatriz/poc_design_pattern_strategy
Strategy,strategy-pattern-in-csharp,Strategy design pattern explanation and code sample.,0,0,2017,2019,1,https://github.com/llenroc/strategy-pattern-in-csharp
Strategy,strategy_dp,A simple example of the Strategy design pattern.,0,0,2019,2019,1,https://github.com/JohanCederschiold/strategy_dp
Strategy,strategy-example,Implementation of an example of design pattern Strategy.,0,0,2020,2020,1,https://github.com/AdrielSchneider/strategy-example
Strategy,DesignPatternStrategyAL,Exemplo de Design Pattern Strategy em C#,0,0,2018,2018,1,https://github.com/rafaellavm/DesignPatternStrategyAL
Strategy,DesignPatterns,strategy pattern,0,1,2021,2021,1,https://github.com/jagadir/DesignPatterns
Strategy,StrategyDesignPattern,an example code for implementing strategy design pattern in springboot,0,0,2023,2023,0,https://github.com/johnsmaina17/StrategyDesignPattern
Strategy,ExemploStrategy,Mini calculadora para demonstrar o Design Pattern Strategy,0,0,2022,2022,1,https://github.com/thihxm/ExemploStrategy
Strategy,Strategy-Pattern,Strategy-Pattern demo from Head-First Design Pattern,0,0,2014,2015,1,https://github.com/dalongxia/Strategy-Pattern
Strategy,Proxy-Strategy-DesignPattern,Proxy and Strategy Design Patterns in JAVA.,0,0,2016,2016,1,https://github.com/vishvas/Proxy-Strategy-DesignPattern
Strategy,StrategyAndTemplate,a simple Java project using Strategy and Template design patterns,0,0,2017,2017,1,https://github.com/adeleena/StrategyAndTemplate
Strategy,StrategyEngSof,Atividade de Engenharia de Software  sobre o design pattern “Strategy”,0,0,2023,2023,0,https://github.com/JuliaOliveiraa/StrategyEngSof
Strategy,ShopStrategy,Design Patterns (project created for Java programming classes),0,1,2018,2018,1,https://github.com/Izzzu/ShopStrategy
Strategy,MovieStore_Strategy_Template,Movie store project using Strategy design pattern,0,0,2020,2021,1,https://github.com/viksimenaite/MovieStore_Strategy_Template
Strategy,learning_strategy_design_pattern,Learning strategy design pattern with 'Programador Lhama',0,0,2022,2022,1,https://github.com/vipyth/learning_strategy_design_pattern
Strategy,strategy-steak,A simple example of the Strategy design pattern.,0,0,2018,2018,1,https://github.com/upsd/strategy-steak
Strategy,QuestionStrategy,Swift Design Pattern : 1 Model/View/Controller/Strategy,0,0,2018,2018,0,https://github.com/kuangderwu/QuestionStrategy
Strategy,Calculate-Machine-Project-with-Strategy-Design-Pattern,Design Pattern Example Trial from Phyton,0,0,2018,2018,1,https://github.com/KadirHaktan/Calculate-Machine-Project-with-Strategy-Design-Pattern
Strategy,Strategy-Pattern,First example from Design Pattern book by Freeman,0,0,2017,2017,1,https://github.com/rajajawahar/Strategy-Pattern
Strategy,strategyDesignPattern,"This  repo contains my first design pattern play ground project. Any one who  want to learn strategy design pattern, this project helps you to get  started. Strategy design pattern is used to pick different algorithm at  the runtime. ",0,0,2019,2019,1,https://github.com/samuvelp/strategyDesignPattern
Strategy,strategy-game,A project with implementations of various design patterns,0,0,2019,2023,1,https://github.com/Shushpancheak/strategy-game
Strategy,strategy-pattern,A stragegy pattern design pattern implementation in Golang,0,0,2024,2024,1,https://github.com/devlongs/strategy-pattern
Strategy,EsofStrategycode,java program to illustrate the strategy design pattern,0,0,2018,2018,1,https://github.com/DillonGMon/EsofStrategycode
Strategy,smart_strategy,"Design Pattern called ""Strategy"" build with CDI usage",0,0,2020,2020,1,https://github.com/designuj/smart_strategy
Strategy,strategy-pattern,Small project implementing the GoF Strategy design pattern.,0,0,2019,2019,1,https://github.com/DanOrlovsky/strategy-pattern
Strategy,StrategyPattern,This Repository hosts how a Strategy Design Pattern could be used.,0,0,2019,2019,1,https://github.com/DonkeyKongJr/StrategyPattern
Strategy,StrategyDesignPatternInDotNetCSharp,Learn about the Strategy Design Pattern in .NET C#,0,0,2022,2023,1,https://github.com/AhmedTarekHasan/StrategyDesignPatternInDotNetCSharp
Strategy,Strategy-Design-Pattern-in-Unity,Strategy Design Pattern in Unity with Zenject,0,0,2022,2022,1,https://github.com/EduardMalkhasyan/Strategy-Design-Pattern-in-Unity
Strategy,StrategyPattern,This Project shows the implementation of Strategy design pattern in Java.,0,0,2021,2021,0,https://github.com/m-h-s/StrategyPattern
Strategy,StrategyPattern,.NET 8 Console application with example of the Strategy Design Pattern,0,0,2024,2024,1,https://github.com/henriquesd/StrategyPattern
Strategy,StrategyProject,I create small RPG in order to learn design pattern - Strategy,0,0,2021,2021,1,https://github.com/Jakub-Ner/StrategyProject
Strategy,strategyGame,Design Pattern Strategy - Matéria de padrões de projeto - 09/03/2023. ,0,0,2023,2023,1,https://github.com/SeleneNoir/strategyGame
Strategy,Dingman_Lab4OOP-Strategy,Implementing Design Patterns into a Prior Project,0,0,2024,2024,1,https://github.com/jackdingman/Dingman_Lab4OOP-Strategy
Strategy,DesignPatterns-Strategy,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-Strategy
Strategy,DesignPatterns_Strategy,,0,0,2020,2020,1,https://github.com/jjfloreno/DesignPatterns_Strategy
Strategy,Example-strategy-ordenacao,Aplicando o Strategy (Arquitetura de Software: Design Patterns),0,0,2020,2023,1,https://github.com/Geovane33/Example-strategy-ordenacao
Strategy,motor_control_strategy,control of linear actuators using strategy design pattern,0,1,2014,2014,0,https://github.com/05lindne/motor_control_strategy
Strategy,DesignPatterns_Strategy,,0,0,2020,2020,1,https://github.com/DsDravos-Lnx/DesignPatterns_Strategy
Strategy,composite_and_strategy,Trabalho de Engenharia de Software II - Design Patterns,0,0,2020,2020,1,https://github.com/decobeto/composite_and_strategy
Strategy,DesignPatternsStrategy,Project with finalidade in show the Desing Pattern and Implementation,0,0,2022,2023,1,https://github.com/Caous/DesignPatternsStrategy
Strategy,design-pattern-strategy,Example about how to implement Strategy Design Pattern,0,0,2019,2019,1,https://github.com/fthomasvp/design-pattern-strategy
Strategy,Patterns.Behavior.Strategy,Repo to explain Strategy design pattern with examples,0,0,2023,2023,1,https://github.com/mail2nizamkhan/Patterns.Behavior.Strategy
Strategy,Simon8029.DesignPatterns.StrategyPattern,,0,0,2017,2017,1,https://github.com/PlumpMath/Simon8029.DesignPatterns.StrategyPattern
Strategy,DesignPatterns.Strategy,This is a demonstration from my DesignPattern series.,0,0,2021,2021,0,https://github.com/Vali-Mandeal/DesignPatterns.Strategy
Strategy,DesignPatterns-Strategy,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Strategy
Strategy,designPatterns_Strategy,,0,0,2023,2023,1,https://github.com/pkrodrigues/designPatterns_Strategy
Strategy,DesignPatternsStrategy,,0,0,2018,2018,1,https://github.com/BSzydlowska/DesignPatternsStrategy
Strategy,DesignPatterns_Strategy,,0,0,2024,2024,1,https://github.com/claudiovdev/DesignPatterns_Strategy
Strategy,design-patterns-strategy,Source for the “Design Patterns: Strategy Pattern” course,0,0,2023,2023,1,https://github.com/codecourse/design-patterns-strategy
Strategy,Java-Dev-DesignPatterns-StrategyPattern-VehicleStrategy,,0,0,2017,2017,0,https://github.com/VladimirCores/Java-Dev-DesignPatterns-StrategyPattern-VehicleStrategy
Strategy,DesignPatterns-Strategy,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Strategy
Strategy,KnightsGameStrategy,Creating a Knights game using Strategy Design pattern.,0,0,2018,2018,0,https://github.com/gavinev98/KnightsGameStrategy
Strategy,angular-strategy-pattern,Implementation of the strategy design pattern in Angular,0,0,2023,2023,1,https://github.com/MisterBiscuit/angular-strategy-pattern
Strategy,DesignPatterns_Strategy,,0,0,2017,2017,1,https://github.com/dyamaletdinova/DesignPatterns_Strategy
Strategy,DesignPatterns-Strategy,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Strategy
Strategy,DesignPatterns_Strategy,,0,0,2024,2024,1,https://github.com/Freedom-Coding/DesignPatterns_Strategy
Strategy,StrategyPatternIntroToC-,An example of using the Strategy Design pattern in C#,0,0,2015,2015,1,https://github.com/KBryan/StrategyPatternIntroToC-
Strategy,Strategy_DesignPatterns,,0,0,2023,2023,1,https://github.com/Danmqest/Strategy_DesignPatterns
Strategy,DesignPatterns_Strategy,,0,0,2023,2024,1,https://github.com/PauloCesarBruno/DesignPatterns_Strategy
Strategy,DesignPatterns_Strategy,,0,0,2019,2019,1,https://github.com/JawoszekR/DesignPatterns_Strategy
Strategy,CSharp-StrategyPattern,"Stategy pattern recreated from ""Head First: Design Pattern"" written in C#",0,0,2024,2024,1,https://github.com/Minh-Than/CSharp-StrategyPattern
Strategy,DesignPatternsStrategy,,0,0,2017,2017,0,https://github.com/FernandoGodoi/DesignPatternsStrategy
Strategy,DesignPatterns-Strategy,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Strategy
Strategy,strategy-design-pattern,a simple implementation of the strategy design pattern.,0,0,2020,2020,1,https://github.com/SedemQuame/strategy-design-pattern
Strategy,strategy-pattern-java,A simple example of the strategy design pattern,0,0,2013,2013,1,https://github.com/bmchild/strategy-pattern-java
Strategy,DesignPatterns-Strategy,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Strategy
Strategy,DesignPatterns.Strategy,,0,0,2024,2024,1,https://github.com/goteEND/DesignPatterns.Strategy
Strategy,StrategyPattern-BookingTrainTicket,Software Engineering and Design Patterns-SD-350-F21P1   LAB 1,0,0,2022,2022,1,https://github.com/jdietm/StrategyPattern-BookingTrainTicket
Strategy,pattern-strategy-java,Example of the design pattern strategy in java,0,0,2023,2023,1,https://github.com/joaovictormcz/pattern-strategy-java
Strategy,study-design-pattern-java,Repository for design pattern studies,0,0,2024,2024,1,https://github.com/arthurlopesr/study-design-pattern-java
Strategy,design_patterns,"Implementing 3 design patterns in java(Strategy, observer and prototype design pattern)",0,0,2017,2017,1,https://github.com/shruti-14/design_patterns
Strategy,design-pattern-strategy,Test implementation for design pattern strategy in java,0,0,2021,2021,1,https://github.com/wallaceespindola/design-pattern-strategy
Strategy,StrategyPatternInDotnetCore,Design Pattern In dotnet core : an implementation of strategy pattern,0,0,2022,2022,1,https://github.com/Defcoq/StrategyPatternInDotnetCore
Strategy,design-patterns,Design patterns implemented in Go,0,0,2022,2023,1,https://github.com/Kartochnik010/design-patterns
Strategy,StrategyMethodDP,This is an example codes implemented by Strategy Method Design Pattern,0,0,2017,2017,1,https://github.com/tonyseo7/StrategyMethodDP
Strategy,concurrent-load-balancer,Pracising Concurrency and Strategy Design Pattern,0,0,2024,2024,1,https://github.com/jeremypuchta/concurrent-load-balancer
Strategy,cs100-lab-06,CS100 (Software Construction) - Strategy Design Pattern,0,1,2021,2021,3,https://github.com/michael07w/cs100-lab-06
Strategy,Codigo-052---Descontos,Design Pattern Strategy e Funções Lambda,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-052---Descontos
Strategy,DesignPatterns,Factory/Facade/Strategy,0,0,2022,2022,1,https://github.com/Auvsexvc/DesignPatterns
Strategy,Simple_Search_Engine,An introduction to Strategy Design Pattern,0,0,2020,2020,0,https://github.com/dstolis/Simple_Search_Engine
Strategy,Lab1,Strategy Design Pattern for Sorting Techniques,0,0,2022,2022,0,https://github.com/mvnarasimharao/Lab1
Strategy,data-sort,Uma aplicação do design pattern strategy.,0,0,2022,2022,1,https://github.com/barabelo/data-sort
Strategy,GuitarFactory,"Design Patterns - Composite, Factory, strategy, decorator,",0,0,2014,2014,1,https://github.com/icelated/GuitarFactory
Strategy,design-patterns,CSCE 247-001 Strategy Design Patterns,0,0,2021,2023,1,https://github.com/lukehowe/design-patterns
Strategy,DesignPattern-StategyJava,Design Pattern Strategy feita em Java,0,0,2024,2024,1,https://github.com/KirinRyu/DesignPattern-StategyJava
Strategy,ExaminationPerformanceEvaluation,Example of Strategy Design Pattern Implementation,0,0,2019,2019,0,https://github.com/rameez-parkar/ExaminationPerformanceEvaluation
Strategy,Identity-Management-IDM-project,Strategy and Adapter design patterns applied,0,0,2023,2023,1,https://github.com/jingjingyang0803/Identity-Management-IDM-project
Strategy,swe-incompleto,"Design Patterns Observer, Abstract Factory, Strategy",0,0,2024,2024,1,https://github.com/polynomialspac3/swe-incompleto
Strategy,DuckSimulatorApp,This Application demonstrates Strategy Design Pattern,0,0,2024,2024,1,https://github.com/Phanindra-1/DuckSimulatorApp
Strategy,design-patterns-Java,Calculating taxes using design-patterns (strategy),0,0,2016,2018,0,https://github.com/declau/design-patterns-Java
Strategy,com.fredericoferreiracosta.businessinteraction.businessinteraction,Factory and Strategy design patterns example,0,0,2019,2019,1,https://github.com/fredericoferreiracosta/com.fredericoferreiracosta.businessinteraction.businessinteraction
Strategy,Stratdp,Strategy design pattern implemented in JAVA,0,0,2013,2014,1,https://github.com/sugandharoy/Stratdp
Strategy,Design-Patterns2-Assi1,"Demonstrates Design Patterns flyweight, aggregate, strategy",0,0,2021,2021,1,https://github.com/soniafriesen/Design-Patterns2-Assi1
Strategy,Circular-Doubly-Linked-Queue-Implementation,Comparator implementation using Strategy design pattern,0,0,2019,2019,1,https://github.com/priteshamrelia/Circular-Doubly-Linked-Queue-Implementation
Strategy,SendSMSEmailConsoleApp,Use Design Pattern Factory Singletone Strategy,0,0,2025,2025,0,https://github.com/MehrnazMirahmadi/SendSMSEmailConsoleApp
Strategy,design-pattern-spring,Exploring design patterns with Spring Boot,0,1,2024,2024,1,https://github.com/dc-root/design-pattern-spring
Strategy,Design-Patterns-Impl,Design Patterns Implementation,0,0,2023,2023,1,https://github.com/TheMIU/Design-Patterns-Impl
Strategy,cool-game,Uses Observer and Strategy design patterns.,0,0,2018,2018,1,https://github.com/chassitae/cool-game
Strategy,FirstDesignPatternImplementation-StrategyPattern,First design pattern explanation code as shown on the book,0,0,2022,2022,1,https://github.com/Landilito/FirstDesignPatternImplementation-StrategyPattern
Strategy,software-design-and-architectures,"Design patterns: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/oblakov0372/software-design-and-architectures
Strategy,strategy_php,A simple program to demonstrate the Strategy Design Pattern.,0,0,2015,2015,1,https://github.com/RichJones22/strategy_php
Strategy,Strategy-Design-Pattern-Examples,"Java, Python, React implimentations of Strategy design pattern",0,0,2024,2024,1,https://github.com/ISMadusanka/Strategy-Design-Pattern-Examples
Strategy,strategy_java,A simple program to demonstrate the Strategy Design Pattern.,0,0,2015,2015,1,https://github.com/RichJones22/strategy_java
Strategy,design-patterns---strategy-pattern,Design Patterns in Object Oriented Programming - Strategy Pattern,0,0,2019,2019,1,https://github.com/zakayothuku/design-patterns---strategy-pattern
Strategy,ExampleStrategy,This example shows how to implement Strategy Design Pattern,0,0,2016,2023,1,https://github.com/DroidsOnRoids/ExampleStrategy
Strategy,logging-strategy,Strategy design pattern usage example for a Medium article,0,0,2018,2018,1,https://github.com/nemanjapetrovic/logging-strategy
Strategy,DesignPattern.Strategy.Demo,A simple project demonstrating the strategy design pattern.,0,0,2020,2020,1,https://github.com/lucasmoretti96/DesignPattern.Strategy.Demo
Strategy,spring-boot-strategy-factory,Strategy factory design pattern implementation for spring boot,0,0,2020,2020,1,https://github.com/yyilmazmehmet/spring-boot-strategy-factory
Strategy,Design-Patterns-DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA,,0,0,2018,2018,1,https://github.com/HarshGajraSUNY/Design-Patterns-DesignPatterns-DynamicProxy-Reflection-StrategyPattern_JAVA
Strategy,strategy-pattern,Implementation of the strategy design pattern in different languages,0,0,2023,2023,1,https://github.com/domnru/strategy-pattern
Strategy,Strategy_Design,"Demo SpringBoot Application for Stratedy Design Pattern for IOC,",0,0,2023,2023,1,https://github.com/NAVEENWODEYAR/Strategy_Design
Strategy,strategy-pattern,Implementation of Strategy design pattern in C++ and tests,0,0,2019,2019,1,https://github.com/Sid23/strategy-pattern
Strategy,strategy_cpp,A simple program to demonstrate the Strategy Design Pattern.,0,0,2015,2015,1,https://github.com/RichJones22/strategy_cpp
Strategy,Strategy-Pattern-in-CPP,Strategy Design Pattern implemented in C Plus Plus,0,0,2015,2015,1,https://github.com/mubashirhanif/Strategy-Pattern-in-CPP
Strategy,CS100-Strategy-Behavorial-Pattern-Design-Patterns-,Practice on how to use design patterns,0,0,2022,2022,1,https://github.com/TimmyTwoD/CS100-Strategy-Behavorial-Pattern-Design-Patterns-
Strategy,StrategyExample,An illustration of a Strategy Design Pattern implementing a simple integer calculator.,0,0,2020,2020,1,https://github.com/bk-wrattler/StrategyExample
Strategy,ccdp_tugas_besar,"Pada point yang saya kerjakan adalah Builder Creational Design Pattern, Bridge Structural Design Pattern, Strategy Behavioral Design Pattern ",0,0,2024,2024,1,https://github.com/ngodingmace/ccdp_tugas_besar
Strategy,strategy-design-pattern-with-enum-in-java,Strategy Design Pattern with enum in Java.,0,0,2022,2023,1,https://github.com/pablocavalcanteh/strategy-design-pattern-with-enum-in-java
Strategy,DesignPatterns,initial commit of strategy ,0,0,2023,2023,1,https://github.com/TheoTechStack/DesignPatterns
Strategy,Example-strategy-imposto-produtos-sevicos,Aplicando o Strategy (Arquitetura de Software: Design Patterns),0,0,2020,2023,1,https://github.com/Geovane33/Example-strategy-imposto-produtos-sevicos
Strategy,StrategyDesignPatterns,An example of how to implement the strategy design pattern using JAVA,0,0,2023,2023,1,https://github.com/Mr-Kgobane/StrategyDesignPatterns
Strategy,StrategyDesignPattern,Exercício proposto sobre Design Pattern - Strategy - Aula de Engenharia de Software III,0,0,2024,2024,1,https://github.com/VictorSouzaSantos/StrategyDesignPattern
Strategy,DesignPatterns,• Added the Strategy pattern,0,0,2017,2017,1,https://github.com/eliamyro/DesignPatterns
Strategy,payment-method-strategy-pattern-example,C# - Payment method example for strategy design pattern,0,0,2023,2023,1,https://github.com/flcristian/payment-method-strategy-pattern-example
Strategy,ANGULAB_strategy-pattern,"mise en oeuvre du design pattern ""strategy"" avec Angular",0,0,2018,2018,1,https://github.com/NikoSkui/ANGULAB_strategy-pattern
Strategy,design-pattern-strategy,Implementation of the Strategy Design Pattern (go to wiki),0,0,2022,2025,1,https://github.com/mikedr/design-pattern-strategy
Strategy,design-patterns,Learning Design Patterns.,0,0,2022,2022,1,https://github.com/tnusraddinov/design-patterns
Strategy,Strategy-Pattern-Algorithms,Common Programming Algorithms emplemented in the Strategy Design Pattern,0,0,2020,2020,1,https://github.com/lightlitha/Strategy-Pattern-Algorithms
Strategy,design_pattern_strategy,Implementation of the strategy design pattern using Spring Boot,0,0,2022,2022,1,https://github.com/jayhamilton/design_pattern_strategy
Strategy,Interpreter-and-Strategy-in-Python,Using Design patterns - Interpreter and Strategy in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Interpreter-and-Strategy-in-Python
Strategy,ImportUserWithStrategy,importer des utilisateurs avec différents fichiers avec le design pattern stratégie  importer des utilisateurs avec différents fichiers avec le design pattern stratégie importer des utilisateurs avec différents fichiers avec le design pattern stratégie,0,0,2023,2023,1,https://github.com/bensaadmucret/ImportUserWithStrategy
Strategy,Xperiments.DesignPatterns.Strategy,A litttle implementation of Strategy pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Strategy
Strategy,DesignPatterns-Behavioral-Strategy,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-Strategy
Strategy,Strategy-DatabaseManager,"Implementation of database manager with the ""strategy"" design pattern",0,0,2019,2019,1,https://github.com/ruben-solution/Strategy-DatabaseManager
Strategy,buildrun-designpattern-strategy,Exemplo aplicado do Design Pattern Strategy em código Java,0,0,2022,2022,1,https://github.com/buildrun-tech/buildrun-designpattern-strategy
Strategy,DesignPatternsStrategyInput,,0,0,2020,2020,1,https://github.com/KatBre/DesignPatternsStrategyInput
Strategy,DesignPatterns_Strategy_Ducks,,0,1,2017,2017,1,https://github.com/krysmathis/DesignPatterns_Strategy_Ducks
Strategy,DesignPatternsStrategy-Examples,Bem-vindo ao repositório de exemplos do padrão de projeto Strategy! Este repositório contém implementações práticas que demonstram como aplicar o padrão Strategy em diversas situações no desenvolvimento de software.,0,0,2024,2024,1,https://github.com/AlisonGorgonho/DesignPatternsStrategy-Examples
Strategy,design-patterns,Design Patterns para apresentação no estágio.,0,0,2021,2022,1,https://github.com/GiovaneFGomes/design-patterns
Strategy,Movie-Selling-and-Renting-Application,"Implementation of Design Patterns, i.e : Singleton, Strategy, Composite, Decorator,State design patterns.",0,0,2017,2017,1,https://github.com/ShailJhaveri/Movie-Selling-and-Renting-Application
Strategy,StrategyTable,A demonstration of a new design pattern that I'm trying to develop,0,0,2014,2014,1,https://github.com/TAGC/StrategyTable
Strategy,Java-StrategyDesignPattern,A Java demo project of trying implementing tecniques of Design Patterns Strategy,0,0,2020,2020,1,https://github.com/AbdeslamRehaimi/Java-StrategyDesignPattern
Strategy,StrategyP.O.O,Implementação de um refactoring para o design pattern Strategy de Calcular Descontos.,0,0,2024,2024,1,https://github.com/fromanoel/StrategyP.O.O
Strategy,RefactoringCodeByStrategyPatternKata,Test driven rafactoring kata using strategy design pattern,0,0,2019,2019,1,https://github.com/pti-tkk/RefactoringCodeByStrategyPatternKata
Strategy,br.edu.umfg.prog-tres.strategy,Design Patterns - Strategy - 1424 . Diego Garcia Perez Biguette,0,0,2024,2024,1,https://github.com/D1360-64RC14/br.edu.umfg.prog-tres.strategy
Strategy,StrategyDesignPatterns,,0,0,2019,2019,1,https://github.com/ahmedco82/StrategyDesignPatterns
Strategy,StrategyDesignPatterns,,0,0,2024,2024,1,https://github.com/alnayyy/StrategyDesignPatterns
Strategy,DesignPatterns,"Observer, decorator and strategy usage.",0,0,2023,2023,1,https://github.com/jordanmruczynski/DesignPatterns
Strategy,PPVI-Strategy,Strategy design pattern example -- Java -- Programming VI Midterm (10/2021),0,0,2021,2024,1,https://github.com/mjdonis/PPVI-Strategy
Strategy,exemple_design_pattern_strategy,Micro projet illustrant l'utilisation du design pattern Strategy,0,0,2023,2023,1,https://github.com/MaximeAuthie/exemple_design_pattern_strategy
Strategy,DP-Strategy,Code bij het eerste hoofdstuk over design patterns (6de jaar),0,0,2019,2019,1,https://github.com/sma-it/DP-Strategy
Strategy,ExDesignPattern_Strategy,Atividade sobre Design Pattern Strategy - Engenharia de Software III,0,0,2024,2024,1,https://github.com/andrevieiraf/ExDesignPattern_Strategy
Strategy,strategy-launcher,Launcher to load multiple excel files implementing strategy design pattern,0,0,2023,2023,1,https://github.com/NaiCob/strategy-launcher
Strategy,DesignPatterns,"Singleton,Factory,Builder,Decorator,Strategy",0,0,2024,2024,1,https://github.com/Sruthilenka/DesignPatterns
Strategy,Behavioral-Strategy,This is a short implementation of the Strategy design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Strategy
Strategy,Strategy-Design-Pattern-Based-Configuration-Reader,"Strategy-Design Pattern Based Configuration Reader, CSCI 342",0,1,2021,2021,1,https://github.com/asmarsh/Strategy-Design-Pattern-Based-Configuration-Reader
Strategy,ca-strategy,A cellular automaton project implemented using the Strategy design pattern.,0,0,2020,2020,1,https://github.com/BrodayWalker/ca-strategy
Strategy,project-strategy,Aplicação do design pattern Strategy em projeto de carater acadêmico,0,0,2022,2022,1,https://github.com/JuniorAndradePinheiro/project-strategy
Strategy,patterns-strategy,An example project demonstrating use of the Strategy design pattern,0,0,2023,2023,2,https://github.com/michaellucasnzl/patterns-strategy
Strategy,Strategy_Scala_Design_Pattern,Design Pattern Implementation of Startegy Pattern Composition in scala.,0,0,2021,2021,1,https://github.com/gunishj/Strategy_Scala_Design_Pattern
Strategy,lex-dp-strategy-ruby,Lex's Design Pattern Examples - Strategy Pattern Using Ruby,0,0,2013,2014,1,https://github.com/l3x/lex-dp-strategy-ruby
Strategy,Strategy-Design-Pattern-Assignment,"Strategy Design Pattern Assignment for CSCE 247, Professor Plante",0,0,2019,2019,1,https://github.com/cameronbrandenburg/Strategy-Design-Pattern-Assignment
Strategy,Strategy-Adapter-SwiftUI,SwiftUI example which covers Strategy and Adapter Design Patterns,0,0,2024,2024,1,https://github.com/KiranSarella/Strategy-Adapter-SwiftUI
Strategy,Strategy-Pattern-Design-Pattern-,"c# , .Net 5.0, Console Application, Behavioral Design Pattern",0,0,2021,2021,1,https://github.com/kaleemiqbal4/Strategy-Pattern-Design-Pattern-
Strategy,strategy-design-pattern-java,Example of applying the stratyegy design pattern with java,0,0,2024,2024,1,https://github.com/arthurlopesr/strategy-design-pattern-java
Strategy,strategyDesignPattern,Repositório usado para aplicação dos conteúdos da Alura do curso de Design Pattern,0,0,2021,2021,1,https://github.com/dclimaites/strategyDesignPattern
Strategy,StrategyDesignPattern,Example of a strategy design pattern code with taxes from USA and Mexico,0,0,2020,2020,1,https://github.com/ChampionGold/StrategyDesignPattern
Strategy,DesignPatterns,Несколько реализаций паттернов программирования на Swift 5,0,0,2021,2021,1,https://github.com/elenana7arova/DesignPatterns
Strategy,SortsStrategyDesignpattern,merge sort and quick sort with Strategy design pattern C#,0,0,2022,2022,1,https://github.com/hhessammheidary/SortsStrategyDesignpattern
Strategy,strategy-design-pattern,Strategy design pattern using no if/else or switch/case,0,0,2022,2022,1,https://github.com/asadul99/strategy-design-pattern
Strategy,Strategy-Pattern-Python,A simple implementation of the Strategy Design Pattern in Python,0,0,2023,2023,1,https://github.com/DonTee-Why/Strategy-Pattern-Python
Strategy,StrategyDP-Practice,A simple implementation for performing operations between numbers under the Strategy design pattern,0,0,2022,2022,1,https://github.com/odedAtias/StrategyDP-Practice
Strategy,Strategy-Pattern-Demo,This repository demonstrates how the strategy design pattern is applied.,0,0,2015,2015,1,https://github.com/oliverslade/Strategy-Pattern-Demo
Strategy,pong-game-java,design pattern strategy builder abstract observer singleton,0,0,2021,2021,1,https://github.com/islamOTH/pong-game-java
Strategy,simple-payment-helper,Simple Payment Helper using strategy design pattern,0,0,2022,2022,1,https://github.com/BadrChoujai/simple-payment-helper
Strategy,designs,A repo on design patterns and strategies,0,0,2023,2023,1,https://github.com/briann-git/designs
Strategy,WinterHoliday,Simple implementation of Builder & Strategy design pattern.,0,0,2016,2016,1,https://github.com/HonzoBonzo/WinterHoliday
Strategy,PatternBug,Maze solving exercise using strategy design pattern,0,0,2020,2021,1,https://github.com/Fuzziwig/PatternBug
Strategy,broodmother,Spider (Implemented following the Strategy Design pattern),0,0,2024,2024,1,https://github.com/r-joey/broodmother
Strategy,strategy-designe-patern-spring-boot-,implementation du strategy design pattern en utilisant spring boot ,0,0,2022,2022,1,https://github.com/AnisKamal/strategy-designe-patern-spring-boot-
Strategy,SimpleCalculator,Simple math calculator implementing strategy design pattern,0,0,2017,2017,1,https://github.com/MJordanov81/SimpleCalculator
Strategy,Sudoku-Solver,Sudoku solver / backtracking algorithm / strategy design pattern,0,0,2019,2020,1,https://github.com/IamCostello/Sudoku-Solver
Strategy,tax-calculator,Calculador de impostos utilizando Design Pattern Strategy.,0,0,2022,2022,2,https://github.com/raf-ael/tax-calculator
Strategy,design-patterns,A repo on design patterns and strategies,0,0,2023,2023,1,https://github.com/briann-git/design-patterns
Strategy,implementing-strategy-pattern,This project is an implementation of the design pattern strategy.,0,0,2022,2022,1,https://github.com/odevjunior/implementing-strategy-pattern
Strategy,flutter_strategy_pattern,an application with flutter to work with strategy design pattern,0,0,2024,2024,1,https://github.com/saeedhassankhan/flutter_strategy_pattern
Strategy,Ring-Based-Queue-Implementation,"C#, Strategy Design Pattern, Generic Type Parameter",0,0,2017,2018,0,https://github.com/kouweizhong/Ring-Based-Queue-Implementation
Strategy,rtsnarbel,real time strategy game using design patterns,0,0,2013,2014,2,https://github.com/guillaumeguerin/rtsnarbel
Strategy,DesafioQuatro,testing strategy design pattern for learning purposes,0,0,2020,2020,1,https://github.com/guiramoslou/DesafioQuatro
Strategy,array-sort-strategies,Array sort algorithms using strategy design pattern,0,0,2022,2022,1,https://github.com/luafalcaocode/array-sort-strategies
Strategy,Margolis_A-mco252-2017F_asgn04,Using Observable/Observer and Strategy Design Patterns,0,0,2017,2018,1,https://github.com/programmingGal/Margolis_A-mco252-2017F_asgn04
Strategy,designPatternDemo,Demonstration of Strategy and MVVM design patterns,0,0,2018,2018,1,https://github.com/vladimir-levkov/designPatternDemo
Strategy,com.danielhertenstein.strategytest,Implementing solar panels for houses using the strategy design pattern.,0,0,2019,2019,1,https://github.com/danielhertenstein/com.danielhertenstein.strategytest
Strategy,CheapCarriersStrategy,"print the cheap carrier, with polymorphism using a design pattern",0,0,2021,2021,1,https://github.com/sebastiangilpatino/CheapCarriersStrategy
Strategy,design-patterns,Simple Design Patterns Project using Strategy Pattern,0,0,2019,2019,1,https://github.com/alessanderleite/design-patterns
Strategy,DesignPatterns,"Estudos sobre Design Patterns: Singleton, Strategy, Facade",0,0,2023,2023,1,https://github.com/Vguilhen/DesignPatterns
Strategy,CarRental,Car rental app with strategy design pattern,0,0,2018,2018,0,https://github.com/Adomas202/CarRental
Strategy,MedievalGame,Dhruv Pai CS247 Strategy Design Pattern Assignment,0,0,2019,2019,1,https://github.com/thatpaiguy/MedievalGame
Strategy,autoplugin-drawapp,"Example for design patterns. Strategy, Observer, Command,",0,0,2020,2020,1,https://github.com/CosminGRG/autoplugin-drawapp
Strategy,strategy-design-pattern,Showing use of the Strategy design pattern in Laravel 5,0,0,2014,2014,1,https://github.com/WebBusinessGeek/strategy-design-pattern
Strategy,Strategy_design_pattern,Mage fighting algorithm for RPG game using strategy design pattern,0,0,2022,2022,1,https://github.com/kustraM/Strategy_design_pattern
Strategy,SE350_Assignment1,An example of a Strategy Design Pattern,0,0,2018,2019,1,https://github.com/Rossmallow/SE350_Assignment1
Strategy,Design-Patterns-on-Flutter,Singelton and Strategy Design Patterns on Flutter,0,0,2021,2023,1,https://github.com/EBBozkurt/Design-Patterns-on-Flutter
Strategy,CS-665-Assignment-3,Software Design Pattern Implementation project: Strategy Pattern,0,0,2024,2024,1,https://github.com/AJun01/CS-665-Assignment-3
Strategy,cluster-strategy-main,Data clustering algorithms implemented in Java with Strategy design pattern.,0,0,2017,2018,0,https://github.com/rstreet85/cluster-strategy-main
Strategy,simple-search-engine,strategy design pattern and inverted index search,0,0,2020,2020,1,https://github.com/lfbettcher/simple-search-engine
Strategy,DesignPatternsWithJava,"Singleton, Observer, Decorator & Strategy",0,0,2024,2024,1,https://github.com/Georgina444/DesignPatternsWithJava
Strategy,Java-springBoot,"Trabalhando com Design Patterns -> Singleton, Strategy, Facade",0,0,2023,2023,1,https://github.com/Hugo83-tecnico/Java-springBoot
Strategy,StrategyPatternUseCase,A simple implementation of the Strategy Design Pattern in Java with Unit Tests,0,0,2016,2016,1,https://github.com/tjxn/StrategyPatternUseCase
Strategy,DesignPattern_Strategy,Modelo de Design Pattern: Strategy || FATEC || Eng. de Software III,0,0,2023,2023,1,https://github.com/rhayadhzaparoli/DesignPattern_Strategy
Strategy,CSharp.DesignPatterns.Behavioral.Strategy,,0,0,2021,2021,1,https://github.com/oscarcortez/CSharp.DesignPatterns.Behavioral.Strategy
Strategy,java-distance-strategy,Java example of Strategy design pattern applied to geometric distances.,0,0,2017,2017,0,https://github.com/rstreet85/java-distance-strategy
Strategy,DesignPatternsDoc,"Singleton, Strategy and Observer patterns",0,0,2015,2015,1,https://github.com/brunodevesa/DesignPatternsDoc
Strategy,GoF-DesignPatterns-Strategy,,0,0,2023,2023,1,https://github.com/Elammourikaoutar/GoF-DesignPatterns-Strategy
Strategy,CarriesLambda,Strategy design pattern and some lambda expressions.,0,0,2021,2021,1,https://github.com/sebastiangilpatino/CarriesLambda
Strategy,Strategy-DesignPatterns-DuckBase,The project is implemented on the training video: https://www.youtube.com/watch?v=qo7Hqwypwcc&list=PLtjuvkyFrt5Wjd-973N117XS7xuuoD6XM,0,0,2019,2019,1,https://github.com/spyshura/Strategy-DesignPatterns-DuckBase
Strategy,object-oriented-design03,Design Patterns: an example of the Strategy,0,0,2023,2023,1,https://github.com/softwareDesign24/object-oriented-design03
Strategy,CIS452_Assingment2,Open Assets/Scenes/StartTutorial and for strategy design pattern related scripts open Assets/Scripts/Strategy Design Pattern Scripts,0,0,2020,2020,1,https://github.com/sangar3/CIS452_Assingment2
Strategy,js-design-patterns,Reference examples of various JavaScript design patterns and testing strategies for those design patterns,0,0,2017,2017,1,https://github.com/gtraines/js-design-patterns
Strategy,patterns-strategy,This is my attempt to improve my understanding of design patterns.,0,0,2021,2021,1,https://github.com/veilofmaya/patterns-strategy
Strategy,strategy-pattern,Minimal implementation to demonstrate usage and advantages of Strategy Design Pattern,0,0,2020,2020,1,https://github.com/am-singh/strategy-pattern
Strategy,strategy-pattern,"Playground to simulate the Strategy Design Pattern with Rex, The Dog",0,0,2019,2019,1,https://github.com/raphaeloneves/strategy-pattern
Strategy,KnightsStrategy,This is a command line fighting game implementing 7 design patterns.,0,0,2018,2018,1,https://github.com/gavinev98/KnightsStrategy
Strategy,StrategyPatternDemo,A small Asp.Net console application demonstrating the strategy design pattern in sorting array.,0,0,2018,2018,1,https://github.com/RameshHyaunmikha/StrategyPatternDemo
Strategy,Code-Design,"apllying various code design tools: Structural Design Patterns, Creational Design Patterns, Behavioral Design Patterns, Lambda Expressions for Strategy Pattern etc. ",0,0,2022,2022,1,https://github.com/eliet24/Code-Design
Strategy,StrategyPattern_Example,You can reach the article via : https://thecodeprogram.com/explanation-of-strategy-design-pattern,0,0,2020,2020,1,https://github.com/thecodeprogram/StrategyPattern_Example
Strategy,DesignPatterns,Contains all homework for CS330 Strategy Patterns,0,0,2024,2024,1,https://github.com/MatthewOsorio/DesignPatterns
Strategy,DesignPatterns_Day1_10276505,Strategy and Template pattern,0,0,2018,2018,1,https://github.com/rclacerna/DesignPatterns_Day1_10276505
Strategy,StrategyDesignPattern,Implementing a strategy design pattern to create football players and have them run plays,0,0,2021,2021,1,https://github.com/bfriend14/StrategyDesignPattern
Strategy,strategyDesignPatternsExamples,,0,0,2018,2018,1,https://github.com/giraudev/strategyDesignPatternsExamples
Strategy,design-pattern-strategy,"DIO project challenge, creating a project using the Design Pattern Strategy",0,0,2023,2023,1,https://github.com/mikaelbotassi/design-pattern-strategy
Strategy,StrategyPattern,My example of strategy Pattern from the book Head First Design Patterns (O'Reilly Media),0,0,2019,2019,1,https://github.com/natgrett/StrategyPattern
Strategy,Strategy-Design-Pattern,These files are different actor classes in the strategy design pattern.,0,0,2020,2020,1,https://github.com/sandra0498/Strategy-Design-Pattern
Strategy,strategy-design-pattern,This is a simple implementation of strategy design pattern in java ,0,0,2021,2021,1,https://github.com/omidhaghighatgoo/strategy-design-pattern
Strategy,Strategy-DesignPattern,This is an example for how to use strategy design pattern,0,0,2020,2020,0,https://github.com/asmaa-fou2d/Strategy-DesignPattern
Strategy,csharp_dpatter_strategy,Sample of design pattern strategy in c#. Class/methods in portuguese. ,0,0,2019,2019,1,https://github.com/lucasldemello/csharp_dpatter_strategy
Strategy,strategy_design_pattern,Simples Console App in .NET to understand the Strategy Design Pattern,0,0,2023,2023,1,https://github.com/gabrieltp/strategy_design_pattern
Strategy,T-ShirtStrategy,Strategy Design Pattern Java Application for Assignment 3 for Coding Bootcamp,0,0,2020,2020,1,https://github.com/geoflev/T-ShirtStrategy
Strategy,Aplicando-Strategy-Csharp,Aplicando design patterns na prática com C# utilizando o padrão Strategy,0,0,2020,2020,1,https://github.com/Pedrohvc1/Aplicando-Strategy-Csharp
Strategy,dp-strategy-java,Exemplo simples do Padrão de Projeto (Design Pattern) Strategy utilizando Java,0,0,2016,2016,1,https://github.com/fabiomrd/dp-strategy-java
Strategy,payment-method-strategy,Estrutura básica de Métodos de pagamento usando o Design Pattern Strategy,0,0,2016,2016,1,https://github.com/dersonsena/payment-method-strategy
Strategy,Leitura-Boleto-Strategy,Reading csv files with java using design pattern STRATEGY - College homework,0,0,2021,2021,1,https://github.com/sankassio99/Leitura-Boleto-Strategy
Strategy,Strategy_Pattern_Calculator,Python implementation of a command line calculator using strategy design pattern ,0,0,2024,2024,1,https://github.com/yrangana/Strategy_Pattern_Calculator
Strategy,DesignPatterns,"Singleton, Composite and Strategy implementation for business case",0,0,2023,2023,1,https://github.com/Chelariu-Cosmin/DesignPatterns
Strategy,DesignPatternStrategy,mini aplicação console para praticar desenvolver com o design pattern strategy.,0,0,2022,2022,1,https://github.com/Theader/DesignPatternStrategy
Strategy,DesignPatterns,Padrão de Projeto  Strategy e  Chain of Responsibility,0,0,2014,2014,1,https://github.com/BrunoBS/DesignPatterns
Strategy,DesignPatterns,Combinação de 3 design patterns: Factory/Strategy/Proxy,0,1,2019,2019,3,https://github.com/josecarlosolju/DesignPatterns
Strategy,CPP_DesignPatterns_StandardStrategyPattern,,0,0,2016,2016,1,https://github.com/szalmaf/CPP_DesignPatterns_StandardStrategyPattern
Strategy,StrategyDesignPattern,Strategy Design Pattern for choosing a travel method from player's current position to destination,0,0,2020,2020,1,https://github.com/SimetoB/StrategyDesignPattern
Strategy,HomeTask11-designPatternsStrategy,,0,0,2018,2018,1,https://github.com/vryakala/HomeTask11-designPatternsStrategy
Strategy,StrategyDesignPattern,working on the example provided by Christopher Okharvi on YouTube explaining the strategy design pattern,0,0,2023,2023,1,https://github.com/malshakhouri/StrategyDesignPattern
Strategy,strategy_typescript,A demonstration of how to implement the Strategy Design Pattern in TypeScript,0,0,2020,2020,1,https://github.com/edkaresli/strategy_typescript
Strategy,strategy_pattern,A behavioural software design pattern that enables selecting an algorithm at runtime.,0,0,2023,2023,1,https://github.com/yashtank09/strategy_pattern
Strategy,strategy,Simple project demonstrating the Strategy design pattern. For this one I've made a representation of a text converter.,0,0,2022,2022,1,https://github.com/Piazzi/strategy
Strategy,Strategy,Neste repositório há o projeto java desenvolvido durante uma aula de Engenharia de Software referente ao design pattern Strategy.,0,0,2024,2024,1,https://github.com/MarcusMatias/Strategy
Strategy,Software-Design-Project,"Software design patterns with java, implement different design patterns like Iterator, Strategy, flyweight and singleton",0,0,2022,2022,1,https://github.com/Soroyesodiq/Software-Design-Project
Strategy,SOLID-and-Strategy-pattern,SOLID and Strategy design patterns on java in MMORPG game example.,0,0,2023,2023,1,https://github.com/NikaRobaqidze/SOLID-and-Strategy-pattern
Strategy,DesignPatterns,Code to understand Design Patterns e.g Strategy etc,0,0,2021,2021,1,https://github.com/enfl333/DesignPatterns
Strategy,Design-Patterns-Tutorial-Strategy, This project is taken from Derek Banas' Design Patterns Tutorial series.,0,0,2019,2019,1,https://github.com/olosinno/Design-Patterns-Tutorial-Strategy
Strategy,Aplica-Imposto-Strategy-Pattern,Aplicação de Design Pattern Strategy em módulo de imposto sobre venda,0,0,2021,2021,1,https://github.com/Luljam/Aplica-Imposto-Strategy-Pattern
Strategy,Lab03-DesignPatterns,Implementation of Prototype and Strategy Java Design Patterns,0,0,2022,2022,1,https://github.com/lmlldwn/Lab03-DesignPatterns
Strategy,design-patterns-stragegy,Implementation for study purposes of strategy design pattern,0,0,2022,2022,1,https://github.com/janazi/design-patterns-stragegy
Strategy,DIO-lab-design-patterns,"Um pouco sobre design patterns Singleton, Strategy, Cascade",0,0,2022,2022,1,https://github.com/CarlosAbraao/DIO-lab-design-patterns
Strategy,Coffee-machine-Project,"Coffee machine project using Strategy,Builder Design patterns.",0,0,2022,2024,1,https://github.com/Nevocohen111/Coffee-machine-Project
Strategy,DesignPatterns_Java,"Design Patterns with Java: Singleton, Observer, Decorator, Strategy",0,0,2024,2024,1,https://github.com/DzhanSali/DesignPatterns_Java
Strategy,design-pattern,"5 design pattern: Singleton, Factory, Adapter, Strategy, Observer",0,0,2018,2018,0,https://github.com/hapro955/design-pattern
Strategy,DesignPatternTP,"les quatres design pattern : Strategy, Decorator, Observer, Composite",0,0,2021,2021,1,https://github.com/a-maslah/DesignPatternTP
Strategy,DesignPattern,Implementing the Strategy Design pattern in Spring Boot,0,0,2024,2024,2,https://github.com/bhaskarjavac2020/DesignPattern
Strategy,scalaPracAA,Practice Scala read file using strategy design pattern,0,0,2019,2019,0,https://github.com/Ali58l/scalaPracAA
Strategy,ReportsGenerator,Applications to implement Strategy and Decorator Design Patterns,0,0,2020,2020,1,https://github.com/clariceabreu/ReportsGenerator
Strategy,Binary-Search-Tree-Implementation,"Implementation of Null, Strategy, and Visitor design pattern",0,0,2019,2019,1,https://github.com/priteshamrelia/Binary-Search-Tree-Implementation
Strategy,JsDesignPatterns,"Factory, Singleton and Strategy design patterns in Js",0,0,2021,2023,1,https://github.com/tomasfly/JsDesignPatterns
Strategy,java_calculator,Simple Calculator Using Java and Strategy Design pattern,0,0,2023,2023,1,https://github.com/fadyelgendy/java_calculator
Strategy,Gym,"implementing 4 design patterns - Singleton, Strategy, Observer, Decorator. ",0,0,2024,2024,1,https://github.com/Dayana1919/Gym
Strategy,strategy_pattern_example,An example of using the strategy design pattern in a console app.,0,0,2019,2019,1,https://github.com/haaseni/strategy_pattern_example
Strategy,Design-Patterns,"GOF Design Patterns : observer, strategy, command, composite, state",0,0,2017,2017,1,https://github.com/mesurace/Design-Patterns
Strategy,BlackJack-CSharp,"Design pattern assignment. Using MVC- Strategy-, Factory-pattern",0,0,2020,2020,1,https://github.com/niklasnilsson87/BlackJack-CSharp
Strategy,AdvancedProgramming,Student management with C# using Strategy design pattern,0,0,2022,2023,1,https://github.com/Linhvjc/AdvancedProgramming
Strategy,More-Design-Patterns,-Implemented the State design pattern; - Implemented the Strategy design pattern - Implemented the Decorator design pattern - Implemented the Composite design pattern; - understand UML State Diagrams; and - integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/More-Design-Patterns
Strategy,DesignPatternApp,pet project applies factory and strategy design pattern,0,0,2022,2022,1,https://github.com/imsimpla2209/DesignPatternApp
Strategy,SortingMethods,Different sorting methods with using strategy design pattern,0,0,2023,2023,0,https://github.com/neoats/SortingMethods
Strategy,tutorial-1,Behavioral Design Pattern: Strategy Pattern and Observer Pattern.,0,0,2023,2024,2,https://github.com/CSUI-Adpro/tutorial-1
Strategy,BookLibrary,"Object Oriented Programming, Java, The Strategy design pattern",0,0,2023,2023,1,https://github.com/Ikraane/BookLibrary
Strategy,MiniDuckSimulator,Design patterns project to demo the strategy pattern,0,0,2018,2018,0,https://github.com/georgelagos/MiniDuckSimulator
Strategy,strategies,"Alguns exemplos de design patterns strategy, com C#.",0,0,2020,2021,1,https://github.com/mathfmartins/strategies
Strategy,dupi-api,An api multi datasorces with strategy design pattern,0,0,2020,2020,1,https://github.com/josilano/dupi-api
Strategy,projeto-padrao-projeto-spring-java,"Desafio Design Patterns com Singleton, Strategy e Facade",0,0,2023,2023,1,https://github.com/wellingtonamaral/projeto-padrao-projeto-spring-java
Strategy,Text-Processing,Text Processing with Strategy Design Pattern in Go,0,0,2024,2024,1,https://github.com/mariamikv/Text-Processing
Strategy,calculator,A basic calculator using factory & strategy design patterns,0,0,2024,2024,1,https://github.com/izemomar/calculator
Strategy,phpskillstest,A PHP Task to showcase Strategy Design Pattern ,0,0,2022,2024,1,https://github.com/DylanDile/phpskillstest
Template Method,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Template Method,javaDesignPatterns,"대표적인 디자인 패턴들을 Java로 구현. Singleton, Factory, Command, Iterators, Proxy, Template Method, State, Facade, Observer, Adapter, Decorator, Composite",12,2,2021,2024,1,https://github.com/bluedskim/javaDesignPatterns
Template Method,CarFactory,This is a fictional system software which runs on console. This system is designed to understand the uses of Template Method and Iterator Design Patterns. ,10,1,2021,2024,1,https://github.com/KeremTAN/CarFactory
Template Method,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Template Method,php-design-patterns,"The Decorator Pattern, Adapter Pattern, Template Method Pattern, Strategy Pattern, Observer Pattern",7,0,2021,2024,1,https://github.com/manjeetk/php-design-patterns
Template Method,better-business-logic-with-typescript,"The repository will provide examples on how to use and implement design patterns (like Composite, Builder, Template Method and others) using Typescript. The repository will demonstrate code reuse strategies and extensibility techniques for building robust Angular Services and Business Logic.  The repository will demonstrate how to implement shared Angular services and how to use them in Angular domain services. The services will include rich business logic layers that use the angular-rules-engine and angular-actions NPM packages.",7,0,2017,2021,1,https://github.com/buildmotion/better-business-logic-with-typescript
Template Method,TemplateMethod-Visitor-DesignPatterns,,5,0,2021,2024,1,https://github.com/kenan805/TemplateMethod-Visitor-DesignPatterns
Template Method,autotest,"The Autotest provides a simple framework for modern Java-based enterprise applications - on any kind of deployment platform, based on template-method design pattern which supported by yaml.",5,0,2018,2018,1,https://github.com/ericmoshare/autotest
Template Method,business-logic-with-actions-and-rules,A repository to demonstrate business logic implementation using business actions and a rules engine. Create highly testable and consistent business logic using the template-method and composite design patterns.,5,0,2019,2023,1,https://github.com/angularlicious/business-logic-with-actions-and-rules
Template Method,TemplateMethod_Visitor_DesignPatterns,,4,0,2021,2022,1,https://github.com/nebinebili/TemplateMethod_Visitor_DesignPatterns
Template Method,Template-method-and-Visitor-design-patterns,,4,0,2021,2024,1,https://github.com/AmiraslanSumgait/Template-method-and-Visitor-design-patterns
Template Method,UstaDonerciDesignPattern,"A term project about usage of multiple design pattern. In this project used Decorator Pattern, Factory Pattern, Template Method Pattern, Command Pattern. ",4,0,2020,2022,1,https://github.com/Scankiran/UstaDonerciDesignPattern
Template Method,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Template Method,tank_game,"The software design pattern homework is based on the object-oriented analysis and design method, using the single case mode, template method mode, factory mode, and the tank war game based on pyGame",4,1,2022,2023,1,https://github.com/Anzz-bot/tank_game
Template Method,Template-method-oop,Oop design pattern template method,2,0,2024,2024,1,https://github.com/Imalsha-Ranasinghe/Template-method-oop
Template Method,SE-311-Design-Pattern-Project-Patient-Management-System,"This project was for our Design Patterns course. We used 5 different design patterns which are Observer, Abstract Factory, Template Method, Singleton, Command, in one project.",2,2,2018,2025,1,https://github.com/efeuruk/SE-311-Design-Pattern-Project-Patient-Management-System
Template Method,DesignPatterns-TemplateMethod, Demo project using design patternTemplateMethod,2,0,2022,2023,1,https://github.com/vinicius-colutti/DesignPatterns-TemplateMethod
Template Method,Aladdin-2D-Game,"Developed a 2D game in Greenfoot using JAVA which involved implementing Gang of Four design patterns and using Agile Scrum Methodology. Design patterns include Observer pattern, Command Pattern, State Pattern, Template Method Pattern and Factory Method Pattern.",2,2,2017,2024,6,https://github.com/pavankothawade/Aladdin-2D-Game
Template Method,DesignPatterns,"DesignPatterns - Padrões Comportamentais - Técnicas de (Strategy, Chain of Responsibility, Template Method, State, Command e Observer)",2,0,2021,2025,1,https://github.com/marcello222/DesignPatterns
Template Method,BugAlgorithms,Implementation of Bug algorithms family using the Template Method design pattern,2,1,2013,2021,1,https://github.com/SelmaKchir/BugAlgorithms
Template Method,Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF,"In this project; composite, iterator, proxy, template method and state design patterns were applied on the ready-made WPF codes. This project was written for object oriented programming lecture.",2,0,2022,2022,1,https://github.com/kamilhan-karaismailoglu/Composite-Iterator-Proxy-TemplateMethod-State-Design-Pattern-With-WPF
Template Method,fynapp_backend,"Python Flask backend for FynApp. It can use DynamoDb or MongoDB. The DynamoDb interaction is made by mongoDb like calls. Software design patterns used: factory method, facade, iterator, template method, decorator.",2,0,2022,2023,1,https://github.com/tomkat-cr/fynapp_backend
Template Method,desginpattern,"Exercício de refatoração e aplicação dos design patterns Builder, Chain e Template Method",1,2,2023,2024,0,https://github.com/joaocarloslima/desginpattern
Template Method,BuildACarUsingDesignPatterns,"Code to build a car, drive it and rent it via Some design patterns - Abstract Factory, Decorator, Template Method, Strategy",1,2,2015,2024,1,https://github.com/pserra77/BuildACarUsingDesignPatterns
Template Method,TemplateMethod-Academia,Implementação do design pattern Template Method.,1,0,2022,2022,1,https://github.com/bielcmoraes/TemplateMethod-Academia
Template Method,DesignPattern-Template-Method,Example implementation of Template Method design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Template-Method
Template Method,php-design-patterns-template-method,PHP Design Patterns - Template Method Pattern Sample,1,0,2018,2020,1,https://github.com/rito328/php-design-patterns-template-method
Template Method,template_pattern,Template Method Design Pattern in Java,1,0,2019,2019,1,https://github.com/parsa-JPM/template_pattern
Template Method,Design-Patterns-Template-Method,A sample application with kotlin language about template method design pattern,1,0,2022,2023,1,https://github.com/mertp/Design-Patterns-Template-Method
Template Method,TemplateExampleApplication,SSE 662 Project 4 Template Method Design Pattern Example,1,0,2017,2018,1,https://github.com/GMP-SSE-662/TemplateExampleApplication
Template Method,SafariTemplateMethod,O JFrame e o Applet fazem uso de gancho -  ou seja do design pattern - Template Method,1,0,2011,2014,1,https://github.com/JeffersonAlmeida/SafariTemplateMethod
Template Method,solid_webformyself,"SOLID principles( +DESIGN PATTERNS: Strategy, Template Method( - Open/Closed Principle (OCP) ) )",1,0,2021,2021,1,https://github.com/mslobodyanyuk/solid_webformyself
Template Method,DesignPatterns,"Design Patterns Project: An educational resource showcasing popular patterns like Singleton, Factory, Observer, Dependency Injection, and Template Method. Explore code and labeled sections for insights into practical implementation and concepts. Enhance understanding of design patterns easily.",1,0,2023,2023,1,https://github.com/ovinokurov/DesignPatterns
Template Method,Template-Method-Design-Pattern,Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.  ASP.NET CORE MVC 7.0,1,0,2024,2024,1,https://github.com/ozangulll/Template-Method-Design-Pattern
Template Method,alura-design-patterns-java-I,"Design Patterns Java I: Boas práticas de programação - Não repita código com Template Method, Saiba da importancia de estudar os Padrões de projeto, Resolva problemas de muito Ifs usando Strategy, Adicione comportamentos ao seu objeto com Decorator, Crie diferentes ações com Observer, Use o Builder para criação de objetos complicados",1,0,2020,2022,1,https://github.com/Edufreitass/alura-design-patterns-java-I
Template Method,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Template Method,vitaRes-,"Three design patterns are used by the program to enable users to order ""VITARES"" restaurant items online and have them delivered to their homes:  template method mediator strategy",1,0,2024,2024,1,https://github.com/hayatvyhr/vitaRes-
Template Method,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Template Method,cs342-hw-4,"You will chose one of the following design patterns: Template Method, Proxy, Adapter or Abstract Factory. Using the Maven JavaFX Project template in the sample code section of our BB course page, you will write a JavaFX program that highlights the functionality of the design pattern you chose. This does not need to be a lot of code and the GUI does not need to be extensive. You can not simply copy and paste an example from the web. You must also include a single page describing how the design pattern works in your program and what the benefits and/or drawbacks of using it are. Format this page as a PDF.",1,0,2022,2023,1,https://github.com/GGsource/cs342-hw-4
Template Method,ocp-templatemethod-lab,CSC 309 Lab on the Open-Closed Principle and Template Method Design Pattern,0,29,2020,2020,2,https://github.com/GMOkeefe/ocp-templatemethod-lab
Template Method,ocp-templatemethod-lab,CSC 309 Lab on the Open-Closed Principle and Template Method Design Pattern,0,24,2020,2020,2,https://github.com/exzhou/ocp-templatemethod-lab
Template Method,LGroup.DesignPatterns.TemplateMethod,,0,2,2016,2016,1,https://github.com/ErickWendel/LGroup.DesignPatterns.TemplateMethod
Template Method,TemplateMethodePattern,#Design_Pattern,0,0,2023,2023,1,https://github.com/meriem-menqir/TemplateMethodePattern
Template Method,TemplateMethod,Design Pattern-Template Method,0,0,2020,2020,1,https://github.com/ParthContractor/TemplateMethod
Template Method,TemplateMethod,Design Pattern Template Method,0,0,2022,2022,1,https://github.com/aliounemane2/TemplateMethod
Template Method,TemplateMethod,Design Patterns: Template Method,0,0,2013,2019,1,https://github.com/leroyvaughan/TemplateMethod
Template Method,TemplateMethodC,Design Patterns Template Method,0,0,2020,2020,1,https://github.com/Takudzwamz/TemplateMethodC
Template Method,Template-Method-Design-Pattern,Behavioral Design Patterns: Template Method Design Pattern,0,0,2023,2023,1,https://github.com/samehesmael277/Template-Method-Design-Pattern
Template Method,TemplateMethodDesignPattern,Template Method Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/TemplateMethodDesignPattern
Template Method,TemplateMethod,Implementando o Design Pattern TemplateMethod,0,0,2025,2025,1,https://github.com/mariasilvano/TemplateMethod
Template Method,Template-Method,Design Pattern Example,0,0,2021,2021,1,https://github.com/mahmutenesaydin/Template-Method
Template Method,Design_pattern-TEMPLATE-METHOD,Design Pattern,0,0,2021,2021,1,https://github.com/CDjepeno/Design_pattern-TEMPLATE-METHOD
Template Method,TemplateMethodPattern,Design Pattern demo with java,0,0,2022,2022,1,https://github.com/AbabacarDieneNdiaye/TemplateMethodPattern
Template Method,TemplateMethodDesignPattern,Template Method Design Pattern Example,0,0,2023,2023,1,https://github.com/vmutlu/TemplateMethodDesignPattern
Template Method,TemplateMethodDesignPattern,Template Method Design Pattern Example,0,0,2020,2020,1,https://github.com/aasmc/TemplateMethodDesignPattern
Template Method,CSharp_Behavioral_TemplateMethod,Behavioral Template Method Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_TemplateMethod
Template Method,TemplateMethodDesignPatternTester,Template Method Design Pattern Tester,0,0,2016,2016,1,https://github.com/falcopellegrino/TemplateMethodDesignPatternTester
Template Method,template-method,Design Patterns - Template Method,0,0,2015,2015,1,https://github.com/hzuim/template-method
Template Method,template-method,Design Patterns - Template Method,0,0,2019,2019,1,https://github.com/pathydruma1000/template-method
Template Method,TemplateMethod-01,"Design Pattern, Template Method, example 01",0,0,2016,2016,1,https://github.com/hr-ireh/TemplateMethod-01
Template Method,TemplateMethod_Kotlin,[Design Pattern] Template Method using Kotlin,0,0,2021,2021,0,https://github.com/andyludeveloper/TemplateMethod_Kotlin
Template Method,TemplateMethodDemo,Demo for Template Method Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/TemplateMethodDemo
Template Method,templateMethod-designPattern,Coursework for the Design Patterns module,0,0,2021,2021,1,https://github.com/bihanviranga/templateMethod-designPattern
Template Method,templateMethodDesignPattern,An interesting design pattern to use...,0,0,2023,2023,1,https://github.com/Deanlew9/templateMethodDesignPattern
Template Method,PadraoTemplate-Method,Template Method Design Pattern,0,0,2019,2019,1,https://github.com/thiagomarcondesdesa/PadraoTemplate-Method
Template Method,DesignPattern-TemplateMethodPattern,TemplateMethodPattern (Head First Design Patterns 참조),0,0,2014,2014,1,https://github.com/yoyojyv/DesignPattern-TemplateMethodPattern
Template Method,example-template-method,Design Pattern - Template Method,0,0,2022,2022,1,https://github.com/raufmazzidan/example-template-method
Template Method,template-method,Template Method Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/template-method
Template Method,lab10-Template-Method,Lab of design patterns,0,0,2024,2024,1,https://github.com/marko-homulak/lab10-Template-Method
Template Method,design-patterns-template-method,Design Patterns Template Method,0,0,2022,2022,1,https://github.com/boabner/design-patterns-template-method
Template Method,lab-11,Template method design pattern,0,0,2023,2024,1,https://github.com/cpit252/lab-11
Template Method,TemplateMethodDP,Simple project that implements template method design pattern.,0,0,2020,2020,1,https://github.com/uros-veljkovic/TemplateMethodDP
Template Method,patterns-template-method,Template Method Design pattern example,0,0,2022,2022,1,https://github.com/maksymyavorovych/patterns-template-method
Template Method,TemplateMethod,A qucik example on the Template Method design pattern.,0,0,2013,2013,1,https://github.com/gergelykoncz/TemplateMethod
Template Method,TemplateMethod,Exemplo de Design Pattern (Template Method) implementado em Java.,0,0,2018,2018,1,https://github.com/Renan4783/TemplateMethod
Template Method,TemplateMethod,A little project to demostrate Template Method design pattern,0,0,2017,2017,1,https://github.com/Aarvedahl/TemplateMethod
Template Method,TemplateMethod,A simple implementation of the Template Method Design Pattern,0,0,2016,2016,2,https://github.com/dan-havener/TemplateMethod
Template Method,template-method-design-pattern,C# - Template method design pattern,0,0,2023,2023,1,https://github.com/flcristian/template-method-design-pattern
Template Method,DesignPatterns-TemplateMethod,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-TemplateMethod
Template Method,DesignPatterns-TemplateMethod,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-TemplateMethod
Template Method,DesignPatterns-TemplateMethod,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-TemplateMethod
Template Method,DesignPatterns-TemplateMethod,樣板方法,0,0,2025,2025,1,https://github.com/ivorkang729/DesignPatterns-TemplateMethod
Template Method,DesignPatterns-TemplateMethod,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-TemplateMethod
Template Method,DesignPatterns-TemplateMethod,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-TemplateMethod
Template Method,TemplateMethod,A demo project to explain the template method design pattern,0,0,2023,2023,1,https://github.com/pjacquemin/TemplateMethod
Template Method,TemplateMethodPatternConcerns,Analysis of Template Method Design Pattern In .NET C#,0,1,2022,2023,1,https://github.com/AhmedTarekHasan/TemplateMethodPatternConcerns
Template Method,TemplateMethodDesignPattern,Illustrating the general template method design pattern in java,0,0,2024,2024,1,https://github.com/surajadhikari98/TemplateMethodDesignPattern
Template Method,cs-template-method,Design Pattern: Template Method in C#,0,0,2016,2016,1,https://github.com/michaelkrisper/cs-template-method
Template Method,dp-template-method,Template Method Design Pattern C# Implementation.,0,0,2017,2017,1,https://github.com/ocinbat/dp-template-method
Template Method,TemplateMethodByDesignPatternCpp,Template method sample program (C++) by design pattern,0,0,2021,2021,1,https://github.com/kazumasa-kusaba/TemplateMethodByDesignPatternCpp
Template Method,Template-Method,A brief on Template Method Design Pattern.,0,0,2021,2021,1,https://github.com/liorwunsch/Template-Method
Template Method,TemplateMethodPattern,Head First Design Patterns - Chapter 8 - The template method pattern,0,0,2020,2020,1,https://github.com/Ruoyu111/TemplateMethodPattern
Template Method,DesignPatterns-Beh-TemplateMethod,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Beh-TemplateMethod
Template Method,Xperiments.DesignPatterns.TemplateMethod,A litttle implementation of Template Method pattern,0,0,2017,2017,1,https://github.com/BrunoLopes/Xperiments.DesignPatterns.TemplateMethod
Template Method,DesignPatterns-Behavioral-TemplateMethod,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-TemplateMethod
Template Method,design-patterns-templated-method,My review on State Design Pattern,0,0,2021,2021,1,https://github.com/marciodegan/design-patterns-templated-method
Template Method,Design_Pattern_1,"Design Pattern - Template Method, Strategy ",0,0,2023,2024,1,https://github.com/Dongwoongkim/Design_Pattern_1
Template Method,templatemethodandroid,Design Pattern:Template Method Sample,0,0,2018,2018,0,https://github.com/evanchen76/templatemethodandroid
Template Method,AbstratoInterface,Aplicação design pattern Template Method,0,0,2022,2022,1,https://github.com/HeloisaDiasFahl2004/AbstratoInterface
Template Method,Personal-Diary-App,Using Template Method design pattern,0,0,2021,2021,2,https://github.com/ducvp72/Personal-Diary-App
Template Method,TemplateMethodDesignPattern,Example of implementing the template method design pattern in Java.,0,0,2020,2020,1,https://github.com/kriscfoster/TemplateMethodDesignPattern
Template Method,TemplateMethod_DesignPattern,"Structural and practical examples of the design pattern ""Template Method""",0,0,2022,2022,0,https://github.com/VictorLins/TemplateMethod_DesignPattern
Template Method,Template-Method,design pattern associated with the software architecture discipline,0,0,2023,2023,1,https://github.com/alvaro-veiga/Template-Method
Template Method,template-method-pattern,A demo of Template Method Design Pattern,0,0,2014,2014,1,https://github.com/abhishek08aug/template-method-pattern
Template Method,Template-Method,A template method design pattern example in C#.,0,0,2017,2017,1,https://github.com/fsprusokowski/Template-Method
Template Method,template-method-pattern,Implement template method design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/template-method-pattern
Template Method,DesignPatterns-State-TemplateMethod-2024,Repósitorio contendo os códigos do State e Template Method da disciplina de POO - 2024 ,0,0,2024,2024,1,https://github.com/annekarolinneds/DesignPatterns-State-TemplateMethod-2024
Template Method,TemplateMethodDesignPattern,Решение задачи приготовления молочного  коктейля с помощью Template Method Design Pattern.,0,0,2022,2023,1,https://github.com/mmarryll/TemplateMethodDesignPattern
Template Method,TemplateMethod_GerenciadorBoleto,Implementação do Gerenciador de Boleto usando o Design Pattern Template Method,0,0,2025,2025,1,https://github.com/JoaoVitor-Dev/TemplateMethod_GerenciadorBoleto
Template Method,php-designpattern-template-method,The Template Method Design Pattern in PHP.,0,0,2017,2020,1,https://github.com/samuelryc/php-designpattern-template-method
Template Method,DesignPatternTemplateMethod,Aplicação do Design Pattern(comportamentais): Template method.,0,0,2023,2023,2,https://github.com/Brunna1989/DesignPatternTemplateMethod
Template Method,template-method-pattern,example of template method design pattern in c#,0,0,2021,2021,1,https://github.com/sewwandikarunarathna/template-method-pattern
Template Method,template-method-pattern,An example of the template method design pattern,0,0,2012,2015,0,https://github.com/daphnechong/template-method-pattern
Template Method,java-template-methods,This Project Implementation the Template Method Design Patterns,0,0,2020,2020,1,https://github.com/phelliperodrigues/java-template-methods
Template Method,template-method-example,An example of 'Template Method' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/template-method-example
Template Method,QuizCreator-Template-Method-Demo,A demo for template method design pattern,0,0,2023,2023,2,https://github.com/prathamrmn/QuizCreator-Template-Method-Demo
Template Method,behavioral_design_pattern_template_method,Example behavioral design pattern using template method,0,0,2022,2022,1,https://github.com/dukrl722/behavioral_design_pattern_template_method
Template Method,recipe-template-method-pattern-example,C# - Recipe template method design pattern example,0,0,2023,2023,1,https://github.com/flcristian/recipe-template-method-pattern-example
Template Method,TemplateMethodImplementation,"Exercício de design pattern do curso ""Engenharia de Software Moderna - Extensão - DCC/UFMG""",0,0,2021,2021,1,https://github.com/DsGomes/TemplateMethodImplementation
Template Method,Template_Design_PAttern,Template method Design Pattern using java,0,0,2024,2024,1,https://github.com/NikleshFernando/Template_Design_PAttern
Template Method,template-method-design-pattern,Example implementation of the template method design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/template-method-design-pattern
Template Method,template-method-design-pattern,Add example code for template method design pattern,0,0,2022,2022,1,https://github.com/bit-sahti/template-method-design-pattern
Template Method,template-method-example2,An example of 'Template method' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/template-method-example2
Template Method,DesignPatterns_chapter-8,Template method pattern,0,0,2015,2017,1,https://github.com/artur-ch-PL/DesignPatterns_chapter-8
Template Method,template-method-pattern-example-cpp,Simple example to the Template Method Design Pattern,0,0,2019,2019,1,https://github.com/grzegorz-grzeda/template-method-pattern-example-cpp
Template Method,BubbleSort-Template-Method-Pattern,Exercise in using the Template Method design pattern,0,0,2013,2014,1,https://github.com/rylo/BubbleSort-Template-Method-Pattern
Template Method,TemplateMethodDesign_patterns,,0,0,2019,2019,1,https://github.com/ahmedco82/TemplateMethodDesign_patterns
Template Method,Template-Method,"An Explainer of the design pattern ""Template Method"" using simple language",0,0,2023,2023,1,https://github.com/lucaleyva/Template-Method
Template Method,gof-template-method,Small application that demonstrates using the Template method design pattern,0,0,2018,2021,1,https://github.com/delagetto-gh/gof-template-method
Template Method,hfdp-template,Head First Design Patterns : Template Method : Library ,0,0,2018,2020,1,https://github.com/fenwickjb/hfdp-template
Template Method,TemplateMethodPattern,Java Design Patterns Practice: Template Method Pattern - Subclass decides how to implement steps in an algorithm. ,0,0,2019,2019,1,https://github.com/mannyaaguilar/TemplateMethodPattern
Template Method,design-pattern-demo,Abstract Factory & Template Method Design Pattern Demo,0,0,2022,2022,1,https://github.com/thinhlh/design-pattern-demo
Template Method,template,Exemplo de Código - Design Pattern Template Method,0,0,2023,2023,1,https://github.com/vitorbalsanello/template
Template Method,Memento-and-Template-method-in-Python,Using Design patterns - Memento and Template methon in Python,0,0,2021,2021,1,https://github.com/Marcelinaaaa/Memento-and-Template-method-in-Python
Template Method,TemplateMethodDesignPatternDemo,"NET implementation of the Template Method design pattern for handling various file formats (JSON, CSV)",0,0,2024,2024,1,https://github.com/poorna-soysa/TemplateMethodDesignPatternDemo
Template Method,spring-template-method,Spring boot example on how to implement a Template Method Design Pattern,0,1,2018,2018,1,https://github.com/jdesigndev/spring-template-method
Template Method,template_mthod_design_pattern_flutter,"Template Method Design Pattern in Flutter | Behavioral Design Patterns in Flutter | 03 July, 2023",0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/template_mthod_design_pattern_flutter
Template Method,software-architecture-dcs-template-method,Implementation the Template Method design pattern for classes in dao layer,0,0,2019,2020,2,https://github.com/pedrobealves/software-architecture-dcs-template-method
Template Method,Leitura-Boleto-Template-Method,Reading csv files with java using design pattern TEMPLATE METHOD - College homework,0,0,2021,2021,1,https://github.com/sankassio99/Leitura-Boleto-Template-Method
Template Method,template-method-dp,This is a very simple project to test the Template Method design pattern.,0,0,2023,2023,2,https://github.com/mtrosin/template-method-dp
Template Method,object-oriented-design01,Design Patterns: an example of the Template Method,0,0,2023,2023,1,https://github.com/softwareDesign24/object-oriented-design01
Template Method,template-method-java,Projeto desenvolvido para exemplificar a implementação do Design Pattern Template Method em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/template-method-java
Template Method,Creative-Assignment-DP,A template method design pattern program in Java!,0,0,2022,2022,1,https://github.com/pranay202/Creative-Assignment-DP
Template Method,cch3-template-method-design-pattern,A simple project to demonstrate the template method design pattern implementation,0,0,2023,2023,1,https://github.com/Daniel-Fonseca-S/cch3-template-method-design-pattern
Template Method,Strategy-and-Template-Method-design,"A functional & flexible ""table"" application using Strategy and Template Method design patterns.",0,0,2019,2019,1,https://github.com/blairEatsLion/Strategy-and-Template-Method-design
Template Method,RefactoringTemplateMethod,Exemplo de refatoração de código em C# para usar o design pattern Template Method.,0,0,2012,2019,0,https://github.com/robsoncastilho/RefactoringTemplateMethod
Template Method,DesignPatternsProject,"Example wpf project with Builder, Template Method and Singleton.",0,0,2020,2020,1,https://github.com/koper0315/DesignPatternsProject
Template Method,design-patterns-template-method,,0,0,2024,2024,1,https://github.com/huan-carlos/design-patterns-template-method
Template Method,design-patterns-template-method,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-template-method
Template Method,Template-Method-Design-Patterns,,0,0,2024,2024,1,https://github.com/ShanmugarajDeveloper/Template-Method-Design-Patterns
Template Method,Design_Patterns_Template_Method,,0,0,2017,2017,1,https://github.com/wesley17/Design_Patterns_Template_Method
Template Method,design-patterns-template-method,Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.,0,0,2019,2020,1,https://github.com/YaraLOliveira/design-patterns-template-method
Template Method,design-patterns-template-method,,0,0,2023,2023,1,https://github.com/Henderson-da-rocha-porfirio/design-patterns-template-method
Template Method,Template-Method---Design-Patterns,That repository contains the java code of a use case of the Template Method model of Design Patterns.,0,0,2020,2020,1,https://github.com/mazghari9/Template-Method---Design-Patterns
Template Method,design-patterns-template-method,,0,0,2017,2017,1,https://github.com/rohitkumar1989/design-patterns-template-method
Template Method,cos214-assignment1, implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Prototype design pattern; • implement the Memento pattern;,0,0,2019,2022,2,https://github.com/giovannijoubert/cos214-assignment1
Template Method,introduce-template-method-in-angular,Simple project to reusing code with the design pattern Template Method in Angular,0,1,2020,2020,1,https://github.com/Itchimonji/introduce-template-method-in-angular
Template Method,design_pattern_template_method,"Develop a system that uses the pattern given in class. ""Template Method"" design pattern. ",0,0,2021,2022,1,https://github.com/sc0v0ne/design_pattern_template_method
Template Method,MiniLinux,Learning chain of responsibility and template method design patterns,0,0,2022,2022,1,https://github.com/dolooo/MiniLinux
Template Method,DesignPatterns,"Single Responsibibility Principle, Factory, Strategy, Command, Template Method, Proxy and Decorator Pattern",0,0,2020,2020,1,https://github.com/IgorFerro/DesignPatterns
Template Method,DP-Creative-Assignment,A Creative Assignment based on Template method design pattern!,0,0,2022,2022,1,https://github.com/bhivgadePrajakta/DP-Creative-Assignment
Template Method,dependency-inversion-practice,Practicing dependency inversion using template method behavioral design pattern.,0,0,2022,2022,1,https://github.com/1JesusOrtegadelCastillo/dependency-inversion-practice
Template Method,Temperature-Record-Summary,Temperature record summary using the template method design pattern,0,0,2023,2023,1,https://github.com/enmareynoso/Temperature-Record-Summary
Template Method,Creative-Assignment,Creative Assignment of design pattern based on template method,0,0,2022,2022,1,https://github.com/JansiMeshram/Creative-Assignment
Template Method,design-patterns,"Decorator, Composite, Iterator, Strategy, Template Method",0,0,2016,2017,1,https://github.com/nikolaynizruhin/design-patterns
Template Method,DesignPatterns,"Projetos com as metodologias, Builder, Template Method, Cadeia de responsabilidades, Decorator, Observer, State.",0,1,2016,2016,1,https://github.com/diegocar448/DesignPatterns
Template Method,solid-strategy-template-method,"Repository to use UML models with S.O.L.I.D, TDD and Design Patterns.",0,0,2024,2024,1,https://github.com/d4vz/solid-strategy-template-method
Template Method,DartDesignPatternsTemplateMethod,サンプル：Dart(Flutter)のデザインパターン「テンプレートメソッド」,0,0,2021,2021,1,https://github.com/rascal9622/DartDesignPatternsTemplateMethod
Template Method,Template-Methode-Java-javafx,This design pattern is behavioral design pattern which allows you to define a skeleton of an code/algorithm in a base class and let subclasses override the steps without changing the overall structure of algorithm.,0,0,2022,2022,1,https://github.com/Rizwan0994/Template-Methode-Java-javafx
Template Method,Design-Patterns-Template-Method-CSHARP,Паттерн Шаблонный метод,0,0,2023,2023,1,https://github.com/ivnvalxndr/Design-Patterns-Template-Method-CSHARP
Template Method,Template-Methode,This project followed a mini test of design patterns course of the master's degree in computer engineering at UTAD,0,0,2024,2024,0,https://github.com/Eduildo/Template-Methode
Template Method,DesignPatterns,"Meerdere design patterns zoals: Adapter Pattern, Decorator Pattern, Observer Pattern, Template Method, Facade Pattern en meer.",0,0,2019,2020,1,https://github.com/TTvdO/DesignPatterns
Template Method,DifferenceDesignPatterns,"Abstract factory, Factory Method and Template Method",0,0,2025,2025,1,https://github.com/m-granback/DifferenceDesignPatterns
Template Method,TemplateMethod,Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.,0,0,2023,2023,1,https://github.com/LazTanya/TemplateMethod
Template Method,TemplateMethod,Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.,0,0,2020,2021,1,https://github.com/Mahoney0101/TemplateMethod
Template Method,cch3---Design-Patterns-Template-Method-,,0,0,2023,2023,1,https://github.com/leandro-bsf/cch3---Design-Patterns-Template-Method-
Template Method,Design-Patterns,Etapa 01 – Padrões Strategy - Chain of Responsability - Template Method,0,0,2023,2023,1,https://github.com/TadeuViegas/Design-Patterns
Template Method,java_design_patterns_template_method_pattern,java设计模式_模板方法模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_template_method_pattern
Template Method,Design-Patterns,Made some design patterns in c++. • implement the Template Method design pattern; • implement the Factory Method design pattern • implement the Abstract Factory design pattern • implement the Prototype design pattern; • implement the Memento pattern; and • integrate the patterns.,0,0,2024,2024,1,https://github.com/kieran-woodrow/Design-Patterns
Template Method,WeatherMonitoringSystem,"practice Design patterns Observer, Template method, Singleton by Weather Monitoring System.",0,0,2022,2022,1,https://github.com/adoron95/WeatherMonitoringSystem
Template Method,OO-Design-Patterns---HW1,First assignment for CSPP51050 - OO Design Patterns: Singleton and Template Method,0,0,2013,2013,0,https://github.com/andrewmelis/OO-Design-Patterns---HW1
Template Method,Design-Patterns-java,"Java implementations of Template Method, Factory Method, and Adapter design patterns.",0,0,2024,2024,1,https://github.com/PethumSandaruwan/Design-Patterns-java
Template Method,TaromApplication---Design-Patterns-State-Template-Method,,0,0,2024,2024,0,https://github.com/TeodorHZR/TaromApplication---Design-Patterns-State-Template-Method
Template Method,DesignPatternsJava,"Working and training Java concepts, especially Design Patterns like Strategy, Polymorphism, Chain of Responsability, Template Method, State, Command and Observer. ",0,0,2021,2021,1,https://github.com/Mirajenni/DesignPatternsJava
Template Method,COS214-PA1,"This practical is to demonstrate various design patterns such as Momento, Prototype, Template Method, Factory and Abstract Factory Design Patterns ",0,0,2023,2023,1,https://github.com/Bigmanfish1/COS214-PA1
Template Method,template-method,behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure,0,0,2019,2019,1,https://github.com/econtreras251/template-method
Template Method,reports-console-dotnet,"Projeto em C# que gera relatórios, utilizando o Design Pattern Template Method",0,0,2022,2023,1,https://github.com/felipetoscano/reports-console-dotnet
Template Method,W12D4_design_patterns_template_method,,0,0,2020,2020,0,https://github.com/peaky76/W12D4_design_patterns_template_method
Template Method,design-patterns,"implementação dos design patterns: strategy, chain of responsibility, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns
Template Method,Template-Method,Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.,0,0,2020,2020,1,https://github.com/zuyatna/Template-Method
Template Method,JavaFX-Template-Method,"This project is a JavaFX template for building a GUI application that generates either a gaming or office computer, using the template method design pattern.",0,0,2022,2022,1,https://github.com/miranmember/JavaFX-Template-Method
Template Method,template-method-pattern,Design pattern comportamental Template Method para definir o esqueleto de um algoritmo na superclasse mas deixar as subclasses sobrescreverem etapas específicas do algoritmo sem modificar sua estrutura,0,0,2021,2021,1,https://github.com/Jhow-R/template-method-pattern
Template Method,locadora,"Project to practice some design patterns: Facade, Abstract Factory, Singleton and Template Method",0,0,2022,2022,1,https://github.com/luizcantrella/locadora
Template Method,TugasBesar,"program ini berisi beberapa design pattern behavioral seperti strategy, template method, dan MVC",0,0,2021,2021,1,https://github.com/AlfanWahyudi/TugasBesar
Template Method,LearningDesignPattern,"Learning Design Pattern as Strategy, Chain of responsability, Template Method, State, Command, Observer",0,0,2022,2022,1,https://github.com/BrandonCarlos/LearningDesignPattern
Template Method,ocp-templatemethod-lab,CSC 309 Lab on the Open-Closed Principle and Template Method Design Pattern,0,2,2020,2022,1,https://github.com/bcdasilv/ocp-templatemethod-lab
Template Method,ocp-templatemethod-lab,CSC 309 Lab on the Open-Closed Principle and Template Method Design Pattern,0,0,2021,2021,1,https://github.com/spalabri/ocp-templatemethod-lab
Template Method,java-behavioral-design-patterns,"Java implementations of various behavioral design patterns, including Iterator, Observer, and Template Method.",0,0,2025,2025,1,https://github.com/HajiraGul/java-behavioral-design-patterns
Template Method,design-patterns1,"aplicação dos padrões de projeto parte 1: strategy, chain, template method, decorator, state, builder, observer",0,0,2018,2018,0,https://github.com/DeivisonMaster/design-patterns1
Template Method,template-method,"Simple project demonstrating the Template Method design pattern. For this one I made a payment gate example, Payment being the super class and Crypto/CreditCard the sub classes, implemented with the template method caracteristics.",0,0,2022,2022,1,https://github.com/Piazzi/template-method
Template Method,Design-Patterns,"Singleton/Singleton Thread-safe, Builder, Observer(2), Factory method, Strategy(2), Template method, Decorator, Façade, Flyweight, Adapter, Proxy.",0,0,2020,2021,1,https://github.com/ilja115610/Design-Patterns
Template Method,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Template Method,design-patterns,"Projeto simples para fixação de alguns Patterns, tais como: Strategy, Chain of Responsability, State, Template Method, Command e Observer.",0,0,2021,2021,1,https://github.com/E-Rombi/design-patterns
Template Method,guesthouse,A simple application to highlight the usage of Template Method and Command design patterns.,0,0,2014,2014,1,https://github.com/lowerlight/guesthouse
Template Method,designpatterns1,Estudos sobre Design Patterns 1 Strategy - Chain of Responsability - Template Method - State - Command - Observer,0,0,2023,2023,1,https://github.com/mateuscbarbosa/designpatterns1
Template Method,Software_Design_Composition,"Array, Stack, and Queue classes using composition design patterns as well as template method.",0,0,2018,2018,1,https://github.com/Pboruff/Software_Design_Composition
Template Method,DesignPattern-TemplateMethod,"This C# implementation demonstrates the Template Method design pattern, where an abstract class defines the skeleton of an algorithm, allowing subclasses to implement specific steps. It showcases how to create a flexible algorithm structure with defined steps that can be customized, ensuring a consistent process flow across different implementation",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-TemplateMethod
Template Method,Design_Patterns,"This includes most essential design patterns including singleton, factory, abstract factory, observer, builder, prototype, strategy, template method, adapter, facade, decorator design patterns in java",0,0,2023,2023,1,https://github.com/Ansu-s/Design_Patterns
Template Method,DesignPatterns,Não repita código com Template Method Saiba da importância de estudar os padrões de projeto Resolva problemas de muito ifs usando Strategy Adicione comportamentos ao seu objeto com Decorator Crie diferentes ações com Observer Use o Builder para a criação de objetos complicados,0,0,2022,2022,1,https://github.com/Honey-lee429/DesignPatterns
Template Method,java-design-patterns,"Design Patterns em Java I: boas práticas de programação. Strategy, Chain of Responsibility, Template Method, State, Command, Observer",0,0,2023,2023,1,https://github.com/Pybony/java-design-patterns
Template Method,design-patterns-loja,"Design Patterns - Comportamentais: Strategy, Chain of Responsibility, Template Method, State, Command, Observer. Estruturais: Adapter, Decorator, Composite, Facade, Proxy",0,0,2022,2024,1,https://github.com/williammian/design-patterns-loja
Template Method,Design-Patterns-Java-I,"Curso realizado na plataforma alura,  padrões apreendidos strategy, chain of responsibility, template Method, state, command, Observer",0,0,2023,2023,1,https://github.com/Marcelo-F/Design-Patterns-Java-I
Template Method,Design-Patterns-Week-2,"Assignments of design patterns week 2 including, assignment 1 (Template Method pattern), assignment 3 (Observer pattern)",0,0,2023,2023,1,https://github.com/l-huisman/Design-Patterns-Week-2
Template Method,Design-Patterns,"Introduction to design patterns: Strategy, Observer, Factory, Singleton, Command, Adapter, Faade, Template Method, Iterator, Composite, State, Proxy. Object Oriented design principles, Java/UML. ",0,0,2019,2021,1,https://github.com/YifengQ/Design-Patterns
Template Method,Persistent-Framework,"Design of Persistent framework using Controller, Bridge, Command, Template method and Factory method design patterns.",0,0,2016,2017,0,https://github.com/abhishekdhotre/Persistent-Framework
Template Method,Estoque.UI,Implementing the design pattern chain of responsibility and the template method in Windows forms app,0,0,2021,2021,1,https://github.com/pedrovitorrs/Estoque.UI
Template Method,design-patterns-race-game,"A mini race game using the following design patterns: Factory&Abstract Factory, Singleton, Strategy and Template Method Pattern",0,0,2022,2022,1,https://github.com/chiriacbianca/design-patterns-race-game
Template Method,Design-Patterns-PHP,"Sistema desenvolvido para aplicar os conceitos de padrões de projetos comportamentais (Strategy, Chain Of Responsibbility, Template Method, State, Command, Observer & Iterator)",0,0,2021,2021,1,https://github.com/RenatoAugustoFS/Design-Patterns-PHP
Template Method,Template-Method-Pattern,Template-Method-Pattern The template design pattern belongs to the behavioral group of the pattern from Gang of Four and is applied when a skeleton of an algorithm is defined but some steps are deferred to the subclass.,0,0,2017,2017,1,https://github.com/swetashetye/Template-Method-Pattern
Template Method,Intro-To-Template-Method-Design-Pattern,Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Template-Method-Design-Pattern
Template Method,DPEstudo,"Projeto onde exercito conhecimentos sobre alguns Design Patterns, como 'Strategy', 'Chain of Responsability' e 'Template Method'",0,0,2024,2024,1,https://github.com/Chevrand/DPEstudo
Template Method,2D-Jumper-Game-with-JavaAWT,"2D Jumper game and Game engine classes (Renderer2D and Behavior) with design patterns. This project is done for Design Pattern course and includes 6 different design pattern implemented for the game to work. Design patterns include: Template Method, Adapter, Factory Method, Singleton, State and Behavior Patterns.",0,0,2021,2021,1,https://github.com/fGencturk/2D-Jumper-Game-with-JavaAWT
Template Method,designpatterns,"Example of use Design Patterns (Strategy, Chain of Responsibility, Template Method, Decorator, State, Builder and Observer)",0,0,2020,2020,1,https://github.com/jagucheski/designpatterns
Template Method,loja.design.patterns,"Estudos junto ao material da Alura sobre o uso e a implementação de design patterns comportamentais : Strategy, Chain of Responsability, Template Method, State, Command, Observer",0,0,2021,2021,1,https://github.com/laismukaizup/loja.design.patterns
Template Method,Design-Patterns,"Various design patterns I have implemented in Java include: structural patterns like adapter and decorator, creational patterns such as factory, abstract factory, and singleton, and behavioral patterns like template method.",0,0,2024,2024,1,https://github.com/JustMyriiam/Design-Patterns
Template Method,game_design_patterns,"A simple simulation game that allows you to test the profitability of growing specific plants. I use design patterns in code: production method, template method and strategy.",0,0,2022,2024,0,https://github.com/kamillbak/game_design_patterns
Template Method,APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS,"Irei estar mostrando na pratica 6 designs patterns na pratica. (Strategy, Chain of responsibility, Template method, State, Command, Observer)",0,0,2021,2021,0,https://github.com/guimeiradev/APLICANDO-E-ENTENDO-ALGUNS-DESIGN-PATTERNS
Template Method,RecomendadosYTAPI,"API feita em .NET Core usada para estudar os Design Patterns de Factory, Singleton e Template Method",0,0,2020,2021,1,https://github.com/kierkse/RecomendadosYTAPI
Template Method,Introducao_a_DesignPattern_Em_Java,"O Projeto abordará os principais padrões de projetos Design Pattern com Strategy, Template Method, Observer e Decorator",0,0,2022,2022,1,https://github.com/FagnerVJ/Introducao_a_DesignPattern_Em_Java
Template Method,Design_Patterns_in_Java,"Common software design patterns, including Creational patterns (singleton, abstract factory, builder), Behavioral patterns (strategy, template method), Structural patterns(adapter pattern, decorator pattern) and dependency injection",0,0,2022,2022,1,https://github.com/GuoCong1881/Design_Patterns_in_Java
Template Method,dio-design-pattern-template-method,O design pattern Template Method é um padrão de projeto comportamental que define uma estrutura para algoritmos que podem ser reutilizados em diferentes partes do código. Ele é comumente utilizado em Java e outros ambientes de programação orientada a objetos.,0,0,2023,2023,1,https://github.com/edersonsilva/dio-design-pattern-template-method
Template Method,Hangman,"Simple Hangman game used for educational purposes to demonstrate the software design patterns state, singleton and template method.",0,0,2023,2023,1,https://github.com/renespeck/Hangman
Template Method,E-commerce-Platform-Leveraging-Design-Patterns,"The implemented e-commerce platform in java leverages the Strategy, Mediator, and Template Method design patterns for flexible payment handling, efficient communication, and standardized processes.",0,0,2023,2023,1,https://github.com/Labonnya/E-commerce-Platform-Leveraging-Design-Patterns
Template Method,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Template Method,Notepad-MVC,"Notepad MVC Pattern written on java by Template Method Design Pattern team. LLC ""Nur Telecom"" - Intern Labs 5.0",0,0,2023,2023,6,https://github.com/kimgalina/Notepad-MVC
Template Method,CasaDasDelicias,"Uso dos Design Patterns Facade, Singleton, Template Method, Adapter e Decorator em projeto que representa a produção de salgados.",0,0,2020,2023,1,https://github.com/Gwolner/CasaDasDelicias
Template Method,airline-reservation,A flight airport transfer reservation system with 2 implementations on 2 branches: with and without the Template Method Design Pattern.,0,0,2023,2023,1,https://github.com/c-mbdk/airline-reservation
Template Method,Basic-Calculator-Software-Design,"Basic calculator using software design patterns such as abstract factory, composition, template method, visitor, builder, command, wrapper facade, and iterator",0,0,2018,2019,1,https://github.com/Pboruff/Basic-Calculator-Software-Design
Template Method,computer-shop-,"Small app for browsing  laptops and configuring desktop PC, using back4App as backend  and two design patterns (Abstract factory, Template method)",0,0,2021,2021,1,https://github.com/elroir/computer-shop-
Template Method,Online-Shop-Platform-Utilizing-Design-Patterns,"This e-commerce platform is implemented in Java and incorporates three design patterns to enhance its functionality and maintainability: Strategy, Mediator, and Template Method. By incorporating these design patterns, this e-commerce platform becomes more flexible, scalable, and maintainable.",0,0,2023,2023,1,https://github.com/mehzabin-haque/Online-Shop-Platform-Utilizing-Design-Patterns
Template Method,alura_loja_design_pattern,"Estudo de Design Patterns Comportamentais e Estruturais - Strategy, Chain of Responsibility, Template Method, State, Command, Observer, Facades, Adapters, Proxy, Decorator e Composite",0,0,2022,2022,1,https://github.com/hemelo/alura_loja_design_pattern
Template Method,functional-programming-advanced,"Advanced application demo that implements the functional programming paradigm using java 8 , lombok, spring boot, and spring data. ( Respecting Template method design pattern)",0,0,2020,2021,1,https://github.com/ouhamzalhss/functional-programming-advanced
Template Method,Facebook-desktop-app,"A Facebook desktop application using Facebook Graph API implementing 6 different design patterns such as Template Method, Observer, Strategy, Factory Method, Proxy, Facade.",0,0,2022,2022,2,https://github.com/yuvalbader/Facebook-desktop-app
Template Method,Arkanoid-game-project,"Project in Java, using GUI and OOP and the design patterns Template-method,Decorator pattern and Observer pattern for notifying objects when something occurred.",0,0,2024,2024,1,https://github.com/EzGalai/Arkanoid-game-project
Template Method,SortPatte,"SortPatte is an application that demonstrate the use of design patterns such as Decorator, Observer, Strategy, Template Method by solving a real time problem.",0,0,2015,2015,1,https://github.com/m-fahim/SortPatte
Template Method,Gorny_Slask_The_Game,Easy game in which u can create buildings that give u money over time. GUI using JavaFX. Implements Template Method and Memento Design Pattern,0,0,2020,2021,1,https://github.com/smasiek/Gorny_Slask_The_Game
Template Method,SuperSmashFactory,"Demonstrates OOP principles of polymorphism, inheritance, abstraction, and encapsulation, as well as the Gamma et. al. software design patterns: Abstract Factory, Template Method, and Adapter",0,0,2019,2019,1,https://github.com/webbdan1/SuperSmashFactory
Template Method,Gourmand-Restaurant-App,"Gourmand is a restaurant management and food ordering app. This repository contains the complete Design Document for the app along with UML artifacts like Domain Model, Design Model, Sequence Diagrams, Activity Diagrams, State Diagrams, Design Patterns (Observer, State, Abstract Factory, Decorator, Composite, Iterator, Template Method, Singleton, Adapter and Proxy). The MVC architecture also has been applied to the design",0,2,2017,2017,1,https://github.com/mohammedshethwala/Gourmand-Restaurant-App
Template Method,Java-design-pattern,"Learn how to make better code with 14 design patterns: factory method, singleton, decorator, state, strategy, template method, iterator, observer, bridge, abstract factory, mediator, composite, command, adapter pattern.",0,0,2022,2022,1,https://github.com/S0YKIM/Java-design-pattern
Template Method,PolishAngielski,"A simple application to create and perform various types of tests, helpful in learning a foreign language. The use of C # language, WPF framework and design patterns: singleton, builder, decorator and template method.",0,0,2018,2018,2,https://github.com/jrombel/PolishAngielski
Template Method,Projeto-DIO-Aplicando-DesignPatternSamples,"O repositório remete ao material utilizado para aprendizagem de Design Patterns na prática com C#. Proposto pela Avanade e a DIO. Utilizamos um projeto de sistema do DETRAN que checa os débitos do veículo com base no número da placa. Aplicando  os  conceitos de: Testes de cobertura; Padrões (Strategy, Factory, Singleton, Template Method e Decorator); Incluindo o Clone de um projeto de consulta de pontos na carteira do DETRAN ;",0,2,2020,2020,1,https://github.com/BrenaMonteiroDS/Projeto-DIO-Aplicando-DesignPatternSamples
Template Method,Design_Pattern--Template,"The template method design pattern is intended to outline the basic structure or “skeleton” of an algorithm, without explicitly defining (or advertising) the logic of each step within the overall structure to the client",0,0,2021,2021,1,https://github.com/DinithiSamarasekara/Design_Pattern--Template
Template Method,Motodologija-razvoja-softvera-PetrolPlus,"Cilj projekta: Specifikacija korisničkih zahteva, primena MVC arhitekture, modelovanje aplikacje primenom UML jezika i primena obrazaca projektovanja (Design Pattern) kao što su Bridge method i Template method. Jezici: UML. Alat: IBM Rational Software Architect",0,0,2025,2025,1,https://github.com/Miks1001/Motodologija-razvoja-softvera-PetrolPlus
Template Method,WBSPlanner,"A simple Work Breakdown Structure planner application demonstrating OOSE concepts, including container usage, error handling, logging, and design patterns like Strategy or Template Method. Implemented in Java with a focus on clean, modular, and maintainable code.",0,0,2024,2024,1,https://github.com/DilhanRubera/WBSPlanner
Template Method,PokerApp-Java,"A Poker Game Application built with Java, implementing design patterns like Strategy and Template Method, and featuring an interactive UI for players. The project simulates real poker gameplay with player states, bets, card exchange, and winner calculation.",0,0,2024,2024,1,https://github.com/GattoG13/PokerApp-Java
Template Method,Template-Pattern,Problem Statement :Write a program for Building a Hut and Multiplex. Use template method design pattern to define a generalized building as both are having the same steps and only few steps are having the different implementation. ,0,0,2022,2022,1,https://github.com/heymanav/Template-Pattern
Template Method,MavAppoint,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust.  Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/aishiyer18/MavAppoint
Template Method,MavAdvisingSystem,"Designed and developed a web application to schedule and maintain advising appointments using MVC architecture. Implemented suitable software design patterns which included Singleton, Bridge, Command, Proxy Command, Template Method; to make the software flexible & robust. Technologies used: Java, JSP-Servlets, MySQL",0,0,2017,2017,1,https://github.com/gurleenkaur793/MavAdvisingSystem
Template Method,Weather-Monitoring-System,"The Weather Application is a Java-based project designed to provide users with real-time weather updates and alerts based on their location. The application utilizes various design patterns, including Singleton, Factory Method, Strategy, Command, and Template Method, to ensure a clean, maintainable, and extensible codebase.",0,0,2024,2024,1,https://github.com/OmarKhaled3125/Weather-Monitoring-System
Template Method,Survey-Test-Program,"This project allows the user to create, modify, take, and delete surveys/tests. This was created for a class to teach the different forms of abstraction and design patterns. This program demonstrates the use of structural patterns like the facade and bridge, and behavioral patterns such as template methods.",0,0,2019,2019,1,https://github.com/btmosher1/Survey-Test-Program
Template Method,Django-Webapp,"This is a scalable web application which supports an online booking and payment system and uses Django, SQLite, Stripe & Google Analytics. The purpose of this project is to showcase the use of the listed software design patterns. 1. Observer 2. Decorator 3. State Design 4. MVT 5. Factory Method 6. Template Method 7. Iterator Method 8 Adapter Method 9. Chain of Responsibility",0,0,2020,2020,1,https://github.com/David-Bromell/Django-Webapp
Template Method,PersistentDatabaseFramework,"A persistence framework for accessing MySQL database using controller, bridge, command, template method, and factory method design patterns. The framework has been designed in such a way that changing underlying database will have minimal impact on other parts of the application. This design supports undo and redo functionality buy encapsulating user operations together into command objects which are scheduled for execution dynamically using execution stack and undone stack.",0,0,2016,2016,1,https://github.com/tushargarud/PersistentDatabaseFramework
Visitor,design-patterns-dart,Design Pattern Examples in Dart,63,16,2021,2024,1,https://github.com/RefactoringGuru/design-patterns-dart
Visitor,okdp,A design pattern library developed in modern c++.,54,17,2020,2025,2,https://github.com/lkimuk/okdp
Visitor,JavaCode,"I specifically cover the following topics: Java primitive data types, declaration statements, expression statements, importing class libraries, excepting user input, checking for valid input, catching errors in input, math functions, if statement, relational operators, logical operators, ternary operator, switch statement, and looping.   How class variables differ from local variables, Java Exception handling, the difference between run time and checked exceptions, Arrays, and UML Diagrams.  Monsters gameboard, Java collection classes, Java ArrayLists, Linked Lists, manipulating Strings and StringBuilders, Polymorphism, Inheritance, Protected, Final, Instanceof, interfaces, abstract classes, abstract methods.  You need interfaces and abstract classes because Java doesn't allow you to inherit from more than one other class.  Java threads, Regular Expressions, Graphical User Interfaces (GUI) using Java Swing and its components, GUI Event Handling, ChangeListener, JOptionPane, combo boxes, list boxes, JLists, DefaultListModel, using JScrollpane with JList, JSpinner, JTree, Flow, Border, and Box Layout Managers.  Created a calculator layout with Java Swing's GridLayout, GridBagLayout, GridBagConstraints, Font, and Insets.  JLabel, JTextField, JComboBox, JSpinner, JSlider, JRadioButton, ButtonGroup, JCheckBox, JTextArea, JScrollPane, ChangeListener, pack, create and delete files and directories. How to pull lists of files from directories and manipulate them, write to and read character streams from files. PrintWriter, BufferedWriter, FileWriter, BufferedReader, FileReader, common file exceptions  Binary Streams - DataOutputStream, FileOutputStream, BufferedOutputStream, all of the reading and writing primitive type methods, setup Java JDBC in Eclipse, connect to a MySQL database, query it and get the results of a query.  JTables, JEditorPane Swing component. HyperlinkEvent and HyperlinkListener.  Java JApplet, Java Servlets with Tomcat, GET and POST methods, Java Server Pages, parsing XML with Java, Java XPath, JDOM2 library, and 2D graphics.   *Created a Java Paint Application using swing, events, mouse events, Graphics2D, ArrayList  *Designed a Java Video Game like Asteroids with collision detection and shooting torpedos which also played sound in a JFrame, and removed items from the screen when they were destroyed.  Rotating polygons, and Making Java Executable.  Model View Controller (MVC) The Model is the class that contains the data and the methods needed to use the data. The View is the interface. The Controller coordinates interactions between the Model and View.  DESIGN PATTERNS:  Strategy design patternis used if you need to dynamically change an algorithm used by an object at run time. The pattern also allows you to eliminate code duplication. It separates behavior from super and subclasses.  The Observer pattern is a software design pattern in which an object, called the subject (Publisher), maintains a list of its dependents, called observers (Subscribers), and notifies them automatically of any state changes, usually by calling one of their methods.  The Factory design pattern is used when you want to define the class of an object at runtime. It also allows you to encapsulate object creation so that you can keep all object creation code in one place  The Abstract Factory Design Pattern is like a factory, but everything is encapsulated.  The Singleton pattern is used when you want to eliminate the option of instantiating more than one object. (Scrabble letters app)  The Builder Design Pattern is used when you want to have many classes help in the creation of an object. By having different classes build the object you can then easily create many different types of objects without being forced to rewrite code. The Builder pattern provides a different way to make complex objects like you'd make using the Abstract Factory design pattern.  The Prototype design pattern is used for creating new objects (instances) by cloning (copying) other objects. It allows for the adding of any subclass instance of a known super class at run time. It is used when there are numerous potential classes that you want to only use if needed at runtime. The major benefit of using the Prototype pattern is that it reduces the need for creating potentially unneeded subclasses.  Java Reflection is an API and it's used to manipulate classes and everything in a class including fields, methods, constructors, private data, etc. (TestingReflection.java)  The Decorator allows you to modify an object dynamically. You would use it when you want the capabilities of inheritance with subclasses, but you need to add functionality at run time. It is more flexible than inheritance. The Decorator Design Pattern simplifies code because you add functionality using many simple classes. Also, rather than rewrite old code you can extend it with new code and that is always good. (Pizza app)  The Command design pattern allows you to store a list of commands for later use. With it you can store multiple commands in a class to use over and over. (ElectronicDevice app)  The Adapter pattern is used when you want to translate one interface of a class into another interface. Allows 2 incompatible interfaces to work together. It allows the use of the available interface and the target interface. Any class can work together as long as the Adapter solves the issue that all classes must implement every method defined by the shared interface. (EnemyAttacker app)   The Facade pattern basically says that you should simplify your methods so that much of what is done is in the background. In technical terms you should decouple the client from the sub components needed to perform an operation. (Bank app)  The Bridge Pattern is used to decouple an abstraction from its implementation so that the two can vary independently. Progressively adding functionality while separating out major differences using abstract classes. (EntertainmentDevice app)  In a Template Method pattern, you define a method (algorithm) in an abstract class. It contains both abstract methods and non-abstract methods. The subclasses that extend this abstract class then override those methods that don't make sense for them to use in the default way. (Sandwich app)  The Iterator pattern provides you with a uniform way to access different collections of Objects. You can also write polymorphic code because you can refer to each collection of objects because they'll implement the same interface. (SongIterator app)  The Composite design pattern is used to structure data into its individual parts as well as represent the inner workings of every part of a larger object. The composite pattern also allows you to treat both groups of parts in the same way as you treat the parts polymorphically. You can structure data, or represent the inner working of every part of a whole object individually. (SongComponent app)  The flyweight design pattern is used to dramatically increase the speed of your code when you are using many similar objects. To reduce memory usage the flyweight design pattern shares Objects that are the same rather than creating new ones. (FlyWeightTest app)  State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class. (ATMState)  The Proxy design pattern limits access to just the methods you want made accessible in another class. It can be used for security reasons, because an Object is intensive to create, or is accessed from a remote location. You can think of it as a gate keeper that blocks access to another Object. (TestATMMachine)  The Chain of Responsibility pattern has a group of objects that are expected to between them be able to solve a problem. If the first Object can't solve it, it passes the data to the next Object in the chain. (TestCalcChain)  The Interpreter pattern is used to convert one representation of data into another. The context cantains the information that will be interpreted. The expression is an abstract class that defines all the methods needed to perform the different conversions. The terminal or concrete expressions provide specific conversions on different types of data. (MeasurementConversion)  The Mediator design pattern is used to handle communication between related objects (Colleagues). All communication is handled by a Mediator Object and the Colleagues don't need to know anything about each other to work together. (TestStockMediator)  The Memento design pattern provides a way to store previous states of an Object easily. It has 3 main classes: 1) Memento: The basic object that is stored in different states.  2) Originator: Sets and Gets values from the currently targeted Memento. Creates new Mementos and assigns current values to them.  3) Caretaker: Holds an ArrayList that contains all previous versions of the Memento. It can store and retrieve stored Mementos. (TestMemento)  The Visitor design pattern allows you to add methods to classes of different types without much altering to those classes. You can make completely different methods depending on the class used with this pattern. (VisitorTest)",53,34,2016,2024,1,https://github.com/rick2785/JavaCode
Visitor,Swift-Visitor,Design Patterns in Swift: Visitor,13,1,2016,2022,1,https://github.com/kingreza/Swift-Visitor
Visitor,design-patterns,Design patterns implemented in C++,12,1,2022,2024,1,https://github.com/ksiminski/design-patterns
Visitor,angular-typescript-visitor-design-pattern-with-google-maps-api,Angular - Using Visitor design pattern with Typescript,8,6,2020,2025,2,https://github.com/trungvose/angular-typescript-visitor-design-pattern-with-google-maps-api
Visitor,patterns,"Design Patterns, PHP 8, Abstract Factory, Adapter, Builder, Chain of Responsibility, Command, Composite, Decorator, Dependency Injection, Facade, Factory Method, Mediator, Mock Object, Observer, Proxy, Repository Criteria, Singleton, State, Strategy, Template Method, Visitor",8,0,2021,2024,1,https://github.com/d-alejandro/patterns
Visitor,jdivisitor,Java library for building custom debugger applications using the Java Debug Interface (JDI) and the visitor design pattern,7,2,2014,2022,1,https://github.com/adrianherrera/jdivisitor
Visitor,Employee_Payroll,"Employee Payroll/Salary Management App This repository is updated to Angular 11.0 Now. Please install latest Angular 11 cli before starting this project, in case of any issue, please open a GitHub Issue and include detail error screenshots. YouTube Video Tutorial !! Objective: This document serves as an Installation Guide for Elish HCM Cloud free commmunity version Desktop/Mobile App.  Tools: MEAN Stack (latest) Angular 9.0, NodeJS 10.8, Express, GraphQL and MongoDB 4.0 or MYSQL Using this design pattern, any old client/server software (like VB/SQL or JAVA/Oracle) can be converted to new design to replace or run in parallel with original software. You can easliy deploy this as an exe desktop app, host it over premises or over cloud or create an Android & iOS mobile app easily. This design pattern is built for Big Data technologies and supports millions of transactions. Also, this design pattern can be applied to any front end like React, VueJS, HTML/JS/Bootstrap/Project clarityto get any front-end look and feel. And Same concepts can applied to connect to almost any database of owners choice at the backend like MYSQL, MS SQL Server, Oracle or CouchDB, MongoDB, Google Firebase etc.  What's included : In this repository, Only Employee Management, Payroll/Salary, Voucher and Expense modules is included. Elish HCM Cloud v1.1.8 Elish HCM Cloud provide a completely free desktop and mobile app for managing Employee, Payables, Payroll, Attendance (GPS & Picture), Visitor (GPS & Picture) and other management modules.  future update/version/releases after v1.1.8 baseline release, will include new features and bug fixes for free under community license. For enhancement/feature requests, please open a new issue at this Github Repository.  App Choices: #A. Elish HCM Cloud also provide a free web and mobile Enterprise app, hosted on Google Cloud with Google Firebase/Firestore database at:  https://alivetracking.com Google Playstore - https://alivetracking.com  #B. For Community/Developer edition, developers can download a copy of ""out of the box installable software package"" or complete source code for free.  Below documentation serves as installation instruciton for point #B mentioned above.  Installation Instruction for ""out of the box Installable Desktop/Mobile App"" Community/Developers Open Source Code guide Installation Instruction for ""out of the box Installable Desktop/Mobile App"" ------------------------------------------------------------------------------------ By dafault, Elish HCM Cloud Community Edition is bundled with MongoDB. However, Other database supported on v1.1.8 release are MYSQL, MS SQL Server, PostGreSQL, CouchDB, Google Firebase/FireStore, MongoDB  If you wish to migrate/upgrade your old desktop or client/server software to enterprise desktop/mobile app, please write to info@elishconsulting.com for Enterprise version upgrade.  README.STEP-1-DB-INSTALLATION README.STEP-2-MIDDLEWARE README.STEP-3-FRONT-END README.STEP-4-Deploy/Host code over cloud Step 4 - will be udpated later.",7,0,2022,2025,1,https://github.com/regulussol/Employee_Payroll
Visitor,TemplateMethod-Visitor-DesignPatterns,,5,0,2021,2024,1,https://github.com/kenan805/TemplateMethod-Visitor-DesignPatterns
Visitor,tree.rb,Tree visitor is an implementation of visitor design pattern. Contains the command tree.rb that is a 'clone' of tree unix command. ,4,2,2010,2019,2,https://github.com/26fe/tree.rb
Visitor,TemplateMethod_Visitor_DesignPatterns,,4,0,2021,2022,1,https://github.com/nebinebili/TemplateMethod_Visitor_DesignPatterns
Visitor,Template-method-and-Visitor-design-patterns,,4,0,2021,2024,1,https://github.com/AmiraslanSumgait/Template-method-and-Visitor-design-patterns
Visitor,IBM-Metaprogramming-for-Python,"Metaprogramming utilities for Python, including implementations of design patterns such as Visitor, object interning, and memoization",4,0,2022,2024,1,https://github.com/IBM/IBM-Metaprogramming-for-Python
Visitor,Software-Design-Principles-And-Patterns-in-Golang,"SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method and Visitor",4,0,2021,2025,1,https://github.com/piyushkumar96/Software-Design-Principles-And-Patterns-in-Golang
Visitor,ranch-management,"Our team developed the drone enhanced ranch management software. The software was able to track livestock vitality and location, monitor feeding and watering systems, and monitor property status with the help of the drone(s).  Our team used Java 8 and Scenebuilder to develop the software. We created the Class diagrams, Sequence diagrams, Rapid prototypes, and other diagrams to assist us in developing the software. Also, different design patterns like Composite, Visitor, Adapter were used to develop the project.",4,0,2021,2025,1,https://github.com/prajun7/ranch-management
Visitor,design-patterns,"Examples of the Decorator, Observer, State, and the Visitor design patterns in Java",3,0,2015,2021,0,https://github.com/motasay/design-patterns
Visitor,binary_expression_tree,Java implementation of a Binary Expression Tree to manage algebraic expressions using Composite and Visitor design patterns.,3,1,2021,2024,1,https://github.com/jvirico/binary_expression_tree
Visitor,Java-Based-Compiler-Using-ASM,"Made using Visitor Design Pattern, JVM compiler comprising of Scanner,Parser, Type Checker and JVM Byte Code Generator using ASM. ",3,1,2017,2022,1,https://github.com/namanrajpal/Java-Based-Compiler-Using-ASM
Visitor,Visitor-Design-Pattern,This repository contains the code sample for the most complicated Design Pattern that I've ever worked with.,2,2,2021,2021,1,https://github.com/thanhle0212/Visitor-Design-Pattern
Visitor,TextEditor,"Text editor based on GOF Design pattern book(Observer, Command, Visitor, Strategy, Composite,Command Design patterns)",2,1,2012,2023,1,https://github.com/sjmaharjan/TextEditor
Visitor,17DesignPatternsInUnity,"About We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator",2,0,2023,2024,1,https://github.com/tamerayoub/17DesignPatternsInUnity
Visitor,pluginvisitor,Generic powerful plugins and presets module for Node.js based on the visitor design pattern + configuration files + loading plugins and presets from your package.json. In the style of Babel compiler's plugins interface.,2,0,2016,2019,1,https://github.com/Ziv-Barber/pluginvisitor
Visitor,General-Sql-Parser,"A LL(*) kind parser that can parse Teradata's complex  ""CREATE TABLE"" construct containing constraints, partitions and provides clean object binding using OOPs principle and design  patterns (Visitor) for further consumptions like  Query Processing in databases",2,0,2021,2024,1,https://github.com/abhishek-das-gupta/General-Sql-Parser
Visitor,VisitorPatternGenerator,C# source generator to help implement the visitor design pattern.,1,2,2022,2024,1,https://github.com/hikarin522/VisitorPatternGenerator
Visitor,Hotel-Management-System,"This project is GUI using Java and design patterns to create hotel management system for manager and receptionists to manage visitors, the importance of this project to learn design patterns.",1,5,2023,2023,2,https://github.com/kareemzayed/Hotel-Management-System
Visitor,design-pattern-visitor,The Visitor design pattern lets us separate algorithms from the objects on which they operate. See how to implement it to follow the open/closed principle.,1,2,2020,2020,1,https://github.com/BrijeshSaxena/design-pattern-visitor
Visitor,VisitorDecoratorDesignPatterns,using design patterns,1,0,2022,2022,1,https://github.com/OdeyaSadoun/VisitorDecoratorDesignPatterns
Visitor,yii-visitor,visitor design pattern,1,1,2014,2015,1,https://github.com/oncesk/yii-visitor
Visitor,SoftEng2LabSW4,Visitor Design Pattern,1,0,2024,2024,1,https://github.com/MedicMedic/SoftEng2LabSW4
Visitor,Visitor-Pattern,Java Visitor Design Pattern,1,0,2017,2017,1,https://github.com/Sennat/Visitor-Pattern
Visitor,visitor-example,The Visitor design pattern example,1,0,2011,2013,1,https://github.com/dagi/visitor-example
Visitor,DesignPattern-Visitor,Example implementation of Visitor design pattern,1,0,2023,2023,1,https://github.com/tomaszchanek/DesignPattern-Visitor
Visitor,visitor-design-pattern,Flexible visitor design pattern for tree data structures,1,1,2021,2022,1,https://github.com/wint3ria/visitor-design-pattern
Visitor,Ex9-Template-Visitor-Mediator,05506230-Design Patterns In Object-Oriented Programming,1,0,2024,2024,1,https://github.com/NovaSuisui/Ex9-Template-Visitor-Mediator
Visitor,visitor-iterator-design-pattern,An example of visitor and iterator design pattern,1,0,2020,2022,1,https://github.com/1itachi/visitor-iterator-design-pattern
Visitor,Visitor-Pattern,Visitor design pattern implemented using a simple example in Java,1,0,2023,2024,1,https://github.com/SachinAkash01/Visitor-Pattern
Visitor,visitor-design-pattern,Visitor Design Pattern example project with ASP.Net Core Console application,1,0,2021,2021,1,https://github.com/hasanhasanov/visitor-design-pattern
Visitor,ShoppingCartVisitor,"A basic WPF-shopping-cart, which implements the design-pattern ""visitor""",1,0,2021,2022,1,https://github.com/julianmosi7/ShoppingCartVisitor
Visitor,visitor_ufu,Implementação do design pattern Visitor para disciplina de Orientação a Objetos 2 ,1,0,2021,2023,1,https://github.com/samuel-cavalcanti/visitor_ufu
Visitor,VisitorPatternExample,Simple Visitor Design Pattern example written in C++ for Tampere University of Technology course Software Architecture.,1,0,2016,2022,1,https://github.com/ronijaakkola/VisitorPatternExample
Visitor,visitor-design-patterns,,1,0,2021,2021,0,https://github.com/EliasBorges/visitor-design-patterns
Visitor,design-patterns,"Design patterns in Java from lab exercies. Composite, Iterator, Visitor, Factory",1,0,2014,2023,0,https://github.com/tlehwalder/design-patterns
Visitor,Word-Counter-with-Backup-Implementation,"Implemented ""word counter"" command with Visitor, Prototype, and Observer Design Patterns ",1,0,2017,2017,1,https://github.com/schadal1/Word-Counter-with-Backup-Implementation
Visitor,Python-Design-Patterns,Strategy / ChainOfResponsibility / Template / Decorator / State / Builder / Observer / Factory / Memento / Interpreter / Visitor / Command,1,0,2018,2022,0,https://github.com/marcobelo/Python-Design-Patterns
Visitor,WordProcessor,A simple word processor in Java using the Visitor and Strategy design patterns.,1,1,2023,2024,1,https://github.com/karsujo/WordProcessor
Visitor,Design-Patterns,"This project implements an arithmetic expressions evaluator using the Composite-, Bridge-, Iterator-, Strategy-, Factory-, Interpreter- and Visitor-Pattern.",1,0,2018,2022,1,https://github.com/MHaselmaier/Design-Patterns
Visitor,webSiteVisitorReport-HRPeak-Challenge,"Using .Net Core MVC, HTML5, CSS3, Boostrap4, Ajax, Singleton Design Pattern. Site visitor counter reporter and filtering them by date, page.",1,0,2021,2021,1,https://github.com/burakguler/webSiteVisitorReport-HRPeak-Challenge
Visitor,DesignPatternsExamples,"Singleton DP , Factory Method DP, Abstract Factory DP, Prototype DP, Builder DP, Facade DP, Adapter DP, Composite DP, Proxy DP, Decorator DP, Bridge DP, Strategy DP, Observer DP, Chain of Responsibilty DP, Memento DP, Template DP, State DP, Mediator DP, Command DP, Visitor DP, Dependency Injection DP, Null Object DP, Multiton DP Examples",1,0,2020,2025,1,https://github.com/mstfyrdmc/DesignPatternsExamples
Visitor,14DesignPatterns3VideoGames,"We implemented 14 C# Design Patterns across 3 Unity Video Games to enhance performance. Patterns include Observer, Strategy, Command, Visitor, Singleton, Factory, Adapter, Object Pool, MVC, Null Object, Factory, Flyweight, Sandbox and Decorator ",1,0,2023,2023,3,https://github.com/tamerayoub/14DesignPatterns3VideoGames
Visitor,SymbolicComputationRuleMatchingAndGiveHTMLResult,"This project implements a testing library for symbolic computation rules that prints its results in HTML, using the Visitor design pattern",1,0,2020,2021,1,https://github.com/sahin52/SymbolicComputationRuleMatchingAndGiveHTMLResult
Visitor,museum-management-system,"Museum Management System is a Java-based application for managing museums, guides, visitor groups, events, and reviews, utilizing multiple design patterns.",1,0,2025,2025,2,https://github.com/mariusCS50/museum-management-system
Visitor,Design-Patterns-Java,"This course covers all the GoF design patterns. In fact, here's the full list of what is covered:  SOLID Design Principles: Single Responsibility Principle, Open-Closed Principle, Liskov Substitution Principle, Interface Segregation Principle and Dependency Inversion Principle  Creational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton  Structrural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight and Proxy  Behavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Null Object, Observer, State, Strategy, Template Method and Visitor",1,0,2021,2021,1,https://github.com/pedro687/Design-Patterns-Java
Visitor,Sport-Competitions-3rd-homework-OOP,"A Java program that manages sports competitions (teams registration, matches, rankings calculation). Multiple design patterns have been used: Singleton, Factory, Visitor, Observer, Strategy.",1,0,2020,2022,1,https://github.com/mateipetre/Sport-Competitions-3rd-homework-OOP
Visitor,FacebookFeatures-App,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.",1,0,2018,2019,1,https://github.com/IliyaGaponov/FacebookFeatures-App
Visitor,Detecting-Code-Smells,"This project employs static analysis to detect ""code smells"" (warning signs) in Java software systems. The analyser is built using the JavaParser framework and makes extensive use of the Visitor design pattern.",1,0,2020,2023,0,https://github.com/kostadin-georgiev97/Detecting-Code-Smells
Visitor,SushiRestaurant,"System for sushi restaurant which includes 15 design patterns: Chain of Responsibility pattern, Visitor pattern, State, Command, Adapter pattern, Abstract Factory pattern, Factory method, Decorator Pattern, Prototype pattern, Facade pattern, Bridge pattern, Strategy pattern, Observer pattern, Template Method, Singleton.",1,1,2017,2022,1,https://github.com/Ali-X/SushiRestaurant
Visitor,Turn-based-strategy-game," A Java/ Java Swing application that implements a turn-based strategy game with user authentication GUI • Players’ credentials and their characteristics were extracted from JSON files • Used design patterns such as Singleton, Factory, Builder and Visitor for the implementation",1,0,2023,2023,1,https://github.com/Indracatana/Turn-based-strategy-game
Visitor,SPL-Interpreter,"University project written in Java using Visitor Design Pattern. It generates an Abstract Syntax Tree from a source code of a program developed in Shakespeare Programming Language. Also, it visits each node in order to display the program output. The mathematical instruction are stored and evaluated using Polish Prefix Notation.",1,1,2016,2018,1,https://github.com/simionAndrei/SPL-Interpreter
Visitor,Pallene_Compiler,"▪️I designed and developed a compiler version of sort of Pallene (myPallene version) programming language (it is a statically typed, ahead-of-time-compiled sister language to Lua, with a focus on performance. It is also a friendly fork of the Titan language). The covered phases of compiler are Lexical, Syntactical and Semantic Analysis plus the Intermediate code generation.  ▪️Technologies used: Java SE and C with some tools like JFlex and JavaCup. ▪️Design Pattern: Visitor Pattern on Trees, LR parsing concepts.",1,1,2020,2020,1,https://github.com/ferrara94/Pallene_Compiler
Visitor,Visitor,Visitor Design Pattern,0,0,2022,2023,1,https://github.com/yusufCanAkier/Visitor
Visitor,Visitor,Visitor Design Pattern,0,0,2023,2023,0,https://github.com/AyslanSouza/Visitor
Visitor,Visitor,Visitor Design Pattern,0,0,2022,2022,1,https://github.com/mbaltandev/Visitor
Visitor,Visitor-Design-Patterns,Behavioral Design Patterns: Visitor Design Patterns,0,0,2023,2023,1,https://github.com/samehesmael277/Visitor-Design-Patterns
Visitor,VisitorPattern,Visitor Design  Pattern,0,0,2021,2021,1,https://github.com/rizalkusumajati/VisitorPattern
Visitor,Visitor,visitor design pattern implementation,0,0,2015,2015,1,https://github.com/miskohut/Visitor
Visitor,VisitorPattern,Visitor Design Pattern,0,0,2012,2014,1,https://github.com/WhoIsYourBaby/VisitorPattern
Visitor,Visitor,Viritor design pattern example,0,0,2022,2022,1,https://github.com/BSX8GS/Visitor
Visitor,VisitorDesignPattern,Visitor Design Pattern,0,0,2024,2024,1,https://github.com/olcernaim/VisitorDesignPattern
Visitor,visitor,Visitor Behavioral Design Pattern,0,0,2024,2024,0,https://github.com/CosminaIacob/visitor
Visitor,DP_visitor,design pattern,0,0,2017,2017,1,https://github.com/dr-sung/DP_visitor
Visitor,Visitor,Implementation of design pattern Visitor,0,0,2018,2018,1,https://github.com/muska2203/Visitor
Visitor,VisitorPattern,The Visitor design pattern.,0,0,2022,2022,1,https://github.com/thomas-bartlett/VisitorPattern
Visitor,VisitorPattern,Visitor Design Pattern Example,0,0,2015,2015,1,https://github.com/shreyasm/VisitorPattern
Visitor,visitor,Design Pattern Visitor en Java,0,0,2024,2024,2,https://github.com/sylvainbarreau/visitor
Visitor,Visitor,Visitor Behavioural Design Pattern example,0,0,2023,2023,0,https://github.com/tkerbashev/Visitor
Visitor,TP-Composite-Visitor-Algebra,Design pattern,0,0,2023,2023,2,https://github.com/KeyDos42/TP-Composite-Visitor-Algebra
Visitor,VisitorDesignPatternTester,Visitor Design Pattern Tester,0,0,2016,2016,1,https://github.com/falcopellegrino/VisitorDesignPatternTester
Visitor,FileSystem,Visitor Design Pattern,0,0,2016,2016,1,https://github.com/Satyanandana/FileSystem
Visitor,DesignPattern,Visitor Design Pattern,0,0,2022,2022,0,https://github.com/mbaltandev/DesignPattern
Visitor,visitor-pattern,Visitor Design Pattern,0,0,2021,2021,1,https://github.com/u-bayram/visitor-pattern
Visitor,Codigo-054---Carrinho-de-Compras,Design Pattern Visitor,0,0,2022,2022,1,https://github.com/cidandrade/Codigo-054---Carrinho-de-Compras
Visitor,Car-Visitor,Visitor design pattern,0,0,2017,2017,0,https://github.com/joel-patrick-parks/Car-Visitor
Visitor,CECS-277-Lab-15,Visitor design pattern,0,0,2020,2020,0,https://github.com/Pengyuuu/CECS-277-Lab-15
Visitor,Visitor_Design_Pattern,Visitor Design Pattern,0,0,2020,2020,1,https://github.com/FPasaoglu/Visitor_Design_Pattern
Visitor,hfdp-visitor,Visitor Design Pattern,0,0,2018,2018,1,https://github.com/fenwickjb/hfdp-visitor
Visitor,Visitor,Academic project presenting design pattern visitor.,0,0,2021,2021,1,https://github.com/WojciechKrawczyk/Visitor
Visitor,Visitor,Implementation of the Visitor design pattern,0,0,2017,2017,1,https://github.com/MaximeMaigret/Visitor
Visitor,visitor_design_pattern,learning design patterns,0,0,2023,2023,1,https://github.com/jewulo/visitor_design_pattern
Visitor,VisitorDesignPattern,Implementing visitor software design pattern,0,1,2024,2024,1,https://github.com/HONEY-2325/VisitorDesignPattern
Visitor,PatternVisitor-Example,Behavioral design patterns,0,0,2018,2018,1,https://github.com/amarqueze/PatternVisitor-Example
Visitor,KotlinVisitorExample,IBM design pattern sessions demo project showing Visitor design pattern,0,0,2019,2019,2,https://github.com/majoferenc/KotlinVisitorExample
Visitor,VisitorPatternDemo,Demo for Visitor Design Pattern,0,0,2020,2020,1,https://github.com/TobyXYan/VisitorPatternDemo
Visitor,VisitorDesignPatternExperiment,Exploration of visitor design pattern.,0,0,2025,2025,1,https://github.com/tikap/VisitorDesignPatternExperiment
Visitor,visitor,Simple project representing the Visitor design pattern.,0,0,2022,2022,1,https://github.com/Piazzi/visitor
Visitor,visitor,Small project testing the visitor design pattern,0,0,2020,2020,1,https://github.com/javiercdag/visitor
Visitor,visitorPattern,simple program demonstrating design pattern visitor,0,0,2019,2019,1,https://github.com/DennisZZH/visitorPattern
Visitor,Visitor-Pattern,Visitor Design Pattern Example,0,0,2019,2019,0,https://github.com/BingoKnight/Visitor-Pattern
Visitor,VisitorPattern,Error handling using visitor design pattern,0,0,2021,2021,1,https://github.com/abhinav1112/VisitorPattern
Visitor,Visitor,A design pattern Visitor in java implementation,0,0,2016,2016,0,https://github.com/sinzen/Visitor
Visitor,VisitorPattern,Repository for Design Pattern final presentation,0,0,2018,2018,1,https://github.com/Chronocast/VisitorPattern
Visitor,VisitorDP_00,Simple example of Visitor design pattern. ,0,0,2022,2022,1,https://github.com/alansam/VisitorDP_00
Visitor,VisitorDesignPattern,Example of java visitor design pattern,0,0,2022,2022,1,https://github.com/abmushfiq/VisitorDesignPattern
Visitor,visitor-design-pattern,Visitor Design Pattern Example,0,0,2023,2023,1,https://github.com/sagar-gavhane/visitor-design-pattern
Visitor,Visitor-Design-Pattern,visitor design pattern example,0,0,2018,2018,1,https://github.com/rsoliva/Visitor-Design-Pattern
Visitor,l2-visitor,Visitor Design Pattern example,0,0,2017,2017,1,https://github.com/keresztesvitez/l2-visitor
Visitor,FastTreeVisitor,Assignment 4 Design Patterns,0,0,2015,2015,1,https://github.com/patelarth25/FastTreeVisitor
Visitor,CSharp_Behavioral_Visitor,Behavioral Visitor Design Pattern,0,0,2024,2024,1,https://github.com/PhillCRIta/CSharp_Behavioral_Visitor
Visitor,pattern_visitor_java,Pattern visitor | design_pattern,0,0,2021,2022,1,https://github.com/jkdioufy98/pattern_visitor_java
Visitor,Visitor,Demo of design pattern using visitor in Java,0,0,2022,2022,1,https://github.com/exauce-mwililikwa/Visitor
Visitor,Unity-Visitor-Design-Pattern,Unity Visitor Design Pattern,0,0,2024,2024,1,https://github.com/adag21044/Unity-Visitor-Design-Pattern
Visitor,Visitor,A python implementation of the Visitor design pattern ,0,0,2020,2020,2,https://github.com/CCTVVMZZ/Visitor
Visitor,3-2-DesignPatterns-Visitor,"Design Patterns in Object-Oriented Programming ninth Tasks ""Visitor Design Pattern""",0,0,2024,2024,1,https://github.com/mamaminikit/3-2-DesignPatterns-Visitor
Visitor,Visitor-Pattern-SED505,Investigation of Design Patterns,0,0,2024,2024,2,https://github.com/miraccozcan/Visitor-Pattern-SED505
Visitor,Java---Visitor,"Implementing the design pattern ""Visitor""",0,0,2020,2020,0,https://github.com/matinakpantazidou/Java---Visitor
Visitor,CompositeVisitor,Composite Visitor Design Patterns Tutorial,0,0,2020,2020,1,https://github.com/dhmhgreCompilersII/CompositeVisitor
Visitor,VisitorDesignPattern,Code sample illustrating the Visitor Design Pattern,0,0,2023,2023,1,https://github.com/Rose-AM/VisitorDesignPattern
Visitor,Visitor,Example of the Behavioral design pattern Visitor in Java.,0,0,2016,2016,1,https://github.com/levyoav/Visitor
Visitor,DesignPattern-Visitor,Testing the visitor design pattern. ,0,0,2023,2023,1,https://github.com/Himynameismarco/DesignPattern-Visitor
Visitor,Visitor-design-pattern,Implementation using visitor design pattern.,0,0,2019,2019,1,https://github.com/Gayane05/Visitor-design-pattern
Visitor,dp-visitor-mediatheque,Design Pattern Visitor en Java,0,0,2024,2024,1,https://github.com/sylvainbarreau/dp-visitor-mediatheque
Visitor,Visitor,Basic project depicting the visitor OO software design pattern.,0,1,2015,2015,1,https://github.com/snowcycle/Visitor
Visitor,java_gof_visitor,"design pattern ""visitor"" in java",0,0,2015,2015,1,https://github.com/osbominix/java_gof_visitor
Visitor,Visitor-SwiftUI,Visitor Design Pattern in SwiftUI,0,0,2024,2024,1,https://github.com/KiranSarella/Visitor-SwiftUI
Visitor,visitor_design_pattern_flutter,"Visitor Design Pattern in Flutter | Behavioral Design Patterns in Flutter | 04 July, 2023",0,0,2023,2025,1,https://github.com/MuhammadBilalAkbar/visitor_design_pattern_flutter
Visitor,VisitorPatern,School project to discover the visitor design pattern,0,0,2021,2021,1,https://github.com/tyvonnou/VisitorPatern
Visitor,design-pattern-composite-visitor,Composite Visitor design pattern combo,0,0,2015,2015,1,https://github.com/a-cordier/design-pattern-composite-visitor
Visitor,poaVisitor,TD sur le Design Pattern Visitor,0,0,2016,2016,2,https://github.com/WilliamPiron/poaVisitor
Visitor,visitor-pattern,Visitor Design Pattern demo in C#,0,0,2022,2022,1,https://github.com/jebarcha/visitor-pattern
Visitor,RenderVisitor,Visitor design pattern example - OpenGL Renderer,0,0,2016,2016,0,https://github.com/bjaraujo/RenderVisitor
Visitor,Visitor_Pattern,"C++, Software design pattern: Visitor pattern",0,0,2020,2020,3,https://github.com/MarcJimenez99/Visitor_Pattern
Visitor,UG-market-python,"Design Patterns homework: Observer, Visitor",0,0,2021,2021,1,https://github.com/mrybarczyk/UG-market-python
Visitor,visitor-pattern,Sample project demonstrating visitor design pattern,0,0,2020,2020,1,https://github.com/sharunhere/visitor-pattern
Visitor,uselessCodeDetector,Visitor Design Pattern with JavaParser,0,0,2021,2021,1,https://github.com/jovanneste/uselessCodeDetector
Visitor,VisitorPattern,Teaching you the Visitor Design Pattern with extreme prejudice.,0,0,2020,2022,1,https://github.com/KeyC0de/VisitorPattern
Visitor,php-design-patterns-visitor,PHP Design Patterns - Visitor Pattern Sample,0,0,2018,2019,1,https://github.com/rito328/php-design-patterns-visitor
Visitor,visitor-design-pattern,Implement visitor design pattern in C#.,0,0,2023,2023,1,https://github.com/soheib-papi/visitor-design-pattern
Visitor,DesignPatterns-VisitorPattern,,0,0,2022,2022,1,https://github.com/saikrishnakovuru/DesignPatterns-VisitorPattern
Visitor,visitor,This is a project made to learn the design pattern Visitor,0,0,2024,2024,1,https://github.com/LucassSantoss/visitor
Visitor,visitor-composite-patterns-combined,Composite and Visitor design patterns example,0,0,2015,2015,1,https://github.com/hickson1988/visitor-composite-patterns-combined
Visitor,visitor-example,An example of 'Visitor' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/visitor-example
Visitor,design-patterns-array-visitors,Popular Design Patterns Implemented using Java,0,0,2020,2020,1,https://github.com/bdeore/design-patterns-array-visitors
Visitor,SingletonAndVisitorPatterns,SSW 345 Homework 6 - Design Patterns,0,0,2023,2023,1,https://github.com/laureningy/SingletonAndVisitorPatterns
Visitor,ts-visitor,a visitor design pattern example in TypeScript,0,0,2023,2024,1,https://github.com/nramkissoon/ts-visitor
Visitor,SWD_Assignment2_Visitor,Design pattern for the second assignment,0,0,2019,2019,1,https://github.com/florent417/SWD_Assignment2_Visitor
Visitor,visitorPattern,This is an example of Visitor Design Pattern in JAVA,0,0,2024,2024,1,https://github.com/ClarkBelen/visitorPattern
Visitor,visitor_design_pattern_csharp_1,learning visitor design pattern in C#,0,0,2023,2023,1,https://github.com/jewulo/visitor_design_pattern_csharp_1
Visitor,go-visitor-pattern,Visitor design pattern on binary expresion tree,0,0,2021,2021,0,https://github.com/Chotom/go-visitor-pattern
Visitor,visitor-design-pattern,Example implementation of the visitor design pattern.,0,0,2023,2023,1,https://github.com/Patrick448/visitor-design-pattern
Visitor,visitor-example2,An example of 'Visitor' design pattern implementation,0,0,2023,2023,1,https://github.com/vladdubceac/visitor-example2
Visitor,DesignPatterns-VisitorPattern_JAVA,"JAVA project to design File Decorators Populate Words, Highlight Palindromes, Mark Prime, and Print Words using Visitor Pattern",0,0,2017,2017,1,https://github.com/shahnish009/DesignPatterns-VisitorPattern_JAVA
Visitor,DESIGN_PATTERN_Visitor, Source code demo cho Design Pattern Visitor,0,0,2021,2021,1,https://github.com/mirushi/DESIGN_PATTERN_Visitor
Visitor,VisitorPatternFramework,a framwork with visitor design pattern for cuda image processing,0,0,2024,2024,1,https://github.com/crossXliu/VisitorPatternFramework
Visitor,DesignPatternVisitor,Example of Visitor Design pattern in C#,0,0,2018,2018,1,https://github.com/GeoffreyKnobloch/DesignPatternVisitor
Visitor,bender,Visitor design pattern for abstract entities,0,0,2015,2015,1,https://github.com/ctr0/bender
Visitor,Calculator,Visitor design pattern with unit tests,0,0,2015,2015,1,https://github.com/swobi/Calculator
Visitor,Design-patterns,Implématation des design patterns Mediator & Visitor,0,0,2025,2025,1,https://github.com/kadluc005/Design-patterns
Visitor,BST_Visitor-Observer,Implemented BST with Observer and Visitor Design Patterns,0,0,2014,2014,1,https://github.com/abhishekwaichal/BST_Visitor-Observer
Visitor,visitor-design-pattern,Implementation and Explanation of the Visitor Design Pattern,0,0,2023,2025,1,https://github.com/janbaig/visitor-design-pattern
Visitor,DesignPatterns-Visitor,,0,0,2022,2022,1,https://github.com/DanielMachado29/DesignPatterns-Visitor
Visitor,DesignPatterns-Visitor,,0,0,2017,2017,1,https://github.com/vknez95/DesignPatterns-Visitor
Visitor,DesignPattern_Visitor,🎓 HCMUS - Visitor Design Pattern - Project: Export XML,0,0,2021,2022,3,https://github.com/Weedlly/DesignPattern_Visitor
Visitor,DesignPatterns-Visitor,,0,0,2020,2020,1,https://github.com/Romix2017/DesignPatterns-Visitor
Visitor,DesignPatterns-Visitor,,0,0,2020,2020,1,https://github.com/adrianscorus14/DesignPatterns-Visitor
Visitor,DesignPatterns-Visitor,,0,0,2022,2022,0,https://github.com/GabrielBronte/DesignPatterns-Visitor
Visitor,DesignPatterns-Visitor,,0,0,2018,2018,1,https://github.com/renjwjx/DesignPatterns-Visitor
Visitor,DesignPatterns-Visitor,,0,0,2019,2019,1,https://github.com/nmcmahon3027/DesignPatterns-Visitor
Visitor,Visitor-Design-Pattern,A program playing with the visitor design pattern.,0,0,2020,2020,1,https://github.com/ChaseFaine/Visitor-Design-Pattern
Visitor,visitorPattern,A lab to teach me how to use the visitor design pattern,0,0,2016,2016,1,https://github.com/mesgu002/visitorPattern
Visitor,Visitors-Management-MVVM,CRUD local database mysql dengan design pattern MVVM,0,0,2020,2020,1,https://github.com/pascaladitia/Visitors-Management-MVVM
Visitor,designPatterns,Using Composite and Visitor patterns,0,0,2015,2015,1,https://github.com/mmuddassarmubeen/designPatterns
Visitor,DesignPatterns,Template Pattern and Visitor Pattern,0,0,2024,2025,1,https://github.com/RasanjaliHerath/DesignPatterns
Visitor,visitor-java,Exemplificação da implementação do Design Pattern Visitor em Java. ,0,0,2023,2023,1,https://github.com/gabsgc/visitor-java
Visitor,GanymedeRefuelingVisitorPattern,Home exam in Java Design Patterns at Yrgo.,0,0,2023,2023,1,https://github.com/urmandavid/GanymedeRefuelingVisitorPattern
Visitor,visitor-pattern-example-cpp,Simple example of visitor design pattern in C++,0,0,2019,2019,1,https://github.com/grzegorz-grzeda/visitor-pattern-example-cpp
Visitor,Visitor-Design-Pattern,Lab to learn how to use visitor design pattern.,0,0,2021,2021,3,https://github.com/sevdeawesome/Visitor-Design-Pattern
Visitor,VisitorSample,This is a simple sample of GO4 visitor design pattern combined in composite,0,0,2024,2024,1,https://github.com/alirezanoori1476/VisitorSample
Visitor,visitor-design-pattern,An implementation of a visitor design pattern in Java,0,0,2024,2024,1,https://github.com/BMoszczynski07/visitor-design-pattern
Visitor,CS414-OODesign-A4,Java commenter using the visitor design pattern,0,0,2018,2018,1,https://github.com/Livingwind/CS414-OODesign-A4
Visitor,PDF-Generator,PDF Generation with Composite - Visitor design pattern,0,0,2021,2021,1,https://github.com/vyshakhkj/PDF-Generator
Visitor,Xperiments.DesignPatterns.Visitor,A litttle implementation of Visitor pattern,0,0,2017,2017,0,https://github.com/BrunoLopes/Xperiments.DesignPatterns.Visitor
Visitor,Java-DesignPatterns-Visitor,"Java project to design File Decorators, Populate Words, Highlight Palindromes, Mark Prime, and Print Words using Visitor Pattern",0,0,2018,2018,1,https://github.com/girishkurkute/Java-DesignPatterns-Visitor
Visitor,VisitorDesign_patterns,,0,0,2019,2019,1,https://github.com/ahmedco82/VisitorDesign_patterns
Visitor,shoppingcart,shopping cart using the visitor design pattern,0,0,2016,2016,1,https://github.com/Sreenivasa-Krishnamurthy/shoppingcart
Visitor,JAVA-DesignPatterns-Visitor,"JAVA project to design File Decorators Populate Words, Highlight Palindromes, Mark Prime, and Print Words using Visitor Pattern",0,0,2018,2018,1,https://github.com/vdkamdar/JAVA-DesignPatterns-Visitor
Visitor,Tutorial.DesignPatterns.Visitor,"In object-oriented programming and software engineering, the visitor design pattern is a way of separating an algorithm from an object structure on which it operates. A practical result of this separation is the ability to add new operations to existing object structures without modifying the structures. It is one way to follow the open/closed principle.",0,0,2022,2022,1,https://github.com/turkerakbulut/Tutorial.DesignPatterns.Visitor
Visitor,openhouse,OpenHouse simplifies implementing the Visitor design pattern in Ruby.,0,0,2017,2017,1,https://github.com/eugeniobruno/openhouse
Visitor,DesignPatterns-Beh-Visitor,,0,0,2015,2015,0,https://github.com/msc-astec/DesignPatterns-Beh-Visitor
Visitor,DesignPatterns-Behavioral-Visitor,,0,0,2023,2023,1,https://github.com/poula-atef/DesignPatterns-Behavioral-Visitor
Visitor,Visitor-Example,Exemplo de um Endpoint SOAP utilizando o Visitor Design Pattern,0,0,2024,2024,1,https://github.com/patrickfc17/Visitor-Example
Visitor,visitor-calc,A Java calculator library for exploring the visitor design pattern,0,1,2014,2015,1,https://github.com/bjornsen/visitor-calc
Visitor,Behavioral-Visitor,This is a short implementation of the Visitor design pattern,0,0,2017,2017,1,https://github.com/adwayskirwe/Behavioral-Visitor
Visitor,Visitor-Pattern,Implementation of visitor design pattern - practice in a web project,0,0,2024,2024,1,https://github.com/RitmoRandom/Visitor-Pattern
Visitor,avoid-cast-bridge-visitor,Avoid type cast with design pattern Bridge and Visitor,0,0,2017,2017,1,https://github.com/msoft/avoid-cast-bridge-visitor
Visitor,Visitor-Design-Pattern,Visitor Design Pattern in Java to find Keywords in input,0,0,2020,2020,1,https://github.com/onkkul/Visitor-Design-Pattern
Visitor,Demo_VisitorPattern,Source code demo from this tutorial: http://www.javacodegeeks.com/2015/09/visitor-design-pattern.html and http://www.java2s.com/Tutorials/Java/Java_Design_Patterns/0280__Java_Visitor_Pattern.htm,0,0,2016,2016,1,https://github.com/KhoaSuperman/Demo_VisitorPattern
Visitor,VisitorPattern_Example,You can reach the article via : https://thecodeprogram.com/explanation-of-visitor-design-pattern,0,0,2020,2020,1,https://github.com/thecodeprogram/VisitorPattern_Example
Visitor,designPatterns-Visitor-CarShop,,0,1,2016,2016,1,https://github.com/vknez95/designPatterns-Visitor-CarShop
Visitor,DesignPatternsCpp,"Composite, Builder, Abstract Factory, Visitor, Prototype Patterns",0,1,2014,2015,0,https://github.com/paumayr/DesignPatternsCpp
Visitor,VectorVisitor,Example of applying the Visitor Design Pattern to derived vector types,0,0,2017,2017,1,https://github.com/gregvw/VectorVisitor
Visitor,Visitor,An illustration for the Visitor Design Pattern. With a simple example of small town and its visitors.,0,0,2019,2019,1,https://github.com/StasiaVl/Visitor
Visitor,univ-rennes1-m1miage-aco-visitor,Visitor design pattern applied to reading a document,0,1,2020,2021,1,https://github.com/ahenrij/univ-rennes1-m1miage-aco-visitor
Visitor,Visitor-and-Singleton-Patterns,Code for enhancing understanding of the subject of Design Patterns,0,0,2023,2023,1,https://github.com/anthonyriz/Visitor-and-Singleton-Patterns
Visitor,visitor,A starter code for the visitor design pattern demo. Students should complete it and refractor the StoreVisitor class.,0,1,2023,2023,1,https://github.com/FahimaGold/visitor
Visitor,WinForms_Facebook_App_2,"Design patterns implementation C# - Factory method, visitor, command",0,0,2018,2019,2,https://github.com/Uri-Shapira/WinForms_Facebook_App_2
Visitor,Binary-Search-Tree-Implementation,"Implementation of Null, Strategy, and Visitor design pattern",0,0,2019,2019,1,https://github.com/priteshamrelia/Binary-Search-Tree-Implementation
Visitor,rock-paper-scissors,The sample example to demo Visitor design pattern,0,0,2013,2014,1,https://github.com/spider391Tang/rock-paper-scissors
Visitor,City,A City game demonstrating the visitor design pattern,0,0,2022,2022,2,https://github.com/vescheju/City
Visitor,component,Java Project combining Design Patterns Component and Visitor,0,0,2019,2020,1,https://github.com/abartilucci/component
Visitor,TDVisitor,TD Design Pattern Visitor du cours de POA,0,0,2016,2016,0,https://github.com/bhajar/TDVisitor
Visitor,ExpressionEvaluator,Expression evaluator program with Composite Visitor design patterns,0,0,2021,2021,1,https://github.com/vyshakhkj/ExpressionEvaluator
Visitor,VisitorBenchmark,A bunch of benchmarks I have performed to compare the Visitor Design Pattern to some alternatives.,0,0,2021,2021,1,https://github.com/FluffyGameDev/VisitorBenchmark
Visitor,Visitor-Pattern,A Project of a third year Object Oriented Design Patterns II module.,0,0,2023,2023,1,https://github.com/nuwangarajapaksha/Visitor-Pattern
Visitor,SUnit-Visitor,A package extending SUnit with an implementation of the visitor design pattern.,0,1,2018,2019,2,https://github.com/juliendelplanque/SUnit-Visitor
Visitor,labVisitor,Repository for files of the project MAP about the design pattern Visitor,0,0,2017,2017,1,https://github.com/juakacc/labVisitor
Visitor,Visitor-Pattern-Implementation-Java,Simple Example of How to Implement Visitor Design Pattern in Java,0,0,2017,2017,0,https://github.com/Suwadith/Visitor-Pattern-Implementation-Java
Visitor,DESIGN-PATTERNS,FLYWEIGHT PATTERN -VİSİTOR PATTERN,0,0,2021,2021,1,https://github.com/F-Z-T/DESIGN-PATTERNS
Visitor,engComp.padroesDeProjeto.visitor,Visitor design pattern in java based on Derek Banas video,0,0,2021,2021,1,https://github.com/NivardoX/engComp.padroesDeProjeto.visitor
Visitor,DP_Visitor,Exemplo de design pattern Visitor. Modelo básico para calcular impostos estaduais por produto,0,0,2023,2023,1,https://github.com/gustavo3108/DP_Visitor
Visitor,Design_Patterns_Visitor,,0,0,2020,2020,1,https://github.com/hanane-dahi/Design_Patterns_Visitor
Visitor,visitor-design-patterns,LP5,0,0,2024,2024,0,https://github.com/amanda-faria/visitor-design-patterns
Visitor,design-patterns-visitor,,0,0,2023,2023,1,https://github.com/RedYou1/design-patterns-visitor
Visitor,design-patterns-visitor,,0,0,2018,2018,1,https://github.com/sachingadagi/design-patterns-visitor
Visitor,design-patterns-visitor,Created with StackBlitz ⚡️,0,0,2022,2022,1,https://github.com/juanlll/design-patterns-visitor
Visitor,design-patterns-visitor,,0,0,2019,2019,1,https://github.com/miroshkin/design-patterns-visitor
Visitor,Visitor-Design-Patterns,,0,0,2023,2023,1,https://github.com/snelypops/Visitor-Design-Patterns
Visitor,Design-Patterns---Visitor,Use of Visitor Pattern for Sorting in Java,0,0,2015,2015,0,https://github.com/TakLun/Design-Patterns---Visitor
Visitor,design-patterns-visitor,,0,0,2015,2015,0,https://github.com/bnctest/design-patterns-visitor
Visitor,DesignPatternsCSharp,"Example of Builder, Abstract Factory, Visitor and Prototype in iterative steps",0,1,2014,2014,0,https://github.com/paumayr/DesignPatternsCSharp
Visitor,EECS3311-Lab5,Implementation of the visitor design pattern (OOP) using Eiffel.,0,0,2019,2019,1,https://github.com/haideraltahan/EECS3311-Lab5
Visitor,Demo-Midterm-Design-Pattern,Demo midterm Design Pattern - Visitor Pattern and State Pattern,0,0,2022,2022,1,https://github.com/timothy-pham/Demo-Midterm-Design-Pattern
Visitor,my-visitor-pattern,"A sample project, showing how the visitor design pattern works and possible alternatives.",0,0,2023,2023,1,https://github.com/marco-brandizi/my-visitor-pattern
Visitor,CS301R-Linter,Use the visitor design pattern to create a linter.,0,0,2019,2019,1,https://github.com/sndrummer/CS301R-Linter
Visitor,design-patterns-ts,"Examples for Builder, Facade, Visitor and Memento Design Patterns",0,0,2017,2017,1,https://github.com/BlackHarpy/design-patterns-ts
Visitor,visitor-pattern,Design pattern comportamental Visitor para permitir separar algoritmos dos objetos nos quais eles operam,0,0,2021,2021,1,https://github.com/Jhow-R/visitor-pattern
Visitor,DocumentVisitors,The goal of this lab is to design and implement a Visitor design pattern.,0,0,2022,2022,1,https://github.com/asNortheastern/DocumentVisitors
Visitor,DesignPattern-Learning-Implementation,"Design Patterns: Bridge pattern, Factory Pattern, Facade pattern, Iterator Pattern, Visitor Pattern, Singleton pattern, Filter Design pattern ",0,0,2019,2021,1,https://github.com/MayankBatra005/DesignPattern-Learning-Implementation
Visitor,GlidedRoseKataPattern,Design Pattern Course n°1 (November 2018) Implement changes to a code using design patterns (strategy & visitor).,0,0,2018,2019,1,https://github.com/IlyessAgg/GlidedRoseKataPattern
Visitor,DesignPatterns2-Assi3,"Design Patterns using proxy, command, chain of responsibility, and visitor,",0,0,2021,2021,1,https://github.com/soniafriesen/DesignPatterns2-Assi3
Visitor,Design-Patterns-Project04,"Visitor, Observer, Prototype Patterns",0,0,2016,2016,1,https://github.com/gbonann1/Design-Patterns-Project04
Visitor,GameOfLife,"This is a Design Pattern study that implements different design patterns on the initial code for GameOfLife. Design Patterns: State, Singleton, Command, Observer, Visitor.",0,0,2023,2023,1,https://github.com/kenhowry/GameOfLife
Visitor,design-patterns-visitor-pattern,,0,0,2020,2020,1,https://github.com/aschi2403/design-patterns-visitor-pattern
Visitor,Template-Visitor-Design-Patterns,,0,0,2023,2023,1,https://github.com/toghrulaziz/Template-Visitor-Design-Patterns
Visitor,design-patterns-java-visitor,Referente a disciplina de programação 2,0,0,2024,2024,1,https://github.com/Jp0liveira/design-patterns-java-visitor
Visitor,Design-Patterns-Practice-Visitor,"Visitor que busca informações geográficas em JSON, CSV e XML",0,0,2025,2025,1,https://github.com/PedroHFSO/Design-Patterns-Practice-Visitor
Visitor,Design_Patterns-Visitor_Pattern,,0,0,2018,2018,1,https://github.com/asingh72/Design_Patterns-Visitor_Pattern
Visitor,Strateg_Visitor-Design-Pattern,Design Pattern used to analyze sentence and change words between British and American English,0,0,2023,2023,3,https://github.com/anis-agwan/Strateg_Visitor-Design-Pattern
Visitor,Object-Oriented-Programming,"OOP (Inheritance, Abstraction, Polymorphism, Encapsulation), Design Patterns (Singletone, Strategy, Visitor)",0,0,2024,2024,1,https://github.com/erlanakbaraliev/Object-Oriented-Programming
Visitor,design_patterns_course,delegate/bridge/visitor/decorator/iterator/composite,0,0,2018,2021,1,https://github.com/DaniilRoman/design_patterns_course
Visitor,behavioral-design-patterns-demo,"Demo repository for 3 design patterns observer, visitor and strategy",0,0,2021,2021,1,https://github.com/grzegorzSowa3/behavioral-design-patterns-demo
Visitor,mediatheque-correction,design pattern Visitor en Java : TP Médiathèque - Exemple de correction,0,0,2024,2024,2,https://github.com/inuc-isis/mediatheque-correction
Visitor,visitor-design-pattern,This is mini Laravel app which can help you to practice this Visitor design pattern.,0,0,2019,2019,1,https://github.com/ver4rs/visitor-design-pattern
Visitor,design-patterns,"Implementations for factory, singleton, iterator, adapter and visitor design patterns.",0,0,2017,2017,0,https://github.com/kenananilakisik/design-patterns
Visitor,entitymanipulator,"A C++ demo on Composite, Prototype and Visitor design patterns",0,0,2024,2024,1,https://github.com/anttijuu/entitymanipulator
Visitor,ADTrees,Simple C# project using Visitor and Abstract Factory design patterns,0,0,2020,2020,1,https://github.com/Virus887/ADTrees
Visitor,calc-dsl,sample project that demonstrates  design patterns like interpreter and visitor,0,0,2016,2016,1,https://github.com/msakaguchi/calc-dsl
Visitor,validate-visitor,An example code of how to implement a validation login incapsulated in a Visitor Design Pattern,0,0,2013,2013,0,https://github.com/bacchilu/validate-visitor
Visitor,Competition,"Implementation of Design Patterns in Java. (Observer, Visitor, Factory, Singleton)",0,0,2020,2020,1,https://github.com/BlunderBoy/Competition
Visitor,Java_Coding_2,"Tree structures, recursion, and the Visitor and Composite design patterns. ",0,0,2022,2022,1,https://github.com/Robert-Lewis1962/Java_Coding_2
Visitor,design-patterns,singleton pattern and visitor pattern in java & js implemented,0,0,2021,2021,1,https://github.com/krixstin/design-patterns
Visitor,java_design_patterns_visitor_pattern,java设计模式_访问者模式,0,0,2022,2022,1,https://github.com/maomao124/java_design_patterns_visitor_pattern
Visitor,Design-Patterns---Visitor-Pattern-JAVA-,,0,0,2018,2018,1,https://github.com/HarshGajraSUNY/Design-Patterns---Visitor-Pattern-JAVA-
Visitor,MediatorVisitor-Slides,This repository contains educational material and code examples to understand and apply the Mediator Visitor design pattern.,0,0,2023,2024,2,https://github.com/ikariscraft/MediatorVisitor-Slides
Visitor,Gestion_Mediatheque,"Gestion d'une Médiathèque via un Design Pattern de type ""Visitor""",0,0,2024,2024,2,https://github.com/JeanBaptisteBENETTI/Gestion_Mediatheque
Visitor,design-patterns,"Creational Pattern - Singleton, AbstractFactory | Structural Pattern - Decorator | Behavioral Pattern - Visitor",0,1,2017,2019,1,https://github.com/centrumek/design-patterns
Visitor,SchulungTag2Code,"Code zu Design Patterns aus unserem zweiten Schulungstag, Visitor und Ampel",0,0,2020,2020,1,https://github.com/ARothlaender/SchulungTag2Code
Visitor,Dynamic_Graphics_Design_Patterns,"Decorator, Observer, and Visitor Pattern Graphics Project",0,0,2024,2024,1,https://github.com/Soufianbarkati4/Dynamic_Graphics_Design_Patterns
Visitor,tree-expression-calculator,"Expression calculator implemented with the Visitor, Composite, and Builder design patterns.",0,0,2019,2020,2,https://github.com/peymathi/tree-expression-calculator
Visitor,Hatly,service application with java and developed  with design pattern (visitor pattern),0,0,2023,2023,0,https://github.com/mohamedyasser12042002/Hatly
Visitor,Creature-Life-Cycle-,Simulation of Creature Life Cycle in C++ using visitor design pattern,0,0,2022,2022,1,https://github.com/inspironman/Creature-Life-Cycle-
Visitor,LogicGatesCpp,"Project with gates using composite, factory, prototype and visitor design patterns.",0,0,2018,2018,1,https://github.com/Dzudit/LogicGatesCpp
Visitor,Stock-Market-Trade-Simulator,Stock market simulator designed using Command design pattern and visitor pattern,0,0,2022,2025,1,https://github.com/hashdefineabc/Stock-Market-Trade-Simulator
Visitor,JavaDesignPatterns,Design pattern in java starting form visitor to single responsibility pattern  ,0,0,2023,2023,1,https://github.com/AshuIMade/JavaDesignPatterns
Visitor,ArithmeticTree,This is a project that use Composite and Visitor Design Pattern ,0,0,2015,2015,1,https://github.com/qianwang1013/ArithmeticTree
Visitor,visitor-pattern,A design pattern that heavily uses polymorphism to remove the complexity of adding new behaviour in a class structure.,0,0,2022,2022,1,https://github.com/V203/visitor-pattern
Visitor,Design-patterns,"Having some fun with factory, singleton, builder, command and visitor pattern.",0,0,2022,2022,1,https://github.com/etakacs99/Design-patterns
Visitor,C_sharp_pluralsight_design_patterns_Visitor,Apply Visitor Pattern with C# by follow Pluralsight course,0,0,2020,2020,1,https://github.com/ahmed-hamdy90/C_sharp_pluralsight_design_patterns_Visitor
Visitor,Design_patterns_visitors_pattern_summer-2020,Program with visitors to determine features in two input files that have integers- Summer 2020,0,0,2020,2020,1,https://github.com/Shrijeetrupnar/Design_patterns_visitors_pattern_summer-2020
Visitor,DesignPatterns-Behavioral,"behavioral design patterns, Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template, and Visitor as defined by the Gang of Four.",0,0,2020,2020,1,https://github.com/parwezshariq/DesignPatterns-Behavioral
Visitor,desing-patterns-kitchen,A project including sample implementations of software  design patterns,0,0,2022,2022,1,https://github.com/acdirican/desing-patterns-kitchen
Visitor,util,"Contains improved implementations of some design patterns, namely Visitor and Abstract Factory",0,0,2017,2018,1,https://github.com/jean-luc-insset/util
Visitor,design_patterns,"Simple demos for Adapter, Composite, Facade, Factory, Observer, Strategy, Template Mehod and Visitor.",0,0,2018,2018,1,https://github.com/j-o-e-d-o-e/design_patterns
Visitor,Tower-defence-game,simulating one round in simplified tower defence game using Visitor design pattern,0,0,2021,2021,1,https://github.com/tavanan/Tower-defence-game
Visitor,labwork4,Java implementation of estimating a network structure using the Visitor Design Pattern,0,0,2024,2024,1,https://github.com/7910528/labwork4
Visitor,Interpretor-in-Java,An interpretor of syntax using Decorator and Visitor design patterns in Java.,0,0,2016,2016,0,https://github.com/craciunalexandru/Interpretor-in-Java
Visitor,design-patterns-impementation," Implementation of Abstract Factory, Iterator, Adaptor and Visitor design patterns in Java",0,0,2017,2017,1,https://github.com/BHPriyanka/design-patterns-impementation
Visitor,ExpressionEvaluator,A math expression evaluator developed in Java using the Visitor design pattern.,0,0,2023,2024,1,https://github.com/valentinmitrea/ExpressionEvaluator
Visitor,wordCount,Implementation of visitor design pattern for higher performance tree structure word count ,0,0,2016,2016,0,https://github.com/hprem991/wordCount
Visitor,bitwise_calculator,a silly calculator implemented using bitwise operators and the visitor design pattern. ,0,0,2021,2021,1,https://github.com/def-not-ys/bitwise_calculator
Visitor,Design-Patterns-Summer-2020-Assignment4,"In this assignment visitor pattern is implemented. MyArray and MyArrayList are 2 Elements and PopulateMyArrayVisitor, CommonIntsVisitor and MissingIntsVisitor are 3 Visitors. The Visitors visits the elements and perform certain tasks.",0,0,2020,2020,1,https://github.com/ashmeetchhabra/Design-Patterns-Summer-2020-Assignment4
Visitor,Intro-To-Visitor-Design-Pattern,Visitor is a behavioral design pattern that lets you separate algorithms from the objects on which they operate.,0,0,2024,2024,1,https://github.com/ParsaMehdipour/Intro-To-Visitor-Design-Pattern
Visitor,Text-Processing-Visitors-Word-Count-Design-Patterns-Visitor-and-Observer-Pattern,,0,0,2017,2017,1,https://github.com/sagarkale92/Text-Processing-Visitors-Word-Count-Design-Patterns-Visitor-and-Observer-Pattern
Visitor,BuilderVisitorAndFluentInterfaceDesignPatterns,,0,0,2020,2023,1,https://github.com/danalexandrunicoara/BuilderVisitorAndFluentInterfaceDesignPatterns
Visitor,Design-Patterns,"Java implementations of 9 Design Patterns:  Visitor, Factory, State, Strategy, Observer, Singleton, Facade, Composite, Decorator",0,0,2022,2023,1,https://github.com/NLmeng/Design-Patterns
Visitor,PythonVisitorDesignPatternPractice,This is a repo used to house some personal testing of the python visitor design pattern implementation found here:,0,0,2016,2017,1,https://github.com/loganknecht/PythonVisitorDesignPatternPractice
Visitor,DesignPatterns,Most common design patterns in software architecture.,0,0,2023,2024,1,https://github.com/staivanov/DesignPatterns
Visitor,DesignPatternsProject,"Adroid Java Design patterns: Singleton，Abstract Factory, Factory Method,Builder，Prototype，Iterator，Observer，Template Method，Command，State，Strategy，Chain of Responsibility,Mediator，Visitor，Interpreter，Memento，Composite，Facade，Proxy，Adapter,Decrator，Bridge，Flyweight，",0,0,2014,2014,1,https://github.com/Yearlay/DesignPatternsProject
Visitor,Design-Patterns,"Solution to general problems using software design with use of Visitor, Strategy, Dynamic Proxy, Observer patterns",0,0,2017,2017,1,https://github.com/ritesh-verma/Design-Patterns
Visitor,CS356-Assignment-2,"Basic Twitter with Java Swing using Singleton, Observer, Visitor, and Composite design patterns",0,0,2017,2017,1,https://github.com/bcgilmartin/CS356-Assignment-2
Visitor,Static-Analyzer,"A context free language which uses the Visitor, State and Builder design patterns.",0,0,2015,2015,2,https://github.com/chriskerley78910/Static-Analyzer
Visitor,Design-Pattern,"A Design pattern project that includes Abstract Factory, Visitor, Observer and Singleton Pattern.",0,0,2019,2020,1,https://github.com/pelinyigit/Design-Pattern
Visitor,CS-3560_A2,"Mini-twitter GUI with implementation of 4 design patterns (Singleton, Composite, Observer, Visitor)",0,0,2020,2021,1,https://github.com/PaytonPerchez/CS-3560_A2
Visitor,JavascriptDesignPattern,"It contains Popular design pattern code in Javascript.Like Singleton , Adapter ,  Factory , Visitor.",0,0,2023,2023,1,https://github.com/rockingnishant/JavascriptDesignPattern
Visitor,MSD-HW,"Software Development Design Patterns : Iterator Pattern, Visitor Pattern, Factory Pattern, Abstract Factory Pattern",0,0,2017,2017,1,https://github.com/vigneshnadar/MSD-HW
Visitor,road-crossing-game,🎓 HCMUS - Object Oriented Programming - Project: Road Crossing Game + Design Pattern: Visitor & Iterator,0,0,2019,2021,3,https://github.com/kieuconghau/road-crossing-game
Visitor,ICA-7-Design-Patterns-1225545633,"Implemented five design patterns into the Product Trading and Bidding System (PTBS). The five design patterns are Façade, Bridge, Factory Method, Iterator, and Visitor.",0,0,2022,2022,1,https://github.com/Deven-Prajapati-2/ICA-7-Design-Patterns-1225545633
Visitor,Design-Patterns,"A general repeatable solution to a commonly occurring problem in software design. Implemented Singleton, Builder, Visitor, Prototype, Observer patterns",0,0,2017,2017,1,https://github.com/yashdivecha/Design-Patterns
Visitor,MiniTwitter,"A Mini Twitter Application that implements four design patterns (Singleton, Observer, Visitor and Composite)",0,0,2020,2020,1,https://github.com/chrisbt1213/MiniTwitter
Visitor,design-patterns-node-based-infix-to-postfix-calculator,"Node based infix to postfix calculator demonstrating the Composite, Visitor, Builder software design patterns",0,0,2022,2022,1,https://github.com/winkingcatstudios/design-patterns-node-based-infix-to-postfix-calculator
Visitor,jcompiler,Full OOP construction of java compiler implemented with c++. Based on visitor design pattern.,0,0,2019,2022,1,https://github.com/Ali-Saker/jcompiler
Visitor,CS356Assignment02--Mini-Twitter,"Implement a mini twitter using several OOP design patterns including singleton, composite,observer,visitor.",0,0,2015,2015,1,https://github.com/singhnii/CS356Assignment02--Mini-Twitter
Visitor,design-patterns-unit-tests,"Working with different design patterns like State, Composite, Visitor, Adapter and unit testing via Mockito.",0,0,2020,2020,2,https://github.com/yashj21/design-patterns-unit-tests
Visitor,CS356A2,"Mini Twitter using java(swing) applied design pattern includes singleton, visitor, observer and composite",0,0,2018,2019,1,https://github.com/JianchaoSun/CS356A2
Visitor,CS-3560-Mini-Twitter-Project-2,"Project 2 for CS 3560 applying the singleton, composite, visitor, and observer design patterns",0,0,2022,2022,1,https://github.com/floor777/CS-3560-Mini-Twitter-Project-2
Visitor,xml_parser,An XML Parser written with C++. Uses state machine and a visitor design pattern,0,0,2013,2013,1,https://github.com/oscarhe/xml_parser
Visitor,VisitorAnalysisCode,"This program involves implementing a source code analysis tool utilizing the Visitor design pattern. The goal is to traverse and inspect code structures, enabling detailed examination and reporting on various code elements such as classes, methods.",0,0,2023,2024,1,https://github.com/mrjelzy/VisitorAnalysisCode
Visitor,Cafitiria-ordering-system-,"Cafitiria ordering system using some design patterns like : DAO, MVC , BUILDER , STATE , STRATEGY , OBSERVER , VISITOR",0,0,2020,2020,1,https://github.com/esraahabiba/Cafitiria-ordering-system-
Visitor,TurtleGraphicsDesignPatterns,"Java program to implement turtle graphics making use of design patterns - interpreter pattern, visitor pattern and command pattern",0,0,2015,2015,1,https://github.com/LokeshSreekanta/TurtleGraphicsDesignPatterns
Visitor,Design-Paterns,"Small project illustrating use of Design Patterns such as Visitor, Decorator, Factory Method and Enumerator",0,1,2021,2021,1,https://github.com/dkozykowski/Design-Paterns
Visitor,VisitorExample1,"Let's have a tablet class. Some tablets derived from this class have a wifi feature, while others do not. Similarly, some have a 3G feature, while others do not. Let's write this mini scenario using the Visitor design pattern.",0,0,2024,2024,1,https://github.com/MehmetKARADANA/VisitorExample1
Visitor,Design-Patterns,"Applied various design principles to build software systems using Java. Projects included observer pattern, state pattern, working with threads and locks, visitor pattern, understanding proxy and reflection.",0,0,2017,2018,1,https://github.com/Sethucb/Design-Patterns
Visitor,Visitor-Design-Pattern,"Very basic and ultra-minimalistic project which computes area and parameter on various shapes like triangle, square, and so on, by applying a ""visitor design pattern"" in modern C++",0,0,2022,2022,1,https://github.com/pa5h1nh0/Visitor-Design-Pattern
Visitor,JavaDesignPattern,"This Project illustrates 4 important design patterns in java namely abstract factory ,visitor,iterator,and adapter",0,0,2017,2017,1,https://github.com/chandrimaghosh/JavaDesignPattern
Visitor,JavaParser,"Uses the JavaParser, which utilizes the visitor design pattern, to detect Recursions and Useless Control Flow",0,0,2021,2021,1,https://github.com/FatmaSayegh/JavaParser
Visitor,StoreVisitor,Exemplo criado para demonstar o padrão de projeto Visitor usando lojas como exemplo. Desenvolvido para a materia de Design Patterns no 8 periodo da faculdade de Sistema de Informação.  Foi criado no eclipse. ,0,0,2024,2024,1,https://github.com/laisdagnesia/StoreVisitor
Visitor,UsersRestApi,"Example ASP .NET / Entity Framework Core WebAPI with Value Objects, Visitor, Specification design patterns, Maybe functor.",0,0,2019,2019,0,https://github.com/jonoliver82/UsersRestApi
Visitor,swalabfive,Design and implement a program that models a computer architecture using Composite and Visitor design patterns.,0,0,2024,2024,1,https://github.com/prakash-aryan/swalabfive
Visitor,PeerFinder,"Design pattern example. factory method, observer, visitor, singleton. java console based application for finding professional peer.",0,0,2021,2021,1,https://github.com/GalataGirmaye/PeerFinder
Visitor,SP,"Design Patterns in Java - so long here are Composite, Flyweight, Proxy, Strategy, Iterator, Visitor and State",0,0,2017,2017,2,https://github.com/cpetrescu96/SP
Visitor,px-filesystem-design-patterns,"Repository showcasing software design patterns, part of a university course on software development methodologies. Includes implementations of Factory, Adapter, Composite, Observer, and more, with comprehensive examples and tests.",0,0,2024,2024,1,https://github.com/ngljcb/px-filesystem-design-patterns
Visitor,VisitorExample2,"In my Visitor design pattern example, I utilized Hamdi Tolga Kahraman's approach, where unique visitor interfaces are segregated. By incorporating printer types tailored to various devices (tablet, computer), I allowed each device to utilize the print feature specific to its type in the respective method.",0,0,2024,2024,1,https://github.com/MehmetKARADANA/VisitorExample2
Visitor,Calculator_2_Using_Design_Patterns,"This is a C++ program that emulates a Calculator using the composite, visitor, and builder patterns  (Works, but has a few bugs)",0,1,2019,2019,1,https://github.com/hldnwrght/Calculator_2_Using_Design_Patterns
Visitor,Dungeons-and-Dragons,"DND game inspired by ""Game Of Thrones"". first time using Design Patterns (such as Visitor, Callbacks etc)",0,0,2022,2022,1,https://github.com/royweiss1/Dungeons-and-Dragons
Visitor,UselessControlFlowDetector,"javaParser program that uses the visitors design pattern to observe whether a program contains ""useless control flows"".",0,0,2019,2019,1,https://github.com/henkkx/UselessControlFlowDetector
Visitor,File_Explorer,Duyệt và mở một số loại tệp. Ứng dụng Winform sử dụng Mediator và Visitor design pattern.,0,0,2023,2023,1,https://github.com/anhnb206110/File_Explorer
Visitor,Space-Invaders,"the space invader game usingC#, and bunch of design patterns, like Singleton, Factory, Strategy, State and Visitor",0,0,2018,2018,1,https://github.com/Jane-tranquility/Space-Invaders
Visitor,design-patterns,"This repository features clear Java implementations of 22 design patterns, each in its own module. It serves as a concise, hands-on reference for Abstract Factory, Builder, Prototype, Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy, Chain of Responsibility, Command, State, Strategy, Template Method, and Visitor patterns.",0,0,2025,2025,1,https://github.com/FuadValiyev/design-patterns
Visitor,qcm-hobbit,"Survey Console App based on Design Pattern Visitor with Q/A from ""The Hobbit"" J.R.R Tolkien",0,0,2017,2017,1,https://github.com/TarikDjebienJEE/qcm-hobbit
Visitor,RoachMotel,"This is a hotel project that utilizes Java Design Patterns, specifically: Singleton, Decorator, Factory, Observer, Strategy, and Visitor",0,0,2020,2020,1,https://github.com/justingirgis/RoachMotel
Visitor,Attack-Tree-With-Object-Oriented-Design,Implementation of Attack Tree with using object-oriented design patterns. Abstract Factory and Visitor patterns were used for implementation.,0,0,2021,2021,1,https://github.com/onurmx/Attack-Tree-With-Object-Oriented-Design
Visitor,HouseModel-Sketch,"An app to practice Composite and Visitor design patterns. The theme of the app is ""Modeling of buildings, houses""",0,0,2016,2016,0,https://github.com/iivchenko/HouseModel-Sketch
Visitor,ADTFinalProject,"204212 ADT and Problem Solving   Final Project: The Visitor Design Pattern, Differentiation, and Assembly Code Generation for   Infix Expression",0,0,2015,2015,1,https://github.com/PNNutkung/ADTFinalProject
Visitor,DesignPattern,"SER515 - Implementation of Product Trading and Bidding System using the following Design Patterns:  Facade, Bridge, Factory Method, Iterator, Visitor",0,0,2022,2024,1,https://github.com/snerall1/DesignPattern
Visitor,Object-Oriented-Programming-and-Design-Course," implementations of various design patterns such as Visitor, Decorator, and more to demonstrate effective software design and development practices",0,0,2024,2024,2,https://github.com/MiriKanner/Object-Oriented-Programming-and-Design-Course
Visitor,ObjectCounter,A program that counts the number of objects of a specific type in a collection using Visitor design pattern,0,0,2023,2023,1,https://github.com/cinemarter/ObjectCounter
Visitor,collision-detection,This was created as an alternative to the problems encountered using dynamic casting for collision detection with shape types. The visitor design pattern is one of the behavioural design patterns from the Gang of Four (http://www.blackwasp.co.uk/Visitor.aspx).,0,0,2015,2016,1,https://github.com/geoffwhitehead/collision-detection
Visitor,Design-patterns-java,Design patterns java   1-  Fábricas e o problema de criação de objetos   Factory e builder 2-  Muitos objetos e o Flyweight 3-  Salvando estados anteriores e o Memento 4-  DSLs e o Interpreter   5-  Estruturas de dados e o Visitor  6-  Bridges e Adapters 7-  Diferentes ações com Command 8-  Façades e Singletons,0,0,2018,2018,1,https://github.com/nicolasMoreira144/Design-patterns-java
Visitor,Design-Pattern,"Some implementation of design pattern in Java such as: Chain of Responsibility, Decorator, Factory, Generic, Interator, Proxy, Reflection, Singleton, Visitor",0,0,2016,2017,1,https://github.com/luongnv89/Design-Pattern
Visitor,Basic-Calculator-Software-Design,"Basic calculator using software design patterns such as abstract factory, composition, template method, visitor, builder, command, wrapper facade, and iterator",0,0,2018,2019,1,https://github.com/Pboruff/Basic-Calculator-Software-Design
Visitor,Scheme-Interpreter-Design,"An interpreter for the Scheme programming language using the Visitor Design Pattern, facilitating seamless parsing and execution of Scheme code",0,0,2023,2023,1,https://github.com/abbas-husain2/Scheme-Interpreter-Design
Visitor,interactive-catalogue,"A student catalogue made using several design patterns(Builder, Strategy, Visitor, Observer etc...) with a student GUI made with Swing.",0,0,2023,2025,1,https://github.com/mayushiiii/interactive-catalogue
Visitor,GameOfLife,"Java implementation of Conway's Game of Life as a cellular automaton, using the visitor design pattern for rule updates",0,0,2013,2014,1,https://github.com/gerardlouw/GameOfLife
Visitor,Java-Based-Compiler-Using-ASM,"Made using Visitor Design Pattern, JVM compiler comprising of Scanner,Parser, Type Checker and JVM Byte Code Generator using ASM.",0,0,2018,2018,0,https://github.com/sagarrajani/Java-Based-Compiler-Using-ASM
Visitor,DesignPattern-Visitor,"This C# implementation demonstrates the Visitor design pattern, where a visitor class defines operations that can be applied to elements without altering their structure. It showcases how to separate the algorithm from the elements, enabling the addition of new operations without modifying existing element classes. This pattern promotes flexibility",0,0,2024,2024,1,https://github.com/MansourJouya/DesignPattern-Visitor
Visitor,E-Commerce-System-with-Behavioral-Design-Patterns,"The E-Commerce System with Behavioral Design Patterns project is a Java-based e-commerce system management that demonstrates the use of behavioral design patterns to create a flexible, scalable, and maintainable system. ",0,0,2024,2024,1,https://github.com/barannmeisterr/E-Commerce-System-with-Behavioral-Design-Patterns
Visitor,Library-Management-System,"It is a library management system based on given requirements. It incorporated observer, visitor, singleton, decorator, factory and composite design patterns",0,0,2024,2024,0,https://github.com/JohnRebecca/Library-Management-System
Visitor,MiniCAD-2D,"Application for drawing regular and irregular ARGB shapes using BufferedImage class in Java and design patterns like singleton, factory and visitor.",0,0,2018,2019,1,https://github.com/MozartHetfield/MiniCAD-2D
Visitor,MessageService,"Simple, example application showing a few of the various OO software design patterns at work: factory, singleton, visitor (variation), and observer.",0,1,2015,2015,1,https://github.com/snowcycle/MessageService
Visitor,ser-515-fall-22-private-repo,"A console-based Product Trading and Bidding System (PTBS) implemented using the 5 design patterns: Facade, Bridge, Iterator, Factory Method and Visitor",0,0,2022,2024,1,https://github.com/amitnoelasu/ser-515-fall-22-private-repo
Visitor,MiniCAD,"A Java application which generates an image based on specific commands for geometric forms, using the Factory, Visitor and Singleton design patterns.",0,0,2018,2018,1,https://github.com/AntonescuAlexandru/MiniCAD
Visitor,Sports-Competitions,"A Java program that manages sports competitions (teams registration, matches, rankings calculation). Multiple design patterns have been used: Singleton, Factory, Visitor, Observer, Strategy.",0,0,2020,2020,1,https://github.com/danserboi/Sports-Competitions
Visitor,Quad-retris,"Simulation of Tetris implemented using design patterns such as MVC, bridge, visitor and decorator patterns. Includes Text/Graphic Display with file I/O",0,1,2018,2018,5,https://github.com/a2nagi/Quad-retris
Visitor,singletonNvisitor-exercise-java,"Project on design patterns in this project I'll use the Creational Pattern: ""Singleton"" and the Behavioral Patterns: ""Visitor"". This project is for school.",0,0,2020,2022,1,https://github.com/miyokidev/singletonNvisitor-exercise-java
Visitor,Teacher-Grade-Book-App,"Grade Book App using Java and Swing for the GUI. The project uses multiple design patterns such as Singleton, Observer, Factory, Builder, and Visitor.",0,0,2023,2023,1,https://github.com/vladandra22/Teacher-Grade-Book-App
Visitor,GraphEditor,"JavaFX application for creating, editing, and exporting graphs (nodes/edges). Uses the MVC architecture and various other design patterns (e.g. decorator, visitor, strategy...) ",0,1,2021,2022,1,https://github.com/dylanjwu/GraphEditor
Visitor,mini_twitter,"A Java­ based Mini Twitter simulator with graphical user interface (GUI) using Java Swing. The goal of this program is to let you experience how to apply design patterns to build extensible software systems . Design Patterns Used: Singleton, Observer, Visitor, and Composite",0,0,2017,2019,1,https://github.com/codeham/mini_twitter
Visitor,SupermarketSimulator,"A platform that simulates a supermarket applying various OOP practices and design patterns like Factory, Visitor, Observer etc. Also implemented GUI. Technology used: Java, Swing.",0,0,2019,2019,1,https://github.com/mehai/SupermarketSimulator
Visitor,java-patterns,Library containing design patterns and their implementations in Java. Plus exemplary applications of basic Java topics and various utils.,0,0,2020,2021,1,https://github.com/mzacki/java-patterns
Visitor,Calculator,"The purpose of this project was to build a calculator using design patterns. Specifically, the project utilized design patterns: the Composite Pattern, Visitor Pattern, Command Factory, and Builder Pattern. These patterns were implemented to create a calculator that is modular, easy to modify, and extensible.",0,0,2021,2023,1,https://github.com/medha-kul/Calculator
Visitor,recursive_bubble,"Implementation of a recursive ""bubble"" structure. The writing of this small app employs several design patterns for fun, namely Composite, Observer, Iterator, Visitor, and State pattern.",0,0,2015,2015,0,https://github.com/prajogotio/recursive_bubble
Visitor,farm-dashboard-prototype,"A prototype for a farmer utility application built with JavaFX as an exercise in using design patterns such as entity-control-boundary, composite, visitor, and adapter",0,0,2021,2021,2,https://github.com/eolatham/farm-dashboard-prototype
Visitor,openapi-transformer-base,Base class for traversing or transforming OpenAPI 2 or 3 documents using a modified visitor design pattern to traverse object types within the OpenAPI document tree.,0,0,2021,2024,3,https://github.com/kevinoid/openapi-transformer-base
Visitor,WallE-Robot,"A Java project to define actions of a robot and its basic mechanics (movement and charging). The project aims to demonstrate template, visitor, and composite design pattern.",0,0,2021,2021,1,https://github.com/mowglu/WallE-Robot
Visitor,rotisiv,The contravariant Visitor Design Pattern. This project is a short experiment related to use contra-variant parameters that can be used from version 7.4 of PHP.,0,0,2020,2020,1,https://github.com/stefanofago73/rotisiv
Visitor,International-Draughts-Game,"Implementing an International Draughts board game using a given Game framework (After understanding concepts like abstraction, inheritance and design patterns like MVC, state pattern, strategy pattern, Visitor pattern)",0,0,2020,2020,1,https://github.com/PraveenAravendan/International-Draughts-Game
Visitor,Project_5,The repository corresponds to the Project 5 (Visitor and other design pattern implementation) for the COMP-4473 course taught by Dr. Berhane Zewdie here at Loyola University Chicago,0,0,2014,2014,1,https://github.com/zmaqsood/Project_5
Visitor,PLC,"Project done for UF's COP4020: Programming Language Concepts. It contains a working iteration of a lexer, parser and type checker done in Java using the Visitor design pattern.",0,0,2022,2022,1,https://github.com/GregoryQuezada/PLC
Visitor,BibleMap,"This program creates and uses and Bible template specialization of a map template class. Various design patterns including Singleton, Iterator, and Visitor are implemented. Completed for Object-Oriented Programming course.",0,0,2017,2017,1,https://github.com/mdttrump97/BibleMap
Visitor,Facebook-features-app-using-Facebook-API,"Desktop app that provides basic facebook UX with an extra features. Developed using winforms, C# 3.0 and .NET. Design patterns: Visitor, Iterator, Strategy, Facade, Factory method, Proxy, Adapter, Singleton.  ",0,1,2019,2019,1,https://github.com/AndrewSergeev/Facebook-features-app-using-Facebook-API
Visitor,TinyJava-Compiler,"A compiler built using the Visitor Design Pattern using mostly C/C++. Performs all major steps of compilation including file parsing, syntax checking, semantic checking, and binary class file generation.",0,0,2014,2014,1,https://github.com/kainejas/TinyJava-Compiler
Visitor,galaxy,"Design Pattern: Visitor Idea: Use a visitor to mine the data from the galaxy Implementation: Create a galaxy model where there are a huge number of Asteroids, each asteroid is characterized by mass and type. Using Visitor pattern create an algorithm that counts the total mass of type B asteroids form the galaxy.",0,0,2020,2020,1,https://github.com/mariuscs98/galaxy
Visitor,Filtrare-content-in-timp-real,"Scopul proiectului a fost de a implementa in Java, folosind design patterns (Singleton, Factory, Observer, Visitor), o modalitate de filtrare a unui feed pentru diverși utilizatori în funcție de anumite expresii de filtrare. ",0,0,2019,2019,1,https://github.com/remusbompa/Filtrare-content-in-timp-real
Visitor,tree_calculator,My final project for SE461: Managing Software Development at Butler University. This is a basic command line calculator that uses common Software Design Patterns such as the Visitor Pattern and the Builder Pattern. ,0,0,2020,2020,1,https://github.com/gabbirenee/tree_calculator
Visitor,SWDV430_ConstApp,"This simple Java app, developed for learning Java, OOP, and design patterns, manages files for a fictional construction company. It organizes files into classes and uses the visitor pattern for retrieval and display",0,0,2024,2024,1,https://github.com/PaytonWelch12/SWDV430_ConstApp
Visitor,electronic-catalog,"I designed a Java-powered electronic catalog system enabling access for students, assistants, professors, and parents. The system seamlessly incorporates crucial functionalities by employing various design patterns such as Visitor, Observer, Strategy, and Memento.",0,0,2024,2024,1,https://github.com/DragosCioata/electronic-catalog
Visitor,League-of-OOP,"A small MMO-style game that consists of fights between different types of heroes with or without additional help from other characters of the game. Implemented using design patterns such as Singleton, Factory, Observer, Visitor.",0,0,2020,2020,1,https://github.com/alex99delicostea/League-of-OOP
Visitor,aquarium-app,"An interactive aquarium simulator built with C++ and wxWidgets, featuring dynamic fish behaviors, modular design with advanced OOP principles, and robust performance optimization. Implements design patterns like visitor, observer, and factory for scalability and maintainability.",0,0,2025,2025,1,https://github.com/palinaskakun/aquarium-app
Visitor,BST,"Created a Binary Search tree with heavy implementation of Design Patterns. Used Strategy Pattern to determine the insertion order for the BST, used Null Object pattern to avoid null checks and used Visitor Pattern to do some operations on the BST",0,0,2022,2022,1,https://github.com/kshitij1414/BST
Visitor,2D-game-,"This 2D games using the Java design pattern include:  Creational Patterns(Factory method, Abstract Factory pattern, Prototype Pattern, Builder pattern), Behavioral Pattern(Memento Pattern, Observer pattern, State pattern, Strategy pattern, visitor pattern), Structural Patterns(Adapter pattern,Bridge pattern,Decorator pattern, Proxy pattern)",0,0,2020,2020,1,https://github.com/Chengxin1234/2D-game-
Visitor,Version-Control-System,"An application that simulates UNIX-like commands (create, modify, delete ﬁles) and tracks the changes made to them. This allows the user to restore to a previous version of a speciﬁc ﬁle. It was implemented in Java, using Visitor, Singleton and Factory Design Patterns. ",0,0,2019,2019,1,https://github.com/criscojocaru/Version-Control-System
Visitor,SwiftTypeChecker,This project contains a type checker for the PCF language built in Swift using the visitor design pattern; this code was part of a final project for my CSCI181-V (Principles of Programming Languages: Object-Oriented) class at Pomona College during the Spring 2021 semester.,0,0,2021,2021,1,https://github.com/jancharatan/SwiftTypeChecker
Visitor,React-Pagination,"What is Pagination? Pagination is the process of splitting the contents of a website, or section of contents from a website, into discrete pages. This user interface design pattern is used so site visitors are not overwhelmed by a mass of data on one page.The pagination design pattern is widely used in websites that open up a lot of content to users. From search engines such as Google and Firefox, to e-commerce sites such as Amazon ",0,0,2021,2021,1,https://github.com/amelegech/React-Pagination
Visitor,ParkingBookingSystem,"A Parking Booking System for University with students, faculty, non-faculty and visitors as clients. Parking system is managed by the management team and super manager. Super manager has access to an account generation subsystem which generates management accounts. The Project is implemented using various design patterns.",0,0,2023,2023,1,https://github.com/aerishamaknojiya/ParkingBookingSystem
Visitor,SportCompetition,"OOP homework in which I had to use Design Patterns to simulate a sports competition. I firstly had to register the teams, using Factory and Singleton. Afterwards, I set up matches of each team versus every other one, using Visitor and Strategy. After the matches ended, I updated the final score and place in leader board using Observer.",0,0,2020,2020,1,https://github.com/zabbidou/SportCompetition
Visitor,Mini-Twitter,"In this program, a Java-based Mini-Twitter is built with a GUI using Java Swing. Some significant features the Mini-Twitter composes of are design patterns (Singleton, Observer, Visitor, and Composite), and additional aspects like user/group ID verification, creation time attributes for the user and group, the last updated time attribute for the user, and the last updated user.",0,0,2020,2020,1,https://github.com/catherinegronkiewicz/Mini-Twitter
Visitor,IST-ObjectOrientedPrograming,"Practical component of  bachelors subject. Program written in Java to manage train itineraries based on the available portuguese stations and services. It includes a Main Menu that conects to the secondary Menus, allowing someone to simulate a journey and choose amongst several possible itineraries. each passenger can  have their records in the application, and also save and load records. This application uses several java design patterns such as: Command, Visitor, Strategy.",0,0,2018,2019,0,https://github.com/andreiarog/IST-ObjectOrientedPrograming
Visitor,Advanced-Software-Development---JAVA-MICROSERVICES,"The course target:: Advanced Software Development JAVA MICROSERVICES Course To cover the gap between the academia and the industry in Israel high-tech industry market 1. To give the relevant tools to build and develop an E2E application ( RPC - Application Servers (web application server ) , Docker , K8, Mongo DB ,Postman ) 2. To provide a serious and a heavy programming background ( Java language) ,the newest technologies (Java 8 & 9, Maven ,Jenkins , Restful , JPA , ORM , HTML ,CSS , JS) and the latest frameworks which are used in the industry (Spring , NoSQL , Swagger, Angular/React ,Lombok) 3. To implement the relevant Programming Design patterns like Singleton ,MVC, Factory , Abstract , Adapter , Facade , Composite , Visitor ,Proxy ,Iterator and the newest programming concepts & architectures (modularity , loose coupling, Microservices )",0,0,2022,2023,1,https://github.com/ahmadsb/Advanced-Software-Development---JAVA-MICROSERVICES
